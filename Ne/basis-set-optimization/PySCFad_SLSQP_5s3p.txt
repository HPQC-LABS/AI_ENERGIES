#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6686617         1
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 1    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686616958089, 1.0]], [0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [1, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6686617]
bas 1, expnt(s) = [0.94993989]
bas 2, expnt(s) = [1298.44577446]
bas 3, expnt(s) = [195.96774134]
bas 4, expnt(s) = [44.21303685]
bas 5, expnt(s) = [11.96299157]
bas 6, expnt(s) = [5.32732605]
bas 7, expnt(s) = [0.89870374]
CPU time:         1.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766866e+03 7.40715328e+02 9.49939894e-01 2.43101209e+00
 1.29844577e+03 5.46490840e+02 1.95967741e+02 1.32328523e+02
 4.42130368e+01 4.33189363e+01 1.19629916e+01 6.49058944e+01
 5.32732605e+00 2.36113593e+01 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.639127736665081
cond(S) = 134.99955176714582
E1 = -142.50571862790827  E_coul = 52.72762683427141
init E= -89.7780917936369
    CPU time for initialize scf      0.13 sec, wall time      0.13 sec
  HOMO = -0.896072909233053  LUMO = 5.11436356581303
  mo_energy =
[-2.60640477e+01 -1.58695483e+00 -8.96072909e-01 -8.96072909e-01
 -8.96072909e-01  5.11436357e+00  5.11436357e+00  5.11436357e+00
  2.64782325e+01  2.64782325e+01  2.64782325e+01  2.39051072e+02
  1.75108361e+03  6.54287940e+03]
E1 = -171.05584370484306  E_coul = 57.68779440128402
cycle= 1 E= -113.368049303559  delta_E= -23.6  |g|= 0.975  |ddm|= 1.16
    CPU time for cycle= 1      0.29 sec, wall time      0.30 sec
diis-norm(errvec)=1.32966
diis-c [-1.76800862  1.        ]
  HOMO = -0.552255958888494  LUMO = 5.58477977418586
  mo_energy =
[-2.49902360e+01 -1.20578796e+00 -5.52255959e-01 -5.52255959e-01
 -5.52255959e-01  5.58477977e+00  5.58477977e+00  5.58477977e+00
  2.72042465e+01  2.72042465e+01  2.72042465e+01  2.41341755e+02
  1.75485924e+03  6.54713346e+03]
E1 = -170.12349298848363  E_coul = 56.734411270153096
cycle= 2 E= -113.389081718331  delta_E= -0.021  |g|= 0.0982  |ddm|= 0.131
    CPU time for cycle= 2      0.09 sec, wall time      0.09 sec
diis-norm(errvec)=0.172293
diis-c [-0.00813974  0.09962279  0.90037721]
  HOMO = -0.602697760222884  LUMO = 5.50186982219012
  mo_energy =
[-2.51951866e+01 -1.27707648e+00 -6.02697760e-01 -6.02697760e-01
 -6.02697760e-01  5.50186982e+00  5.50186982e+00  5.50186982e+00
  2.70564726e+01  2.70564726e+01  2.70564726e+01  2.41128081e+02
  1.75464664e+03  6.54692198e+03]
E1 = -170.27040801806274  E_coul = 56.880702765422555
cycle= 3 E= -113.38970525264  delta_E= -0.000624  |g|= 0.00535  |ddm|= 0.0221
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00968042
diis-c [-9.32199445e-07 -7.73727226e-04  4.82747110e-02  9.52499016e-01]
  HOMO = -0.600035387832478  LUMO = 5.50636474629757
  mo_energy =
[-2.51848869e+01 -1.27335354e+00 -6.00035388e-01 -6.00035388e-01
 -6.00035388e-01  5.50636475e+00  5.50636475e+00  5.50636475e+00
  2.70641125e+01  2.70641125e+01  2.70641125e+01  2.41139029e+02
  1.75465866e+03  6.54693432e+03]
E1 = -170.26298609399413  E_coul = 56.87327903829331
cycle= 4 E= -113.389707055701  delta_E= -1.8e-06  |g|= 3.63e-05  |ddm|= 0.00107
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.19246e-05
diis-c [-1.24028190e-11  1.80745825e-05 -8.81013460e-04 -2.39306796e-02
  1.02479362e+00]
  HOMO = -0.600019063605459  LUMO = 5.50639098993407
  mo_energy =
[-2.51848440e+01 -1.27333311e+00 -6.00019064e-01 -6.00019064e-01
 -6.00019064e-01  5.50639099e+00  5.50639099e+00  5.50639099e+00
  2.70641512e+01  2.70641512e+01  2.70641512e+01  2.41139075e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294748060218  E_coul = 56.873240424846095
cycle= 5 E= -113.389707055756  delta_E= -5.53e-11  |g|= 2.46e-07  |ddm|= 4.8e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -170.26294748060218  E_coul = 56.873240424846095
  HOMO = -0.600018922165765  LUMO = 5.50639120116418
  mo_energy =
[-2.51848436e+01 -1.27333293e+00 -6.00018922e-01 -6.00018922e-01
 -6.00018922e-01  5.50639120e+00  5.50639120e+00  5.50639120e+00
  2.70641515e+01  2.70641515e+01  2.70641515e+01  2.41139076e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294713196106  E_coul = 56.873240076205036
Extra cycle  E= -113.389707055756  delta_E= 5.68e-14  |g|= 3.57e-08  |ddm|= 4.54e-08
    CPU time for scf_cycle      0.56 sec, wall time      0.57 sec
exp = [1.94766866e+03 9.49939894e-01 1.29844577e+03 1.95967741e+02
 4.42130368e+01 1.19629916e+01 5.32732605e+00 8.98703738e-01]
E = -113.38970705575602
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6686617         1
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 1    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686616958089, 1.0]], [0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [1, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6686617]
bas 1, expnt(s) = [0.94993989]
bas 2, expnt(s) = [1298.44577446]
bas 3, expnt(s) = [195.96774134]
bas 4, expnt(s) = [44.21303685]
bas 5, expnt(s) = [11.96299157]
bas 6, expnt(s) = [5.32732605]
bas 7, expnt(s) = [0.89870374]
CPU time:         2.07
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766866e+03 7.40715328e+02 9.49939894e-01 2.43101209e+00
 1.29844577e+03 5.46490840e+02 1.95967741e+02 1.32328523e+02
 4.42130368e+01 4.33189363e+01 1.19629916e+01 6.49058944e+01
 5.32732605e+00 2.36113593e+01 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.639127736665081
cond(S) = 134.99955176714582
E1 = -142.50571862790827  E_coul = 52.72762683427141
init E= -89.7780917936369
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.896072909233053  LUMO = 5.11436356581303
  mo_energy =
[-2.60640477e+01 -1.58695483e+00 -8.96072909e-01 -8.96072909e-01
 -8.96072909e-01  5.11436357e+00  5.11436357e+00  5.11436357e+00
  2.64782325e+01  2.64782325e+01  2.64782325e+01  2.39051072e+02
  1.75108361e+03  6.54287940e+03]
E1 = -171.05584370484306  E_coul = 57.68779440128402
cycle= 1 E= -113.368049303559  delta_E= -23.6  |g|= 0.975  |ddm|= 1.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.32966
diis-c [-1.76800862  1.        ]
  HOMO = -0.552255958888494  LUMO = 5.58477977418586
  mo_energy =
[-2.49902360e+01 -1.20578796e+00 -5.52255959e-01 -5.52255959e-01
 -5.52255959e-01  5.58477977e+00  5.58477977e+00  5.58477977e+00
  2.72042465e+01  2.72042465e+01  2.72042465e+01  2.41341755e+02
  1.75485924e+03  6.54713346e+03]
E1 = -170.12349298848363  E_coul = 56.734411270153096
cycle= 2 E= -113.389081718331  delta_E= -0.021  |g|= 0.0982  |ddm|= 0.131
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.172293
diis-c [-0.00813974  0.09962279  0.90037721]
  HOMO = -0.602697760222884  LUMO = 5.50186982219012
  mo_energy =
[-2.51951866e+01 -1.27707648e+00 -6.02697760e-01 -6.02697760e-01
 -6.02697760e-01  5.50186982e+00  5.50186982e+00  5.50186982e+00
  2.70564726e+01  2.70564726e+01  2.70564726e+01  2.41128081e+02
  1.75464664e+03  6.54692198e+03]
E1 = -170.27040801806274  E_coul = 56.880702765422555
cycle= 3 E= -113.38970525264  delta_E= -0.000624  |g|= 0.00535  |ddm|= 0.0221
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00968042
diis-c [-9.32199445e-07 -7.73727226e-04  4.82747110e-02  9.52499016e-01]
  HOMO = -0.600035387832478  LUMO = 5.50636474629757
  mo_energy =
[-2.51848869e+01 -1.27335354e+00 -6.00035388e-01 -6.00035388e-01
 -6.00035388e-01  5.50636475e+00  5.50636475e+00  5.50636475e+00
  2.70641125e+01  2.70641125e+01  2.70641125e+01  2.41139029e+02
  1.75465866e+03  6.54693432e+03]
E1 = -170.26298609399413  E_coul = 56.87327903829331
cycle= 4 E= -113.389707055701  delta_E= -1.8e-06  |g|= 3.63e-05  |ddm|= 0.00107
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.19246e-05
diis-c [-1.24028190e-11  1.80745825e-05 -8.81013460e-04 -2.39306796e-02
  1.02479362e+00]
  HOMO = -0.600019063605459  LUMO = 5.50639098993407
  mo_energy =
[-2.51848440e+01 -1.27333311e+00 -6.00019064e-01 -6.00019064e-01
 -6.00019064e-01  5.50639099e+00  5.50639099e+00  5.50639099e+00
  2.70641512e+01  2.70641512e+01  2.70641512e+01  2.41139075e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294748060218  E_coul = 56.873240424846095
cycle= 5 E= -113.389707055756  delta_E= -5.53e-11  |g|= 2.46e-07  |ddm|= 4.8e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -170.26294748060218  E_coul = 56.873240424846095
  HOMO = -0.600018922165765  LUMO = 5.50639120116418
  mo_energy =
[-2.51848436e+01 -1.27333293e+00 -6.00018922e-01 -6.00018922e-01
 -6.00018922e-01  5.50639120e+00  5.50639120e+00  5.50639120e+00
  2.70641515e+01  2.70641515e+01  2.70641515e+01  2.41139076e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294713196106  E_coul = 56.873240076205036
Extra cycle  E= -113.389707055756  delta_E= 5.68e-14  |g|= 3.57e-08  |ddm|= 4.54e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 134.99955176714582
E1 = -170.26294713196106  E_coul = 56.873240076205036
init E= -113.389707055756
    CPU time for initialize scf      0.29 sec, wall time      0.29 sec
  HOMO = -0.600018942276467  LUMO = 5.50639116763985
  mo_energy =
[-2.51848437e+01 -1.27333296e+00 -6.00018942e-01 -6.00018942e-01
 -6.00018942e-01  5.50639117e+00  5.50639117e+00  5.50639117e+00
  2.70641515e+01  2.70641515e+01  2.70641515e+01  2.41139076e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294719139025  E_coul = 56.87324013563428
cycle= 1 E= -113.389707055756  delta_E= 5.68e-14  |g|= 6.13e-09  |ddm|= 9.06e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -170.26294719139025  E_coul = 56.87324013563428
  HOMO = -0.600018938729413  LUMO = 5.50639117349549
  mo_energy =
[-2.51848437e+01 -1.27333296e+00 -6.00018939e-01 -6.00018939e-01
 -6.00018939e-01  5.50639117e+00  5.50639117e+00  5.50639117e+00
  2.70641515e+01  2.70641515e+01  2.70641515e+01  2.41139076e+02
  1.75465872e+03  6.54693439e+03]
E1 = -170.26294718120957  E_coul = 56.8732401254535
Extra cycle  E= -113.389707055756  delta_E= -1.14e-13  |g|= 1.05e-09  |ddm|= 1.51e-09
    CPU time for scf_cycle      1.10 sec, wall time      1.10 sec
exp = [1.94766866e+03 9.49939894e-01 1.29844577e+03 1.95967741e+02
 4.42130368e+01 1.19629916e+01 5.32732605e+00 8.98703738e-01]
grad_E = [ 7.05634050e-05 -1.26658614e+00  4.05571812e-04 -1.51889377e-02
  8.86302746e-01 -3.21511807e-02  2.56746992e-01 -5.19520624e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66859113        1
[INPUT] 0    0    [1    /1   ]  2.21652603207        1
[INPUT] 0    0    [1    /1   ]  1298.44536889        1
[INPUT] 0    0    [1    /1   ]  195.982930274        1
[INPUT] 0    0    [1    /1   ]  43.3267341004        1
[INPUT] 1    0    [1    /1   ]  11.995142753         1
[INPUT] 1    0    [1    /1   ]  5.07057906087        1
[INPUT] 1    0    [1    /1   ]  1.41822436172        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.668591132404, 1.0]], [0, [2.2165260320661613, 1.0]], [0, [1298.4453688920605, 1.0]], [0, [195.9829302738895, 1.0]], [0, [43.32673410042424, 1.0]], [1, [11.995142752966087, 1.0]], [1, [5.070579060870304, 1.0]], [1, [1.418224361722646, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66859113]
bas 1, expnt(s) = [2.21652603]
bas 2, expnt(s) = [1298.44536889]
bas 3, expnt(s) = [195.98293027]
bas 4, expnt(s) = [43.3267341]
bas 5, expnt(s) = [11.99514275]
bas 6, expnt(s) = [5.07057906]
bas 7, expnt(s) = [1.41822436]
CPU time:         8.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766859e+03 7.40715307e+02 2.21652603e+00 4.58954520e+00
 1.29844537e+03 5.46490712e+02 1.95982930e+02 1.32336215e+02
 4.33267341e+01 4.26660060e+01 1.19951428e+01 6.51240151e+01
 5.07057906e+00 2.21976163e+01 1.41822436e+00 4.51508124e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 8.876528654484577
cond(S) = 135.46490859349836
E1 = -143.04380628812962  E_coul = 51.61810673607291
init E= -91.4256995520567
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = 0.873208881246919  LUMO = 6.44699688551656
  mo_energy =
[-2.83019982e+01 -1.04234421e+00 -1.04234421e+00 -1.04234421e+00
  8.73208881e-01  6.44699689e+00  6.44699689e+00  6.44699689e+00
  2.76034394e+01  2.76034394e+01  2.76034394e+01  2.40288738e+02
  1.75103625e+03  6.54271269e+03]
E1 = -180.45469268689655  E_coul = 68.71834906056093
cycle= 1 E= -111.736343626336  delta_E= -20.3  |g|= 1.76  |ddm|= 1.45
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.92749
diis-c [-8.57022292  1.        ]
  HOMO = 2.45573800258708  LUMO = 8.21682179485873
  mo_energy =
[-2.51817538e+01  3.80963105e-01  3.80963105e-01  3.80963105e-01
  2.45573800e+00  8.21682179e+00  8.21682179e+00  8.21682179e+00
  3.00194497e+01  3.00194497e+01  3.00194497e+01  2.44641619e+02
  1.75697525e+03  6.54916109e+03]
E1 = -178.42927486177376  E_coul = 66.55985927938919
cycle= 2 E= -111.869415582385  delta_E= -0.133  |g|= 0.167  |ddm|= 0.37
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265519
diis-c [-0.00502378  0.08040287  0.91959713]
  HOMO = 2.2272478150818  LUMO = 8.05226793866882
  mo_energy =
[-2.56028893e+01  2.68804430e-01  2.68804430e-01  2.68804430e-01
  2.22724782e+00  8.05226794e+00  8.05226794e+00  8.05226794e+00
  2.97196360e+01  2.97196360e+01  2.97196360e+01  2.44178214e+02
  1.75650172e+03  6.54868657e+03]
E1 = -178.62268127361347  E_coul = 66.75193959463753
cycle= 3 E= -111.870741678976  delta_E= -0.00133  |g|= 0.00163  |ddm|= 0.037
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00257807
diis-c [-6.49349643e-07 -6.27368604e-04  2.36611248e-03  9.98261256e-01]
  HOMO = 2.22938560450053  LUMO = 8.05432390260365
  mo_energy =
[-2.55991041e+01  2.69825716e-01  2.69825716e-01  2.69825716e-01
  2.22938560e+00  8.05432390e+00  8.05432390e+00  8.05432390e+00
  2.97226213e+01  2.97226213e+01  2.97226213e+01  2.44182403e+02
  1.75650698e+03  6.54869218e+03]
E1 = -178.6213297252142  E_coul = 66.75058796282879
cycle= 4 E= -111.870741762385  delta_E= -8.34e-08  |g|= 3.64e-05  |ddm|= 0.000199
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.80388e-05
diis-c [-1.28595378e-11  1.16196176e-05  8.85750162e-05 -2.68936631e-02
  1.02679347e+00]
  HOMO = 2.22941857040299  LUMO = 8.05435081620013
  mo_energy =
[-2.55990524e+01  2.69847209e-01  2.69847209e-01  2.69847209e-01
  2.22941857e+00  8.05435082e+00  8.05435082e+00  8.05435082e+00
  2.97226647e+01  2.97226647e+01  2.97226647e+01  2.44182458e+02
  1.75650705e+03  6.54869225e+03]
E1 = -178.62130000379895  E_coul = 66.75055824137286
cycle= 5 E= -111.870741762426  delta_E= -4.07e-11  |g|= 9.2e-08  |ddm|= 4.22e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -178.62130000379895  E_coul = 66.75055824137286
  HOMO = 2.2294186791675  LUMO = 8.05435096019496
  mo_energy =
[-2.55990522e+01  2.69847257e-01  2.69847257e-01  2.69847257e-01
  2.22941868e+00  8.05435096e+00  8.05435096e+00  8.05435096e+00
  2.97226649e+01  2.97226649e+01  2.97226649e+01  2.44182458e+02
  1.75650705e+03  6.54869225e+03]
E1 = -178.62129997186696  E_coul = 66.75055820944087
Extra cycle  E= -111.870741762426  delta_E=    0  |g|= 3.42e-09  |ddm|= 7.75e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766859e+03 2.21652603e+00 1.29844537e+03 1.95982930e+02
 4.33267341e+01 1.19951428e+01 5.07057906e+00 1.41822436e+00]
E = -111.87074176242609
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66863904        1
[INPUT] 0    0    [1    /1   ]  1.35666909923        1
[INPUT] 0    0    [1    /1   ]  1298.44564423        1
[INPUT] 0    0    [1    /1   ]  195.972618845        1
[INPUT] 0    0    [1    /1   ]  43.9284251644        1
[INPUT] 1    0    [1    /1   ]  11.9733160372        1
[INPUT] 1    0    [1    /1   ]  5.24487883754        1
[INPUT] 1    0    [1    /1   ]  1.06553345776        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686390363175, 1.0]], [0, [1.356669099227351, 1.0]], [0, [1298.445644225671, 1.0]], [0, [195.97261884463052, 1.0]], [0, [43.92842516436491, 1.0]], [1, [11.973316037232538, 1.0]], [1, [5.244878837538726, 1.0]], [1, [1.0655334577616706, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66863904]
bas 1, expnt(s) = [1.3566691]
bas 2, expnt(s) = [1298.44564423]
bas 3, expnt(s) = [195.97261884]
bas 4, expnt(s) = [43.92842516]
bas 5, expnt(s) = [11.97331604]
bas 6, expnt(s) = [5.24487884]
bas 7, expnt(s) = [1.06553346]
CPU time:         8.15
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766864e+03 7.40715321e+02 1.35666910e+00 3.17592673e+00
 1.29844564e+03 5.46490799e+02 1.95972619e+02 1.32330993e+02
 4.39284252e+01 4.31096255e+01 1.19733160e+01 6.49759219e+01
 5.24487884e+00 2.31554762e+01 1.06553346e+00 3.15822638e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.443725099399515
cond(S) = 135.11061861369203
E1 = -144.57158196859265  E_coul = 53.59403702461753
init E= -90.9775449439751
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.8603154221591  LUMO = 5.72198142374314
  mo_energy =
[-2.66040785e+01 -9.41311268e-01 -8.60315422e-01 -8.60315422e-01
 -8.60315422e-01  5.72198142e+00  5.72198142e+00  5.72198142e+00
  2.70161781e+01  2.70161781e+01  2.70161781e+01  2.39578235e+02
  1.75121068e+03  6.54297419e+03]
E1 = -175.4227522092922  E_coul = 61.76894421688603
cycle= 1 E= -113.653807992406  delta_E= -22.7  |g|= 1.15  |ddm|= 1.15
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.76156
diis-c [-3.10311046  1.        ]
  HOMO = -0.239859951621372  LUMO = 6.53931508792062
  mo_energy =
[-2.49933451e+01 -2.54532907e-01 -2.39859952e-01 -2.39859952e-01
 -2.39859952e-01  6.53931509e+00  6.53931509e+00  6.53931509e+00
  2.81957972e+01  2.81957972e+01  2.81957972e+01  2.42400753e+02
  1.75554712e+03  6.54779765e+03]
E1 = -174.16535343048517  E_coul = 60.46841331531038
cycle= 2 E= -113.696940115175  delta_E= -0.0431  |g|= 0.119  |ddm|= 0.189
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.202371
diis-c [-0.00657751  0.09532091  0.90467909]
  HOMO = -0.307655289449137  LUMO = 6.43171263017085
  mo_energy =
[-2.52610719e+01 -3.68954522e-01 -3.07655289e-01 -3.07655289e-01
 -3.07655289e-01  6.43171263e+00  6.43171263e+00  6.43171263e+00
  2.80030215e+01  2.80030215e+01  2.80030215e+01  2.42115358e+02
  1.75526009e+03  6.54751126e+03]
E1 = -174.3259007994414  E_coul = 60.628136406876834
cycle= 3 E= -113.697764392565  delta_E= -0.000824  |g|= 0.00337  |ddm|= 0.0257
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00597329
diis-c [-8.55426820e-07 -7.14342516e-04  2.28072702e-02  9.77907072e-01]
  HOMO = -0.305744171797983  LUMO = 6.43497337246792
  mo_energy =
[-2.52540160e+01 -3.65793917e-01 -3.05744172e-01 -3.05744172e-01
 -3.05744172e-01  6.43497337e+00  6.43497337e+00  6.43497337e+00
  2.80083681e+01  2.80083681e+01  2.80083681e+01  2.42123010e+02
  1.75526879e+03  6.54752029e+03]
E1 = -174.32173950534985  E_coul = 60.62397450486992
cycle= 4 E= -113.69776500048  delta_E= -6.08e-07  |g|= 3.7e-05  |ddm|= 0.000611
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.16845e-05
diis-c [-1.24971947e-11  1.55062221e-05 -3.32031536e-04 -2.55555289e-02
  1.02587205e+00]
  HOMO = -0.305725524047233  LUMO = 6.43500099158007
  mo_energy =
[-2.52539691e+01 -3.65768109e-01 -3.05725524e-01 -3.05725524e-01
 -3.05725524e-01  6.43500099e+00  6.43500099e+00  6.43500099e+00
  2.80084098e+01  2.80084098e+01  2.80084098e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170404715527  E_coul = 60.6239390466244
cycle= 5 E= -113.697765000531  delta_E= -5.09e-11  |g|= 1.79e-07  |ddm|= 4.54e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -174.32170404715527  E_coul = 60.6239390466244
  HOMO = -0.30572541572603  LUMO = 6.43500117471179
  mo_energy =
[-2.52539688e+01 -3.65767948e-01 -3.05725416e-01 -3.05725416e-01
 -3.05725416e-01  6.43500117e+00  6.43500117e+00  6.43500117e+00
  2.80084100e+01  2.80084100e+01  2.80084100e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170384440929  E_coul = 60.6239388438784
Extra cycle  E= -113.697765000531  delta_E= -2.84e-14  |g|= 1.85e-08  |ddm|= 2.63e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766864e+03 1.35666910e+00 1.29844564e+03 1.95972619e+02
 4.39284252e+01 1.19733160e+01 5.24487884e+00 1.06553346e+00]
E = -113.6977650005309
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66863904        1
[INPUT] 0    0    [1    /1   ]  1.35666909923        1
[INPUT] 0    0    [1    /1   ]  1298.44564423        1
[INPUT] 0    0    [1    /1   ]  195.972618845        1
[INPUT] 0    0    [1    /1   ]  43.9284251644        1
[INPUT] 1    0    [1    /1   ]  11.9733160372        1
[INPUT] 1    0    [1    /1   ]  5.24487883754        1
[INPUT] 1    0    [1    /1   ]  1.06553345776        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686390363175, 1.0]], [0, [1.356669099227351, 1.0]], [0, [1298.445644225671, 1.0]], [0, [195.97261884463052, 1.0]], [0, [43.92842516436491, 1.0]], [1, [11.973316037232538, 1.0]], [1, [5.244878837538726, 1.0]], [1, [1.0655334577616706, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66863904]
bas 1, expnt(s) = [1.3566691]
bas 2, expnt(s) = [1298.44564423]
bas 3, expnt(s) = [195.97261884]
bas 4, expnt(s) = [43.92842516]
bas 5, expnt(s) = [11.97331604]
bas 6, expnt(s) = [5.24487884]
bas 7, expnt(s) = [1.06553346]
CPU time:         8.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766864e+03 7.40715321e+02 1.35666910e+00 3.17592673e+00
 1.29844564e+03 5.46490799e+02 1.95972619e+02 1.32330993e+02
 4.39284252e+01 4.31096255e+01 1.19733160e+01 6.49759219e+01
 5.24487884e+00 2.31554762e+01 1.06553346e+00 3.15822638e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.443725099399515
cond(S) = 135.11061861369203
E1 = -144.57158196859265  E_coul = 53.59403702461753
init E= -90.9775449439751
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.8603154221591  LUMO = 5.72198142374314
  mo_energy =
[-2.66040785e+01 -9.41311268e-01 -8.60315422e-01 -8.60315422e-01
 -8.60315422e-01  5.72198142e+00  5.72198142e+00  5.72198142e+00
  2.70161781e+01  2.70161781e+01  2.70161781e+01  2.39578235e+02
  1.75121068e+03  6.54297419e+03]
E1 = -175.4227522092922  E_coul = 61.76894421688603
cycle= 1 E= -113.653807992406  delta_E= -22.7  |g|= 1.15  |ddm|= 1.15
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.76156
diis-c [-3.10311046  1.        ]
  HOMO = -0.239859951621372  LUMO = 6.53931508792062
  mo_energy =
[-2.49933451e+01 -2.54532907e-01 -2.39859952e-01 -2.39859952e-01
 -2.39859952e-01  6.53931509e+00  6.53931509e+00  6.53931509e+00
  2.81957972e+01  2.81957972e+01  2.81957972e+01  2.42400753e+02
  1.75554712e+03  6.54779765e+03]
E1 = -174.16535343048517  E_coul = 60.46841331531038
cycle= 2 E= -113.696940115175  delta_E= -0.0431  |g|= 0.119  |ddm|= 0.189
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.202371
diis-c [-0.00657751  0.09532091  0.90467909]
  HOMO = -0.307655289449137  LUMO = 6.43171263017085
  mo_energy =
[-2.52610719e+01 -3.68954522e-01 -3.07655289e-01 -3.07655289e-01
 -3.07655289e-01  6.43171263e+00  6.43171263e+00  6.43171263e+00
  2.80030215e+01  2.80030215e+01  2.80030215e+01  2.42115358e+02
  1.75526009e+03  6.54751126e+03]
E1 = -174.3259007994414  E_coul = 60.628136406876834
cycle= 3 E= -113.697764392565  delta_E= -0.000824  |g|= 0.00337  |ddm|= 0.0257
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00597329
diis-c [-8.55426820e-07 -7.14342516e-04  2.28072702e-02  9.77907072e-01]
  HOMO = -0.305744171797983  LUMO = 6.43497337246792
  mo_energy =
[-2.52540160e+01 -3.65793917e-01 -3.05744172e-01 -3.05744172e-01
 -3.05744172e-01  6.43497337e+00  6.43497337e+00  6.43497337e+00
  2.80083681e+01  2.80083681e+01  2.80083681e+01  2.42123010e+02
  1.75526879e+03  6.54752029e+03]
E1 = -174.32173950534985  E_coul = 60.62397450486992
cycle= 4 E= -113.69776500048  delta_E= -6.08e-07  |g|= 3.7e-05  |ddm|= 0.000611
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.16845e-05
diis-c [-1.24971947e-11  1.55062221e-05 -3.32031536e-04 -2.55555289e-02
  1.02587205e+00]
  HOMO = -0.305725524047233  LUMO = 6.43500099158007
  mo_energy =
[-2.52539691e+01 -3.65768109e-01 -3.05725524e-01 -3.05725524e-01
 -3.05725524e-01  6.43500099e+00  6.43500099e+00  6.43500099e+00
  2.80084098e+01  2.80084098e+01  2.80084098e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170404715527  E_coul = 60.6239390466244
cycle= 5 E= -113.697765000531  delta_E= -5.09e-11  |g|= 1.79e-07  |ddm|= 4.54e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -174.32170404715527  E_coul = 60.6239390466244
  HOMO = -0.30572541572603  LUMO = 6.43500117471179
  mo_energy =
[-2.52539688e+01 -3.65767948e-01 -3.05725416e-01 -3.05725416e-01
 -3.05725416e-01  6.43500117e+00  6.43500117e+00  6.43500117e+00
  2.80084100e+01  2.80084100e+01  2.80084100e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170384440929  E_coul = 60.6239388438784
Extra cycle  E= -113.697765000531  delta_E= -2.84e-14  |g|= 1.85e-08  |ddm|= 2.63e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 135.11061861369203
E1 = -174.32170384440929  E_coul = 60.6239388438784
init E= -113.697765000531
    CPU time for initialize scf      0.07 sec, wall time      0.07 sec
  HOMO = -0.305725426961943  LUMO = 6.43500115639428
  mo_energy =
[-2.52539688e+01 -3.65767968e-01 -3.05725427e-01 -3.05725427e-01
 -3.05725427e-01  6.43500116e+00  6.43500116e+00  6.43500116e+00
  2.80084100e+01  2.80084100e+01  2.80084100e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170387192713  E_coul = 60.623938871396206
cycle= 1 E= -113.697765000531  delta_E= -2.84e-14  |g|= 2.52e-09  |ddm|= 4.56e-09
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
E1 = -174.32170387192713  E_coul = 60.623938871396206
  HOMO = -0.305725425343603  LUMO = 6.43500115898703
  mo_energy =
[-2.52539688e+01 -3.65767965e-01 -3.05725425e-01 -3.05725425e-01
 -3.05725425e-01  6.43500116e+00  6.43500116e+00  6.43500116e+00
  2.80084100e+01  2.80084100e+01  2.80084100e+01  2.42123061e+02
  1.75526885e+03  6.54752036e+03]
E1 = -174.32170386817705  E_coul = 60.623938867646146
Extra cycle  E= -113.697765000531  delta_E= 1.42e-14  |g|= 3.42e-10  |ddm|= 5.86e-10
    CPU time for scf_cycle      0.15 sec, wall time      0.16 sec
exp = [1.94766864e+03 1.35666910e+00 1.29844564e+03 1.95972619e+02
 4.39284252e+01 1.19733160e+01 5.24487884e+00 1.06553346e+00]
grad_E = [ 6.60396217e-05  5.46965857e-01  3.91430740e-04 -1.51475352e-02
  8.66411492e-01 -3.10327397e-02  1.09320828e-01  1.28135869e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66853001        1
[INPUT] 0    0    [1    /1   ]  1.87699938527        1
[INPUT] 0    0    [1    /1   ]  1298.44500775        1
[INPUT] 0    0    [1    /1   ]  195.996860154        1
[INPUT] 0    0    [1    /1   ]  42.5283920638        1
[INPUT] 1    0    [1    /1   ]  12.023773976         1
[INPUT] 1    0    [1    /1   ]  4.95679523873        1
[INPUT] 1    0    [1    /1   ]  0.402379475909       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6685300102927, 1.0]], [0, [1.8769993852675453, 1.0]], [0, [1298.4450077497652, 1.0]], [0, [195.99686015398572, 1.0]], [0, [42.528392063842354, 1.0]], [1, [12.023773975975347, 1.0]], [1, [4.956795238729917, 1.0]], [1, [0.4023794759085001, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66853001]
bas 1, expnt(s) = [1.87699939]
bas 2, expnt(s) = [1298.44500775]
bas 3, expnt(s) = [195.99686015]
bas 4, expnt(s) = [42.52839206]
bas 5, expnt(s) = [12.02377398]
bas 6, expnt(s) = [4.95679524]
bas 7, expnt(s) = [0.40237948]
CPU time:        11.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766853e+03 7.40715290e+02 1.87699939e+00 4.05147461e+00
 1.29844501e+03 5.46490598e+02 1.95996860e+02 1.32343270e+02
 4.25283921e+01 4.20750118e+01 1.20237740e+01 6.53183788e+01
 4.95679524e+00 2.15767295e+01 4.02379476e-01 9.34930157e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.026097059166474
cond(S) = 134.6751102147128
E1 = -138.16577563053437  E_coul = 48.664189074572455
init E= -89.5015865559619
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.511605666310155  LUMO = 2.4968273365665
  mo_energy =
[-2.85458860e+01 -9.94857916e-01 -9.94857916e-01 -9.94857916e-01
 -5.11605666e-01  2.49682734e+00  2.49682734e+00  2.49682734e+00
  2.37482684e+01  2.37482684e+01  2.37482684e+01  2.36312952e+02
  1.74686526e+03  6.53871998e+03]
E1 = -163.53668783114227  E_coul = 50.76640189426465
cycle= 1 E= -112.770285936878  delta_E= -23.3  |g|= 0.665  |ddm|= 2.13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.708704
diis-c [-0.50226195  1.        ]
  HOMO = -0.642355005532788  LUMO = 2.73678196481509
  mo_energy =
[-2.81021180e+01 -7.52529472e-01 -7.52529472e-01 -7.52529472e-01
 -6.42355006e-01  2.73678196e+00  2.73678196e+00  2.73678196e+00
  2.38854616e+01  2.38854616e+01  2.38854616e+01  2.37841706e+02
  1.74989809e+03  6.54223355e+03]
E1 = -163.49285970941662  E_coul = 50.72234629421932
cycle= 2 E= -112.770513415197  delta_E= -0.000227  |g|= 0.00735  |ddm|= 0.00972
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0123011
diis-c [-1.43793886e-04 -3.88597578e-03  1.00388598e+00]
  HOMO = -0.648487633039474  LUMO = 2.731602174911
  mo_energy =
[-2.81106180e+01 -7.55022075e-01 -7.55022075e-01 -7.55022075e-01
 -6.48487633e-01  2.73160217e+00  2.73160217e+00  2.73160217e+00
  2.38772069e+01  2.38772069e+01  2.38772069e+01  2.37833963e+02
  1.74989458e+03  6.54223111e+03]
E1 = -163.51266386652316  E_coul = 50.74214729178433
cycle= 3 E= -112.770516574739  delta_E= -3.16e-06  |g|= 0.00261  |ddm|= 0.00242
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00474943
diis-c [-2.73748110e-07 -1.26827377e-03  2.83797890e-01  7.17470384e-01]
  HOMO = -0.646625256016478  LUMO = 2.73308816126803
  mo_energy =
[-2.81074135e+01 -7.54323847e-01 -7.54323847e-01 -7.54323847e-01
 -6.46625256e-01  2.73308816e+00  2.73308816e+00  2.73308816e+00
  2.38797650e+01  2.38797650e+01  2.38797650e+01  2.37837370e+02
  1.74989808e+03  6.54223462e+03]
E1 = -163.50679777520477  E_coul = 50.736280544675004
cycle= 4 E= -112.77051723053  delta_E= -6.56e-07  |g|= 3.05e-05  |ddm|= 0.000732
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.61934e-05
diis-c [-5.41523957e-12  2.01380323e-05 -3.67456960e-03  2.59273458e-03
  1.00106170e+00]
  HOMO = -0.646645493197989  LUMO = 2.73307098914305
  mo_energy =
[-2.81074428e+01 -7.54332186e-01 -7.54332186e-01 -7.54332186e-01
 -6.46645493e-01  2.73307099e+00  2.73307099e+00  2.73307099e+00
  2.38797376e+01  2.38797376e+01  2.38797376e+01  2.37837342e+02
  1.74989806e+03  6.54223461e+03]
E1 = -163.50686347816287  E_coul = 50.736346247548006
cycle= 5 E= -112.770517230615  delta_E= -8.51e-11  |g|= 1.88e-07  |ddm|= 7.95e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -163.50686347816287  E_coul = 50.736346247548006
  HOMO = -0.64664566971799  LUMO = 2.73307083844062
  mo_energy =
[-2.81074430e+01 -7.54332259e-01 -7.54332259e-01 -7.54332259e-01
 -6.46645670e-01  2.73307084e+00  2.73307084e+00  2.73307084e+00
  2.38797373e+01  2.38797373e+01  2.38797373e+01  2.37837342e+02
  1.74989806e+03  6.54223461e+03]
E1 = -163.50686404375273  E_coul = 50.73634681313787
Extra cycle  E= -112.770517230615  delta_E= 1.42e-14  |g|= 7.38e-08  |ddm|= 6.78e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94766853e+03 1.87699939e+00 1.29844501e+03 1.95996860e+02
 4.25283921e+01 1.20237740e+01 4.95679524e+00 4.02379476e-01]
E = -112.77051723061486
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66860298        1
[INPUT] 0    0    [1    /1   ]  1.52875323471        1
[INPUT] 0    0    [1    /1   ]  1298.44543373        1
[INPUT] 0    0    [1    /1   ]  195.980635954        1
[INPUT] 0    0    [1    /1   ]  43.4654048632        1
[INPUT] 1    0    [1    /1   ]  11.9900035355        1
[INPUT] 1    0    [1    /1   ]  5.14960355109        1
[INPUT] 1    0    [1    /1   ]  0.846214531454       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686029791251, 1.0]], [0, [1.5287532347111723, 1.0]], [0, [1298.4454337297439, 1.0]], [0, [195.98063595390764, 1.0]], [0, [43.465404863191154, 1.0]], [1, [11.990003535538529, 1.0]], [1, [5.149603551094508, 1.0]], [1, [0.8462145314536962, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66860298]
bas 1, expnt(s) = [1.52875323]
bas 2, expnt(s) = [1298.44543373]
bas 3, expnt(s) = [195.98063595]
bas 4, expnt(s) = [43.46540486]
bas 5, expnt(s) = [11.99000354]
bas 6, expnt(s) = [5.14960355]
bas 7, expnt(s) = [0.84621453]
CPU time:        11.16
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766860e+03 7.40715311e+02 1.52875323e+00 3.47350610e+00
 1.29844543e+03 5.46490733e+02 1.95980636e+02 1.32335053e+02
 4.34654049e+01 4.27683821e+01 1.19900035e+01 6.50891397e+01
 5.14960355e+00 2.26308902e+01 8.46214531e-01 2.36774534e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.47950591922289
cond(S) = 134.9591652339301
E1 = -145.33844869919326  E_coul = 53.317354430389706
init E= -92.0210942688036
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.655861206246834  LUMO = 4.85323420707799
  mo_energy =
[-2.70889473e+01 -8.86706984e-01 -8.86706984e-01 -8.86706984e-01
 -6.55861206e-01  4.85323421e+00  4.85323421e+00  4.85323421e+00
  2.60388440e+01  2.60388440e+01  2.60388440e+01  2.38666694e+02
  1.74994020e+03  6.54173407e+03]
E1 = -173.4798483489443  E_coul = 59.41787835311005
cycle= 1 E= -114.061969995834  delta_E=  -22  |g|= 0.995  |ddm|= 1.21
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.46253
diis-c [-2.13900612  1.        ]
  HOMO = -0.209284601437955  LUMO = 5.45526024219264
  mo_energy =
[-2.58370170e+01 -4.31289873e-01 -4.31289873e-01 -4.31289873e-01
 -2.09284601e-01  5.45526024e+00  5.45526024e+00  5.45526024e+00
  2.69006137e+01  2.69006137e+01  2.69006137e+01  2.41089276e+02
  1.75387351e+03  6.54615216e+03]
E1 = -172.30934537866645  E_coul = 58.21754585412228
cycle= 2 E= -114.091799524544  delta_E= -0.0298  |g|= 0.12  |ddm|= 0.163
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.208228
diis-c [-0.00900437  0.11268811  0.88731189]
  HOMO = -0.322961028265351  LUMO = 5.35474851995922
  mo_energy =
[-2.60759129e+01 -4.90473922e-01 -4.90473922e-01 -4.90473922e-01
 -3.22961028e-01  5.35474852e+00  5.35474852e+00  5.35474852e+00
  2.67221061e+01  2.67221061e+01  2.67221061e+01  2.40834810e+02
  1.75361816e+03  6.54589743e+03]
E1 = -172.49572079443143  E_coul = 58.40297315171131
cycle= 3 E= -114.09274764272  delta_E= -0.000948  |g|= 0.00506  |ddm|= 0.0273
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00910429
diis-c [-7.43785110e-07 -7.35729911e-04  3.74090994e-02  9.63326631e-01]
  HOMO = -0.318305288832844  LUMO = 5.35912193964037
  mo_energy =
[-2.60663452e+01 -4.88026762e-01 -4.88026762e-01 -4.88026762e-01
 -3.18305289e-01  5.35912194e+00  5.35912194e+00  5.35912194e+00
  2.67294454e+01  2.67294454e+01  2.67294454e+01  2.40845153e+02
  1.75362959e+03  6.54590918e+03]
E1 = -172.48832639591058  E_coul = 58.39557709949262
cycle= 4 E= -114.092749296418  delta_E= -1.65e-06  |g|= 3.65e-05  |ddm|= 0.00104
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.364e-05
diis-c [-1.16788849e-11  1.85797338e-05 -6.60244371e-04 -2.45685876e-02
  1.02521025e+00]
  HOMO = -0.318278453070273  LUMO = 5.35914943725974
  mo_energy =
[-2.60662995e+01 -4.88010252e-01 -4.88010252e-01 -4.88010252e-01
 -3.18278453e-01  5.35914944e+00  5.35914944e+00  5.35914944e+00
  2.67294865e+01  2.67294865e+01  2.67294865e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.48828302074224  E_coul = 58.39553372426205
cycle= 5 E= -114.09274929648  delta_E= -6.22e-11  |g|= 2.16e-07  |ddm|= 5.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -172.48828302074224  E_coul = 58.39553372426205
  HOMO = -0.318278256127539  LUMO = 5.35914962938409
  mo_energy =
[-2.60662991e+01 -4.88010131e-01 -4.88010131e-01 -4.88010131e-01
 -3.18278256e-01  5.35914963e+00  5.35914963e+00  5.35914963e+00
  2.67294868e+01  2.67294868e+01  2.67294868e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.48828269322811  E_coul = 58.395533396747915
Extra cycle  E= -114.09274929648  delta_E= -1.42e-14  |g|= 3.25e-08  |ddm|= 4.19e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766860e+03 1.52875323e+00 1.29844543e+03 1.95980636e+02
 4.34654049e+01 1.19900035e+01 5.14960355e+00 8.46214531e-01]
E = -114.0927492964802
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66860298        1
[INPUT] 0    0    [1    /1   ]  1.52875323471        1
[INPUT] 0    0    [1    /1   ]  1298.44543373        1
[INPUT] 0    0    [1    /1   ]  195.980635954        1
[INPUT] 0    0    [1    /1   ]  43.4654048632        1
[INPUT] 1    0    [1    /1   ]  11.9900035355        1
[INPUT] 1    0    [1    /1   ]  5.14960355109        1
[INPUT] 1    0    [1    /1   ]  0.846214531454       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6686029791251, 1.0]], [0, [1.5287532347111723, 1.0]], [0, [1298.4454337297439, 1.0]], [0, [195.98063595390764, 1.0]], [0, [43.465404863191154, 1.0]], [1, [11.990003535538529, 1.0]], [1, [5.149603551094508, 1.0]], [1, [0.8462145314536962, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66860298]
bas 1, expnt(s) = [1.52875323]
bas 2, expnt(s) = [1298.44543373]
bas 3, expnt(s) = [195.98063595]
bas 4, expnt(s) = [43.46540486]
bas 5, expnt(s) = [11.99000354]
bas 6, expnt(s) = [5.14960355]
bas 7, expnt(s) = [0.84621453]
CPU time:        11.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766860e+03 7.40715311e+02 1.52875323e+00 3.47350610e+00
 1.29844543e+03 5.46490733e+02 1.95980636e+02 1.32335053e+02
 4.34654049e+01 4.27683821e+01 1.19900035e+01 6.50891397e+01
 5.14960355e+00 2.26308902e+01 8.46214531e-01 2.36774534e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.47950591922289
cond(S) = 134.9591652339301
E1 = -145.33844869919326  E_coul = 53.317354430389706
init E= -92.0210942688036
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.655861206246834  LUMO = 4.85323420707799
  mo_energy =
[-2.70889473e+01 -8.86706984e-01 -8.86706984e-01 -8.86706984e-01
 -6.55861206e-01  4.85323421e+00  4.85323421e+00  4.85323421e+00
  2.60388440e+01  2.60388440e+01  2.60388440e+01  2.38666694e+02
  1.74994020e+03  6.54173407e+03]
E1 = -173.4798483489443  E_coul = 59.41787835311005
cycle= 1 E= -114.061969995834  delta_E=  -22  |g|= 0.995  |ddm|= 1.21
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.46253
diis-c [-2.13900612  1.        ]
  HOMO = -0.209284601437955  LUMO = 5.45526024219264
  mo_energy =
[-2.58370170e+01 -4.31289873e-01 -4.31289873e-01 -4.31289873e-01
 -2.09284601e-01  5.45526024e+00  5.45526024e+00  5.45526024e+00
  2.69006137e+01  2.69006137e+01  2.69006137e+01  2.41089276e+02
  1.75387351e+03  6.54615216e+03]
E1 = -172.30934537866645  E_coul = 58.21754585412228
cycle= 2 E= -114.091799524544  delta_E= -0.0298  |g|= 0.12  |ddm|= 0.163
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.208228
diis-c [-0.00900437  0.11268811  0.88731189]
  HOMO = -0.322961028265351  LUMO = 5.35474851995922
  mo_energy =
[-2.60759129e+01 -4.90473922e-01 -4.90473922e-01 -4.90473922e-01
 -3.22961028e-01  5.35474852e+00  5.35474852e+00  5.35474852e+00
  2.67221061e+01  2.67221061e+01  2.67221061e+01  2.40834810e+02
  1.75361816e+03  6.54589743e+03]
E1 = -172.49572079443143  E_coul = 58.40297315171131
cycle= 3 E= -114.09274764272  delta_E= -0.000948  |g|= 0.00506  |ddm|= 0.0273
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00910429
diis-c [-7.43785110e-07 -7.35729911e-04  3.74090994e-02  9.63326631e-01]
  HOMO = -0.318305288832844  LUMO = 5.35912193964037
  mo_energy =
[-2.60663452e+01 -4.88026762e-01 -4.88026762e-01 -4.88026762e-01
 -3.18305289e-01  5.35912194e+00  5.35912194e+00  5.35912194e+00
  2.67294454e+01  2.67294454e+01  2.67294454e+01  2.40845153e+02
  1.75362959e+03  6.54590918e+03]
E1 = -172.48832639591058  E_coul = 58.39557709949262
cycle= 4 E= -114.092749296418  delta_E= -1.65e-06  |g|= 3.65e-05  |ddm|= 0.00104
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=6.364e-05
diis-c [-1.16788849e-11  1.85797338e-05 -6.60244371e-04 -2.45685876e-02
  1.02521025e+00]
  HOMO = -0.318278453070273  LUMO = 5.35914943725974
  mo_energy =
[-2.60662995e+01 -4.88010252e-01 -4.88010252e-01 -4.88010252e-01
 -3.18278453e-01  5.35914944e+00  5.35914944e+00  5.35914944e+00
  2.67294865e+01  2.67294865e+01  2.67294865e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.48828302074224  E_coul = 58.39553372426205
cycle= 5 E= -114.09274929648  delta_E= -6.22e-11  |g|= 2.16e-07  |ddm|= 5.36e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -172.48828302074224  E_coul = 58.39553372426205
  HOMO = -0.318278256127539  LUMO = 5.35914962938409
  mo_energy =
[-2.60662991e+01 -4.88010131e-01 -4.88010131e-01 -4.88010131e-01
 -3.18278256e-01  5.35914963e+00  5.35914963e+00  5.35914963e+00
  2.67294868e+01  2.67294868e+01  2.67294868e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.48828269322811  E_coul = 58.395533396747915
Extra cycle  E= -114.09274929648  delta_E= -1.42e-14  |g|= 3.25e-08  |ddm|= 4.19e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 134.9591652339301
E1 = -172.48828269322811  E_coul = 58.395533396747915
init E= -114.09274929648
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.318278291096443  LUMO = 5.35914959857321
  mo_energy =
[-2.60662992e+01 -4.88010149e-01 -4.88010149e-01 -4.88010149e-01
 -3.18278291e-01  5.35914960e+00  5.35914960e+00  5.35914960e+00
  2.67294867e+01  2.67294867e+01  2.67294867e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.48828275038673  E_coul = 58.39553345390649
cycle= 1 E= -114.09274929648  delta_E= -2.84e-14  |g|= 5.72e-09  |ddm|= 8.47e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -172.48828275038673  E_coul = 58.39553345390649
  HOMO = -0.318278284965188  LUMO = 5.35914960407678
  mo_energy =
[-2.60662992e+01 -4.88010145e-01 -4.88010145e-01 -4.88010145e-01
 -3.18278285e-01  5.35914960e+00  5.35914960e+00  5.35914960e+00
  2.67294867e+01  2.67294867e+01  2.67294867e+01  2.40845202e+02
  1.75362965e+03  6.54590925e+03]
E1 = -172.4882827403516  E_coul = 58.39553344387129
Extra cycle  E= -114.09274929648  delta_E= -7.11e-14  |g|= 1e-09  |ddm|= 1.45e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.94766860e+03 1.52875323e+00 1.29844543e+03 1.95980636e+02
 4.34654049e+01 1.19900035e+01 5.14960355e+00 8.46214531e-01]
grad_E = [ 6.05347797e-05  9.41178120e-01  3.72823697e-04 -1.50430333e-02
  8.51463284e-01 -3.12375923e-02  2.62702030e-01 -4.47831611e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66834144        1
[INPUT] 0    0    [1    /1   ]  1.40504802451        1
[INPUT] 0    0    [1    /1   ]  1298.44388252        1
[INPUT] 0    0    [1    /1   ]  196.040781686        1
[INPUT] 0    0    [1    /1   ]  40.0123981296        1
[INPUT] 1    0    [1    /1   ]  12.1152706642        1
[INPUT] 1    0    [1    /1   ]  4.29534912092        1
[INPUT] 1    0    [1    /1   ]  0.679702060008       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6683414434501, 1.0]], [0, [1.4050480245117536, 1.0]], [0, [1298.4438825224702, 1.0]], [0, [196.04078168596948, 1.0]], [0, [40.012398129581754, 1.0]], [1, [12.11527066417184, 1.0]], [1, [4.295349120917876, 1.0]], [1, [0.6797020600078613, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66834144]
bas 1, expnt(s) = [1.40504802]
bas 2, expnt(s) = [1298.44388252]
bas 3, expnt(s) = [196.04078169]
bas 4, expnt(s) = [40.01239813]
bas 5, expnt(s) = [12.11527066]
bas 6, expnt(s) = [4.29534912]
bas 7, expnt(s) = [0.67970206]
CPU time:        14.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766834e+03 7.40715236e+02 1.40504802e+00 3.26049397e+00
 1.29844388e+03 5.46490243e+02 1.96040782e+02 1.32365512e+02
 4.00123981e+01 4.01939752e+01 1.21152707e+01 6.59402810e+01
 4.29534912e+00 1.80398316e+01 6.79702060e-01 1.80045647e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.599488216000083
cond(S) = 132.7643678882735
E1 = -153.30581755132792  E_coul = 53.620211263224306
init E= -99.6856062881036
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.85793659279222  LUMO = 3.70748912914726
  mo_energy =
[-2.80520769e+01 -1.12209074e+00 -8.57936593e-01 -8.57936593e-01
 -8.57936593e-01  3.70748913e+00  3.70748913e+00  3.70748913e+00
  2.33739854e+01  2.33739854e+01  2.33739854e+01  2.28048239e+02
  1.73779286e+03  6.53011289e+03]
E1 = -174.24505588103736  E_coul = 57.117767147250696
cycle= 1 E= -117.127288733787  delta_E= -17.4  |g|= 0.741  |ddm|= 1.09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.974708
diis-c [-0.95005614  1.        ]
  HOMO = -0.601799303302783  LUMO = 4.02948831771774
  mo_energy =
[-2.72819201e+01 -9.25415601e-01 -6.01799303e-01 -6.01799303e-01
 -6.01799303e-01  4.02948832e+00  4.02948832e+00  4.02948832e+00
  2.38451460e+01  2.38451460e+01  2.38451460e+01  2.29792926e+02
  1.74086063e+03  6.53359293e+03]
E1 = -173.34164535268874  E_coul = 56.202439930977086
cycle= 2 E= -117.139205421712  delta_E= -0.0119  |g|= 0.101  |ddm|= 0.115
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.177824
diis-c [-0.010217    0.13112374  0.86887626]
  HOMO = -0.647460974739423  LUMO = 3.96055764713849
  mo_energy =
[-2.74595732e+01 -1.00706621e+00 -6.47460975e-01 -6.47460975e-01
 -6.47460975e-01  3.96055765e+00  3.96055765e+00  3.96055765e+00
  2.37122116e+01  2.37122116e+01  2.37122116e+01  2.29607125e+02
  1.74067523e+03  6.53340832e+03]
E1 = -173.5445840240531  E_coul = 56.404569554850745
cycle= 3 E= -117.140014469202  delta_E= -0.000809  |g|= 0.00918  |ddm|= 0.0268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0163839
diis-c [-8.26642791e-07 -9.71090165e-04  8.05602222e-02  9.20410868e-01]
  HOMO = -0.643639264356664  LUMO = 3.9664352900126
  mo_energy =
[-2.74450144e+01 -1.00028768e+00 -6.43639264e-01 -6.43639264e-01
 -6.43639264e-01  3.96643529e+00  3.96643529e+00  3.96643529e+00
  2.37232272e+01  2.37232272e+01  2.37232272e+01  2.29622579e+02
  1.74069186e+03  6.53342527e+03]
E1 = -173.52792770801926  E_coul = 56.38790663199845
cycle= 4 E= -117.140021076021  delta_E= -6.61e-06  |g|= 4.15e-05  |ddm|= 0.00217
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.39691e-05
diis-c [-1.20059608e-11  2.44621180e-05 -1.59859620e-03 -2.29255127e-02
  1.02449965e+00]
  HOMO = -0.643622217136783  LUMO = 3.96646325850061
  mo_energy =
[-2.74449649e+01 -1.00025943e+00 -6.43622217e-01 -6.43622217e-01
 -6.43622217e-01  3.96646326e+00  3.96646326e+00  3.96646326e+00
  2.37232715e+01  2.37232715e+01  2.37232715e+01  2.29622632e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.52786281718934  E_coul = 56.38784174106292
cycle= 5 E= -117.140021076126  delta_E= -1.06e-10  |g|= 3.24e-07  |ddm|= 7.81e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -173.52786281718934  E_coul = 56.38784174106292
  HOMO = -0.643622035619469  LUMO = 3.96646346087746
  mo_energy =
[-2.74449644e+01 -1.00025917e+00 -6.43622036e-01 -6.43622036e-01
 -6.43622036e-01  3.96646346e+00  3.96646346e+00  3.96646346e+00
  2.37232719e+01  2.37232719e+01  2.37232719e+01  2.29622633e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.5278621261904  E_coul = 56.38784105006385
Extra cycle  E= -117.140021076127  delta_E= -1.14e-13  |g|= 7.65e-08  |ddm|= 8.61e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766834e+03 1.40504802e+00 1.29844388e+03 1.96040782e+02
 4.00123981e+01 1.21152707e+01 4.29534912e+00 6.79702060e-01]
E = -117.14002107612654
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66834144        1
[INPUT] 0    0    [1    /1   ]  1.40504802451        1
[INPUT] 0    0    [1    /1   ]  1298.44388252        1
[INPUT] 0    0    [1    /1   ]  196.040781686        1
[INPUT] 0    0    [1    /1   ]  40.0123981296        1
[INPUT] 1    0    [1    /1   ]  12.1152706642        1
[INPUT] 1    0    [1    /1   ]  4.29534912092        1
[INPUT] 1    0    [1    /1   ]  0.679702060008       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6683414434501, 1.0]], [0, [1.4050480245117536, 1.0]], [0, [1298.4438825224702, 1.0]], [0, [196.04078168596948, 1.0]], [0, [40.012398129581754, 1.0]], [1, [12.11527066417184, 1.0]], [1, [4.295349120917876, 1.0]], [1, [0.6797020600078613, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66834144]
bas 1, expnt(s) = [1.40504802]
bas 2, expnt(s) = [1298.44388252]
bas 3, expnt(s) = [196.04078169]
bas 4, expnt(s) = [40.01239813]
bas 5, expnt(s) = [12.11527066]
bas 6, expnt(s) = [4.29534912]
bas 7, expnt(s) = [0.67970206]
CPU time:        14.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766834e+03 7.40715236e+02 1.40504802e+00 3.26049397e+00
 1.29844388e+03 5.46490243e+02 1.96040782e+02 1.32365512e+02
 4.00123981e+01 4.01939752e+01 1.21152707e+01 6.59402810e+01
 4.29534912e+00 1.80398316e+01 6.79702060e-01 1.80045647e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.599488216000083
cond(S) = 132.7643678882735
E1 = -153.30581755132792  E_coul = 53.620211263224306
init E= -99.6856062881036
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.85793659279222  LUMO = 3.70748912914726
  mo_energy =
[-2.80520769e+01 -1.12209074e+00 -8.57936593e-01 -8.57936593e-01
 -8.57936593e-01  3.70748913e+00  3.70748913e+00  3.70748913e+00
  2.33739854e+01  2.33739854e+01  2.33739854e+01  2.28048239e+02
  1.73779286e+03  6.53011289e+03]
E1 = -174.24505588103736  E_coul = 57.117767147250696
cycle= 1 E= -117.127288733787  delta_E= -17.4  |g|= 0.741  |ddm|= 1.09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.974708
diis-c [-0.95005614  1.        ]
  HOMO = -0.601799303302783  LUMO = 4.02948831771774
  mo_energy =
[-2.72819201e+01 -9.25415601e-01 -6.01799303e-01 -6.01799303e-01
 -6.01799303e-01  4.02948832e+00  4.02948832e+00  4.02948832e+00
  2.38451460e+01  2.38451460e+01  2.38451460e+01  2.29792926e+02
  1.74086063e+03  6.53359293e+03]
E1 = -173.34164535268874  E_coul = 56.202439930977086
cycle= 2 E= -117.139205421712  delta_E= -0.0119  |g|= 0.101  |ddm|= 0.115
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.177824
diis-c [-0.010217    0.13112374  0.86887626]
  HOMO = -0.647460974739423  LUMO = 3.96055764713849
  mo_energy =
[-2.74595732e+01 -1.00706621e+00 -6.47460975e-01 -6.47460975e-01
 -6.47460975e-01  3.96055765e+00  3.96055765e+00  3.96055765e+00
  2.37122116e+01  2.37122116e+01  2.37122116e+01  2.29607125e+02
  1.74067523e+03  6.53340832e+03]
E1 = -173.5445840240531  E_coul = 56.404569554850745
cycle= 3 E= -117.140014469202  delta_E= -0.000809  |g|= 0.00918  |ddm|= 0.0268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0163839
diis-c [-8.26642791e-07 -9.71090165e-04  8.05602222e-02  9.20410868e-01]
  HOMO = -0.643639264356664  LUMO = 3.9664352900126
  mo_energy =
[-2.74450144e+01 -1.00028768e+00 -6.43639264e-01 -6.43639264e-01
 -6.43639264e-01  3.96643529e+00  3.96643529e+00  3.96643529e+00
  2.37232272e+01  2.37232272e+01  2.37232272e+01  2.29622579e+02
  1.74069186e+03  6.53342527e+03]
E1 = -173.52792770801926  E_coul = 56.38790663199845
cycle= 4 E= -117.140021076021  delta_E= -6.61e-06  |g|= 4.15e-05  |ddm|= 0.00217
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.39691e-05
diis-c [-1.20059608e-11  2.44621180e-05 -1.59859620e-03 -2.29255127e-02
  1.02449965e+00]
  HOMO = -0.643622217136783  LUMO = 3.96646325850061
  mo_energy =
[-2.74449649e+01 -1.00025943e+00 -6.43622217e-01 -6.43622217e-01
 -6.43622217e-01  3.96646326e+00  3.96646326e+00  3.96646326e+00
  2.37232715e+01  2.37232715e+01  2.37232715e+01  2.29622632e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.52786281718934  E_coul = 56.38784174106292
cycle= 5 E= -117.140021076126  delta_E= -1.06e-10  |g|= 3.24e-07  |ddm|= 7.81e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -173.52786281718934  E_coul = 56.38784174106292
  HOMO = -0.643622035619469  LUMO = 3.96646346087746
  mo_energy =
[-2.74449644e+01 -1.00025917e+00 -6.43622036e-01 -6.43622036e-01
 -6.43622036e-01  3.96646346e+00  3.96646346e+00  3.96646346e+00
  2.37232719e+01  2.37232719e+01  2.37232719e+01  2.29622633e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.5278621261904  E_coul = 56.38784105006385
Extra cycle  E= -117.140021076127  delta_E= -1.14e-13  |g|= 7.65e-08  |ddm|= 8.61e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 132.7643678882735
E1 = -173.5278621261904  E_coul = 56.38784105006385
init E= -117.140021076127
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.643622075054088  LUMO = 3.9664634009847
  mo_energy =
[-2.74449645e+01 -1.00025924e+00 -6.43622075e-01 -6.43622075e-01
 -6.43622075e-01  3.96646340e+00  3.96646340e+00  3.96646340e+00
  2.37232718e+01  2.37232718e+01  2.37232718e+01  2.29622632e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.52786230260867  E_coul = 56.38784122648223
cycle= 1 E= -117.140021076126  delta_E= 1.14e-13  |g|= 1.96e-08  |ddm|= 2.34e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -173.52786230260867  E_coul = 56.38784122648223
  HOMO = -0.64362206482973  LUMO = 3.966463416451
  mo_energy =
[-2.74449645e+01 -1.00025923e+00 -6.43622065e-01 -6.43622065e-01
 -6.43622065e-01  3.96646342e+00  3.96646342e+00  3.96646342e+00
  2.37232718e+01  2.37232718e+01  2.37232718e+01  2.29622633e+02
  1.74069193e+03  6.53342535e+03]
E1 = -173.52786225747727  E_coul = 56.38784118135082
Extra cycle  E= -117.140021076126  delta_E= -1.42e-14  |g|= 5.02e-09  |ddm|= 5.94e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94766834e+03 1.40504802e+00 1.29844388e+03 1.96040782e+02
 4.00123981e+01 1.21152707e+01 4.29534912e+00 6.79702060e-01]
grad_E = [ 2.90426489e-05  6.26167219e-01  2.57096442e-04 -1.33787503e-02
  7.85139046e-01 -4.37241112e-02  4.35919514e-01 -1.74378013e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66713938        1
[INPUT] 0    0    [1    /1   ]  0.84991166197        1
[INPUT] 0    0    [1    /1   ]  1298.43644361        1
[INPUT] 0    0    [1    /1   ]  196.341395932        1
[INPUT] 0    0    [1    /1   ]  22.6256566861        1
[INPUT] 1    0    [1    /1   ]  12.8113839202        1
[INPUT] 1    0    [1    /1   ]  1.00000008274e-09      1
[INPUT] 1    0    [1    /1   ]  0.456931457866       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671393779543, 1.0]], [0, [0.8499116619700576, 1.0]], [0, [1298.4364436114404, 1.0]], [0, [196.34139593158713, 1.0]], [0, [22.625656686088586, 1.0]], [1, [12.811383920221852, 1.0]], [1, [1.000000082740371e-09, 1.0]], [1, [0.4569314578656051, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66713938]
bas 1, expnt(s) = [0.84991166]
bas 2, expnt(s) = [1298.43644361]
bas 3, expnt(s) = [196.34139593]
bas 4, expnt(s) = [22.62565669]
bas 5, expnt(s) = [12.81138392]
bas 6, expnt(s) = [1.00000008e-09]
bas 7, expnt(s) = [0.45693146]
CPU time:        17.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766714e+03 7.40714893e+02 8.49911662e-01 2.23637879e+00
 1.29843644e+03 5.46487895e+02 1.96341396e+02 1.32517712e+02
 2.26256567e+01 2.62099335e+01 1.28113839e+01 7.07097741e+01
 1.00000008e-09 1.64053099e-11 4.56931458e-01 1.09596886e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 8.661638595620573
cond(S) = 122.51443737520779
E1 = -151.31051095326038  E_coul = 39.52971958500019
init E= -111.78079136826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -1.10255920470091  LUMO = -0.000336415183520683
  mo_energy =
[-3.35070426e+01 -3.45610072e+00 -1.10255920e+00 -1.10255920e+00
 -1.10255920e+00 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  9.02211094e+00  9.02211094e+00  9.02211094e+00  1.68527408e+02
  1.67619857e+03  6.47186754e+03]
E1 = -157.74838389629184  E_coul = 38.28551578647278
cycle= 1 E= -119.462868109819  delta_E= -7.68  |g|= 0.493  |ddm|= 1.69
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.672194
diis-c [-0.4518453  1.       ]
  HOMO = -0.729755622416615  LUMO = -0.000336415183520788
  mo_energy =
[-3.51440191e+01 -3.25729077e+00 -7.29755622e-01 -7.29755622e-01
 -7.29755622e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.35483235e+00  8.35483235e+00  8.35483235e+00  1.66726977e+02
  1.67410836e+03  6.46973363e+03]
E1 = -157.89402789400472  E_coul = 38.42735448909039
cycle= 2 E= -119.466673404914  delta_E= -0.00381  |g|= 0.00523  |ddm|= 0.0389
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00515171
diis-c [-1.40635973e-05  5.22735168e-03  9.94772648e-01]
  HOMO = -0.726213727651952  LUMO = -0.000336415183521131
  mo_energy =
[-3.50955426e+01 -3.24584641e+00 -7.26213728e-01 -7.26213728e-01
 -7.26213728e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38638676e+00  8.38638676e+00  8.38638676e+00  1.66781829e+02
  1.67417836e+03  6.46980822e+03]
E1 = -157.8941051474792  E_coul = 38.427431678532336
cycle= 3 E= -119.466673468947  delta_E= -6.4e-08  |g|= 7.32e-05  |ddm|= 7.41e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.56861e-05
diis-c [-6.00540931e-10  1.99776713e-05 -1.42756161e-02  1.01425564e+00]
  HOMO = -0.726191529005378  LUMO = -0.00033641518352217
  mo_energy =
[-3.50952732e+01 -3.24577393e+00 -7.26191529e-01 -7.26191529e-01
 -7.26191529e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657426e+00  8.38657426e+00  8.38657426e+00  1.66782107e+02
  1.67417860e+03  6.46980845e+03]
E1 = -157.89410929205357  E_coul = 38.42743582308802
cycle= 4 E= -119.466673468966  delta_E= -1.87e-11  |g|= 3.98e-07  |ddm|= 1.77e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -157.89410929205357  E_coul = 38.42743582308802
  HOMO = -0.726191373650739  LUMO = -0.000336415183520297
  mo_energy =
[-3.50952713e+01 -3.24577343e+00 -7.26191374e-01 -7.26191374e-01
 -7.26191374e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657559e+00  8.38657559e+00  8.38657559e+00  1.66782109e+02
  1.67417861e+03  6.46980845e+03]
E1 = -157.8941093017213  E_coul = 38.427435832755755
Extra cycle  E= -119.466673468966  delta_E=    0  |g|= 5.15e-09  |ddm|= 6.39e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766714e+03 8.49911662e-01 1.29843644e+03 1.96341396e+02
 2.26256567e+01 1.28113839e+01 1.00000008e-09 4.56931458e-01]
E = -119.46667346896555
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66713938        1
[INPUT] 0    0    [1    /1   ]  0.84991166197        1
[INPUT] 0    0    [1    /1   ]  1298.43644361        1
[INPUT] 0    0    [1    /1   ]  196.341395932        1
[INPUT] 0    0    [1    /1   ]  22.6256566861        1
[INPUT] 1    0    [1    /1   ]  12.8113839202        1
[INPUT] 1    0    [1    /1   ]  1.00000008274e-09      1
[INPUT] 1    0    [1    /1   ]  0.456931457866       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671393779543, 1.0]], [0, [0.8499116619700576, 1.0]], [0, [1298.4364436114404, 1.0]], [0, [196.34139593158713, 1.0]], [0, [22.625656686088586, 1.0]], [1, [12.811383920221852, 1.0]], [1, [1.000000082740371e-09, 1.0]], [1, [0.4569314578656051, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66713938]
bas 1, expnt(s) = [0.84991166]
bas 2, expnt(s) = [1298.43644361]
bas 3, expnt(s) = [196.34139593]
bas 4, expnt(s) = [22.62565669]
bas 5, expnt(s) = [12.81138392]
bas 6, expnt(s) = [1.00000008e-09]
bas 7, expnt(s) = [0.45693146]
CPU time:        17.23
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766714e+03 7.40714893e+02 8.49911662e-01 2.23637879e+00
 1.29843644e+03 5.46487895e+02 1.96341396e+02 1.32517712e+02
 2.26256567e+01 2.62099335e+01 1.28113839e+01 7.07097741e+01
 1.00000008e-09 1.64053099e-11 4.56931458e-01 1.09596886e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 8.661638595620573
cond(S) = 122.51443737520779
E1 = -151.31051095326038  E_coul = 39.52971958500019
init E= -111.78079136826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -1.10255920470091  LUMO = -0.000336415183520683
  mo_energy =
[-3.35070426e+01 -3.45610072e+00 -1.10255920e+00 -1.10255920e+00
 -1.10255920e+00 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  9.02211094e+00  9.02211094e+00  9.02211094e+00  1.68527408e+02
  1.67619857e+03  6.47186754e+03]
E1 = -157.74838389629184  E_coul = 38.28551578647278
cycle= 1 E= -119.462868109819  delta_E= -7.68  |g|= 0.493  |ddm|= 1.69
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.672194
diis-c [-0.4518453  1.       ]
  HOMO = -0.729755622416615  LUMO = -0.000336415183520788
  mo_energy =
[-3.51440191e+01 -3.25729077e+00 -7.29755622e-01 -7.29755622e-01
 -7.29755622e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.35483235e+00  8.35483235e+00  8.35483235e+00  1.66726977e+02
  1.67410836e+03  6.46973363e+03]
E1 = -157.89402789400472  E_coul = 38.42735448909039
cycle= 2 E= -119.466673404914  delta_E= -0.00381  |g|= 0.00523  |ddm|= 0.0389
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00515171
diis-c [-1.40635973e-05  5.22735168e-03  9.94772648e-01]
  HOMO = -0.726213727651952  LUMO = -0.000336415183521131
  mo_energy =
[-3.50955426e+01 -3.24584641e+00 -7.26213728e-01 -7.26213728e-01
 -7.26213728e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38638676e+00  8.38638676e+00  8.38638676e+00  1.66781829e+02
  1.67417836e+03  6.46980822e+03]
E1 = -157.8941051474792  E_coul = 38.427431678532336
cycle= 3 E= -119.466673468947  delta_E= -6.4e-08  |g|= 7.32e-05  |ddm|= 7.41e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.56861e-05
diis-c [-6.00540931e-10  1.99776713e-05 -1.42756161e-02  1.01425564e+00]
  HOMO = -0.726191529005378  LUMO = -0.00033641518352217
  mo_energy =
[-3.50952732e+01 -3.24577393e+00 -7.26191529e-01 -7.26191529e-01
 -7.26191529e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657426e+00  8.38657426e+00  8.38657426e+00  1.66782107e+02
  1.67417860e+03  6.46980845e+03]
E1 = -157.89410929205357  E_coul = 38.42743582308802
cycle= 4 E= -119.466673468966  delta_E= -1.87e-11  |g|= 3.98e-07  |ddm|= 1.77e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -157.89410929205357  E_coul = 38.42743582308802
  HOMO = -0.726191373650739  LUMO = -0.000336415183520297
  mo_energy =
[-3.50952713e+01 -3.24577343e+00 -7.26191374e-01 -7.26191374e-01
 -7.26191374e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657559e+00  8.38657559e+00  8.38657559e+00  1.66782109e+02
  1.67417861e+03  6.46980845e+03]
E1 = -157.8941093017213  E_coul = 38.427435832755755
Extra cycle  E= -119.466673468966  delta_E=    0  |g|= 5.15e-09  |ddm|= 6.39e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.51443737520779
E1 = -157.8941093017213  E_coul = 38.427435832755755
init E= -119.466673468966
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.726191373242658  LUMO = -0.000336415183521939
  mo_energy =
[-3.50952713e+01 -3.24577343e+00 -7.26191373e-01 -7.26191373e-01
 -7.26191373e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657560e+00  8.38657560e+00  8.38657560e+00  1.66782109e+02
  1.67417861e+03  6.46980845e+03]
E1 = -157.89410930201623  E_coul = 38.427435833050765
cycle= 1 E= -119.466673468965  delta_E= 8.53e-14  |g|= 7.84e-11  |ddm|= 1.2e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -157.89410930201623  E_coul = 38.427435833050765
  HOMO = -0.726191373232905  LUMO = -0.000336415183520363
  mo_energy =
[-3.50952713e+01 -3.24577343e+00 -7.26191373e-01 -7.26191373e-01
 -7.26191373e-01 -3.36415184e-04 -3.36415184e-04 -3.36415184e-04
  8.38657560e+00  8.38657560e+00  8.38657560e+00  1.66782109e+02
  1.67417861e+03  6.46980845e+03]
E1 = -157.89410930202  E_coul = 38.42743583305458
Extra cycle  E= -119.466673468965  delta_E= 2.84e-14  |g|= 1.46e-12  |ddm|= 1.65e-12
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766714e+03 8.49911662e-01 1.29843644e+03 1.96341396e+02
 2.26256567e+01 1.28113839e+01 1.00000008e-09 4.56931458e-01]
grad_E = [ 1.56835822e-06 -2.21792384e+00  1.19809616e-06  2.30344861e-02
 -8.70372967e-02  1.73970492e-01 -4.85921313e-12 -1.08294303e+01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66696343        1
[INPUT] 0    0    [1    /1   ]  0.839897199851       1
[INPUT] 0    0    [1    /1   ]  1298.43544171        1
[INPUT] 0    0    [1    /1   ]  196.361464925        1
[INPUT] 0    0    [1    /1   ]  20.5607206568        1
[INPUT] 1    0    [1    /1   ]  12.7527546547        1
[INPUT] 1    0    [1    /1   ]  0.204915712774       1
[INPUT] 1    0    [1    /1   ]  1.22882590284        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6669634301861, 1.0]], [0, [0.8398971998509864, 1.0]], [0, [1298.435441708043, 1.0]], [0, [196.36146492502144, 1.0]], [0, [20.560720656839507, 1.0]], [1, [12.752754654676474, 1.0]], [1, [0.204915712774023, 1.0]], [1, [1.228825902843822, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66696343]
bas 1, expnt(s) = [0.8398972]
bas 2, expnt(s) = [1298.43544171]
bas 3, expnt(s) = [196.36146493]
bas 4, expnt(s) = [20.56072066]
bas 5, expnt(s) = [12.75275465]
bas 6, expnt(s) = [0.20491571]
bas 7, expnt(s) = [1.2288259]
CPU time:        19.88
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766696e+03 7.40714843e+02 8.39897200e-01 2.21658620e+00
 1.29843544e+03 5.46487579e+02 1.96361465e+02 1.32527871e+02
 2.05607207e+01 2.43946041e+01 1.27527547e+01 7.03055157e+01
 2.04915713e-01 4.02210560e-01 1.22882590e+00 3.77439492e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.837442556718635
cond(S) = 121.42988311434004
E1 = -172.20954168827123  E_coul = 52.195774699699314
init E= -120.013766988572
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.757106228522565  LUMO = 0.673859168431388
  mo_energy =
[-3.15758131e+01 -1.98535070e+00 -7.57106229e-01 -7.57106229e-01
 -7.57106229e-01  6.73859168e-01  6.73859168e-01  6.73859168e-01
  1.30350113e+01  1.30350113e+01  1.30350113e+01  1.63049724e+02
  1.67111070e+03  6.46722277e+03]
E1 = -172.85745265476274  E_coul = 49.04308617306725
cycle= 1 E= -123.814366481695  delta_E= -3.8  |g|= 0.323  |ddm|= 0.639
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.493422
diis-c [-0.24346538  1.        ]
  HOMO = -0.875365109439764  LUMO = 0.686207088750239
  mo_energy =
[-3.26031229e+01 -2.16102276e+00 -8.75365109e-01 -8.75365109e-01
 -8.75365109e-01  6.86207089e-01  6.86207089e-01  6.86207089e-01
  1.24584886e+01  1.24584886e+01  1.24584886e+01  1.61875315e+02
  1.66950057e+03  6.46551625e+03]
E1 = -173.64494200642088  E_coul = 49.82324218242453
cycle= 2 E= -123.821699823996  delta_E= -0.00733  |g|= 0.0628  |ddm|= 0.146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10121
diis-c [-0.00104946  0.16300372  0.83699628]
  HOMO = -0.830745796048151  LUMO = 0.700002798554385
  mo_energy =
[-3.24651132e+01 -2.10574104e+00 -8.30745796e-01 -8.30745796e-01
 -8.30745796e-01  7.00002799e-01  7.00002799e-01  7.00002799e-01
  1.25665472e+01  1.25665472e+01  1.25665472e+01  1.62019043e+02
  1.66964976e+03  6.46566626e+03]
E1 = -173.51888633643935  E_coul = 49.696884159642316
cycle= 3 E= -123.822002176797  delta_E= -0.000302  |g|= 0.000244  |ddm|= 0.0228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000413657
diis-c [-9.76795242e-08 -1.15589401e-03 -6.83987272e-03  1.00799577e+00]
  HOMO = -0.830530097732402  LUMO = 0.70014652600879
  mo_energy =
[-3.24655401e+01 -2.10548193e+00 -8.30530098e-01 -8.30530098e-01
 -8.30530098e-01  7.00146526e-01  7.00146526e-01  7.00146526e-01
  1.25665901e+01  1.25665901e+01  1.25665901e+01  1.62018413e+02
  1.66964881e+03  6.46566526e+03]
E1 = -173.5188618356624  E_coul = 49.69685965772794
cycle= 4 E= -123.822002177934  delta_E= -1.14e-09  |g|= 8.12e-06  |ddm|= 2.33e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24734e-05
diis-c [-8.73713846e-12  1.44385061e-05  2.15023906e-06 -2.23221064e-02
  1.02230552e+00]
  HOMO = -0.830523977339662  LUMO = 0.700147963463974
  mo_energy =
[-3.24655289e+01 -2.10547530e+00 -8.30523977e-01 -8.30523977e-01
 -8.30523977e-01  7.00147963e-01  7.00147963e-01  7.00147963e-01
  1.25666005e+01  1.25666005e+01  1.25666005e+01  1.62018426e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885941885055  E_coul = 49.69685724091396
cycle= 5 E= -123.822002177937  delta_E= -2.15e-12  |g|= 5.87e-07  |ddm|= 8.21e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -173.51885941885055  E_coul = 49.69685724091396
  HOMO = -0.830523428785239  LUMO = 0.700148138033966
  mo_energy =
[-3.24655275e+01 -2.10547463e+00 -8.30523429e-01 -8.30523429e-01
 -8.30523429e-01  7.00148138e-01  7.00148138e-01  7.00148138e-01
  1.25666016e+01  1.25666016e+01  1.25666016e+01  1.62018428e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885822074215  E_coul = 49.69685604280555
Extra cycle  E= -123.822002177937  delta_E=    0  |g|= 9.69e-08  |ddm|= 2.02e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766696e+03 8.39897200e-01 1.29843544e+03 1.96361465e+02
 2.05607207e+01 1.27527547e+01 2.04915713e-01 1.22882590e+00]
E = -123.8220021779366
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66696343        1
[INPUT] 0    0    [1    /1   ]  0.839897199851       1
[INPUT] 0    0    [1    /1   ]  1298.43544171        1
[INPUT] 0    0    [1    /1   ]  196.361464925        1
[INPUT] 0    0    [1    /1   ]  20.5607206568        1
[INPUT] 1    0    [1    /1   ]  12.7527546547        1
[INPUT] 1    0    [1    /1   ]  0.204915712774       1
[INPUT] 1    0    [1    /1   ]  1.22882590284        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6669634301861, 1.0]], [0, [0.8398971998509864, 1.0]], [0, [1298.435441708043, 1.0]], [0, [196.36146492502144, 1.0]], [0, [20.560720656839507, 1.0]], [1, [12.752754654676474, 1.0]], [1, [0.204915712774023, 1.0]], [1, [1.228825902843822, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66696343]
bas 1, expnt(s) = [0.8398972]
bas 2, expnt(s) = [1298.43544171]
bas 3, expnt(s) = [196.36146493]
bas 4, expnt(s) = [20.56072066]
bas 5, expnt(s) = [12.75275465]
bas 6, expnt(s) = [0.20491571]
bas 7, expnt(s) = [1.2288259]
CPU time:        20.07
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766696e+03 7.40714843e+02 8.39897200e-01 2.21658620e+00
 1.29843544e+03 5.46487579e+02 1.96361465e+02 1.32527871e+02
 2.05607207e+01 2.43946041e+01 1.27527547e+01 7.03055157e+01
 2.04915713e-01 4.02210560e-01 1.22882590e+00 3.77439492e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.837442556718635
cond(S) = 121.42988311434004
E1 = -172.20954168827123  E_coul = 52.195774699699314
init E= -120.013766988572
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.757106228522565  LUMO = 0.673859168431388
  mo_energy =
[-3.15758131e+01 -1.98535070e+00 -7.57106229e-01 -7.57106229e-01
 -7.57106229e-01  6.73859168e-01  6.73859168e-01  6.73859168e-01
  1.30350113e+01  1.30350113e+01  1.30350113e+01  1.63049724e+02
  1.67111070e+03  6.46722277e+03]
E1 = -172.85745265476274  E_coul = 49.04308617306725
cycle= 1 E= -123.814366481695  delta_E= -3.8  |g|= 0.323  |ddm|= 0.639
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.493422
diis-c [-0.24346538  1.        ]
  HOMO = -0.875365109439764  LUMO = 0.686207088750239
  mo_energy =
[-3.26031229e+01 -2.16102276e+00 -8.75365109e-01 -8.75365109e-01
 -8.75365109e-01  6.86207089e-01  6.86207089e-01  6.86207089e-01
  1.24584886e+01  1.24584886e+01  1.24584886e+01  1.61875315e+02
  1.66950057e+03  6.46551625e+03]
E1 = -173.64494200642088  E_coul = 49.82324218242453
cycle= 2 E= -123.821699823996  delta_E= -0.00733  |g|= 0.0628  |ddm|= 0.146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10121
diis-c [-0.00104946  0.16300372  0.83699628]
  HOMO = -0.830745796048151  LUMO = 0.700002798554385
  mo_energy =
[-3.24651132e+01 -2.10574104e+00 -8.30745796e-01 -8.30745796e-01
 -8.30745796e-01  7.00002799e-01  7.00002799e-01  7.00002799e-01
  1.25665472e+01  1.25665472e+01  1.25665472e+01  1.62019043e+02
  1.66964976e+03  6.46566626e+03]
E1 = -173.51888633643935  E_coul = 49.696884159642316
cycle= 3 E= -123.822002176797  delta_E= -0.000302  |g|= 0.000244  |ddm|= 0.0228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000413657
diis-c [-9.76795242e-08 -1.15589401e-03 -6.83987272e-03  1.00799577e+00]
  HOMO = -0.830530097732402  LUMO = 0.70014652600879
  mo_energy =
[-3.24655401e+01 -2.10548193e+00 -8.30530098e-01 -8.30530098e-01
 -8.30530098e-01  7.00146526e-01  7.00146526e-01  7.00146526e-01
  1.25665901e+01  1.25665901e+01  1.25665901e+01  1.62018413e+02
  1.66964881e+03  6.46566526e+03]
E1 = -173.5188618356624  E_coul = 49.69685965772794
cycle= 4 E= -123.822002177934  delta_E= -1.14e-09  |g|= 8.12e-06  |ddm|= 2.33e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24734e-05
diis-c [-8.73713846e-12  1.44385061e-05  2.15023906e-06 -2.23221064e-02
  1.02230552e+00]
  HOMO = -0.830523977339662  LUMO = 0.700147963463974
  mo_energy =
[-3.24655289e+01 -2.10547530e+00 -8.30523977e-01 -8.30523977e-01
 -8.30523977e-01  7.00147963e-01  7.00147963e-01  7.00147963e-01
  1.25666005e+01  1.25666005e+01  1.25666005e+01  1.62018426e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885941885055  E_coul = 49.69685724091396
cycle= 5 E= -123.822002177937  delta_E= -2.15e-12  |g|= 5.87e-07  |ddm|= 8.21e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -173.51885941885055  E_coul = 49.69685724091396
  HOMO = -0.830523428785239  LUMO = 0.700148138033966
  mo_energy =
[-3.24655275e+01 -2.10547463e+00 -8.30523429e-01 -8.30523429e-01
 -8.30523429e-01  7.00148138e-01  7.00148138e-01  7.00148138e-01
  1.25666016e+01  1.25666016e+01  1.25666016e+01  1.62018428e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885822074215  E_coul = 49.69685604280555
Extra cycle  E= -123.822002177937  delta_E=    0  |g|= 9.69e-08  |ddm|= 2.02e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 121.42988311434004
E1 = -173.51885822074215  E_coul = 49.69685604280555
init E= -123.822002177937
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.830523507145815  LUMO = 0.700148114466103
  mo_energy =
[-3.24655278e+01 -2.10547473e+00 -8.30523507e-01 -8.30523507e-01
 -8.30523507e-01  7.00148114e-01  7.00148114e-01  7.00148114e-01
  1.25666014e+01  1.25666014e+01  1.25666014e+01  1.62018427e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885846813926  E_coul = 49.696856290202746
cycle= 1 E= -123.822002177937  delta_E= 8.53e-14  |g|= 1.98e-08  |ddm|= 4.57e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -173.51885846813926  E_coul = 49.696856290202746
  HOMO = -0.830523490426125  LUMO = 0.70014811952988
  mo_energy =
[-3.24655278e+01 -2.10547471e+00 -8.30523490e-01 -8.30523490e-01
 -8.30523490e-01  7.00148120e-01  7.00148120e-01  7.00148120e-01
  1.25666015e+01  1.25666015e+01  1.25666015e+01  1.62018427e+02
  1.66964883e+03  6.46566528e+03]
E1 = -173.51885841991245  E_coul = 49.69685624197583
Extra cycle  E= -123.822002177937  delta_E= -9.95e-14  |g|= 3.86e-09  |ddm|= 8.73e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766696e+03 8.39897200e-01 1.29843544e+03 1.96361465e+02
 2.05607207e+01 1.27527547e+01 2.04915713e-01 1.22882590e+00]
grad_E = [ 1.40252203e-05 -9.18646243e-01  1.23529658e-05  3.01113888e-02
 -2.88209942e-01  1.99759064e-01 -4.31605283e-01 -2.86296228e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6674578         1
[INPUT] 0    0    [1    /1   ]  1.08800079463        1
[INPUT] 0    0    [1    /1   ]  1298.43858946        1
[INPUT] 0    0    [1    /1   ]  196.197256222        1
[INPUT] 0    0    [1    /1   ]  28.3074634461        1
[INPUT] 1    0    [1    /1   ]  12.2164230453        1
[INPUT] 1    0    [1    /1   ]  2.79207331597        1
[INPUT] 1    0    [1    /1   ]  1.74007146589        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6674577964943, 1.0]], [0, [1.0880007946292667, 1.0]], [0, [1298.4385894572317, 1.0]], [0, [196.19725622177342, 1.0]], [0, [28.307463446135856, 1.0]], [1, [12.216423045329197, 1.0]], [1, [2.7920733159748012, 1.0]], [1, [1.740071465889843, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6674578]
bas 1, expnt(s) = [1.08800079]
bas 2, expnt(s) = [1298.43858946]
bas 3, expnt(s) = [196.19725622]
bas 4, expnt(s) = [28.30746345]
bas 5, expnt(s) = [12.21642305]
bas 6, expnt(s) = [2.79207332]
bas 7, expnt(s) = [1.74007147]
CPU time:        22.71
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766746e+03 7.40714984e+02 1.08800079e+00 2.69145383e+00
 1.29843859e+03 5.46488572e+02 1.96197256e+02 1.32444742e+02
 2.83074634e+01 3.10056429e+01 1.22164230e+01 6.66291805e+01
 2.79207332e+00 1.05291404e+01 1.74007147e+00 5.83033151e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.288981154806978
cond(S) = 125.73960186089477
E1 = -171.37919342913224  E_coul = 52.996170322480886
init E= -118.383023106651
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.6491540696139  LUMO = 5.43933068194625
  mo_energy =
[-3.09874455e+01 -1.98316664e+00 -6.49154070e-01 -6.49154070e-01
 -6.49154070e-01  5.43933068e+00  5.43933068e+00  5.43933068e+00
  2.25638464e+01  2.25638464e+01  2.25638464e+01  1.90285361e+02
  1.69725703e+03  6.49167218e+03]
E1 = -186.1856050684173  E_coul = 63.7668490386357
cycle= 1 E= -122.418756029782  delta_E= -4.04  |g|=  0.9  |ddm|= 3.79
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.53626
diis-c [-2.36008008  1.        ]
  HOMO = 0.284045958468448  LUMO = 6.47350849429736
  mo_energy =
[-2.91890424e+01 -1.01136646e+00  2.84045958e-01  2.84045958e-01
  2.84045958e-01  6.47350849e+00  6.47350849e+00  6.47350849e+00
  2.40556094e+01  2.40556094e+01  2.40556094e+01  1.92418665e+02
  1.69987687e+03  6.49442877e+03]
E1 = -185.0159432745807  E_coul = 62.55762052886562
cycle= 2 E= -122.458322745715  delta_E= -0.0396  |g|= 0.101  |ddm|= 0.559
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.160593
diis-c [-0.00151388  0.0921089   0.9078911 ]
  HOMO = 0.214929466532614  LUMO = 6.40199103403245
  mo_energy =
[-2.94492087e+01 -1.09070685e+00  2.14929467e-01  2.14929467e-01
  2.14929467e-01  6.40199103e+00  6.40199103e+00  6.40199103e+00
  2.38924258e+01  2.38924258e+01  2.38924258e+01  1.92146716e+02
  1.69959570e+03  6.49414693e+03]
E1 = -185.14009707489538  E_coul = 62.68126564374845
cycle= 3 E= -122.458831431147  delta_E= -0.000509  |g|= 0.00118  |ddm|= 0.0637
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00201993
diis-c [-2.05954818e-07 -1.80979886e-03 -5.23928449e-03  1.00704908e+00]
  HOMO = 0.215672536581738  LUMO = 6.40293909261485
  mo_energy =
[-2.94466304e+01 -1.08982475e+00  2.15672537e-01  2.15672537e-01
  2.15672537e-01  6.40293909e+00  6.40293909e+00  6.40293909e+00
  2.38942100e+01  2.38942100e+01  2.38942100e+01  1.92149564e+02
  1.69959954e+03  6.49415110e+03]
E1 = -185.1390814285696  E_coul = 62.680249950959755
cycle= 4 E= -122.45883147761  delta_E= -4.65e-08  |g|= 2.87e-05  |ddm|= 0.000371
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.90778e-05
diis-c [-5.64010056e-12  1.14919687e-05  2.11883390e-04 -1.73011315e-02
  1.01707776e+00]
  HOMO = 0.215692069288835  LUMO = 6.40295598473753
  mo_energy =
[-2.94465779e+01 -1.08980465e+00  2.15692069e-01  2.15692069e-01
  2.15692069e-01  6.40295598e+00  6.40295598e+00  6.40295598e+00
  2.38942471e+01  2.38942471e+01  2.38942471e+01  1.92149618e+02
  1.69959959e+03  6.49415115e+03]
E1 = -185.13905532931125  E_coul = 62.680223851672466
cycle= 5 E= -122.458831477639  delta_E= -2.89e-11  |g|= 4.64e-07  |ddm|= 9.75e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -185.13905532931125  E_coul = 62.680223851672466
  HOMO = 0.215692420165899  LUMO = 6.40295637085923
  mo_energy =
[-2.94465768e+01 -1.08980426e+00  2.15692420e-01  2.15692420e-01
  2.15692420e-01  6.40295637e+00  6.40295637e+00  6.40295637e+00
  2.38942479e+01  2.38942479e+01  2.38942479e+01  1.92149619e+02
  1.69959960e+03  6.49415116e+03]
E1 = -185.13905484880678  E_coul = 62.68022337116797
Extra cycle  E= -122.458831477639  delta_E= -2.84e-14  |g|= 4.03e-08  |ddm|= 1.87e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766746e+03 1.08800079e+00 1.29843859e+03 1.96197256e+02
 2.83074634e+01 1.22164230e+01 2.79207332e+00 1.74007147e+00]
E = -122.45883147763881
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6671589         1
[INPUT] 0    0    [1    /1   ]  0.937997581659       1
[INPUT] 0    0    [1    /1   ]  1298.43668633        1
[INPUT] 0    0    [1    /1   ]  196.296536658        1
[INPUT] 0    0    [1    /1   ]  23.6237896385        1
[INPUT] 1    0    [1    /1   ]  12.5406886598        1
[INPUT] 1    0    [1    /1   ]  1.2278801277         1
[INPUT] 1    0    [1    /1   ]  1.4309728527         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671589030636, 1.0]], [0, [0.9379975816593314, 1.0]], [0, [1298.436686330869, 1.0]], [0, [196.2965366578624, 1.0]], [0, [23.623789638488716, 1.0]], [1, [12.540688659825125, 1.0]], [1, [1.2278801276958238, 1.0]], [1, [1.4309728526994132, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6671589]
bas 1, expnt(s) = [0.93799758]
bas 2, expnt(s) = [1298.43668633]
bas 3, expnt(s) = [196.29653666]
bas 4, expnt(s) = [23.62378964]
bas 5, expnt(s) = [12.54068866]
bas 6, expnt(s) = [1.22788013]
bas 7, expnt(s) = [1.43097285]
CPU time:        22.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766716e+03 7.40714899e+02 9.37997582e-01 2.40805451e+00
 1.29843669e+03 5.46487972e+02 1.96296537e+02 1.32495004e+02
 2.36237896e+01 2.70724275e+01 1.25406887e+01 6.88471751e+01
 1.22788013e+00 3.77076403e+00 1.43097285e+00 4.56587099e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.594763063136787
cond(S) = 384.2199895108498
E1 = -174.29952926199417  E_coul = 52.62780447431992
init E= -121.671724787674
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.68108745952095  LUMO = 2.95852844962929
  mo_energy =
[-3.15799794e+01 -2.03090032e+00 -6.81087460e-01 -6.81087460e-01
 -6.81087460e-01  2.95852845e+00  2.95852845e+00  2.95852845e+00
  1.65834491e+01  1.65834491e+01  1.65834491e+01  1.74041426e+02
  1.68135392e+03  6.47677165e+03]
E1 = -180.92592985921684  E_coul = 57.05262718209457
cycle= 1 E= -123.873302677122  delta_E= -2.2  |g|= 0.348  |ddm|= 5.98
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.660394
diis-c [-0.43612075  1.        ]
  HOMO = -0.250358325600241  LUMO = 3.36600737824972
  mo_energy =
[-3.10880873e+01 -1.57421389e+00 -2.50358326e-01 -2.50358326e-01
 -2.50358326e-01  3.36600738e+00  3.36600738e+00  3.36600738e+00
  1.71864510e+01  1.71864510e+01  1.71864510e+01  1.74579388e+02
  1.68187110e+03  6.47729129e+03]
E1 = -180.46934292034936  E_coul = 56.59076265777299
cycle= 2 E= -123.878580262576  delta_E= -0.00528  |g|= 0.0404  |ddm|= 0.371
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0698504
diis-c [-4.83881959e-04  9.12764716e-02  9.08723528e-01]
  HOMO = -0.275690746829037  LUMO = 3.34766432533308
  mo_energy =
[-3.11916229e+01 -1.60421902e+00 -2.75690747e-01 -2.75690747e-01
 -2.75690747e-01  3.34766433e+00  3.34766433e+00  3.34766433e+00
  1.71193299e+01  1.71193299e+01  1.71193299e+01  1.74470456e+02
  1.68175798e+03  6.47717800e+03]
E1 = -180.5324014982155  E_coul = 56.653720096730545
cycle= 3 E= -123.878681401485  delta_E= -0.000101  |g|= 0.00194  |ddm|= 0.0638
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00363975
diis-c [-1.61015045e-08 -4.08909180e-03  1.35483372e-02  9.90540755e-01]
  HOMO = -0.274411758159836  LUMO = 3.34859531918464
  mo_energy =
[-3.11877186e+01 -1.60276774e+00 -2.74411758e-01 -2.74411758e-01
 -2.74411758e-01  3.34859532e+00  3.34859532e+00  3.34859532e+00
  1.71222194e+01  1.71222194e+01  1.71222194e+01  1.74474561e+02
  1.68176264e+03  6.47718283e+03]
E1 = -180.53046380224717  E_coul = 56.651782252174016
cycle= 4 E= -123.878681550073  delta_E= -1.49e-07  |g|= 5.17e-05  |ddm|= 0.00129
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.646e-05
diis-c [-1.70765659e-12  3.00670014e-05  2.97084584e-04 -2.70632264e-02
  1.02673607e+00]
  HOMO = -0.274377341804541  LUMO = 3.34861918293752
  mo_energy =
[-3.11876176e+01 -1.60272929e+00 -2.74377342e-01 -2.74377342e-01
 -2.74377342e-01  3.34861918e+00  3.34861918e+00  3.34861918e+00
  1.71222947e+01  1.71222947e+01  1.71222947e+01  1.74474665e+02
  1.68176274e+03  6.47718294e+03]
E1 = -180.5304115667308  E_coul = 56.651730016553714
cycle= 5 E= -123.878681550177  delta_E= -1.04e-10  |g|= 5.89e-07  |ddm|= 3.49e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.5304115667308  E_coul = 56.651730016553714
  HOMO = -0.274376903284564  LUMO = 3.34861950169648
  mo_energy =
[-3.11876163e+01 -1.60272879e+00 -2.74376903e-01 -2.74376903e-01
 -2.74376903e-01  3.34861950e+00  3.34861950e+00  3.34861950e+00
  1.71222957e+01  1.71222957e+01  1.71222957e+01  1.74474666e+02
  1.68176275e+03  6.47718294e+03]
E1 = -180.5304108809361  E_coul = 56.651729330758975
Extra cycle  E= -123.878681550177  delta_E= -4.26e-14  |g|= 6e-08  |ddm|= 4.84e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766716e+03 9.37997582e-01 1.29843669e+03 1.96296537e+02
 2.36237896e+01 1.25406887e+01 1.22788013e+00 1.43097285e+00]
E = -123.87868155017713
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66706396        1
[INPUT] 0    0    [1    /1   ]  0.890350917441       1
[INPUT] 0    0    [1    /1   ]  1298.43608183        1
[INPUT] 0    0    [1    /1   ]  196.32807186         1
[INPUT] 0    0    [1    /1   ]  22.1360786168        1
[INPUT] 1    0    [1    /1   ]  12.6436876193        1
[INPUT] 1    0    [1    /1   ]  0.731033519288       1
[INPUT] 1    0    [1    /1   ]  1.3327915035         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670639632644, 1.0]], [0, [0.890350917441123, 1.0]], [0, [1298.4360818263322, 1.0]], [0, [196.32807185972982, 1.0]], [0, [22.13607861682341, 1.0]], [1, [12.643687619284048, 1.0]], [1, [0.731033519288344, 1.0]], [1, [1.332791503504246, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66706396]
bas 1, expnt(s) = [0.89035092]
bas 2, expnt(s) = [1298.43608183]
bas 3, expnt(s) = [196.32807186]
bas 4, expnt(s) = [22.13607862]
bas 5, expnt(s) = [12.64368762]
bas 6, expnt(s) = [0.73103352]
bas 7, expnt(s) = [1.3327915]
CPU time:        23.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766706e+03 7.40714872e+02 8.90350917e-01 2.31571939e+00
 1.29843608e+03 5.46487781e+02 1.96328072e+02 1.32510968e+02
 2.21360786e+01 2.57834210e+01 1.26436876e+01 6.95547172e+01
 7.31033519e-01 1.97199589e+00 1.33279150e+00 4.17769915e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.719323003562458
cond(S) = 122.27867759552802
E1 = -173.54533313854103  E_coul = 52.25865645638922
init E= -121.286676682152
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.720588705535835  LUMO = 2.04457353995776
  mo_energy =
[-3.16584334e+01 -2.03194149e+00 -7.20588706e-01 -7.20588706e-01
 -7.20588706e-01  2.04457354e+00  2.04457354e+00  2.04457354e+00
  1.46765282e+01  1.46765282e+01  1.46765282e+01  1.68711453e+02
  1.67633348e+03  6.47208504e+03]
E1 = -177.29339348694953  E_coul = 53.338151854881716
cycle= 1 E= -123.955241632068  delta_E= -2.67  |g|= 0.149  |ddm|= 0.918
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.18808
diis-c [-0.03537402  1.        ]
  HOMO = -0.53058596326994  LUMO = 2.22979189077452
  mo_energy =
[-3.18741926e+01 -1.84285634e+00 -5.30585963e-01 -5.30585963e-01
 -5.30585963e-01  2.22979189e+00  2.22979189e+00  2.22979189e+00
  1.47718934e+01  1.47718934e+01  1.47718934e+01  1.68442628e+02
  1.67584700e+03  6.47155383e+03]
E1 = -177.35825533748184  E_coul = 53.402463668983984
cycle= 2 E= -123.955791668498  delta_E= -0.00055  |g|= 0.00805  |ddm|= 0.0543
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0133918
diis-c [-7.80348346e-05 -5.66065955e-02  1.05660660e+00]
  HOMO = -0.524904230349015  LUMO = 2.23298204545521
  mo_energy =
[-3.18635938e+01 -1.83653911e+00 -5.24904230e-01 -5.24904230e-01
 -5.24904230e-01  2.23298205e+00  2.23298205e+00  2.23298205e+00
  1.47823452e+01  1.47823452e+01  1.47823452e+01  1.68453008e+02
  1.67585828e+03  6.47156561e+03]
E1 = -177.3561160865766  E_coul = 53.40032232888527
cycle= 3 E= -123.955793757691  delta_E= -2.09e-06  |g|= 0.000497  |ddm|= 0.00151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879686
diis-c [-7.86235261e-08 -2.07834098e-03  7.74563663e-02  9.24621975e-01]
  HOMO = -0.525240807821365  LUMO = 2.23278692580276
  mo_energy =
[-3.18649130e+01 -1.83695279e+00 -5.25240808e-01 -5.25240808e-01
 -5.25240808e-01  2.23278693e+00  2.23278693e+00  2.23278693e+00
  1.47814302e+01  1.47814302e+01  1.47814302e+01  1.68451621e+02
  1.67585681e+03  6.47156412e+03]
E1 = -177.3569247255558  E_coul = 53.4011309528252
cycle= 4 E= -123.955793772731  delta_E= -1.5e-08  |g|= 4.67e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.60495e-05
diis-c [-7.58922469e-13  4.27970366e-05 -3.53318754e-03  4.83417500e-02
  9.55148641e-01]
  HOMO = -0.525208106052353  LUMO = 2.23280547559371
  mo_energy =
[-3.18648159e+01 -1.83691445e+00 -5.25208106e-01 -5.25208106e-01
 -5.25208106e-01  2.23280548e+00  2.23280548e+00  2.23280548e+00
  1.47815057e+01  1.47815057e+01  1.47815057e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.35687748868693  E_coul = 53.401083715869284
cycle= 5 E= -123.955793772818  delta_E= -8.7e-11  |g|= 6.84e-08  |ddm|= 1.04e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -177.35687748868693  E_coul = 53.401083715869284
  HOMO = -0.525208158332335  LUMO = 2.23280544662403
  mo_energy =
[-3.18648160e+01 -1.83691451e+00 -5.25208158e-01 -5.25208158e-01
 -5.25208158e-01  2.23280545e+00  2.23280545e+00  2.23280545e+00
  1.47815056e+01  1.47815056e+01  1.47815056e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.35687756243217  E_coul = 53.401083789614624
Extra cycle  E= -123.955793772818  delta_E= 1.14e-13  |g|= 6.42e-09  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766706e+03 8.90350917e-01 1.29843608e+03 1.96328072e+02
 2.21360786e+01 1.26436876e+01 7.31033519e-01 1.33279150e+00]
E = -123.95579377281754
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66706396        1
[INPUT] 0    0    [1    /1   ]  0.890350917441       1
[INPUT] 0    0    [1    /1   ]  1298.43608183        1
[INPUT] 0    0    [1    /1   ]  196.32807186         1
[INPUT] 0    0    [1    /1   ]  22.1360786168        1
[INPUT] 1    0    [1    /1   ]  12.6436876193        1
[INPUT] 1    0    [1    /1   ]  0.731033519288       1
[INPUT] 1    0    [1    /1   ]  1.3327915035         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670639632644, 1.0]], [0, [0.890350917441123, 1.0]], [0, [1298.4360818263322, 1.0]], [0, [196.32807185972982, 1.0]], [0, [22.13607861682341, 1.0]], [1, [12.643687619284048, 1.0]], [1, [0.731033519288344, 1.0]], [1, [1.332791503504246, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66706396]
bas 1, expnt(s) = [0.89035092]
bas 2, expnt(s) = [1298.43608183]
bas 3, expnt(s) = [196.32807186]
bas 4, expnt(s) = [22.13607862]
bas 5, expnt(s) = [12.64368762]
bas 6, expnt(s) = [0.73103352]
bas 7, expnt(s) = [1.3327915]
CPU time:        23.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766706e+03 7.40714872e+02 8.90350917e-01 2.31571939e+00
 1.29843608e+03 5.46487781e+02 1.96328072e+02 1.32510968e+02
 2.21360786e+01 2.57834210e+01 1.26436876e+01 6.95547172e+01
 7.31033519e-01 1.97199589e+00 1.33279150e+00 4.17769915e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.719323003562458
cond(S) = 122.27867759552802
E1 = -173.54533313854103  E_coul = 52.25865645638922
init E= -121.286676682152
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.720588705535835  LUMO = 2.04457353995776
  mo_energy =
[-3.16584334e+01 -2.03194149e+00 -7.20588706e-01 -7.20588706e-01
 -7.20588706e-01  2.04457354e+00  2.04457354e+00  2.04457354e+00
  1.46765282e+01  1.46765282e+01  1.46765282e+01  1.68711453e+02
  1.67633348e+03  6.47208504e+03]
E1 = -177.29339348694953  E_coul = 53.338151854881716
cycle= 1 E= -123.955241632068  delta_E= -2.67  |g|= 0.149  |ddm|= 0.918
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.18808
diis-c [-0.03537402  1.        ]
  HOMO = -0.53058596326994  LUMO = 2.22979189077452
  mo_energy =
[-3.18741926e+01 -1.84285634e+00 -5.30585963e-01 -5.30585963e-01
 -5.30585963e-01  2.22979189e+00  2.22979189e+00  2.22979189e+00
  1.47718934e+01  1.47718934e+01  1.47718934e+01  1.68442628e+02
  1.67584700e+03  6.47155383e+03]
E1 = -177.35825533748184  E_coul = 53.402463668983984
cycle= 2 E= -123.955791668498  delta_E= -0.00055  |g|= 0.00805  |ddm|= 0.0543
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0133918
diis-c [-7.80348346e-05 -5.66065955e-02  1.05660660e+00]
  HOMO = -0.524904230349015  LUMO = 2.23298204545521
  mo_energy =
[-3.18635938e+01 -1.83653911e+00 -5.24904230e-01 -5.24904230e-01
 -5.24904230e-01  2.23298205e+00  2.23298205e+00  2.23298205e+00
  1.47823452e+01  1.47823452e+01  1.47823452e+01  1.68453008e+02
  1.67585828e+03  6.47156561e+03]
E1 = -177.3561160865766  E_coul = 53.40032232888527
cycle= 3 E= -123.955793757691  delta_E= -2.09e-06  |g|= 0.000497  |ddm|= 0.00151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879686
diis-c [-7.86235261e-08 -2.07834098e-03  7.74563663e-02  9.24621975e-01]
  HOMO = -0.525240807821365  LUMO = 2.23278692580276
  mo_energy =
[-3.18649130e+01 -1.83695279e+00 -5.25240808e-01 -5.25240808e-01
 -5.25240808e-01  2.23278693e+00  2.23278693e+00  2.23278693e+00
  1.47814302e+01  1.47814302e+01  1.47814302e+01  1.68451621e+02
  1.67585681e+03  6.47156412e+03]
E1 = -177.3569247255558  E_coul = 53.4011309528252
cycle= 4 E= -123.955793772731  delta_E= -1.5e-08  |g|= 4.67e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.60495e-05
diis-c [-7.58922469e-13  4.27970366e-05 -3.53318754e-03  4.83417500e-02
  9.55148641e-01]
  HOMO = -0.525208106052353  LUMO = 2.23280547559371
  mo_energy =
[-3.18648159e+01 -1.83691445e+00 -5.25208106e-01 -5.25208106e-01
 -5.25208106e-01  2.23280548e+00  2.23280548e+00  2.23280548e+00
  1.47815057e+01  1.47815057e+01  1.47815057e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.35687748868693  E_coul = 53.401083715869284
cycle= 5 E= -123.955793772818  delta_E= -8.7e-11  |g|= 6.84e-08  |ddm|= 1.04e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -177.35687748868693  E_coul = 53.401083715869284
  HOMO = -0.525208158332335  LUMO = 2.23280544662403
  mo_energy =
[-3.18648160e+01 -1.83691451e+00 -5.25208158e-01 -5.25208158e-01
 -5.25208158e-01  2.23280545e+00  2.23280545e+00  2.23280545e+00
  1.47815056e+01  1.47815056e+01  1.47815056e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.35687756243217  E_coul = 53.401083789614624
Extra cycle  E= -123.955793772818  delta_E= 1.14e-13  |g|= 6.42e-09  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.27867759552802
E1 = -177.35687756243217  E_coul = 53.401083789614624
init E= -123.955793772818
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.525208154143673  LUMO = 2.23280544906444
  mo_energy =
[-3.18648160e+01 -1.83691450e+00 -5.25208154e-01 -5.25208154e-01
 -5.25208154e-01  2.23280545e+00  2.23280545e+00  2.23280545e+00
  1.47815056e+01  1.47815056e+01  1.47815056e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.3568775498801  E_coul = 53.40108377706237
cycle= 1 E= -123.955793772818  delta_E= -1.85e-13  |g|= 1.08e-09  |ddm|= 4.53e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -177.3568775498801  E_coul = 53.40108377706237
  HOMO = -0.525208154939125  LUMO = 2.23280544860724
  mo_energy =
[-3.18648160e+01 -1.83691450e+00 -5.25208155e-01 -5.25208155e-01
 -5.25208155e-01  2.23280545e+00  2.23280545e+00  2.23280545e+00
  1.47815056e+01  1.47815056e+01  1.47815056e+01  1.68451722e+02
  1.67585692e+03  6.47156423e+03]
E1 = -177.35687755158946  E_coul = 53.4010837787718
Extra cycle  E= -123.955793772818  delta_E= 7.11e-14  |g|= 1.46e-10  |ddm|= 5.26e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766706e+03 8.90350917e-01 1.29843608e+03 1.96328072e+02
 2.21360786e+01 1.26436876e+01 7.31033519e-01 1.33279150e+00]
grad_E = [ 3.99390201e-06 -5.15962833e-01  2.83958153e-06  2.45178601e-02
 -1.20570653e-01  1.98377150e-01  9.87502391e-01 -2.12423816e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66710451        1
[INPUT] 0    0    [1    /1   ]  0.990846365103       1
[INPUT] 0    0    [1    /1   ]  1298.43641399        1
[INPUT] 0    0    [1    /1   ]  196.278087286        1
[INPUT] 0    0    [1    /1   ]  23.2438317525        1
[INPUT] 1    0    [1    /1   ]  12.338404416         1
[INPUT] 1    0    [1    /1   ]  0.431724902535       1
[INPUT] 1    0    [1    /1   ]  1.51907662801        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671045135934, 1.0]], [0, [0.9908463651033979, 1.0]], [0, [1298.436413989365, 1.0]], [0, [196.2780872859861, 1.0]], [0, [23.24383175254431, 1.0]], [1, [12.338404415971445, 1.0]], [1, [0.4317249025352015, 1.0]], [1, [1.519076628007007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66710451]
bas 1, expnt(s) = [0.99084637]
bas 2, expnt(s) = [1298.43641399]
bas 3, expnt(s) = [196.27808729]
bas 4, expnt(s) = [23.24383175]
bas 5, expnt(s) = [12.33840442]
bas 6, expnt(s) = [0.4317249]
bas 7, expnt(s) = [1.51907663]
CPU time:        26.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766710e+03 7.40714883e+02 9.90846365e-01 2.50911037e+00
 1.29843641e+03 5.46487886e+02 1.96278087e+02 1.32485664e+02
 2.32438318e+01 2.67451980e+01 1.23384044e+01 6.74618340e+01
 4.31724903e-01 1.02092366e+00 1.51907663e+00 4.91993081e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.874819977518289
cond(S) = 122.92266375613895
E1 = -177.26266279773517  E_coul = 53.94916180954208
init E= -123.313500988193
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.727731589710474  LUMO = 1.50867273216705
  mo_energy =
[-3.14301437e+01 -1.88185129e+00 -7.27731590e-01 -7.27731590e-01
 -7.27731590e-01  1.50867273e+00  1.50867273e+00  1.50867273e+00
  1.43240377e+01  1.43240377e+01  1.43240377e+01  1.73037590e+02
  1.68029465e+03  6.47577044e+03]
E1 = -177.5830006699975  E_coul = 52.64807517460941
cycle= 1 E= -124.934925495388  delta_E= -1.62  |g|= 0.139  |ddm|= 0.33
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195228
diis-c [-0.03811407  1.        ]
  HOMO = -0.74509294648775  LUMO = 1.53158859165438
  mo_energy =
[-3.19586659e+01 -1.95070510e+00 -7.45092946e-01 -7.45092946e-01
 -7.45092946e-01  1.53158859e+00  1.53158859e+00  1.53158859e+00
  1.40852916e+01  1.40852916e+01  1.40852916e+01  1.72523083e+02
  1.67971577e+03  6.47518490e+03]
E1 = -177.97614462920512  E_coul = 53.03926551329374
cycle= 2 E= -124.936879115911  delta_E= -0.00195  |g|= 0.0351  |ddm|= 0.078
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.061518
diis-c [-6.11212454e-04  2.25337094e-01  7.74662906e-01]
  HOMO = -0.724579194144322  LUMO = 1.54233804710297
  mo_energy =
[-3.18946780e+01 -1.92455583e+00 -7.24579194e-01 -7.24579194e-01
 -7.24579194e-01  1.54233805e+00  1.54233805e+00  1.54233805e+00
  1.41340302e+01  1.41340302e+01  1.41340302e+01  1.72589233e+02
  1.67978470e+03  6.47525438e+03]
E1 = -177.91176748905812  E_coul = 52.974796231649144
cycle= 3 E= -124.936971257409  delta_E= -9.21e-05  |g|= 0.00228  |ddm|= 0.011
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0040249
diis-c [-1.35903473e-07 -7.13489667e-03 -8.99364447e-02  1.09707134e+00]
  HOMO = -0.722984314195417  LUMO = 1.54319427523408
  mo_energy =
[-3.18912425e+01 -1.92262378e+00 -7.22984314e-01 -7.22984314e-01
 -7.22984314e-01  1.54319428e+00  1.54319428e+00  1.54319428e+00
  1.41371726e+01  1.41371726e+01  1.41371726e+01  1.72592656e+02
  1.67978827e+03  6.47525801e+03]
E1 = -177.90836770955625  E_coul = 52.97139617283321
cycle= 4 E= -124.936971536723  delta_E= -2.79e-07  |g|= 6.79e-06  |ddm|= 0.000502
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1006e-05
diis-c [-2.82394737e-12  5.58856339e-05  8.42576125e-04 -1.31655443e-02
  1.01226708e+00]
  HOMO = -0.722980003025122  LUMO = 1.54319533854825
  mo_energy =
[-3.18912313e+01 -1.92261923e+00 -7.22980003e-01 -7.22980003e-01
 -7.22980003e-01  1.54319534e+00  1.54319534e+00  1.54319534e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.90836235086104  E_coul = 52.971390814136804
cycle= 5 E= -124.936971536724  delta_E= -1.19e-12  |g|= 3.62e-08  |ddm|= 6.33e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -177.90836235086104  E_coul = 52.971390814136804
  HOMO = -0.722979982800235  LUMO = 1.54319535874753
  mo_energy =
[-3.18912312e+01 -1.92261919e+00 -7.22979983e-01 -7.22979983e-01
 -7.22979983e-01  1.54319536e+00  1.54319536e+00  1.54319536e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.9083622462342  E_coul = 52.971390709509784
Extra cycle  E= -124.936971536724  delta_E= -1.71e-13  |g|= 9.32e-09  |ddm|= 1.98e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766710e+03 9.90846365e-01 1.29843641e+03 1.96278087e+02
 2.32438318e+01 1.23384044e+01 4.31724903e-01 1.51907663e+00]
E = -124.9369715367244
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66710451        1
[INPUT] 0    0    [1    /1   ]  0.990846365103       1
[INPUT] 0    0    [1    /1   ]  1298.43641399        1
[INPUT] 0    0    [1    /1   ]  196.278087286        1
[INPUT] 0    0    [1    /1   ]  23.2438317525        1
[INPUT] 1    0    [1    /1   ]  12.338404416         1
[INPUT] 1    0    [1    /1   ]  0.431724902535       1
[INPUT] 1    0    [1    /1   ]  1.51907662801        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671045135934, 1.0]], [0, [0.9908463651033979, 1.0]], [0, [1298.436413989365, 1.0]], [0, [196.2780872859861, 1.0]], [0, [23.24383175254431, 1.0]], [1, [12.338404415971445, 1.0]], [1, [0.4317249025352015, 1.0]], [1, [1.519076628007007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66710451]
bas 1, expnt(s) = [0.99084637]
bas 2, expnt(s) = [1298.43641399]
bas 3, expnt(s) = [196.27808729]
bas 4, expnt(s) = [23.24383175]
bas 5, expnt(s) = [12.33840442]
bas 6, expnt(s) = [0.4317249]
bas 7, expnt(s) = [1.51907663]
CPU time:        26.21
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766710e+03 7.40714883e+02 9.90846365e-01 2.50911037e+00
 1.29843641e+03 5.46487886e+02 1.96278087e+02 1.32485664e+02
 2.32438318e+01 2.67451980e+01 1.23384044e+01 6.74618340e+01
 4.31724903e-01 1.02092366e+00 1.51907663e+00 4.91993081e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.874819977518289
cond(S) = 122.92266375613895
E1 = -177.26266279773517  E_coul = 53.94916180954208
init E= -123.313500988193
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.727731589710474  LUMO = 1.50867273216705
  mo_energy =
[-3.14301437e+01 -1.88185129e+00 -7.27731590e-01 -7.27731590e-01
 -7.27731590e-01  1.50867273e+00  1.50867273e+00  1.50867273e+00
  1.43240377e+01  1.43240377e+01  1.43240377e+01  1.73037590e+02
  1.68029465e+03  6.47577044e+03]
E1 = -177.5830006699975  E_coul = 52.64807517460941
cycle= 1 E= -124.934925495388  delta_E= -1.62  |g|= 0.139  |ddm|= 0.33
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195228
diis-c [-0.03811407  1.        ]
  HOMO = -0.74509294648775  LUMO = 1.53158859165438
  mo_energy =
[-3.19586659e+01 -1.95070510e+00 -7.45092946e-01 -7.45092946e-01
 -7.45092946e-01  1.53158859e+00  1.53158859e+00  1.53158859e+00
  1.40852916e+01  1.40852916e+01  1.40852916e+01  1.72523083e+02
  1.67971577e+03  6.47518490e+03]
E1 = -177.97614462920512  E_coul = 53.03926551329374
cycle= 2 E= -124.936879115911  delta_E= -0.00195  |g|= 0.0351  |ddm|= 0.078
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.061518
diis-c [-6.11212454e-04  2.25337094e-01  7.74662906e-01]
  HOMO = -0.724579194144322  LUMO = 1.54233804710297
  mo_energy =
[-3.18946780e+01 -1.92455583e+00 -7.24579194e-01 -7.24579194e-01
 -7.24579194e-01  1.54233805e+00  1.54233805e+00  1.54233805e+00
  1.41340302e+01  1.41340302e+01  1.41340302e+01  1.72589233e+02
  1.67978470e+03  6.47525438e+03]
E1 = -177.91176748905812  E_coul = 52.974796231649144
cycle= 3 E= -124.936971257409  delta_E= -9.21e-05  |g|= 0.00228  |ddm|= 0.011
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0040249
diis-c [-1.35903473e-07 -7.13489667e-03 -8.99364447e-02  1.09707134e+00]
  HOMO = -0.722984314195417  LUMO = 1.54319427523408
  mo_energy =
[-3.18912425e+01 -1.92262378e+00 -7.22984314e-01 -7.22984314e-01
 -7.22984314e-01  1.54319428e+00  1.54319428e+00  1.54319428e+00
  1.41371726e+01  1.41371726e+01  1.41371726e+01  1.72592656e+02
  1.67978827e+03  6.47525801e+03]
E1 = -177.90836770955625  E_coul = 52.97139617283321
cycle= 4 E= -124.936971536723  delta_E= -2.79e-07  |g|= 6.79e-06  |ddm|= 0.000502
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1006e-05
diis-c [-2.82394737e-12  5.58856339e-05  8.42576125e-04 -1.31655443e-02
  1.01226708e+00]
  HOMO = -0.722980003025122  LUMO = 1.54319533854825
  mo_energy =
[-3.18912313e+01 -1.92261923e+00 -7.22980003e-01 -7.22980003e-01
 -7.22980003e-01  1.54319534e+00  1.54319534e+00  1.54319534e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.90836235086104  E_coul = 52.971390814136804
cycle= 5 E= -124.936971536724  delta_E= -1.19e-12  |g|= 3.62e-08  |ddm|= 6.33e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -177.90836235086104  E_coul = 52.971390814136804
  HOMO = -0.722979982800235  LUMO = 1.54319535874753
  mo_energy =
[-3.18912312e+01 -1.92261919e+00 -7.22979983e-01 -7.22979983e-01
 -7.22979983e-01  1.54319536e+00  1.54319536e+00  1.54319536e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.9083622462342  E_coul = 52.971390709509784
Extra cycle  E= -124.936971536724  delta_E= -1.71e-13  |g|= 9.32e-09  |ddm|= 1.98e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.92266375613895
E1 = -177.9083622462342  E_coul = 52.971390709509784
init E= -124.936971536724
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.722979989762387  LUMO = 1.5431953551241
  mo_energy =
[-3.18912312e+01 -1.92261920e+00 -7.22979990e-01 -7.22979990e-01
 -7.22979990e-01  1.54319536e+00  1.54319536e+00  1.54319536e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.90836226894476  E_coul = 52.971390732220364
cycle= 1 E= -124.936971536724  delta_E=    0  |g|= 2.02e-09  |ddm|= 3.92e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -177.90836226894476  E_coul = 52.971390732220364
  HOMO = -0.722979988293298  LUMO = 1.54319535588941
  mo_energy =
[-3.18912312e+01 -1.92261920e+00 -7.22979988e-01 -7.22979988e-01
 -7.22979988e-01  1.54319536e+00  1.54319536e+00  1.54319536e+00
  1.41371809e+01  1.41371809e+01  1.41371809e+01  1.72592670e+02
  1.67978829e+03  6.47525803e+03]
E1 = -177.90836226382984  E_coul = 52.971390727105565
Extra cycle  E= -124.936971536724  delta_E= 1.14e-13  |g|= 4.55e-10  |ddm|= 8.98e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766710e+03 9.90846365e-01 1.29843641e+03 1.96278087e+02
 2.32438318e+01 1.23384044e+01 4.31724903e-01 1.51907663e+00]
grad_E = [-1.81260707e-06 -1.45785545e-01 -5.95993590e-07  2.08955373e-02
 -2.26973436e-02  1.49753601e-01  1.25432816e+00 -1.92970064e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66711409        1
[INPUT] 0    0    [1    /1   ]  0.983735383883       1
[INPUT] 0    0    [1    /1   ]  1298.43660669        1
[INPUT] 0    0    [1    /1   ]  196.178093831        1
[INPUT] 0    0    [1    /1   ]  24.3072688456        1
[INPUT] 1    0    [1    /1   ]  11.6703319395        1
[INPUT] 1    0    [1    /1   ]  1.00000002723e-09      1
[INPUT] 1    0    [1    /1   ]  2.0816645634         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671140921867, 1.0]], [0, [0.983735383882887, 1.0]], [0, [1298.4366066879572, 1.0]], [0, [196.17809383063195, 1.0]], [0, [24.30726884557787, 1.0]], [1, [11.670331939467639, 1.0]], [1, [1.0000000272292198e-09, 1.0]], [1, [2.0816645633999573, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66711409]
bas 1, expnt(s) = [0.98373538]
bas 2, expnt(s) = [1298.43660669]
bas 3, expnt(s) = [196.17809383]
bas 4, expnt(s) = [24.30726885]
bas 5, expnt(s) = [11.67033194]
bas 6, expnt(s) = [1.00000003e-09]
bas 7, expnt(s) = [2.08166456]
CPU time:        28.84
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766711e+03 7.40714886e+02 9.83735384e-01 2.49559291e+00
 1.29843661e+03 5.46487947e+02 1.96178094e+02 1.32435040e+02
 2.43072688e+01 2.76577692e+01 1.16703319e+01 6.29271994e+01
 1.00000003e-09 1.64053087e-11 2.08166456e+00 7.29453864e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 8.964431898658031
cond(S) = 123.45281084322359
E1 = -173.49127512484657  E_coul = 52.42632466510262
init E= -121.064950459744
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.558137461241804  LUMO = -0.000336415174185464
  mo_energy =
[-3.15157481e+01 -2.10382828e+00 -5.58137461e-01 -5.58137461e-01
 -5.58137461e-01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.46333420e+01  1.46333420e+01  1.46333420e+01  1.76405188e+02
  1.68331000e+03  6.47851410e+03]
E1 = -188.47467571819672  E_coul = 66.1866623453383
cycle= 1 E= -122.288013372858  delta_E= -1.22  |g|= 0.86  |ddm|= 0.463
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.08365
diis-c [-1.1742907  1.       ]
  HOMO = -0.000336415174182615  LUMO = 0.672672655526963
  mo_energy =
[-2.91864791e+01 -8.92851262e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  6.72672656e-01  6.72672656e-01  6.72672656e-01
  1.65090943e+01  1.65090943e+01  1.65090943e+01  1.78917568e+02
  1.68596949e+03  6.48120594e+03]
E1 = -120.33218688073782  E_coul = 13.18094169448027
cycle= 2 E= -107.151245186258  delta_E= 15.1  |g|= 0.754  |ddm|= 4.55
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.828578
diis-c [-0.32693425  0.39447148  0.60552852]
  HOMO = -3.2108211719816  LUMO = -0.000336415174184701
  mo_energy =
[-3.55277087e+01 -4.78823701e+00 -3.21082117e+00 -3.21082117e+00
 -3.21082117e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.10283237e+01  1.10283237e+01  1.10283237e+01  1.72485870e+02
  1.67945369e+03  6.47468247e+03]
E1 = -189.4036738062406  E_coul = 67.2871850507466
cycle= 3 E= -122.116488755494  delta_E=  -15  |g|= 2.57  |ddm|=  4.5
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.25619
diis-c [-0.02089489  1.23172191  0.16528889 -0.3970108 ]
  HOMO = -0.408112897196692  LUMO = -0.000336415174182793
  mo_energy =
[-3.10303620e+01 -1.98123901e+00 -4.08112897e-01 -4.08112897e-01
 -4.08112897e-01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.49466586e+01  1.49466586e+01  1.49466586e+01  1.77039054e+02
  1.68405989e+03  6.47929343e+03]
E1 = -188.36706527061176  E_coul = 66.07098178204546
cycle= 4 E= -122.296083488566  delta_E= -0.18  |g|= 0.653  |ddm|= 0.197
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.826055
diis-c [-6.34984689e-07 -5.41861998e-02  1.32051342e-02 -3.29078360e-01
  1.37005943e+00]
  HOMO = -0.000336415174181144  LUMO = 0.557389009430611
  mo_energy =
[-2.94609966e+01 -1.00693036e+00 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  5.57389009e-01  5.57389009e-01  5.57389009e-01
  1.63161765e+01  1.63161765e+01  1.63161765e+01  1.78628875e+02
  1.68566459e+03  6.48089826e+03]
E1 = -120.33292412701505  E_coul = 13.18156039149414
cycle= 5 E= -107.151363735521  delta_E= 15.1  |g|= 0.722  |ddm|= 4.56
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.795358
diis-c [-3.05244446e-07 -1.67993520e-02  2.00467131e-01 -3.34047253e-01
  1.34174193e+00 -1.91362457e-01]
  HOMO = -0.000336415174183319  LUMO = 0.583367227703432
  mo_energy =
[-2.94186886e+01 -9.80655292e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  5.83367228e-01  5.83367228e-01  5.83367228e-01
  1.63531564e+01  1.63531564e+01  1.63531564e+01  1.78671757e+02
  1.68570791e+03  6.48094161e+03]
E1 = -120.33287074250701  E_coul = 13.181518204541616
cycle= 6 E= -107.151352537965  delta_E= 1.12e-05  |g|= 0.725  |ddm|= 3.73e-05
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.798584
diis-c [-1.02401821e-07 -2.43615705e-02  1.49220737e-01 -3.77982698e-01
  1.52507948e+00 -3.37389255e+01  3.34669695e+01]
  HOMO = -0.00033641517417518  LUMO = 1.4176824831344
  mo_energy =
[-2.80579191e+01 -1.35525676e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  1.41768248e+00  1.41768248e+00  1.41768248e+00
  1.75434966e+01  1.75434966e+01  1.75434966e+01  1.80051328e+02
  1.68710205e+03  6.48233649e+03]
E1 = -120.3311311520981  E_coul = 13.180162417827336
cycle= 7 E= -107.150968734271  delta_E= 0.000384  |g|= 0.82  |ddm|= 0.0012
    CPU time for cycle= 7      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.902166
diis-c [-2.08290738e-09 -3.42444158e-02  3.54793855e-01 -5.15880196e-01
  2.08274293e+00 -8.61681247e+02  8.83429781e+02 -2.26359463e+01]
  HOMO = 2.49455955388544  LUMO = 3.99790268283814
  mo_energy =
[-2.38301581e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  2.49455955e+00  3.99790268e+00  3.99790268e+00  3.99790268e+00
  2.12578118e+01  2.12578118e+01  2.12578118e+01  1.84340478e+02
  1.69143631e+03  6.48667304e+03]
E1 = -120.32548775850597  E_coul = 13.175993751761556
cycle= 8 E= -107.149494006744  delta_E= 0.00147  |g|= 1.11  |ddm|= 0.00369
    CPU time for cycle= 8      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.22034
Linear dependence found in DIIS error vectors.
diis-c [-1.64229186e-11  2.21245038e-04 -3.21528663e-03  5.17604772e-03
 -2.07401243e-02  1.21841554e+01  1.24366345e+01 -2.88612167e+01
  5.25898501e+00]
  HOMO = -5.87648461234587  LUMO = -0.000336415174183172
  mo_energy =
[-3.98160738e+01 -7.42004529e+00 -5.87648461e+00 -5.87648461e+00
 -5.87648461e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.36030834e+00  7.36030834e+00  7.36030834e+00  1.68143340e+02
  1.67506760e+03  6.47029565e+03]
E1 = -190.38337721378755  E_coul = 68.71211166109069
cycle= 9 E= -121.671265552697  delta_E= -14.5  |g|= 4.69  |ddm|= 4.45
    CPU time for cycle= 9      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.94894
diis-c [-1.49948665e-11 -3.85368538e-03 -3.40432564e-03  6.49448597e-03
  2.18622317e-03  6.54780056e+00  1.78493903e+01 -2.85860067e+01
  5.18739310e+00]
  HOMO = -5.74507941008307  LUMO = -0.000336415174183583
  mo_energy =
[-3.96075334e+01 -7.29113942e+00 -5.74507941e+00 -5.74507941e+00
 -5.74507941e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.53862032e+00  7.53862032e+00  7.53862032e+00  1.68354311e+02
  1.67528082e+03  6.47050899e+03]
E1 = -190.336395243778  E_coul = 68.63541469283653
cycle= 10 E= -121.700980550941  delta_E= -0.0297  |g|= 4.58  |ddm|= 0.0111
    CPU time for cycle= 10      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.80807
diis-c [-9.95648008e-12 -4.10764423e-01  4.25879515e-01 -6.85476589e-03
 -9.04019944e-03  5.29141876e+00  1.92887684e+01 -2.88005532e+01
  5.22114590e+00]
  HOMO = -5.78168784528393  LUMO = -0.000336415174183591
  mo_energy =
[-3.96657006e+01 -7.32701243e+00 -5.78168785e+00 -5.78168785e+00
 -5.78168785e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.48901316e+00  7.48901316e+00  7.48901316e+00  1.68295445e+02
  1.67522131e+03  6.47044944e+03]
E1 = -190.34955692624888  E_coul = 68.6567990071934
cycle= 11 E= -121.692757919055  delta_E= 0.00822  |g|= 4.61  |ddm|= 0.00309
    CPU time for cycle= 11      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.84739
diis-c [-1.09636744e-11 -6.19398744e-01 -4.35509025e-01  1.06428061e+00
 -1.07917864e-02  6.06838140e+00  1.85084492e+01 -2.88012645e+01
  5.22585292e+00]
  HOMO = -5.78584376834763  LUMO = -0.000336415174183813
  mo_energy =
[-3.96722925e+01 -7.33109372e+00 -5.78584377e+00 -5.78584377e+00
 -5.78584377e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.48336531e+00  7.48336531e+00  7.48336531e+00  1.68288778e+02
  1.67521457e+03  6.47044270e+03]
E1 = -190.35103950000945  E_coul = 68.65921280337875
cycle= 12 E= -121.691826696631  delta_E= 0.000931  |g|= 4.62  |ddm|= 0.000349
    CPU time for cycle= 12      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.85183
Linear dependence found in DIIS error vectors.
diis-c [-5.75040016e-12 -4.71395048e-01 -1.96000157e-01  4.16247125e-01
  2.57842521e-01  3.80683881e+00  2.06690721e+01 -2.86757726e+01
  5.19316721e+00]
  HOMO = -5.73298367868667  LUMO = -0.000336415174183881
  mo_energy =
[-3.95883709e+01 -7.27923287e+00 -5.73298368e+00 -5.73298368e+00
 -5.73298368e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.55511202e+00  7.55511202e+00  7.55511202e+00  1.68373683e+02
  1.67530038e+03  6.47052856e+03]
E1 = -190.33210397696797  E_coul = 68.62845886923056
cycle= 13 E= -121.703645107737  delta_E= -0.0118  |g|= 4.57  |ddm|= 0.00445
    CPU time for cycle= 13      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.79527
Linear dependence found in DIIS error vectors.
diis-c [-1.84943459e-11 -2.98089765e-01 -1.56338544e-01  1.26514236e-01
  6.41468024e-02  2.70273738e-01  2.46246226e+01 -2.88334602e+01
  5.20233106e+00]
  HOMO = -5.73420446483382  LUMO = -0.000336415174183336
  mo_energy =
[-3.95903070e+01 -7.28043279e+00 -5.73420446e+00 -5.73420446e+00
 -5.73420446e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.55345086e+00  7.55345086e+00  7.55345086e+00  1.68371725e+02
  1.67529841e+03  6.47052658e+03]
E1 = -190.33253922760755  E_coul = 68.62916398388359
cycle= 14 E= -121.703375243724  delta_E= 0.00027  |g|= 4.57  |ddm|= 0.000102
    CPU time for cycle= 14      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.79657
diis-c [-5.54791768e-08  1.78798926e+03 -3.23951313e+03 -7.54866531e+02
 -3.65124712e+03  1.64760278e+03  4.21125712e+03 -1.05753022e+00
  8.35144433e-01]
  HOMO = 0.50180560061464  LUMO = 2.04317285182041
  mo_energy =
[-2.70382544e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  5.01805601e-01  2.04317285e+00  2.04317285e+00  2.04317285e+00
  1.84432189e+01  1.84432189e+01  1.84432189e+01  1.81084431e+02
  1.68814512e+03  6.48338005e+03]
E1 = -120.3298670188673  E_coul = 13.179205687960271
cycle= 15 E= -107.150661330907  delta_E= 14.6  |g|= 0.888  |ddm|= 4.45
    CPU time for cycle= 15      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.977207
Linear dependence found in DIIS error vectors.
diis-c [-1.82107630e-07 -1.43846428e+02 -2.41561718e+02  1.67525545e+02
  1.38737688e+02  4.75747484e+01  3.30548571e+01 -3.16172860e+00
  2.67703602e+00]
  HOMO = 2.17788861467455  LUMO = 3.67941427791279
  mo_energy =
[-2.43683731e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  2.17788861e+00  3.67941428e+00  3.67941428e+00  3.67941428e+00
  2.08134946e+01  2.08134946e+01  2.08134946e+01  1.83789413e+02
  1.69087492e+03  6.48611107e+03]
E1 = -120.32655167403479  E_coul = 13.176790482839879
cycle= 16 E= -107.149761191195  delta_E= 0.0009  |g|= 1.06  |ddm|= 0.00222
    CPU time for cycle= 16      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.16937
Linear dependence found in DIIS error vectors.
diis-c [-1.16966843e-07  7.01304531e+01  3.35566896e+02 -2.35430261e+02
 -2.06823902e+02  1.16643414e+01  2.64261700e+01 -4.02569132e+00
  3.49199319e+00]
  HOMO = 2.49283563092439  LUMO = 3.98749822151903
  mo_energy =
[-2.38617647e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  2.49283563e+00  3.98749822e+00  3.98749822e+00  3.98749822e+00
  2.12588286e+01  2.12588286e+01  2.12588286e+01  1.84303766e+02
  1.69139480e+03  6.48663124e+03]
E1 = -120.3258488902766  E_coul = 13.176286078440809
cycle= 17 E= -107.149562811836  delta_E= 0.000198  |g|=  1.1  |ddm|= 0.000443
    CPU time for cycle= 17      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.20753
Linear dependence found in DIIS error vectors.
diis-c [-1.28878688e-07  6.50750833e+00  2.99125577e+01 -7.46543494e+01
 -8.72388696e+01  6.85949518e+01  6.48323743e+01 -2.22667796e+00
 -4.72749513e+00]
  HOMO = 1.93435677923595  LUMO = 3.44177812284289
  mo_energy =
[-2.47574980e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.93435678e+00  3.44177812e+00  3.44177812e+00  3.44177812e+00
  2.04689639e+01  2.04689639e+01  2.04689639e+01  1.83394822e+02
  1.69047649e+03  6.48571245e+03]
E1 = -120.32705887570616  E_coul = 13.177154295069508
cycle= 18 E= -107.149904580637  delta_E= -0.000342  |g|= 1.04  |ddm|= 0.000772
    CPU time for cycle= 18      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14096
Linear dependence found in DIIS error vectors.
diis-c [-2.61049404e-10 -1.91525252e+02 -6.20015419e+02  2.37722896e+01
 -3.59057027e+00  3.09399541e+01 -5.12894637e+01  6.08150808e+01
  7.51893380e+02]
  HOMO = -6.87074441510665  LUMO = -0.000336415174182925
  mo_energy =
[-4.13880316e+01 -8.39329158e+00 -6.87074442e+00 -6.87074442e+00
 -6.87074442e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  6.01634479e+00  6.01634479e+00  6.01634479e+00  1.66553739e+02
  1.67346147e+03  6.46868870e+03]
E1 = -190.73161532866717  E_coul = 69.31480980864968
cycle= 19 E= -121.416805520017  delta_E= -14.3  |g|= 5.55  |ddm|= 4.43
    CPU time for cycle= 19      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.04103
Linear dependence found in DIIS error vectors.
diis-c [-4.51640372e-09 -8.24979658e+01 -2.49046800e+02  1.40671632e+01
 -3.87042054e+02  1.93918545e+02  1.79769953e+02  2.20937688e+01
  3.09737389e+02]
  HOMO = -1.17987835863643  LUMO = -0.000336415174184166
  mo_energy =
[-3.22828952e+01 -2.75713678e+00 -1.17987836e+00 -1.17987836e+00
 -1.17987836e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.38576306e+01  1.38576306e+01  1.38576306e+01  1.75769215e+02
  1.68277454e+03  6.47800667e+03]
E1 = -188.65267837602877  E_coul = 66.38305896936696
cycle= 20 E= -122.269619406662  delta_E= -0.853  |g|= 1.16  |ddm|= 0.444
    CPU time for cycle= 20      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.46295
Linear dependence found in DIIS error vectors.
diis-c [-4.47010326e-13  4.56935970e-01 -2.97973730e-01  1.33498737e+00
  1.75842973e+00 -1.03371107e+00 -1.03163972e+00 -7.16506901e-02
 -1.15377849e-01]
  HOMO = -0.000336415174180741  LUMO = 0.820091501021989
  mo_energy =
[-2.90318891e+01 -7.41794851e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.20091501e-01  8.20091501e-01  8.20091501e-01
  1.66891700e+01  1.66891700e+01  1.66891700e+01  1.79064182e+02
  1.68610480e+03  6.48133873e+03]
E1 = -120.33235888488075  E_coul = 13.18111358620078
cycle= 21 E= -107.15124529868  delta_E= 15.1  |g|= 0.753  |ddm|= 4.54
    CPU time for cycle= 21      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.828832
Linear dependence found in DIIS error vectors.
diis-c [-4.54469795e-13  4.21357005e-01 -2.78281577e-01  1.33928592e+00
  1.76362988e+00 -5.81576831e-02 -2.07165199e+00  1.78804874e-03
 -1.17969609e-01]
  HOMO = -0.000336415174180634  LUMO = 0.840339347383252
  mo_energy =
[-2.89988792e+01 -7.21298760e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.40339347e-01  8.40339347e-01  8.40339347e-01
  1.67180294e+01  1.67180294e+01  1.67180294e+01  1.79097646e+02
  1.68613862e+03  6.48137256e+03]
E1 = -120.33231683280903  E_coul = 13.181080634855679
cycle= 22 E= -107.151236197953  delta_E= 9.1e-06  |g|= 0.755  |ddm|= 2.91e-05
    CPU time for cycle= 22      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.831348
Linear dependence found in DIIS error vectors.
diis-c [-1.48868897e-09  1.18465156e+01 -6.58677235e+00 -1.40074779e-02
  6.76603846e-02  9.51176796e+00  8.69703109e+00 -2.30807619e+01
  5.58566745e-01]
  HOMO = -5.42746050490444  LUMO = -0.000336415174184945
  mo_energy =
[-3.91029466e+01 -6.97910942e+00 -5.42746050e+00 -5.42746050e+00
 -5.42746050e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.97061967e+00  7.97061967e+00  7.97061967e+00  1.68864789e+02
  1.67579672e+03  6.47102516e+03]
E1 = -190.22224657037017  E_coul = 68.45314690782257
cycle= 23 E= -121.769099662548  delta_E= -14.6  |g|= 4.32  |ddm|= 4.46
    CPU time for cycle= 23      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.47153
Linear dependence found in DIIS error vectors.
diis-c [-4.21052082e-13 -2.19223530e-01 -3.22564810e+00  9.97063614e-01
  1.76683121e+00  1.37163662e-01  5.97150648e-02 -1.75521068e+00
  3.23930877e+00]
  HOMO = -0.000336415174178817  LUMO = 0.697356744475985
  mo_energy =
[-2.92319228e+01 -8.66017071e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  6.97356744e-01  6.97356744e-01  6.97356744e-01
  1.65142721e+01  1.65142721e+01  1.65142721e+01  1.78861406e+02
  1.68589989e+03  6.48113371e+03]
E1 = -120.33261271968202  E_coul = 13.181312906747321
cycle= 24 E= -107.151299812935  delta_E= 14.6  |g|= 0.739  |ddm|= 4.46
    CPU time for cycle= 24      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.813592
Linear dependence found in DIIS error vectors.
diis-c [-8.32957007e-13  4.74749928e-01 -4.90143779e-01  1.00877499e+00
  1.79433999e+00  1.23931558e-02  2.38181275e-02 -1.77762846e+00
 -4.63039539e-02]
  HOMO = -0.000336415174182652  LUMO = 0.803778057693598
  mo_energy =
[-2.90584716e+01 -7.58321264e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.03778058e-01  8.03778058e-01  8.03778058e-01
  1.66658915e+01  1.66658915e+01  1.66658915e+01  1.79037239e+02
  1.68607758e+03  6.48131149e+03]
E1 = -120.33239232241002  E_coul = 13.181139767335111
cycle= 25 E= -107.151252555075  delta_E= 4.73e-05  |g|= 0.751  |ddm|= 0.000153
    CPU time for cycle= 25      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.826819
Linear dependence found in DIIS error vectors.
diis-c [-1.27149115e-12  5.87375809e-01 -2.42611945e-03  1.04043015e+00
  1.85457826e+00  1.04499694e+00  1.86407955e+00 -1.83445853e+00
 -3.55457605e+00]
  HOMO = -0.000336415174181387  LUMO = 1.02576078670045
  mo_energy =
[-2.86964753e+01 -5.33549345e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  1.02576079e+00  1.02576079e+00  1.02576079e+00
  1.69824254e+01  1.69824254e+01  1.69824254e+01  1.79404234e+02
  1.68644845e+03  6.48168257e+03]
E1 = -120.33192993969632  E_coul = 13.180778430879167
cycle= 26 E= -107.151151508817  delta_E= 0.000101  |g|= 0.776  |ddm|= 0.000319
    CPU time for cycle= 26      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.854409
Linear dependence found in DIIS error vectors.
diis-c [-1.22222284e-12 -6.73220057e-01  8.14995494e-01  1.03908165e+00
  1.85152045e+00  8.08951040e-01  1.00126271e+00 -1.83190650e+00
 -2.01068478e+00]
  HOMO = -0.00033641517418358  LUMO = 1.01402674540447
  mo_energy =
[-2.87156156e+01 -5.45436229e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  1.01402675e+00  1.01402675e+00  1.01402675e+00
  1.69656824e+01  1.69656824e+01  1.69656824e+01  1.79384829e+02
  1.68642884e+03  6.48166295e+03]
E1 = -120.33195443713045  E_coul = 13.18079750800711
cycle= 27 E= -107.151156929123  delta_E= -5.42e-06  |g|= 0.775  |ddm|= 1.68e-05
    CPU time for cycle= 27      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.852952
Linear dependence found in DIIS error vectors.
diis-c [-6.69849554e-09 -1.20344051e+01 -4.94596536e+00 -7.12904189e+00
  1.74746242e+00  2.65039308e+01  2.85715622e+01 -4.65925375e-01
 -3.12476177e+01]
  HOMO = 0.881715337431773  LUMO = 2.41711831261325
  mo_energy =
[-2.64256279e+01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  8.81715337e-01  2.41711831e+00  2.41711831e+00  2.41711831e+00
  1.89790189e+01  1.89790189e+01  1.89790189e+01  1.81706098e+02
  1.68877360e+03  6.48400889e+03]
E1 = -120.3290399946339  E_coul = 13.1785835616447
cycle= 28 E= -107.150456432989  delta_E= 0.0007  |g|= 0.931  |ddm|= 0.00198
    CPU time for cycle= 28      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.02411
Linear dependence found in DIIS error vectors.
diis-c [-1.15132937e-09 -8.68596209e+01  2.04860330e+02  1.49381916e+02
  7.71135793e+00 -4.38555093e+02 -4.98183584e+02 -2.82314422e-09
  6.62644695e+02]
  HOMO = -5.77650168759604  LUMO = -0.000336415174183833
  mo_energy =
[-3.96574034e+01 -7.32198228e+00 -5.77650169e+00 -5.77650169e+00
 -5.77650169e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.49594384e+00  7.49594384e+00  7.49594384e+00  1.68303864e+02
  1.67522984e+03  6.47045798e+03]
E1 = -190.347634040441  E_coul = 68.6536704254909
cycle= 29 E= -121.69396361495  delta_E= -14.5  |g|= 4.61  |ddm|= 4.45
    CPU time for cycle= 29      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.84164
Linear dependence found in DIIS error vectors.
diis-c [-5.31823572e-10 -2.74277000e+02  2.36202148e+02  1.53289583e+02
  7.08091236e+00  5.29713433e-02 -8.08386584e+02 -5.65658207e-02
  6.87094535e+02]
  HOMO = -5.79987669536555  LUMO = -0.000336415174183873
  mo_energy =
[-3.96944795e+01 -7.34493759e+00 -5.79987670e+00 -5.79987670e+00
 -5.79987670e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.46417701e+00  7.46417701e+00  7.46417701e+00  1.68266364e+02
  1.67519195e+03  6.47042007e+03]
E1 = -190.35597142144584  E_coul = 68.66725032229542
cycle= 30 E= -121.68872109915  delta_E= 0.00524  |g|= 4.63  |ddm|= 0.00196
    CPU time for cycle= 30      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.86659
Linear dependence found in DIIS error vectors.
diis-c [-5.40526590e-09 -8.43490408e+02  1.84541285e+02  4.38790099e+01
  6.49994377e+00 -6.93494168e+02  6.45046312e+02  4.87833705e+01
  6.09234656e+02]
  HOMO = -3.604295164626  LUMO = -0.000336415174182888
  mo_energy =
[-3.61916650e+01 -5.17729917e+00 -3.60429516e+00 -3.60429516e+00
 -3.60429516e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.04743542e+01  1.04743542e+01  1.04743542e+01  1.71810795e+02
  1.67877387e+03  6.47400387e+03]
E1 = -189.55453187770928  E_coul = 67.48586743111252
cycle= 31 E= -122.068664446597  delta_E= -0.38  |g|= 2.88  |ddm|= 0.176
    CPU time for cycle= 31      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64278
Linear dependence found in DIIS error vectors.
diis-c [-2.50769694e-09 -1.26568439e+02  2.75377409e+01  6.37243879e+00
  1.49672047e+00 -3.73010048e+02  3.67191112e+02  6.81693234e+00
  9.11635435e+01]
  HOMO = -0.000336415174173761  LUMO = 0.629055271686389
  mo_energy =
[-2.93435498e+01 -9.34775515e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  6.29055272e-01  6.29055272e-01  6.29055272e-01
  1.64176874e+01  1.64176874e+01  1.64176874e+01  1.78748103e+02
  1.68578524e+03  6.48101899e+03]
E1 = -120.33276421168048  E_coul = 13.181433118311936
cycle= 32 E= -107.151331093369  delta_E= 14.9  |g|= 0.731  |ddm|=  4.5
    CPU time for cycle= 32      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.804721
Linear dependence found in DIIS error vectors.
diis-c [-3.61464103e-09  9.52255479e+01 -2.36370326e+01 -4.53191347e+01
  5.47400196e+00 -3.33287877e+02  3.28057798e+02  6.14067101e+00
 -3.16539741e+01]
  HOMO = -0.000336415174182205  LUMO = 0.0745187359553127
  mo_energy =
[-3.02463982e+01 -1.49496973e+00 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  7.45187360e-02  7.45187360e-02  7.45187360e-02
  1.56296486e+01  1.56296486e+01  1.56296486e+01  1.77832947e+02
  1.68486036e+03  6.48009362e+03]
E1 = -120.3339021742122  E_coul = 13.18233924429024
cycle= 33 E= -107.151562929922  delta_E= -0.000232  |g|= 0.668  |ddm|= 0.000799
    CPU time for cycle= 33      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.735576
Linear dependence found in DIIS error vectors.
diis-c [-7.28831551e-10  2.36633594e+01 -5.66870871e+01  7.37063021e+01
  2.84165831e+00 -2.50500538e+02  2.46631339e+02  4.51577230e+00
 -4.31708061e+01]
  HOMO = -1.60660367951962  LUMO = -0.000336415174184941
  mo_energy =
[-3.29727204e+01 -3.18581826e+00 -1.60660368e+00 -1.60660368e+00
 -1.60660368e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.32564458e+01  1.32564458e+01  1.32564458e+01  1.75070732e+02
  1.68206894e+03  6.47730072e+03]
E1 = -188.80992316245204  E_coul = 66.56177823935053
cycle= 34 E= -122.248144923102  delta_E= -15.1  |g|= 1.44  |ddm|= 4.53
    CPU time for cycle= 34      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.82347
Linear dependence found in DIIS error vectors.
diis-c [-8.14903700e-13  2.77846255e-02  2.91243183e+00 -2.98634539e+00
  7.54105624e-01  2.48654271e-01  4.71388606e-01 -2.61545345e+00
  2.18743388e+00]
  HOMO = -0.000336415174182148  LUMO = 0.7497942936524
  mo_energy =
[-2.91467842e+01 -8.12767045e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  7.49794294e-01  7.49794294e-01  7.49794294e-01
  1.65892969e+01  1.65892969e+01  1.65892969e+01  1.78947617e+02
  1.68598692e+03  6.48122078e+03]
E1 = -120.3325108448523  E_coul = 13.181233345308986
cycle= 35 E= -107.151277499543  delta_E= 15.1  |g|= 0.745  |ddm|= 4.53
    CPU time for cycle= 35      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.819867
Linear dependence found in DIIS error vectors.
diis-c [-7.31747996e-13  2.59655645e+00  2.78249302e+00 -2.73320483e+00
  9.28472630e-01  2.97171848e-01  3.91353064e-01 -2.49933290e+00
 -7.63509286e-01]
  HOMO = -0.000336415174179276  LUMO = 0.462477350412393
  mo_energy =
[-2.96148822e+01 -1.10334330e+00 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  4.62477350e-01  4.62477350e-01  4.62477350e-01
  1.61803272e+01  1.61803272e+01  1.61803272e+01  1.78473110e+02
  1.68550739e+03  6.48074100e+03]
E1 = -120.3331038058646  E_coul = 13.181701444521602
cycle= 36 E= -107.151402361343  delta_E= -0.000125  |g|= 0.712  |ddm|= 0.000413
    CPU time for cycle= 36      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.784118
diis-c [-2.50466314e-13  2.27021223e+01  2.58008393e+00  3.90778212e+01
 -4.39650713e+01  3.25088238e-01  3.09320987e-01 -2.31068249e+00
 -1.77186829e+01]
  HOMO = -0.000336415174179868  LUMO = 0.0317696877363573
  mo_energy =
[-3.03158241e+01 -1.53830336e+00 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  3.17696877e-02  3.17696877e-02  3.17696877e-02
  1.55685707e+01  1.55685707e+01  1.55685707e+01  1.77762659e+02
  1.68478941e+03  6.48002263e+03]
E1 = -120.33398354087934  E_coul = 13.182404248450956
cycle= 37 E= -107.151579292428  delta_E= -0.000177  |g|= 0.663  |ddm|= 0.00062
    CPU time for cycle= 37      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.730443
Linear dependence found in DIIS error vectors.
diis-c [ 4.95070651e-12  2.86415610e+01  2.93095260e+00  2.18286331e+01
 -7.33339601e+00 -2.05515885e+01  7.16030551e-01 -2.61995312e+00
 -2.26122396e+01]
  HOMO = -0.000336415174178264  LUMO = 0.813163382883349
  mo_energy =
[-2.90435058e+01 -7.48622449e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.13163383e-01  8.13163383e-01  8.13163383e-01
  1.66796114e+01  1.66796114e+01  1.66796114e+01  1.79052311e+02
  1.68609271e+03  6.48132663e+03]
E1 = -120.33237980220211  E_coul = 13.181130523174286
cycle= 38 E= -107.151249279028  delta_E= 0.00033  |g|= 0.752  |ddm|= 0.00112
    CPU time for cycle= 38      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.827732
Linear dependence found in DIIS error vectors.
diis-c [-9.47685264e-11 -2.91206585e+01  9.61596987e-02  2.04896676e+01
 -2.59499227e+02  1.45280059e+02  1.02384877e+02 -4.80724552e-02
  2.14171944e+01]
  HOMO = -5.46356521952636  LUMO = -0.000336415174182925
  mo_energy =
[-3.91602985e+01 -7.01464724e+00 -5.46356522e+00 -5.46356522e+00
 -5.46356522e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.92137433e+00  7.92137433e+00  7.92137433e+00  1.68806782e+02
  1.67573812e+03  6.47096652e+03]
E1 = -190.23521778873567  E_coul = 68.47357707789985
cycle= 39 E= -121.761640710836  delta_E= -14.6  |g|= 4.35  |ddm|= 4.46
    CPU time for cycle= 39      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.50937
Linear dependence found in DIIS error vectors.
diis-c [-2.36309583e-10 -2.90434949e+01  5.97504254e-02  2.07209159e+01
 -2.61532145e+02  1.46306879e+02  1.03687504e+02 -1.97275569e-02
  2.08203182e+01]
  HOMO = -5.51606554502597  LUMO = -0.000336415174183885
  mo_energy =
[-3.92437862e+01 -7.06621492e+00 -5.51606555e+00 -5.51606555e+00
 -5.51606555e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.84997334e+00  7.84997334e+00  7.84997334e+00  1.68722302e+02
  1.67565272e+03  6.47088108e+03]
E1 = -190.25417416403323  E_coul = 68.50356113500268
cycle= 40 E= -121.750613029031  delta_E= 0.011  |g|= 4.39  |ddm|= 0.00437
    CPU time for cycle= 40      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.56486
Linear dependence found in DIIS error vectors.
diis-c [-3.08080821e-11 -6.98650898e+00  2.28278164e+00  1.02802205e+00
 -1.38067979e+01  1.26635369e+01  7.10269676e+00 -5.37526074e+01
  5.24688769e+01]
  HOMO = -0.000336415174181814  LUMO = 0.636389553015539
  mo_energy =
[-2.93312217e+01 -9.27728752e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  6.36389553e-01  6.36389553e-01  6.36389553e-01
  1.64273879e+01  1.64273879e+01  1.64273879e+01  1.78760763e+02
  1.68579820e+03  6.48103196e+03]
E1 = -120.33273754878844  E_coul = 13.181411146509038
cycle= 41 E= -107.151326402279  delta_E= 14.6  |g|= 0.732  |ddm|= 4.46
    CPU time for cycle= 41      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.806052
Linear dependence found in DIIS error vectors.
diis-c [-7.83667216e-12  4.95648162e+00  2.29536136e+00 -3.80147276e-01
 -1.73789717e+01  6.62431416e+00  6.17536446e+00 -5.42085907e+01
  5.29161881e+01]
  HOMO = -0.000336415174181387  LUMO = 0.661171185089089
  mo_energy =
[-2.92908258e+01 -9.02672685e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  6.61171185e-01  6.61171185e-01  6.61171185e-01
  1.64626513e+01  1.64626513e+01  1.64626513e+01  1.78801718e+02
  1.68583959e+03  6.48107338e+03]
E1 = -120.33268596526901  E_coul = 13.181370455132852
cycle= 42 E= -107.151315510136  delta_E= 1.09e-05  |g|= 0.735  |ddm|= 3.58e-05
    CPU time for cycle= 42      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.809149
Linear dependence found in DIIS error vectors.
diis-c [-1.33765482e-10 -1.22394835e+01  2.30377601e+01  9.44621278e+00
 -2.61735311e+02  1.23329003e+02  1.19153754e+02  8.06461698e-01
 -7.98396402e-01]
  HOMO = -5.72405899468624  LUMO = -0.000336415174183591
  mo_energy =
[-3.95742022e+01 -7.27047235e+00 -5.72405899e+00 -5.72405899e+00
 -5.72405899e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.56723473e+00  7.56723473e+00  7.56723473e+00  1.68388016e+02
  1.67531487e+03  6.47054305e+03]
E1 = -190.3289076560636  E_coul = 68.62328348364048
cycle= 43 E= -121.705624172423  delta_E= -14.6  |g|= 4.56  |ddm|= 4.45
    CPU time for cycle= 43      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.78575
Linear dependence found in DIIS error vectors.
diis-c [-5.94563918e-12 -1.32704609e+01  2.22110811e+01  4.85401397e+00
 -2.55584548e+02  1.21614073e+02  1.26009164e+02  2.13942829e+01
 -2.62276056e+01]
  HOMO = -5.64186782115284  LUMO = -0.000336415174184701
  mo_energy =
[-3.94436813e+01 -7.18977944e+00 -5.64186782e+00 -5.64186782e+00
 -5.64186782e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.67891138e+00  7.67891138e+00  7.67891138e+00  1.68520061e+02
  1.67544832e+03  6.47067657e+03]
E1 = -190.299429902372  E_coul = 68.57576833224006
cycle= 44 E= -121.723661570132  delta_E= -0.018  |g|=  4.5  |ddm|= 0.00689
    CPU time for cycle= 44      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=5.69821
Linear dependence found in DIIS error vectors.
diis-c [ 5.07954187e-09 -5.74114833e+02  4.58114992e+02  6.33360246e+02
 -7.63812621e+02  4.17780396e+01  7.43999910e+01  7.68004445e+02
 -6.36730258e+02]
  HOMO = -0.49150754806709  LUMO = -0.000336415174183369
  mo_energy =
[-3.11674490e+01 -2.06458191e+00 -4.91507548e-01 -4.91507548e-01
 -4.91507548e-01 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  1.48296650e+01  1.48296650e+01  1.48296650e+01  1.76899118e+02
  1.68391621e+03  6.47914894e+03]
E1 = -188.39903348934985  E_coul = 66.10514688946056
cycle= 45 E= -122.293886599889  delta_E= -0.57  |g|= 0.708  |ddm|= 0.385
    CPU time for cycle= 45      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.896334
Linear dependence found in DIIS error vectors.
diis-c [-1.66203253e-11 -3.19402608e+01  3.58903901e+01  1.19876059e+01
 -6.76667477e+00  1.47398257e+00 -3.97735589e+00  1.04486382e+01
 -1.61163254e+01]
  HOMO = -0.000336415174175597  LUMO = 0.814873337372419
  mo_energy =
[-2.90403739e+01 -7.47142772e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.14873337e-01  8.14873337e-01  8.14873337e-01
  1.66815830e+01  1.66815830e+01  1.66815830e+01  1.79055604e+02
  1.68609616e+03  6.48133008e+03]
E1 = -120.33236791913808  E_coul = 13.18112051595819
cycle= 46 E= -107.15124740318  delta_E= 15.1  |g|= 0.753  |ddm|= 4.56
    CPU time for cycle= 46      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.828248
Linear dependence found in DIIS error vectors.
diis-c [-2.99393447e-11 -2.50895982e+01  2.72806605e+01  3.30198180e+01
 -2.84629000e+01  1.43841097e+00 -2.22966554e+00  4.61624563e+01
 -5.11191821e+01]
  HOMO = -0.000336415174180704  LUMO = 0.8867711754266
  mo_energy =
[-2.89232527e+01 -6.74282423e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.86771175e-01  8.86771175e-01  8.86771175e-01
  1.67842118e+01  1.67842118e+01  1.67842118e+01  1.79174304e+02
  1.68621608e+03  6.48145006e+03]
E1 = -120.33222098865886  E_coul = 13.18100566793923
cycle= 47 E= -107.15121532072  delta_E= 3.21e-05  |g|= 0.761  |ddm|= 0.000102
    CPU time for cycle= 47      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.837093
Linear dependence found in DIIS error vectors.
diis-c [-2.56097356e-12 -1.31669128e+01  3.65159485e+00  7.56775574e+00
 -3.26872552e+00  1.49163485e+00  3.15795740e+01 -2.20937110e+01
 -4.76121010e+00]
  HOMO = -0.000336415174181953  LUMO = 0.829035080136707
  mo_energy =
[-2.90172499e+01 -7.32834946e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.29035080e-01  8.29035080e-01  8.29035080e-01
  1.67017165e+01  1.67017165e+01  1.67017165e+01  1.79079060e+02
  1.68611987e+03  6.48135381e+03]
E1 = -120.33233761688888  E_coul = 13.181096691373694
cycle= 48 E= -107.151240925515  delta_E= -2.56e-05  |g|= 0.754  |ddm|= 8.14e-05
    CPU time for cycle= 48      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.830041
Linear dependence found in DIIS error vectors.
diis-c [-1.66355818e-12 -5.85717353e+00 -3.26053606e-01  1.43975656e+01
 -1.48514996e+01  1.48056400e+00  5.75858175e+00 -1.58965896e+01
  1.62946049e+01]
  HOMO = -0.000336415174177151  LUMO = 0.811135201264945
  mo_energy =
[-2.90464382e+01 -7.50947415e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.11135201e-01  8.11135201e-01  8.11135201e-01
  1.66762171e+01  1.66762171e+01  1.66762171e+01  1.79049467e+02
  1.68608996e+03  6.48132389e+03]
E1 = -120.3323749799363  E_coul = 13.18112599383241
cycle= 49 E= -107.151248986104  delta_E= -8.06e-06  |g|= 0.752  |ddm|= 2.58e-05
    CPU time for cycle= 49      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.827808
Linear dependence found in DIIS error vectors.
diis-c [-4.89756780e-12  8.84633995e+00 -7.67262854e+00  1.43943275e+01
 -1.48481318e+01  1.48005505e+00  2.22758441e+00 -1.58799156e+01
  1.24523690e+01]
  HOMO = -0.000336415174181703  LUMO = 0.808733377417209
  mo_energy =
[-2.90503536e+01 -7.53378531e-01 -3.36415174e-04 -3.36415174e-04
 -3.36415174e-04  8.08733377e-01  8.08733377e-01  8.08733377e-01
  1.66727941e+01  1.66727941e+01  1.66727941e+01  1.79045497e+02
  1.68608595e+03  6.48131987e+03]
E1 = -120.33237996415437  E_coul = 13.181129901780931
cycle= 50 E= -107.151250062373  delta_E= -1.08e-06  |g|= 0.752  |ddm|= 3.45e-06
    CPU time for cycle= 50      0.01 sec, wall time      0.01 sec
E1 = -120.33237996415437  E_coul = 13.181129901780931

WARN: 	An extra scf cycle is going to be run
	in order to restore the mo_energy derivatives
	missing in implicit differentiation.

  HOMO = -5.77707627537346  LUMO = -0.000336415174184737
  mo_energy =
[-3.96625659e+01 -7.32222328e+00 -5.77707628e+00 -5.77707628e+00
 -5.77707628e+00 -3.36415174e-04 -3.36415174e-04 -3.36415174e-04
  7.49425178e+00  7.49425178e+00  7.49425178e+00  1.68296450e+02
  1.67520959e+03  6.47043352e+03]
E1 = -190.34867947890302  E_coul = 68.65539879469118
Extra cycle  E= -121.693280684212  delta_E= -14.5  |g|= 4.61  |ddm|= 4.45
    CPU time for scf_cycle      0.72 sec, wall time      0.72 sec
exp = [1.94766711e+03 9.83735384e-01 1.29843661e+03 1.96178094e+02
 2.43072688e+01 1.16703319e+01 1.00000003e-09 2.08166456e+00]
E = -121.69328068421184
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66710619        1
[INPUT] 0    0    [1    /1   ]  0.989599267647       1
[INPUT] 0    0    [1    /1   ]  1298.43644778        1
[INPUT] 0    0    [1    /1   ]  196.260550805        1
[INPUT] 0    0    [1    /1   ]  23.4303333973        1
[INPUT] 1    0    [1    /1   ]  12.2212403482        1
[INPUT] 1    0    [1    /1   ]  0.356010593955       1
[INPUT] 1    0    [1    /1   ]  1.61774120907        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671061934514, 1.0]], [0, [0.9895992676472987, 1.0]], [0, [1298.436447784128, 1.0]], [0, [196.2605508054454, 1.0]], [0, [23.430333397298813, 1.0]], [1, [12.221240348158322, 1.0]], [1, [0.3560105939547967, 1.0]], [1, [1.6177412090688932, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66710619]
bas 1, expnt(s) = [0.98959927]
bas 2, expnt(s) = [1298.43644778]
bas 3, expnt(s) = [196.26055081]
bas 4, expnt(s) = [23.4303334]
bas 5, expnt(s) = [12.22124035]
bas 6, expnt(s) = [0.35601059]
bas 7, expnt(s) = [1.61774121]
CPU time:        29.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766711e+03 7.40714884e+02 9.89599268e-01 2.50674148e+00
 1.29843645e+03 5.46487896e+02 1.96260551e+02 1.32476786e+02
 2.34303334e+01 2.69059837e+01 1.22212403e+01 6.66620245e+01
 3.56010594e-01 8.02256131e-01 1.61774121e+00 5.32256168e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.905552522012702
cond(S) = 123.01517938471962
E1 = -178.1693317755863  E_coul = 54.38159781220525
init E= -123.787733963381
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.733326205280941  LUMO = 1.31786788728571
  mo_energy =
[-3.13643895e+01 -1.84086680e+00 -7.33326205e-01 -7.33326205e-01
 -7.33326205e-01  1.31786789e+00  1.31786789e+00  1.31786789e+00
  1.43829665e+01  1.43829665e+01  1.43829665e+01  1.73714873e+02
  1.68090685e+03  6.47633476e+03]
E1 = -177.6349431487398  E_coul = 52.45318603701944
cycle= 1 E= -125.18175711172  delta_E= -1.39  |g|= 0.171  |ddm|= 0.334
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.270171
diis-c [-0.07299222  1.        ]
  HOMO = -0.814048899374794  LUMO = 1.30102767235048
  mo_energy =
[-3.19434367e+01 -1.98085747e+00 -8.14048899e-01 -8.14048899e-01
 -8.14048899e-01  1.30102767e+00  1.30102767e+00  1.30102767e+00
  1.40605839e+01  1.40605839e+01  1.40605839e+01  1.73168702e+02
  1.68032440e+03  6.47575179e+03]
E1 = -178.21359977322376  E_coul = 53.028758934322475
cycle= 2 E= -125.184840838901  delta_E= -0.00308  |g|= 0.0541  |ddm|= 0.0938
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0927309
diis-c [-2.87055933e-04  2.52682062e-01  7.47317938e-01]
  HOMO = -0.784669521415115  LUMO = 1.31602795302363
  mo_energy =
[-3.18534417e+01 -1.94356231e+00 -7.84669521e-01 -7.84669521e-01
 -7.84669521e-01  1.31602795e+00  1.31602795e+00  1.31602795e+00
  1.41291970e+01  1.41291970e+01  1.41291970e+01  1.73261586e+02
  1.68042038e+03  6.47584824e+03]
E1 = -178.0917722929004  E_coul = 52.90665848831614
cycle= 3 E= -125.185113804584  delta_E= -0.000273  |g|= 0.00228  |ddm|= 0.0188
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00396579
diis-c [-1.30347542e-07 -5.69908272e-03 -6.13675890e-02  1.06706667e+00]
  HOMO = -0.78323120436501  LUMO = 1.31681378928626
  mo_energy =
[-3.18501993e+01 -1.94178531e+00 -7.83231204e-01 -7.83231204e-01
 -7.83231204e-01  1.31681379e+00  1.31681379e+00  1.31681379e+00
  1.41321003e+01  1.41321003e+01  1.41321003e+01  1.73264806e+02
  1.68042361e+03  6.47585148e+03]
E1 = -178.08690957217203  E_coul = 52.901795349764726
cycle= 4 E= -125.185114222407  delta_E= -4.18e-07  |g|= 5.52e-06  |ddm|= 0.000712
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99779e-06
diis-c [-4.43964361e-12  3.39336474e-05  7.03103289e-04 -1.55181305e-02
  1.01478109e+00]
  HOMO = -0.783228134831482  LUMO = 1.31681359319154
  mo_energy =
[-3.18501930e+01 -1.94178282e+00 -7.83228135e-01 -7.83228135e-01
 -7.83228135e-01  1.31681359e+00  1.31681359e+00  1.31681359e+00
  1.41321047e+01  1.41321047e+01  1.41321047e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08691024913634  E_coul = 52.90179602672836
cycle= 5 E= -125.185114222408  delta_E= -6.68e-13  |g|= 2.12e-07  |ddm|= 6.88e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -178.08691024913634  E_coul = 52.90179602672836
  HOMO = -0.783227980666046  LUMO = 1.31681368598183
  mo_energy =
[-3.18501925e+01 -1.94178261e+00 -7.83227981e-01 -7.83227981e-01
 -7.83227981e-01  1.31681369e+00  1.31681369e+00  1.31681369e+00
  1.41321050e+01  1.41321050e+01  1.41321050e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08690960465722  E_coul = 52.90179538224925
Extra cycle  E= -125.185114222408  delta_E=    0  |g|= 6.03e-08  |ddm|= 9.9e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766711e+03 9.89599268e-01 1.29843645e+03 1.96260551e+02
 2.34303334e+01 1.22212403e+01 3.56010594e-01 1.61774121e+00]
E = -125.18511422240798
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66710619        1
[INPUT] 0    0    [1    /1   ]  0.989599267647       1
[INPUT] 0    0    [1    /1   ]  1298.43644778        1
[INPUT] 0    0    [1    /1   ]  196.260550805        1
[INPUT] 0    0    [1    /1   ]  23.4303333973        1
[INPUT] 1    0    [1    /1   ]  12.2212403482        1
[INPUT] 1    0    [1    /1   ]  0.356010593955       1
[INPUT] 1    0    [1    /1   ]  1.61774120907        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671061934514, 1.0]], [0, [0.9895992676472987, 1.0]], [0, [1298.436447784128, 1.0]], [0, [196.2605508054454, 1.0]], [0, [23.430333397298813, 1.0]], [1, [12.221240348158322, 1.0]], [1, [0.3560105939547967, 1.0]], [1, [1.6177412090688932, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66710619]
bas 1, expnt(s) = [0.98959927]
bas 2, expnt(s) = [1298.43644778]
bas 3, expnt(s) = [196.26055081]
bas 4, expnt(s) = [23.4303334]
bas 5, expnt(s) = [12.22124035]
bas 6, expnt(s) = [0.35601059]
bas 7, expnt(s) = [1.61774121]
CPU time:        29.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766711e+03 7.40714884e+02 9.89599268e-01 2.50674148e+00
 1.29843645e+03 5.46487896e+02 1.96260551e+02 1.32476786e+02
 2.34303334e+01 2.69059837e+01 1.22212403e+01 6.66620245e+01
 3.56010594e-01 8.02256131e-01 1.61774121e+00 5.32256168e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.905552522012702
cond(S) = 123.01517938471962
E1 = -178.1693317755863  E_coul = 54.38159781220525
init E= -123.787733963381
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.733326205280941  LUMO = 1.31786788728571
  mo_energy =
[-3.13643895e+01 -1.84086680e+00 -7.33326205e-01 -7.33326205e-01
 -7.33326205e-01  1.31786789e+00  1.31786789e+00  1.31786789e+00
  1.43829665e+01  1.43829665e+01  1.43829665e+01  1.73714873e+02
  1.68090685e+03  6.47633476e+03]
E1 = -177.6349431487398  E_coul = 52.45318603701944
cycle= 1 E= -125.18175711172  delta_E= -1.39  |g|= 0.171  |ddm|= 0.334
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.270171
diis-c [-0.07299222  1.        ]
  HOMO = -0.814048899374794  LUMO = 1.30102767235048
  mo_energy =
[-3.19434367e+01 -1.98085747e+00 -8.14048899e-01 -8.14048899e-01
 -8.14048899e-01  1.30102767e+00  1.30102767e+00  1.30102767e+00
  1.40605839e+01  1.40605839e+01  1.40605839e+01  1.73168702e+02
  1.68032440e+03  6.47575179e+03]
E1 = -178.21359977322376  E_coul = 53.028758934322475
cycle= 2 E= -125.184840838901  delta_E= -0.00308  |g|= 0.0541  |ddm|= 0.0938
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0927309
diis-c [-2.87055933e-04  2.52682062e-01  7.47317938e-01]
  HOMO = -0.784669521415115  LUMO = 1.31602795302363
  mo_energy =
[-3.18534417e+01 -1.94356231e+00 -7.84669521e-01 -7.84669521e-01
 -7.84669521e-01  1.31602795e+00  1.31602795e+00  1.31602795e+00
  1.41291970e+01  1.41291970e+01  1.41291970e+01  1.73261586e+02
  1.68042038e+03  6.47584824e+03]
E1 = -178.0917722929004  E_coul = 52.90665848831614
cycle= 3 E= -125.185113804584  delta_E= -0.000273  |g|= 0.00228  |ddm|= 0.0188
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00396579
diis-c [-1.30347542e-07 -5.69908272e-03 -6.13675890e-02  1.06706667e+00]
  HOMO = -0.78323120436501  LUMO = 1.31681378928626
  mo_energy =
[-3.18501993e+01 -1.94178531e+00 -7.83231204e-01 -7.83231204e-01
 -7.83231204e-01  1.31681379e+00  1.31681379e+00  1.31681379e+00
  1.41321003e+01  1.41321003e+01  1.41321003e+01  1.73264806e+02
  1.68042361e+03  6.47585148e+03]
E1 = -178.08690957217203  E_coul = 52.901795349764726
cycle= 4 E= -125.185114222407  delta_E= -4.18e-07  |g|= 5.52e-06  |ddm|= 0.000712
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99779e-06
diis-c [-4.43964361e-12  3.39336474e-05  7.03103289e-04 -1.55181305e-02
  1.01478109e+00]
  HOMO = -0.783228134831482  LUMO = 1.31681359319154
  mo_energy =
[-3.18501930e+01 -1.94178282e+00 -7.83228135e-01 -7.83228135e-01
 -7.83228135e-01  1.31681359e+00  1.31681359e+00  1.31681359e+00
  1.41321047e+01  1.41321047e+01  1.41321047e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08691024913634  E_coul = 52.90179602672836
cycle= 5 E= -125.185114222408  delta_E= -6.68e-13  |g|= 2.12e-07  |ddm|= 6.88e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -178.08691024913634  E_coul = 52.90179602672836
  HOMO = -0.783227980666046  LUMO = 1.31681368598183
  mo_energy =
[-3.18501925e+01 -1.94178261e+00 -7.83227981e-01 -7.83227981e-01
 -7.83227981e-01  1.31681369e+00  1.31681369e+00  1.31681369e+00
  1.41321050e+01  1.41321050e+01  1.41321050e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08690960465722  E_coul = 52.90179538224925
Extra cycle  E= -125.185114222408  delta_E=    0  |g|= 6.03e-08  |ddm|= 9.9e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 123.01517938471962
E1 = -178.08690960465722  E_coul = 52.90179538224925
init E= -125.185114222408
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.783228023770812  LUMO = 1.31681366410236
  mo_energy =
[-3.18501927e+01 -1.94178267e+00 -7.83228024e-01 -7.83228024e-01
 -7.83228024e-01  1.31681366e+00  1.31681366e+00  1.31681366e+00
  1.41321049e+01  1.41321049e+01  1.41321049e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08690979086805  E_coul = 52.901795568459896
cycle= 1 E= -125.185114222408  delta_E= -1.71e-13  |g|= 1.74e-08  |ddm|= 2.88e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -178.08690979086805  E_coul = 52.901795568459896
  HOMO = -0.783228011288087  LUMO = 1.31681367043873
  mo_energy =
[-3.18501926e+01 -1.94178265e+00 -7.83228011e-01 -7.83228011e-01
 -7.83228011e-01  1.31681367e+00  1.31681367e+00  1.31681367e+00
  1.41321049e+01  1.41321049e+01  1.41321049e+01  1.73264815e+02
  1.68042363e+03  6.47585150e+03]
E1 = -178.08690973721443  E_coul = 52.90179551480632
Extra cycle  E= -125.185114222408  delta_E= 2.84e-14  |g|= 5.02e-09  |ddm|= 8.3e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766711e+03 9.89599268e-01 1.29843645e+03 1.96260551e+02
 2.34303334e+01 1.22212403e+01 3.56010594e-01 1.61774121e+00]
grad_E = [-2.72841626e-06 -1.60828992e-01 -9.28268580e-07  2.02600396e-02
 -5.35523643e-03  1.23439240e-01  3.34516074e-01 -1.36849940e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66709187        1
[INPUT] 0    0    [1    /1   ]  0.869931773519       1
[INPUT] 0    0    [1    /1   ]  1298.43640847        1
[INPUT] 0    0    [1    /1   ]  196.158061355        1
[INPUT] 0    0    [1    /1   ]  23.7187508091        1
[INPUT] 1    0    [1    /1   ]  11.5292571365        1
[INPUT] 1    0    [1    /1   ]  0.58637981377        1
[INPUT] 1    0    [1    /1   ]  2.26418735532        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670918657726, 1.0]], [0, [0.8699317735189342, 1.0]], [0, [1298.4364084685392, 1.0]], [0, [196.15806135509268, 1.0]], [0, [23.718750809097997, 1.0]], [1, [11.529257136468425, 1.0]], [1, [0.5863798137700815, 1.0]], [1, [2.26418735531551, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66709187]
bas 1, expnt(s) = [0.86993177]
bas 2, expnt(s) = [1298.43640847]
bas 3, expnt(s) = [196.15806136]
bas 4, expnt(s) = [23.71875081]
bas 5, expnt(s) = [11.52925714]
bas 6, expnt(s) = [0.58637981]
bas 7, expnt(s) = [2.26418736]
CPU time:        32.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766709e+03 7.40714880e+02 8.69931774e-01 2.27577289e+00
 1.29843641e+03 5.46487884e+02 1.96158061e+02 1.32424897e+02
 2.37187508e+01 2.71540044e+01 1.15292571e+01 6.19777847e+01
 5.86379814e-01 1.49695297e+00 2.26418736e+00 8.10260828e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.916069517565925
cond(S) = 123.04651311819981
E1 = -178.67605633859023  E_coul = 54.402545758906136
init E= -124.273510579684
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.790559800245197  LUMO = 2.32507822083468
  mo_energy =
[-3.13707169e+01 -1.83103092e+00 -7.90559800e-01 -7.90559800e-01
 -7.90559800e-01  2.32507822e+00  2.32507822e+00  2.32507822e+00
  1.64038686e+01  1.64038686e+01  1.64038686e+01  1.74217039e+02
  1.68123877e+03  6.47657495e+03]
E1 = -180.13522861228668  E_coul = 54.58331820719547
cycle= 1 E= -125.551910405091  delta_E= -1.28  |g|= 0.0788  |ddm|= 0.167
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0840372
diis-c [-0.00706225  1.        ]
  HOMO = -0.744930029821021  LUMO = 2.37329493760969
  mo_energy =
[-3.14534531e+01 -1.79610012e+00 -7.44930030e-01 -7.44930030e-01
 -7.44930030e-01  2.37329494e+00  2.37329494e+00  2.37329494e+00
  1.64221287e+01  1.64221287e+01  1.64221287e+01  1.74207750e+02
  1.68122670e+03  6.47656763e+03]
E1 = -180.07413740095345  E_coul = 54.52214929286605
cycle= 2 E= -125.551988108087  delta_E= -7.77e-05  |g|= 0.00636  |ddm|= 0.00666
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0107601
diis-c [-2.67552446e-05  1.01114560e-01  8.98885440e-01]
  HOMO = -0.748305295824467  LUMO = 2.37067093692619
  mo_energy =
[-3.14669205e+01 -1.79999333e+00 -7.48305296e-01 -7.48305296e-01
 -7.48305296e-01  2.37067094e+00  2.37067094e+00  2.37067094e+00
  1.64134561e+01  1.64134561e+01  1.64134561e+01  1.74193480e+02
  1.68121122e+03  6.47655192e+03]
E1 = -180.09053325719344  E_coul = 54.53854129493692
cycle= 3 E= -125.551991962257  delta_E= -3.85e-06  |g|= 0.00109  |ddm|= 0.00238
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0019126
diis-c [-6.37226096e-08 -4.29091170e-03  1.25489838e-01  8.78801073e-01]
  HOMO = -0.747725921561666  LUMO = 2.37111316773527
  mo_energy =
[-3.14653223e+01 -1.79934991e+00 -7.47725922e-01 -7.47725922e-01
 -7.47725922e-01  2.37111317e+00  2.37111317e+00  2.37111317e+00
  1.64146948e+01  1.64146948e+01  1.64146948e+01  1.74195093e+02
  1.68121282e+03  6.47655351e+03]
E1 = -180.08839399130602  E_coul = 54.53640193585683
cycle= 4 E= -125.551992055449  delta_E= -9.32e-08  |g|= 1.26e-05  |ddm|= 0.00029
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.22236e-05
diis-c [-1.42560540e-12  6.23177025e-05 -2.68764231e-03 -2.89442000e-02
  1.03156952e+00]
  HOMO = -0.747718899916276  LUMO = 2.37111850283264
  mo_energy =
[-3.14653064e+01 -1.79934234e+00 -7.47718900e-01 -7.47718900e-01
 -7.47718900e-01  2.37111850e+00  2.37111850e+00  2.37111850e+00
  1.64147084e+01  1.64147084e+01  1.64147084e+01  1.74195111e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.08837243944686  E_coul = 54.53638038398762
cycle= 5 E= -125.551992055459  delta_E= -1e-11  |g|= 9.33e-08  |ddm|= 2.73e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.08837243944686  E_coul = 54.53638038398762
  HOMO = -0.747718963347692  LUMO = 2.3711184539507
  mo_energy =
[-3.14653065e+01 -1.79934241e+00 -7.47718963e-01 -7.47718963e-01
 -7.47718963e-01  2.37111845e+00  2.37111845e+00  2.37111845e+00
  1.64147083e+01  1.64147083e+01  1.64147083e+01  1.74195110e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.0883726706374  E_coul = 54.5363806151783
Extra cycle  E= -125.551992055459  delta_E= 1.42e-13  |g|= 2.41e-08  |ddm|= 3.12e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766709e+03 8.69931774e-01 1.29843641e+03 1.96158061e+02
 2.37187508e+01 1.15292571e+01 5.86379814e-01 2.26418736e+00]
E = -125.5519920554591
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66709187        1
[INPUT] 0    0    [1    /1   ]  0.869931773519       1
[INPUT] 0    0    [1    /1   ]  1298.43640847        1
[INPUT] 0    0    [1    /1   ]  196.158061355        1
[INPUT] 0    0    [1    /1   ]  23.7187508091        1
[INPUT] 1    0    [1    /1   ]  11.5292571365        1
[INPUT] 1    0    [1    /1   ]  0.58637981377        1
[INPUT] 1    0    [1    /1   ]  2.26418735532        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670918657726, 1.0]], [0, [0.8699317735189342, 1.0]], [0, [1298.4364084685392, 1.0]], [0, [196.15806135509268, 1.0]], [0, [23.718750809097997, 1.0]], [1, [11.529257136468425, 1.0]], [1, [0.5863798137700815, 1.0]], [1, [2.26418735531551, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66709187]
bas 1, expnt(s) = [0.86993177]
bas 2, expnt(s) = [1298.43640847]
bas 3, expnt(s) = [196.15806136]
bas 4, expnt(s) = [23.71875081]
bas 5, expnt(s) = [11.52925714]
bas 6, expnt(s) = [0.58637981]
bas 7, expnt(s) = [2.26418736]
CPU time:        32.84
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766709e+03 7.40714880e+02 8.69931774e-01 2.27577289e+00
 1.29843641e+03 5.46487884e+02 1.96158061e+02 1.32424897e+02
 2.37187508e+01 2.71540044e+01 1.15292571e+01 6.19777847e+01
 5.86379814e-01 1.49695297e+00 2.26418736e+00 8.10260828e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.916069517565925
cond(S) = 123.04651311819981
E1 = -178.67605633859023  E_coul = 54.402545758906136
init E= -124.273510579684
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.790559800245197  LUMO = 2.32507822083468
  mo_energy =
[-3.13707169e+01 -1.83103092e+00 -7.90559800e-01 -7.90559800e-01
 -7.90559800e-01  2.32507822e+00  2.32507822e+00  2.32507822e+00
  1.64038686e+01  1.64038686e+01  1.64038686e+01  1.74217039e+02
  1.68123877e+03  6.47657495e+03]
E1 = -180.13522861228668  E_coul = 54.58331820719547
cycle= 1 E= -125.551910405091  delta_E= -1.28  |g|= 0.0788  |ddm|= 0.167
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0840372
diis-c [-0.00706225  1.        ]
  HOMO = -0.744930029821021  LUMO = 2.37329493760969
  mo_energy =
[-3.14534531e+01 -1.79610012e+00 -7.44930030e-01 -7.44930030e-01
 -7.44930030e-01  2.37329494e+00  2.37329494e+00  2.37329494e+00
  1.64221287e+01  1.64221287e+01  1.64221287e+01  1.74207750e+02
  1.68122670e+03  6.47656763e+03]
E1 = -180.07413740095345  E_coul = 54.52214929286605
cycle= 2 E= -125.551988108087  delta_E= -7.77e-05  |g|= 0.00636  |ddm|= 0.00666
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0107601
diis-c [-2.67552446e-05  1.01114560e-01  8.98885440e-01]
  HOMO = -0.748305295824467  LUMO = 2.37067093692619
  mo_energy =
[-3.14669205e+01 -1.79999333e+00 -7.48305296e-01 -7.48305296e-01
 -7.48305296e-01  2.37067094e+00  2.37067094e+00  2.37067094e+00
  1.64134561e+01  1.64134561e+01  1.64134561e+01  1.74193480e+02
  1.68121122e+03  6.47655192e+03]
E1 = -180.09053325719344  E_coul = 54.53854129493692
cycle= 3 E= -125.551991962257  delta_E= -3.85e-06  |g|= 0.00109  |ddm|= 0.00238
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0019126
diis-c [-6.37226096e-08 -4.29091170e-03  1.25489838e-01  8.78801073e-01]
  HOMO = -0.747725921561666  LUMO = 2.37111316773527
  mo_energy =
[-3.14653223e+01 -1.79934991e+00 -7.47725922e-01 -7.47725922e-01
 -7.47725922e-01  2.37111317e+00  2.37111317e+00  2.37111317e+00
  1.64146948e+01  1.64146948e+01  1.64146948e+01  1.74195093e+02
  1.68121282e+03  6.47655351e+03]
E1 = -180.08839399130602  E_coul = 54.53640193585683
cycle= 4 E= -125.551992055449  delta_E= -9.32e-08  |g|= 1.26e-05  |ddm|= 0.00029
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.22236e-05
diis-c [-1.42560540e-12  6.23177025e-05 -2.68764231e-03 -2.89442000e-02
  1.03156952e+00]
  HOMO = -0.747718899916276  LUMO = 2.37111850283264
  mo_energy =
[-3.14653064e+01 -1.79934234e+00 -7.47718900e-01 -7.47718900e-01
 -7.47718900e-01  2.37111850e+00  2.37111850e+00  2.37111850e+00
  1.64147084e+01  1.64147084e+01  1.64147084e+01  1.74195111e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.08837243944686  E_coul = 54.53638038398762
cycle= 5 E= -125.551992055459  delta_E= -1e-11  |g|= 9.33e-08  |ddm|= 2.73e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.08837243944686  E_coul = 54.53638038398762
  HOMO = -0.747718963347692  LUMO = 2.3711184539507
  mo_energy =
[-3.14653065e+01 -1.79934241e+00 -7.47718963e-01 -7.47718963e-01
 -7.47718963e-01  2.37111845e+00  2.37111845e+00  2.37111845e+00
  1.64147083e+01  1.64147083e+01  1.64147083e+01  1.74195110e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.0883726706374  E_coul = 54.5363806151783
Extra cycle  E= -125.551992055459  delta_E= 1.42e-13  |g|= 2.41e-08  |ddm|= 3.12e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 123.04651311819981
E1 = -180.0883726706374  E_coul = 54.5363806151783
init E= -125.551992055459
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.747718948003639  LUMO = 2.37111846577339
  mo_energy =
[-3.14653065e+01 -1.79934239e+00 -7.47718948e-01 -7.47718948e-01
 -7.47718948e-01  2.37111847e+00  2.37111847e+00  2.37111847e+00
  1.64147083e+01  1.64147083e+01  1.64147083e+01  1.74195110e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.08837260455314  E_coul = 54.53638054909385
cycle= 1 E= -125.551992055459  delta_E= -1.99e-13  |g|= 6.9e-09  |ddm|= 9.35e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.08837260455314  E_coul = 54.53638054909385
  HOMO = -0.74771895244553  LUMO = 2.37111846235579
  mo_energy =
[-3.14653065e+01 -1.79934239e+00 -7.47718952e-01 -7.47718952e-01
 -7.47718952e-01  2.37111846e+00  2.37111846e+00  2.37111846e+00
  1.64147083e+01  1.64147083e+01  1.64147083e+01  1.74195110e+02
  1.68121285e+03  6.47655353e+03]
E1 = -180.08837262327643  E_coul = 54.53638056781744
Extra cycle  E= -125.551992055459  delta_E= 3.13e-13  |g|= 1.95e-09  |ddm|= 2.63e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766709e+03 8.69931774e-01 1.29843641e+03 1.96158061e+02
 2.37187508e+01 1.15292571e+01 5.86379814e-01 2.26418736e+00]
grad_E = [-4.24666155e-06 -5.92566956e-01 -1.31144547e-06  1.90784879e-02
  3.03960659e-02  2.47432007e-02  8.03607932e-01 -3.61324791e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707286        1
[INPUT] 0    0    [1    /1   ]  1.03825839855        1
[INPUT] 0    0    [1    /1   ]  1298.43628336        1
[INPUT] 0    0    [1    /1   ]  196.121434547        1
[INPUT] 0    0    [1    /1   ]  23.5057742255        1
[INPUT] 1    0    [1    /1   ]  11.3841645549        1
[INPUT] 1    0    [1    /1   ]  0.494654976302       1
[INPUT] 1    0    [1    /1   ]  2.3602989637         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670728557508, 1.0]], [0, [1.0382583985471912, 1.0]], [0, [1298.436283356418, 1.0]], [0, [196.1214345466735, 1.0]], [0, [23.50577422547664, 1.0]], [1, [11.384164554924803, 1.0]], [1, [0.4946549763020107, 1.0]], [1, [2.360298963698785, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707286]
bas 1, expnt(s) = [1.0382584]
bas 2, expnt(s) = [1298.43628336]
bas 3, expnt(s) = [196.12143455]
bas 4, expnt(s) = [23.50577423]
bas 5, expnt(s) = [11.38416455]
bas 6, expnt(s) = [0.49465498]
bas 7, expnt(s) = [2.36029896]
CPU time:        35.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766707e+03 7.40714874e+02 1.03825840e+00 2.59862800e+00
 1.29843628e+03 5.46487844e+02 1.96121435e+02 1.32406352e+02
 2.35057742e+01 2.69709314e+01 1.13841646e+01 6.10043562e+01
 4.94654976e-01 1.21021455e+00 2.36029896e+00 8.53479634e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.912856235442991
cond(S) = 123.04166909492015
E1 = -179.57362373496466  E_coul = 55.09593129325682
init E= -124.477692441708
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.744303012323302  LUMO = 2.10128957873302
  mo_energy =
[-3.12745020e+01 -1.76022159e+00 -7.44303012e-01 -7.44303012e-01
 -7.44303012e-01  2.10128958e+00  2.10128958e+00  2.10128958e+00
  1.64098555e+01  1.64098555e+01  1.64098555e+01  1.74083266e+02
  1.68089249e+03  6.47622230e+03]
E1 = -179.79597541521875  E_coul = 54.16481395499905
cycle= 1 E= -125.63116146022  delta_E= -1.15  |g|= 0.116  |ddm|= 0.268
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158388
diis-c [-0.0250869  1.       ]
  HOMO = -0.783880300286245  LUMO = 2.08410178432486
  mo_energy =
[-3.15397327e+01 -1.84225533e+00 -7.83880300e-01 -7.83880300e-01
 -7.83880300e-01  2.08410178e+00  2.08410178e+00  2.08410178e+00
  1.62581474e+01  1.62581474e+01  1.62581474e+01  1.73884622e+02
  1.68069984e+03  6.47603621e+03]
E1 = -180.06167291830693  E_coul = 54.42991828775922
cycle= 2 E= -125.631754630548  delta_E= -0.000593  |g|= 0.0293  |ddm|= 0.0343
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0506528
diis-c [-3.35032723e-04  2.30889118e-01  7.69110882e-01]
  HOMO = -0.770242736379596  LUMO = 2.09489129620666
  mo_energy =
[-3.14958159e+01 -1.82504849e+00 -7.70242736e-01 -7.70242736e-01
 -7.70242736e-01  2.09489130e+00  2.09489130e+00  2.09489130e+00
  1.62899708e+01  1.62899708e+01  1.62899708e+01  1.73929648e+02
  1.68074523e+03  6.47608142e+03]
E1 = -179.9898367206092  E_coul = 54.3579997035465
cycle= 3 E= -125.631837017063  delta_E= -8.24e-05  |g|= 0.00116  |ddm|= 0.00928
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00202086
diis-c [-9.37457245e-09 -3.33693755e-03  2.92814716e-02  9.74055466e-01]
  HOMO = -0.770760542431067  LUMO = 2.09449144660733
  mo_energy =
[-3.14975651e+01 -1.82569677e+00 -7.70760542e-01 -7.70760542e-01
 -7.70760542e-01  2.09449145e+00  2.09449145e+00  2.09449145e+00
  1.62887541e+01  1.62887541e+01  1.62887541e+01  1.73927725e+02
  1.68074288e+03  6.47607894e+03]
E1 = -179.99255026126818  E_coul = 54.36071311595454
cycle= 4 E= -125.631837145314  delta_E= -1.28e-07  |g|= 4.24e-06  |ddm|= 0.000349
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.41617e-06
diis-c [-4.73453695e-13  2.48929727e-05 -1.63486242e-04 -9.55848185e-03
  1.00969708e+00]
  HOMO = -0.770762628459548  LUMO = 2.09448983400443
  mo_energy =
[-3.14975700e+01 -1.82569928e+00 -7.70762628e-01 -7.70762628e-01
 -7.70762628e-01  2.09448983e+00  2.09448983e+00  2.09448983e+00
  1.62887499e+01  1.62887499e+01  1.62887499e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.99255930596448  E_coul = 54.36072216064939
cycle= 5 E= -125.631837145315  delta_E= -1.45e-12  |g|= 7.95e-08  |ddm|= 1.12e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -179.99255930596448  E_coul = 54.36072216064939
  HOMO = -0.770762679975323  LUMO = 2.09448979376106
  mo_energy =
[-3.14975701e+01 -1.82569935e+00 -7.70762680e-01 -7.70762680e-01
 -7.70762680e-01  2.09448979e+00  2.09448979e+00  2.09448979e+00
  1.62887498e+01  1.62887498e+01  1.62887498e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.99255954077586  E_coul = 54.360722395461
Extra cycle  E= -125.631837145315  delta_E= 2.42e-13  |g|= 2.58e-08  |ddm|= 2.93e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766707e+03 1.03825840e+00 1.29843628e+03 1.96121435e+02
 2.35057742e+01 1.13841646e+01 4.94654976e-01 2.36029896e+00]
E = -125.63183714531485
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707286        1
[INPUT] 0    0    [1    /1   ]  1.03825839855        1
[INPUT] 0    0    [1    /1   ]  1298.43628336        1
[INPUT] 0    0    [1    /1   ]  196.121434547        1
[INPUT] 0    0    [1    /1   ]  23.5057742255        1
[INPUT] 1    0    [1    /1   ]  11.3841645549        1
[INPUT] 1    0    [1    /1   ]  0.494654976302       1
[INPUT] 1    0    [1    /1   ]  2.3602989637         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670728557508, 1.0]], [0, [1.0382583985471912, 1.0]], [0, [1298.436283356418, 1.0]], [0, [196.1214345466735, 1.0]], [0, [23.50577422547664, 1.0]], [1, [11.384164554924803, 1.0]], [1, [0.4946549763020107, 1.0]], [1, [2.360298963698785, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707286]
bas 1, expnt(s) = [1.0382584]
bas 2, expnt(s) = [1298.43628336]
bas 3, expnt(s) = [196.12143455]
bas 4, expnt(s) = [23.50577423]
bas 5, expnt(s) = [11.38416455]
bas 6, expnt(s) = [0.49465498]
bas 7, expnt(s) = [2.36029896]
CPU time:        35.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766707e+03 7.40714874e+02 1.03825840e+00 2.59862800e+00
 1.29843628e+03 5.46487844e+02 1.96121435e+02 1.32406352e+02
 2.35057742e+01 2.69709314e+01 1.13841646e+01 6.10043562e+01
 4.94654976e-01 1.21021455e+00 2.36029896e+00 8.53479634e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.912856235442991
cond(S) = 123.04166909492015
E1 = -179.57362373496466  E_coul = 55.09593129325682
init E= -124.477692441708
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.744303012323302  LUMO = 2.10128957873302
  mo_energy =
[-3.12745020e+01 -1.76022159e+00 -7.44303012e-01 -7.44303012e-01
 -7.44303012e-01  2.10128958e+00  2.10128958e+00  2.10128958e+00
  1.64098555e+01  1.64098555e+01  1.64098555e+01  1.74083266e+02
  1.68089249e+03  6.47622230e+03]
E1 = -179.79597541521875  E_coul = 54.16481395499905
cycle= 1 E= -125.63116146022  delta_E= -1.15  |g|= 0.116  |ddm|= 0.268
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158388
diis-c [-0.0250869  1.       ]
  HOMO = -0.783880300286245  LUMO = 2.08410178432486
  mo_energy =
[-3.15397327e+01 -1.84225533e+00 -7.83880300e-01 -7.83880300e-01
 -7.83880300e-01  2.08410178e+00  2.08410178e+00  2.08410178e+00
  1.62581474e+01  1.62581474e+01  1.62581474e+01  1.73884622e+02
  1.68069984e+03  6.47603621e+03]
E1 = -180.06167291830693  E_coul = 54.42991828775922
cycle= 2 E= -125.631754630548  delta_E= -0.000593  |g|= 0.0293  |ddm|= 0.0343
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0506528
diis-c [-3.35032723e-04  2.30889118e-01  7.69110882e-01]
  HOMO = -0.770242736379596  LUMO = 2.09489129620666
  mo_energy =
[-3.14958159e+01 -1.82504849e+00 -7.70242736e-01 -7.70242736e-01
 -7.70242736e-01  2.09489130e+00  2.09489130e+00  2.09489130e+00
  1.62899708e+01  1.62899708e+01  1.62899708e+01  1.73929648e+02
  1.68074523e+03  6.47608142e+03]
E1 = -179.9898367206092  E_coul = 54.3579997035465
cycle= 3 E= -125.631837017063  delta_E= -8.24e-05  |g|= 0.00116  |ddm|= 0.00928
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00202086
diis-c [-9.37457245e-09 -3.33693755e-03  2.92814716e-02  9.74055466e-01]
  HOMO = -0.770760542431067  LUMO = 2.09449144660733
  mo_energy =
[-3.14975651e+01 -1.82569677e+00 -7.70760542e-01 -7.70760542e-01
 -7.70760542e-01  2.09449145e+00  2.09449145e+00  2.09449145e+00
  1.62887541e+01  1.62887541e+01  1.62887541e+01  1.73927725e+02
  1.68074288e+03  6.47607894e+03]
E1 = -179.99255026126818  E_coul = 54.36071311595454
cycle= 4 E= -125.631837145314  delta_E= -1.28e-07  |g|= 4.24e-06  |ddm|= 0.000349
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.41617e-06
diis-c [-4.73453695e-13  2.48929727e-05 -1.63486242e-04 -9.55848185e-03
  1.00969708e+00]
  HOMO = -0.770762628459548  LUMO = 2.09448983400443
  mo_energy =
[-3.14975700e+01 -1.82569928e+00 -7.70762628e-01 -7.70762628e-01
 -7.70762628e-01  2.09448983e+00  2.09448983e+00  2.09448983e+00
  1.62887499e+01  1.62887499e+01  1.62887499e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.99255930596448  E_coul = 54.36072216064939
cycle= 5 E= -125.631837145315  delta_E= -1.45e-12  |g|= 7.95e-08  |ddm|= 1.12e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -179.99255930596448  E_coul = 54.36072216064939
  HOMO = -0.770762679975323  LUMO = 2.09448979376106
  mo_energy =
[-3.14975701e+01 -1.82569935e+00 -7.70762680e-01 -7.70762680e-01
 -7.70762680e-01  2.09448979e+00  2.09448979e+00  2.09448979e+00
  1.62887498e+01  1.62887498e+01  1.62887498e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.99255954077586  E_coul = 54.360722395461
Extra cycle  E= -125.631837145315  delta_E= 2.42e-13  |g|= 2.58e-08  |ddm|= 2.93e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 123.04166909492015
E1 = -179.99255954077586  E_coul = 54.360722395461
init E= -125.631837145315
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.770762664468772  LUMO = 2.09448980603576
  mo_energy =
[-3.14975701e+01 -1.82569933e+00 -7.70762664e-01 -7.70762664e-01
 -7.70762664e-01  2.09448981e+00  2.09448981e+00  2.09448981e+00
  1.62887498e+01  1.62887498e+01  1.62887498e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.9925594578359  E_coul = 54.360722312520814
cycle= 1 E= -125.631837145315  delta_E= -2.56e-13  |g|= 9.11e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -179.9925594578359  E_coul = 54.360722312520814
  HOMO = -0.770762670001053  LUMO = 2.09448980166118
  mo_energy =
[-3.14975701e+01 -1.82569933e+00 -7.70762670e-01 -7.70762670e-01
 -7.70762670e-01  2.09448980e+00  2.09448980e+00  2.09448980e+00
  1.62887498e+01  1.62887498e+01  1.62887498e+01  1.73927721e+02
  1.68074287e+03  6.47607893e+03]
E1 = -179.99255948698868  E_coul = 54.360722341673664
Extra cycle  E= -125.631837145315  delta_E= 8.53e-14  |g|= 3.2e-09  |ddm|= 3.76e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94766707e+03 1.03825840e+00 1.29843628e+03 1.96121435e+02
 2.35057742e+01 1.13841646e+01 4.94654976e-01 2.36029896e+00]
grad_E = [-3.17092523e-06  1.57840070e-01 -1.08066883e-06  2.00533053e-02
  4.14997955e-04 -3.65508160e-03 -3.89990852e-01  2.93341815e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6670744         1
[INPUT] 0    0    [1    /1   ]  1.00624072           1
[INPUT] 0    0    [1    /1   ]  1298.43627781        1
[INPUT] 0    0    [1    /1   ]  196.10217618         1
[INPUT] 0    0    [1    /1   ]  23.4951316356        1
[INPUT] 1    0    [1    /1   ]  11.3650693705        1
[INPUT] 1    0    [1    /1   ]  0.539914043607       1
[INPUT] 1    0    [1    /1   ]  2.39188033037        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.667074398812, 1.0]], [0, [1.006240719996551, 1.0]], [0, [1298.4362778053098, 1.0]], [0, [196.10217618028878, 1.0]], [0, [23.495131635615984, 1.0]], [1, [11.365069370529822, 1.0]], [1, [0.5399140436068929, 1.0]], [1, [2.391880330368632, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6670744]
bas 1, expnt(s) = [1.00624072]
bas 2, expnt(s) = [1298.43627781]
bas 3, expnt(s) = [196.10217618]
bas 4, expnt(s) = [23.49513164]
bas 5, expnt(s) = [11.36506937]
bas 6, expnt(s) = [0.53991404]
bas 7, expnt(s) = [2.39188033]
CPU time:        38.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766707e+03 7.40714875e+02 1.00624072e+00 2.53829118e+00
 1.29843628e+03 5.46487843e+02 1.96102176e+02 1.32396601e+02
 2.34951316e+01 2.69617723e+01 1.13650694e+01 6.08764763e+01
 5.39914044e-01 1.35017534e+00 2.39188033e+00 8.67778132e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.916079084189413
cond(S) = 123.00497443666612
E1 = -179.52521512966345  E_coul = 55.03094220547687
init E= -124.494272924187
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748578355861353  LUMO = 2.27337752159802
  mo_energy =
[-3.12862612e+01 -1.77292561e+00 -7.48578356e-01 -7.48578356e-01
 -7.48578356e-01  2.27337752e+00  2.27337752e+00  2.27337752e+00
  1.66102176e+01  1.66102176e+01  1.66102176e+01  1.73919121e+02
  1.68071491e+03  6.47604306e+03]
E1 = -180.13994158675865  E_coul = 54.49753650574917
cycle= 1 E= -125.642405081009  delta_E= -1.15  |g|= 0.0883  |ddm|= 0.203
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0873066
diis-c [-0.00762245  1.        ]
  HOMO = -0.758491873731389  LUMO = 2.27754657395395
  mo_energy =
[-3.14833304e+01 -1.81374241e+00 -7.58491874e-01 -7.58491874e-01
 -7.58491874e-01  2.27754657e+00  2.27754657e+00  2.27754657e+00
  1.65194358e+01  1.65194358e+01  1.65194358e+01  1.73787534e+02
  1.68058259e+03  6.47591556e+03]
E1 = -180.26651772074513  E_coul = 54.62395546127778
cycle= 2 E= -125.642562259467  delta_E= -0.000157  |g|= 0.0138  |ddm|= 0.0175
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0239526
diis-c [-1.95903746e-04  1.84042396e-01  8.15957604e-01]
  HOMO = -0.751521707485145  LUMO = 2.28319053361623
  mo_energy =
[-3.14612090e+01 -1.80517669e+00 -7.51521707e-01 -7.51521707e-01
 -7.51521707e-01  2.28319053e+00  2.28319053e+00  2.28319053e+00
  1.65355248e+01  1.65355248e+01  1.65355248e+01  1.73810034e+02
  1.68060477e+03  6.47593749e+03]
E1 = -180.23319723833538  E_coul = 54.590617701213056
cycle= 3 E= -125.642579537122  delta_E= -1.73e-05  |g|= 0.00107  |ddm|= 0.0044
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00186076
diis-c [-5.33162085e-09 -2.29649457e-03  6.64809542e-02  9.35815540e-01]
  HOMO = -0.752003766419666  LUMO = 2.28279961216565
  mo_energy =
[-3.14629769e+01 -1.80577783e+00 -7.52003766e-01 -7.52003766e-01
 -7.52003766e-01  2.28279961e+00  2.28279961e+00  2.28279961e+00
  1.65343394e+01  1.65343394e+01  1.65343394e+01  1.73808114e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356750356309  E_coul = 54.593095387663546
cycle= 4 E= -125.642579647967  delta_E= -1.11e-07  |g|= 5.37e-06  |ddm|= 0.000331
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.50142e-06
diis-c [-1.02582172e-12  3.23426941e-05 -9.08358825e-04 -7.70754232e-03
  1.00858356e+00]
  HOMO = -0.752001074686613  LUMO = 2.28280180503719
  mo_energy =
[-3.14629703e+01 -1.80577464e+00 -7.52001075e-01 -7.52001075e-01
 -7.52001075e-01  2.28280181e+00  2.28280181e+00  2.28280181e+00
  1.65343450e+01  1.65343450e+01  1.65343450e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356642104801  E_coul = 54.59308456251042
cycle= 5 E= -125.64257964797  delta_E= -2.33e-12  |g|= 1.34e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.2356642104801  E_coul = 54.59308456251042
  HOMO = -0.752000986699476  LUMO = 2.28280187505528
  mo_energy =
[-3.14629701e+01 -1.80577453e+00 -7.52000987e-01 -7.52000987e-01
 -7.52000987e-01  2.28280188e+00  2.28280188e+00  2.28280188e+00
  1.65343451e+01  1.65343451e+01  1.65343451e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356638432603  E_coul = 54.59308419529044
Extra cycle  E= -125.64257964797  delta_E= -1.99e-13  |g|= 3.97e-08  |ddm|= 4.68e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766707e+03 1.00624072e+00 1.29843628e+03 1.96102176e+02
 2.34951316e+01 1.13650694e+01 5.39914044e-01 2.39188033e+00]
E = -125.64257964796988
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6670744         1
[INPUT] 0    0    [1    /1   ]  1.00624072           1
[INPUT] 0    0    [1    /1   ]  1298.43627781        1
[INPUT] 0    0    [1    /1   ]  196.10217618         1
[INPUT] 0    0    [1    /1   ]  23.4951316356        1
[INPUT] 1    0    [1    /1   ]  11.3650693705        1
[INPUT] 1    0    [1    /1   ]  0.539914043607       1
[INPUT] 1    0    [1    /1   ]  2.39188033037        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.667074398812, 1.0]], [0, [1.006240719996551, 1.0]], [0, [1298.4362778053098, 1.0]], [0, [196.10217618028878, 1.0]], [0, [23.495131635615984, 1.0]], [1, [11.365069370529822, 1.0]], [1, [0.5399140436068929, 1.0]], [1, [2.391880330368632, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6670744]
bas 1, expnt(s) = [1.00624072]
bas 2, expnt(s) = [1298.43627781]
bas 3, expnt(s) = [196.10217618]
bas 4, expnt(s) = [23.49513164]
bas 5, expnt(s) = [11.36506937]
bas 6, expnt(s) = [0.53991404]
bas 7, expnt(s) = [2.39188033]
CPU time:        38.82
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766707e+03 7.40714875e+02 1.00624072e+00 2.53829118e+00
 1.29843628e+03 5.46487843e+02 1.96102176e+02 1.32396601e+02
 2.34951316e+01 2.69617723e+01 1.13650694e+01 6.08764763e+01
 5.39914044e-01 1.35017534e+00 2.39188033e+00 8.67778132e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.916079084189413
cond(S) = 123.00497443666612
E1 = -179.52521512966345  E_coul = 55.03094220547687
init E= -124.494272924187
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748578355861353  LUMO = 2.27337752159802
  mo_energy =
[-3.12862612e+01 -1.77292561e+00 -7.48578356e-01 -7.48578356e-01
 -7.48578356e-01  2.27337752e+00  2.27337752e+00  2.27337752e+00
  1.66102176e+01  1.66102176e+01  1.66102176e+01  1.73919121e+02
  1.68071491e+03  6.47604306e+03]
E1 = -180.13994158675865  E_coul = 54.49753650574917
cycle= 1 E= -125.642405081009  delta_E= -1.15  |g|= 0.0883  |ddm|= 0.203
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0873066
diis-c [-0.00762245  1.        ]
  HOMO = -0.758491873731389  LUMO = 2.27754657395395
  mo_energy =
[-3.14833304e+01 -1.81374241e+00 -7.58491874e-01 -7.58491874e-01
 -7.58491874e-01  2.27754657e+00  2.27754657e+00  2.27754657e+00
  1.65194358e+01  1.65194358e+01  1.65194358e+01  1.73787534e+02
  1.68058259e+03  6.47591556e+03]
E1 = -180.26651772074513  E_coul = 54.62395546127778
cycle= 2 E= -125.642562259467  delta_E= -0.000157  |g|= 0.0138  |ddm|= 0.0175
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0239526
diis-c [-1.95903746e-04  1.84042396e-01  8.15957604e-01]
  HOMO = -0.751521707485145  LUMO = 2.28319053361623
  mo_energy =
[-3.14612090e+01 -1.80517669e+00 -7.51521707e-01 -7.51521707e-01
 -7.51521707e-01  2.28319053e+00  2.28319053e+00  2.28319053e+00
  1.65355248e+01  1.65355248e+01  1.65355248e+01  1.73810034e+02
  1.68060477e+03  6.47593749e+03]
E1 = -180.23319723833538  E_coul = 54.590617701213056
cycle= 3 E= -125.642579537122  delta_E= -1.73e-05  |g|= 0.00107  |ddm|= 0.0044
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00186076
diis-c [-5.33162085e-09 -2.29649457e-03  6.64809542e-02  9.35815540e-01]
  HOMO = -0.752003766419666  LUMO = 2.28279961216565
  mo_energy =
[-3.14629769e+01 -1.80577783e+00 -7.52003766e-01 -7.52003766e-01
 -7.52003766e-01  2.28279961e+00  2.28279961e+00  2.28279961e+00
  1.65343394e+01  1.65343394e+01  1.65343394e+01  1.73808114e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356750356309  E_coul = 54.593095387663546
cycle= 4 E= -125.642579647967  delta_E= -1.11e-07  |g|= 5.37e-06  |ddm|= 0.000331
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.50142e-06
diis-c [-1.02582172e-12  3.23426941e-05 -9.08358825e-04 -7.70754232e-03
  1.00858356e+00]
  HOMO = -0.752001074686613  LUMO = 2.28280180503719
  mo_energy =
[-3.14629703e+01 -1.80577464e+00 -7.52001075e-01 -7.52001075e-01
 -7.52001075e-01  2.28280181e+00  2.28280181e+00  2.28280181e+00
  1.65343450e+01  1.65343450e+01  1.65343450e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356642104801  E_coul = 54.59308456251042
cycle= 5 E= -125.64257964797  delta_E= -2.33e-12  |g|= 1.34e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.2356642104801  E_coul = 54.59308456251042
  HOMO = -0.752000986699476  LUMO = 2.28280187505528
  mo_energy =
[-3.14629701e+01 -1.80577453e+00 -7.52000987e-01 -7.52000987e-01
 -7.52000987e-01  2.28280188e+00  2.28280188e+00  2.28280188e+00
  1.65343451e+01  1.65343451e+01  1.65343451e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.2356638432603  E_coul = 54.59308419529044
Extra cycle  E= -125.64257964797  delta_E= -1.99e-13  |g|= 3.97e-08  |ddm|= 4.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 123.00497443666612
E1 = -180.2356638432603  E_coul = 54.59308419529044
init E= -125.64257964797
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.752001010878626  LUMO = 2.28280185543133
  mo_energy =
[-3.14629701e+01 -1.80577456e+00 -7.52001011e-01 -7.52001011e-01
 -7.52001011e-01  2.28280186e+00  2.28280186e+00  2.28280186e+00
  1.65343451e+01  1.65343451e+01  1.65343451e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.235663962687  E_coul = 54.593084314717125
cycle= 1 E= -125.64257964797  delta_E=    0  |g|= 1.29e-08  |ddm|= 1.59e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.235663962687  E_coul = 54.593084314717125
  HOMO = -0.75200100292609  LUMO = 2.282801861877
  mo_energy =
[-3.14629701e+01 -1.80577455e+00 -7.52001003e-01 -7.52001003e-01
 -7.52001003e-01  2.28280186e+00  2.28280186e+00  2.28280186e+00
  1.65343451e+01  1.65343451e+01  1.65343451e+01  1.73808121e+02
  1.68060253e+03  6.47593515e+03]
E1 = -180.235663924083  E_coul = 54.59308427611327
Extra cycle  E= -125.64257964797  delta_E= 1.42e-13  |g|= 4.18e-09  |ddm|= 5.11e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766707e+03 1.00624072e+00 1.29843628e+03 1.96102176e+02
 2.34951316e+01 1.13650694e+01 5.39914044e-01 2.39188033e+00]
grad_E = [-3.16420821e-06  4.55743262e-02 -1.07903692e-06  2.00341790e-02
  1.68495174e-03 -1.94488314e-03  8.21349310e-02 -5.93336727e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707621        1
[INPUT] 0    0    [1    /1   ]  0.994104836765       1
[INPUT] 0    0    [1    /1   ]  1298.4362713         1
[INPUT] 0    0    [1    /1   ]  196.07593961         1
[INPUT] 0    0    [1    /1   ]  23.4930160035        1
[INPUT] 1    0    [1    /1   ]  11.3443121467        1
[INPUT] 1    0    [1    /1   ]  0.541974059229       1
[INPUT] 1    0    [1    /1   ]  2.41798961671        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670762072688, 1.0]], [0, [0.994104836765344, 1.0]], [0, [1298.4362712978057, 1.0]], [0, [196.07593961029613, 1.0]], [0, [23.493016003523948, 1.0]], [1, [11.344312146672777, 1.0]], [1, [0.5419740592285854, 1.0]], [1, [2.4179896167105612, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707621]
bas 1, expnt(s) = [0.99410484]
bas 2, expnt(s) = [1298.4362713]
bas 3, expnt(s) = [196.07593961]
bas 4, expnt(s) = [23.493016]
bas 5, expnt(s) = [11.34431215]
bas 6, expnt(s) = [0.54197406]
bas 7, expnt(s) = [2.41798962]
CPU time:        41.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766708e+03 7.40714875e+02 9.94104837e-01 2.51529637e+00
 1.29843627e+03 5.46487841e+02 1.96075940e+02 1.32383315e+02
 2.34930160e+01 2.69599514e+01 1.13443121e+01 6.07375266e+01
 5.41974059e-01 1.35661782e+00 2.41798962e+00 8.79634860e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917840037139294
cond(S) = 122.98533074787348
E1 = -179.48507565120184  E_coul = 54.98991413068129
init E= -124.495161520521
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.751470461792602  LUMO = 2.29213780709568
  mo_energy =
[-3.12933237e+01 -1.77862686e+00 -7.51470462e-01 -7.51470462e-01
 -7.51470462e-01  2.29213781e+00  2.29213781e+00  2.29213781e+00
  1.66712528e+01  1.66712528e+01  1.66712528e+01  1.73844956e+02
  1.68059181e+03  6.47590913e+03]
E1 = -180.09453338131854  E_coul = 54.450391297593896
cycle= 1 E= -125.644142083725  delta_E= -1.15  |g|= 0.0891  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0890755
diis-c [-0.00793445  1.        ]
  HOMO = -0.762935981929704  LUMO = 2.29459566984464
  mo_energy =
[-3.14890710e+01 -1.81911492e+00 -7.62935982e-01 -7.62935982e-01
 -7.62935982e-01  2.29459567e+00  2.29459567e+00  2.29459567e+00
  1.65798540e+01  1.65798540e+01  1.65798540e+01  1.73715176e+02
  1.68045963e+03  6.47578125e+03]
E1 = -180.2234762238769  E_coul = 54.579171555262654
cycle= 2 E= -125.644304668614  delta_E= -0.000163  |g|= 0.0141  |ddm|= 0.0176
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.024504
diis-c [-1.95047204e-04  1.86243820e-01  8.13756180e-01]
  HOMO = -0.75586269495928  LUMO = 2.3003750543513
  mo_energy =
[-3.14665128e+01 -1.81047290e+00 -7.55862695e-01 -7.55862695e-01
 -7.55862695e-01  2.30037505e+00  2.30037505e+00  2.30037505e+00
  1.65962111e+01  1.65962111e+01  1.65962111e+01  1.73738129e+02
  1.68048226e+03  6.47580362e+03]
E1 = -180.18947576479636  E_coul = 54.54515298293144
cycle= 3 E= -125.644322781865  delta_E= -1.81e-05  |g|= 0.00107  |ddm|= 0.00447
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00186672
diis-c [-5.16407212e-09 -2.38694957e-03  6.48502152e-02  9.37536734e-01]
  HOMO = -0.756345483677702  LUMO = 2.29998041717368
  mo_energy =
[-3.14682633e+01 -1.81106915e+00 -7.56345484e-01 -7.56345484e-01
 -7.56345484e-01  2.29998042e+00  2.29998042e+00  2.29998042e+00
  1.65950326e+01  1.65950326e+01  1.65950326e+01  1.73736227e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193944628216  E_coul = 54.54761655411778
cycle= 4 E= -125.644322892164  delta_E= -1.1e-07  |g|= 3.57e-06  |ddm|= 0.000327
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.30583e-06
diis-c [-4.63093798e-13  2.39935714e-05 -6.33612125e-04 -5.81181985e-03
  1.00642144e+00]
  HOMO = -0.756343720838464  LUMO = 2.29998187972366
  mo_energy =
[-3.14682589e+01 -1.81106706e+00 -7.56343721e-01 -7.56343721e-01
 -7.56343721e-01  2.29998188e+00  2.29998188e+00  2.29998188e+00
  1.65950362e+01  1.65950362e+01  1.65950362e+01  1.73736231e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193229470326  E_coul = 54.547609402537965
cycle= 5 E= -125.644322892165  delta_E= -9.09e-13  |g|= 9.63e-08  |ddm|= 8.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.19193229470326  E_coul = 54.547609402537965
  HOMO = -0.756343657978877  LUMO = 2.29998193018478
  mo_energy =
[-3.14682588e+01 -1.81106699e+00 -7.56343658e-01 -7.56343658e-01
 -7.56343658e-01  2.29998193e+00  2.29998193e+00  2.29998193e+00
  1.65950364e+01  1.65950364e+01  1.65950364e+01  1.73736232e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193203133162  E_coul = 54.54760913916638
Extra cycle  E= -125.644322892165  delta_E= 5.68e-14  |g|= 2.86e-08  |ddm|= 3.34e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766708e+03 9.94104837e-01 1.29843627e+03 1.96075940e+02
 2.34930160e+01 1.13443121e+01 5.41974059e-01 2.41798962e+00]
E = -125.64432289216523
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707621        1
[INPUT] 0    0    [1    /1   ]  0.994104836765       1
[INPUT] 0    0    [1    /1   ]  1298.4362713         1
[INPUT] 0    0    [1    /1   ]  196.07593961         1
[INPUT] 0    0    [1    /1   ]  23.4930160035        1
[INPUT] 1    0    [1    /1   ]  11.3443121467        1
[INPUT] 1    0    [1    /1   ]  0.541974059229       1
[INPUT] 1    0    [1    /1   ]  2.41798961671        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670762072688, 1.0]], [0, [0.994104836765344, 1.0]], [0, [1298.4362712978057, 1.0]], [0, [196.07593961029613, 1.0]], [0, [23.493016003523948, 1.0]], [1, [11.344312146672777, 1.0]], [1, [0.5419740592285854, 1.0]], [1, [2.4179896167105612, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707621]
bas 1, expnt(s) = [0.99410484]
bas 2, expnt(s) = [1298.4362713]
bas 3, expnt(s) = [196.07593961]
bas 4, expnt(s) = [23.493016]
bas 5, expnt(s) = [11.34431215]
bas 6, expnt(s) = [0.54197406]
bas 7, expnt(s) = [2.41798962]
CPU time:        41.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766708e+03 7.40714875e+02 9.94104837e-01 2.51529637e+00
 1.29843627e+03 5.46487841e+02 1.96075940e+02 1.32383315e+02
 2.34930160e+01 2.69599514e+01 1.13443121e+01 6.07375266e+01
 5.41974059e-01 1.35661782e+00 2.41798962e+00 8.79634860e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917840037139294
cond(S) = 122.98533074787348
E1 = -179.48507565120184  E_coul = 54.98991413068129
init E= -124.495161520521
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.751470461792602  LUMO = 2.29213780709568
  mo_energy =
[-3.12933237e+01 -1.77862686e+00 -7.51470462e-01 -7.51470462e-01
 -7.51470462e-01  2.29213781e+00  2.29213781e+00  2.29213781e+00
  1.66712528e+01  1.66712528e+01  1.66712528e+01  1.73844956e+02
  1.68059181e+03  6.47590913e+03]
E1 = -180.09453338131854  E_coul = 54.450391297593896
cycle= 1 E= -125.644142083725  delta_E= -1.15  |g|= 0.0891  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0890755
diis-c [-0.00793445  1.        ]
  HOMO = -0.762935981929704  LUMO = 2.29459566984464
  mo_energy =
[-3.14890710e+01 -1.81911492e+00 -7.62935982e-01 -7.62935982e-01
 -7.62935982e-01  2.29459567e+00  2.29459567e+00  2.29459567e+00
  1.65798540e+01  1.65798540e+01  1.65798540e+01  1.73715176e+02
  1.68045963e+03  6.47578125e+03]
E1 = -180.2234762238769  E_coul = 54.579171555262654
cycle= 2 E= -125.644304668614  delta_E= -0.000163  |g|= 0.0141  |ddm|= 0.0176
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.024504
diis-c [-1.95047204e-04  1.86243820e-01  8.13756180e-01]
  HOMO = -0.75586269495928  LUMO = 2.3003750543513
  mo_energy =
[-3.14665128e+01 -1.81047290e+00 -7.55862695e-01 -7.55862695e-01
 -7.55862695e-01  2.30037505e+00  2.30037505e+00  2.30037505e+00
  1.65962111e+01  1.65962111e+01  1.65962111e+01  1.73738129e+02
  1.68048226e+03  6.47580362e+03]
E1 = -180.18947576479636  E_coul = 54.54515298293144
cycle= 3 E= -125.644322781865  delta_E= -1.81e-05  |g|= 0.00107  |ddm|= 0.00447
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00186672
diis-c [-5.16407212e-09 -2.38694957e-03  6.48502152e-02  9.37536734e-01]
  HOMO = -0.756345483677702  LUMO = 2.29998041717368
  mo_energy =
[-3.14682633e+01 -1.81106915e+00 -7.56345484e-01 -7.56345484e-01
 -7.56345484e-01  2.29998042e+00  2.29998042e+00  2.29998042e+00
  1.65950326e+01  1.65950326e+01  1.65950326e+01  1.73736227e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193944628216  E_coul = 54.54761655411778
cycle= 4 E= -125.644322892164  delta_E= -1.1e-07  |g|= 3.57e-06  |ddm|= 0.000327
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.30583e-06
diis-c [-4.63093798e-13  2.39935714e-05 -6.33612125e-04 -5.81181985e-03
  1.00642144e+00]
  HOMO = -0.756343720838464  LUMO = 2.29998187972366
  mo_energy =
[-3.14682589e+01 -1.81106706e+00 -7.56343721e-01 -7.56343721e-01
 -7.56343721e-01  2.29998188e+00  2.29998188e+00  2.29998188e+00
  1.65950362e+01  1.65950362e+01  1.65950362e+01  1.73736231e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193229470326  E_coul = 54.547609402537965
cycle= 5 E= -125.644322892165  delta_E= -9.09e-13  |g|= 9.63e-08  |ddm|= 8.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.19193229470326  E_coul = 54.547609402537965
  HOMO = -0.756343657978877  LUMO = 2.29998193018478
  mo_energy =
[-3.14682588e+01 -1.81106699e+00 -7.56343658e-01 -7.56343658e-01
 -7.56343658e-01  2.29998193e+00  2.29998193e+00  2.29998193e+00
  1.65950364e+01  1.65950364e+01  1.65950364e+01  1.73736232e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193203133162  E_coul = 54.54760913916638
Extra cycle  E= -125.644322892165  delta_E= 5.68e-14  |g|= 2.86e-08  |ddm|= 3.34e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.98533074787348
E1 = -180.19193203133162  E_coul = 54.54760913916638
init E= -125.644322892165
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.756343675337459  LUMO = 2.29998191597161
  mo_energy =
[-3.14682588e+01 -1.81106701e+00 -7.56343675e-01 -7.56343675e-01
 -7.56343675e-01  2.29998192e+00  2.29998192e+00  2.29998192e+00
  1.65950363e+01  1.65950363e+01  1.65950363e+01  1.73736232e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193211725448  E_coul = 54.54760922508927
cycle= 1 E= -125.644322892165  delta_E= 2.84e-14  |g|= 9.35e-09  |ddm|= 1.14e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.19193211725448  E_coul = 54.54760922508927
  HOMO = -0.756343669610951  LUMO = 2.29998192065418
  mo_energy =
[-3.14682588e+01 -1.81106700e+00 -7.56343670e-01 -7.56343670e-01
 -7.56343670e-01  2.29998192e+00  2.29998192e+00  2.29998192e+00
  1.65950363e+01  1.65950363e+01  1.65950363e+01  1.73736232e+02
  1.68048002e+03  6.47580128e+03]
E1 = -180.19193208938765  E_coul = 54.547609197222336
Extra cycle  E= -125.644322892165  delta_E= -1.14e-13  |g|= 3.03e-09  |ddm|= 3.67e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766708e+03 9.94104837e-01 1.29843627e+03 1.96075940e+02
 2.34930160e+01 1.13443121e+01 5.41974059e-01 2.41798962e+00]
grad_E = [-3.18498416e-06 -6.77343653e-03 -1.08677201e-06  2.00192249e-02
  2.36572574e-03 -5.30203409e-03  2.65636220e-02 -3.00396480e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707983        1
[INPUT] 0    0    [1    /1   ]  0.989953089739       1
[INPUT] 0    0    [1    /1   ]  1298.43625278        1
[INPUT] 0    0    [1    /1   ]  196.022164177        1
[INPUT] 0    0    [1    /1   ]  23.4641671161        1
[INPUT] 1    0    [1    /1   ]  11.3210345135        1
[INPUT] 1    0    [1    /1   ]  0.547591341974       1
[INPUT] 1    0    [1    /1   ]  2.45564541633        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670798320915, 1.0]], [0, [0.9899530897393579, 1.0]], [0, [1298.436252776546, 1.0]], [0, [196.02216417674825, 1.0]], [0, [23.46416711606635, 1.0]], [1, [11.321034513450849, 1.0]], [1, [0.5475913419738241, 1.0]], [1, [2.455645416326583, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707983]
bas 1, expnt(s) = [0.98995309]
bas 2, expnt(s) = [1298.43625278]
bas 3, expnt(s) = [196.02216418]
bas 4, expnt(s) = [23.46416712]
bas 5, expnt(s) = [11.32103451]
bas 6, expnt(s) = [0.54759134]
bas 7, expnt(s) = [2.45564542]
CPU time:        44.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766708e+03 7.40714876e+02 9.89953090e-01 2.50741365e+00
 1.29843625e+03 5.46487835e+02 1.96022164e+02 1.32356084e+02
 2.34641671e+01 2.69351179e+01 1.13210345e+01 6.05817808e+01
 5.47591342e-01 1.37421634e+00 2.45564542e+00 8.96791460e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917759206289553
cond(S) = 122.94736996815598
E1 = -179.46814930724355  E_coul = 54.97479740164805
init E= -124.493351905596
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.752285064472774  LUMO = 2.3303521625955
  mo_energy =
[-3.12974608e+01 -1.78029683e+00 -7.52285064e-01 -7.52285064e-01
 -7.52285064e-01  2.33035216e+00  2.33035216e+00  2.33035216e+00
  1.67810245e+01  1.67810245e+01  1.67810245e+01  1.73686415e+02
  1.68031803e+03  6.47561440e+03]
E1 = -180.09378670598812  E_coul = 54.44826254155225
cycle= 1 E= -125.645524164436  delta_E= -1.15  |g|= 0.0908  |ddm|= 0.206
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0901265
diis-c [-0.00812279  1.        ]
  HOMO = -0.763436104744033  LUMO = 2.33260748144738
  mo_energy =
[-3.14889712e+01 -1.81946371e+00 -7.63436105e-01 -7.63436105e-01
 -7.63436105e-01  2.33260748e+00  2.33260748e+00  2.33260748e+00
  1.66915433e+01  1.66915433e+01  1.66915433e+01  1.73560154e+02
  1.68018633e+03  6.47548612e+03]
E1 = -180.21882719178421  E_coul = 54.57314859155298
cycle= 2 E= -125.645678600231  delta_E= -0.000154  |g|= 0.0138  |ddm|= 0.0169
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0238618
diis-c [-1.96280883e-04  1.78278353e-01  8.21721647e-01]
  HOMO = -0.756525256750232  LUMO = 2.33834224517591
  mo_energy =
[-3.14667995e+01 -1.81103601e+00 -7.56525257e-01 -7.56525257e-01
 -7.56525257e-01  2.33834225e+00  2.33834225e+00  2.33834225e+00
  1.67075719e+01  1.67075719e+01  1.67075719e+01  1.73582702e+02
  1.68020849e+03  6.47550800e+03]
E1 = -180.18550608687704  E_coul = 54.53981035290646
cycle= 3 E= -125.645695733971  delta_E= -1.71e-05  |g|= 0.00119  |ddm|= 0.00438
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00207901
diis-c [-5.85718185e-09 -2.55264532e-03  7.37525008e-02  9.28800144e-01]
  HOMO = -0.757064572341025  LUMO = 2.3378947768061
  mo_energy =
[-3.14687052e+01 -1.81169775e+00 -7.57064572e-01 -7.57064572e-01
 -7.57064572e-01  2.33789478e+00  2.33789478e+00  2.33789478e+00
  1.67062722e+01  1.67062722e+01  1.67062722e+01  1.73580643e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.18821024969637  E_coul = 54.54251438142453
cycle= 4 E= -125.645695868272  delta_E= -1.34e-07  |g|= 1.4e-06  |ddm|= 0.000357
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44582e-06
diis-c [-1.05931123e-13  1.88132075e-05 -5.32220074e-04 -5.56326957e-03
  1.00607668e+00]
  HOMO = -0.757063927455552  LUMO = 2.33789535179099
  mo_energy =
[-3.14687035e+01 -1.81169698e+00 -7.57063927e-01 -7.57063927e-01
 -7.57063927e-01  2.33789535e+00  2.33789535e+00  2.33789535e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.18820753616973  E_coul = 54.54251166789768
cycle= 5 E= -125.645695868272  delta_E= -1.99e-13  |g|= 3.61e-08  |ddm|= 3.39e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.18820753616973  E_coul = 54.54251166789768
  HOMO = -0.757063903990066  LUMO = 2.33789537073156
  mo_energy =
[-3.14687034e+01 -1.81169695e+00 -7.57063904e-01 -7.57063904e-01
 -7.57063904e-01  2.33789537e+00  2.33789537e+00  2.33789537e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.1882074380488  E_coul = 54.542511569776785
Extra cycle  E= -125.645695868272  delta_E= 2.84e-14  |g|= 1.07e-08  |ddm|= 1.24e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766708e+03 9.89953090e-01 1.29843625e+03 1.96022164e+02
 2.34641671e+01 1.13210345e+01 5.47591342e-01 2.45564542e+00]
E = -125.64569586827201
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66707983        1
[INPUT] 0    0    [1    /1   ]  0.989953089739       1
[INPUT] 0    0    [1    /1   ]  1298.43625278        1
[INPUT] 0    0    [1    /1   ]  196.022164177        1
[INPUT] 0    0    [1    /1   ]  23.4641671161        1
[INPUT] 1    0    [1    /1   ]  11.3210345135        1
[INPUT] 1    0    [1    /1   ]  0.547591341974       1
[INPUT] 1    0    [1    /1   ]  2.45564541633        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670798320915, 1.0]], [0, [0.9899530897393579, 1.0]], [0, [1298.436252776546, 1.0]], [0, [196.02216417674825, 1.0]], [0, [23.46416711606635, 1.0]], [1, [11.321034513450849, 1.0]], [1, [0.5475913419738241, 1.0]], [1, [2.455645416326583, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66707983]
bas 1, expnt(s) = [0.98995309]
bas 2, expnt(s) = [1298.43625278]
bas 3, expnt(s) = [196.02216418]
bas 4, expnt(s) = [23.46416712]
bas 5, expnt(s) = [11.32103451]
bas 6, expnt(s) = [0.54759134]
bas 7, expnt(s) = [2.45564542]
CPU time:        44.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766708e+03 7.40714876e+02 9.89953090e-01 2.50741365e+00
 1.29843625e+03 5.46487835e+02 1.96022164e+02 1.32356084e+02
 2.34641671e+01 2.69351179e+01 1.13210345e+01 6.05817808e+01
 5.47591342e-01 1.37421634e+00 2.45564542e+00 8.96791460e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917759206289553
cond(S) = 122.94736996815598
E1 = -179.46814930724355  E_coul = 54.97479740164805
init E= -124.493351905596
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.752285064472774  LUMO = 2.3303521625955
  mo_energy =
[-3.12974608e+01 -1.78029683e+00 -7.52285064e-01 -7.52285064e-01
 -7.52285064e-01  2.33035216e+00  2.33035216e+00  2.33035216e+00
  1.67810245e+01  1.67810245e+01  1.67810245e+01  1.73686415e+02
  1.68031803e+03  6.47561440e+03]
E1 = -180.09378670598812  E_coul = 54.44826254155225
cycle= 1 E= -125.645524164436  delta_E= -1.15  |g|= 0.0908  |ddm|= 0.206
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0901265
diis-c [-0.00812279  1.        ]
  HOMO = -0.763436104744033  LUMO = 2.33260748144738
  mo_energy =
[-3.14889712e+01 -1.81946371e+00 -7.63436105e-01 -7.63436105e-01
 -7.63436105e-01  2.33260748e+00  2.33260748e+00  2.33260748e+00
  1.66915433e+01  1.66915433e+01  1.66915433e+01  1.73560154e+02
  1.68018633e+03  6.47548612e+03]
E1 = -180.21882719178421  E_coul = 54.57314859155298
cycle= 2 E= -125.645678600231  delta_E= -0.000154  |g|= 0.0138  |ddm|= 0.0169
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0238618
diis-c [-1.96280883e-04  1.78278353e-01  8.21721647e-01]
  HOMO = -0.756525256750232  LUMO = 2.33834224517591
  mo_energy =
[-3.14667995e+01 -1.81103601e+00 -7.56525257e-01 -7.56525257e-01
 -7.56525257e-01  2.33834225e+00  2.33834225e+00  2.33834225e+00
  1.67075719e+01  1.67075719e+01  1.67075719e+01  1.73582702e+02
  1.68020849e+03  6.47550800e+03]
E1 = -180.18550608687704  E_coul = 54.53981035290646
cycle= 3 E= -125.645695733971  delta_E= -1.71e-05  |g|= 0.00119  |ddm|= 0.00438
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00207901
diis-c [-5.85718185e-09 -2.55264532e-03  7.37525008e-02  9.28800144e-01]
  HOMO = -0.757064572341025  LUMO = 2.3378947768061
  mo_energy =
[-3.14687052e+01 -1.81169775e+00 -7.57064572e-01 -7.57064572e-01
 -7.57064572e-01  2.33789478e+00  2.33789478e+00  2.33789478e+00
  1.67062722e+01  1.67062722e+01  1.67062722e+01  1.73580643e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.18821024969637  E_coul = 54.54251438142453
cycle= 4 E= -125.645695868272  delta_E= -1.34e-07  |g|= 1.4e-06  |ddm|= 0.000357
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44582e-06
diis-c [-1.05931123e-13  1.88132075e-05 -5.32220074e-04 -5.56326957e-03
  1.00607668e+00]
  HOMO = -0.757063927455552  LUMO = 2.33789535179099
  mo_energy =
[-3.14687035e+01 -1.81169698e+00 -7.57063927e-01 -7.57063927e-01
 -7.57063927e-01  2.33789535e+00  2.33789535e+00  2.33789535e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.18820753616973  E_coul = 54.54251166789768
cycle= 5 E= -125.645695868272  delta_E= -1.99e-13  |g|= 3.61e-08  |ddm|= 3.39e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.18820753616973  E_coul = 54.54251166789768
  HOMO = -0.757063903990066  LUMO = 2.33789537073156
  mo_energy =
[-3.14687034e+01 -1.81169695e+00 -7.57063904e-01 -7.57063904e-01
 -7.57063904e-01  2.33789537e+00  2.33789537e+00  2.33789537e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.1882074380488  E_coul = 54.542511569776785
Extra cycle  E= -125.645695868272  delta_E= 2.84e-14  |g|= 1.07e-08  |ddm|= 1.24e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.94736996815598
E1 = -180.1882074380488  E_coul = 54.542511569776785
init E= -125.645695868272
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.757063910454232  LUMO = 2.33789536535679
  mo_energy =
[-3.14687035e+01 -1.81169696e+00 -7.57063910e-01 -7.57063910e-01
 -7.57063910e-01  2.33789537e+00  2.33789537e+00  2.33789537e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.18820747003608  E_coul = 54.542511601764154
cycle= 1 E= -125.645695868272  delta_E= 8.53e-14  |g|= 3.49e-09  |ddm|= 4.22e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.18820747003608  E_coul = 54.542511601764154
  HOMO = -0.757063908323229  LUMO = 2.3378953671262
  mo_energy =
[-3.14687035e+01 -1.81169696e+00 -7.57063908e-01 -7.57063908e-01
 -7.57063908e-01  2.33789537e+00  2.33789537e+00  2.33789537e+00
  1.67062736e+01  1.67062736e+01  1.67062736e+01  1.73580645e+02
  1.68020609e+03  6.47550550e+03]
E1 = -180.1882074596681  E_coul = 54.54251159139611
Extra cycle  E= -125.645695868272  delta_E= -5.68e-14  |g|= 1.13e-09  |ddm|= 1.36e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766708e+03 9.89953090e-01 1.29843625e+03 1.96022164e+02
 2.34641671e+01 1.13210345e+01 5.47591342e-01 2.45564542e+00]
grad_E = [-3.09759081e-06 -2.16842285e-02 -1.06719852e-06  2.01031120e-02
  2.70896624e-04 -9.49131086e-03 -1.38005531e-02  1.90176577e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66708743        1
[INPUT] 0    0    [1    /1   ]  0.989405766052       1
[INPUT] 0    0    [1    /1   ]  1298.43623946        1
[INPUT] 0    0    [1    /1   ]  195.94882532         1
[INPUT] 0    0    [1    /1   ]  23.4399936789        1
[INPUT] 1    0    [1    /1   ]  11.3171061024        1
[INPUT] 1    0    [1    /1   ]  0.552954877053       1
[INPUT] 1    0    [1    /1   ]  2.48479892972        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670874279341, 1.0]], [0, [0.9894057660523603, 1.0]], [0, [1298.4362394646841, 1.0]], [0, [195.94882531994588, 1.0]], [0, [23.43999367887574, 1.0]], [1, [11.317106102365923, 1.0]], [1, [0.5529548770530296, 1.0]], [1, [2.4847989297162516, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66708743]
bas 1, expnt(s) = [0.98940577]
bas 2, expnt(s) = [1298.43623946]
bas 3, expnt(s) = [195.94882532]
bas 4, expnt(s) = [23.43999368]
bas 5, expnt(s) = [11.3171061]
bas 6, expnt(s) = [0.55295488]
bas 7, expnt(s) = [2.48479893]
CPU time:        47.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766709e+03 7.40714879e+02 9.89405766e-01 2.50637386e+00
 1.29843624e+03 5.46487831e+02 1.95948825e+02 1.32318943e+02
 2.34399937e+01 2.69143033e+01 1.13171061e+01 6.05555045e+01
 5.52954877e-01 1.39106207e+00 2.48479893e+00 9.10119578e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.91709446374796
cond(S) = 122.90753421105822
E1 = -179.46505727095624  E_coul = 54.97250627567538
init E= -124.492550995281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.752179014105072  LUMO = 2.36384127223495
  mo_energy =
[-3.12994367e+01 -1.78036475e+00 -7.52179014e-01 -7.52179014e-01
 -7.52179014e-01  2.36384127e+00  2.36384127e+00  2.36384127e+00
  1.68841815e+01  1.68841815e+01  1.68841815e+01  1.73542470e+02
  1.68001145e+03  6.47527527e+03]
E1 = -180.1124445966481  E_coul = 54.465717788730906
cycle= 1 E= -125.646726807917  delta_E= -1.15  |g|= 0.0918  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0895518
diis-c [-0.00801953  1.        ]
  HOMO = -0.762124665515825  LUMO = 2.36678170821436
  mo_energy =
[-3.14864120e+01 -1.81782136e+00 -7.62124666e-01 -7.62124666e-01
 -7.62124666e-01  2.36678171e+00  2.36678171e+00  2.36678171e+00
  1.67974770e+01  1.67974770e+01  1.67974770e+01  1.73420062e+02
  1.67988158e+03  6.47514823e+03]
E1 = -180.2313434447848  E_coul = 54.58447497204657
cycle= 2 E= -125.646868472738  delta_E= -0.000142  |g|= 0.0131  |ddm|= 0.016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0227438
diis-c [-1.93756514e-04  1.68969133e-01  8.31030867e-01]
  HOMO = -0.755489315293332  LUMO = 2.37235607081971
  mo_energy =
[-3.14650429e+01 -1.80973164e+00 -7.55489315e-01 -7.55489315e-01
 -7.55489315e-01  2.37235607e+00  2.37235607e+00  2.37235607e+00
  1.68129045e+01  1.68129045e+01  1.68129045e+01  1.73441774e+02
  1.67990283e+03  6.47516918e+03]
E1 = -180.19936692889954  E_coul = 54.55248295518271
cycle= 3 E= -125.646883973717  delta_E= -1.55e-05  |g|= 0.00129  |ddm|= 0.0042
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00225053
diis-c [-6.62949209e-09 -2.65722705e-03  8.34046093e-02  9.19252618e-01]
  HOMO = -0.75607436516102  LUMO = 2.37186464529346
  mo_energy =
[-3.14670805e+01 -1.81044770e+00 -7.56074365e-01 -7.56074365e-01
 -7.56074365e-01  2.37186465e+00  2.37186465e+00  2.37186465e+00
  1.68115034e+01  1.68115034e+01  1.68115034e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226637974886  E_coul = 54.55538225040486
cycle= 4 E= -125.646884129344  delta_E= -1.56e-07  |g|= 4.45e-07  |ddm|= 0.000381
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.43464e-07
diis-c [-6.56251557e-14  1.85472002e-05 -5.87433354e-04 -6.38972070e-03
  1.00695861e+00]
  HOMO = -0.756074351724194  LUMO = 2.3718647079734
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074352e-01 -7.56074352e-01
 -7.56074352e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616759842  E_coul = 54.55538203825433
cycle= 5 E= -125.646884129344  delta_E= -9.95e-14  |g|= 2.07e-09  |ddm|= 2.77e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.20226616759842  E_coul = 54.55538203825433
  HOMO = -0.756074350701548  LUMO = 2.37186470847315
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074351e-01 -7.56074351e-01
 -7.56074351e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616381103  E_coul = 54.55538203446709
Extra cycle  E= -125.646884129344  delta_E= 1.56e-13  |g|= 4.14e-10  |ddm|= 4.77e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766709e+03 9.89405766e-01 1.29843624e+03 1.95948825e+02
 2.34399937e+01 1.13171061e+01 5.52954877e-01 2.48479893e+00]
E = -125.64688412934395
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66708743        1
[INPUT] 0    0    [1    /1   ]  0.989405766052       1
[INPUT] 0    0    [1    /1   ]  1298.43623946        1
[INPUT] 0    0    [1    /1   ]  195.94882532         1
[INPUT] 0    0    [1    /1   ]  23.4399936789        1
[INPUT] 1    0    [1    /1   ]  11.3171061024        1
[INPUT] 1    0    [1    /1   ]  0.552954877053       1
[INPUT] 1    0    [1    /1   ]  2.48479892972        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6670874279341, 1.0]], [0, [0.9894057660523603, 1.0]], [0, [1298.4362394646841, 1.0]], [0, [195.94882531994588, 1.0]], [0, [23.43999367887574, 1.0]], [1, [11.317106102365923, 1.0]], [1, [0.5529548770530296, 1.0]], [1, [2.4847989297162516, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66708743]
bas 1, expnt(s) = [0.98940577]
bas 2, expnt(s) = [1298.43623946]
bas 3, expnt(s) = [195.94882532]
bas 4, expnt(s) = [23.43999368]
bas 5, expnt(s) = [11.3171061]
bas 6, expnt(s) = [0.55295488]
bas 7, expnt(s) = [2.48479893]
CPU time:        47.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766709e+03 7.40714879e+02 9.89405766e-01 2.50637386e+00
 1.29843624e+03 5.46487831e+02 1.95948825e+02 1.32318943e+02
 2.34399937e+01 2.69143033e+01 1.13171061e+01 6.05555045e+01
 5.52954877e-01 1.39106207e+00 2.48479893e+00 9.10119578e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.91709446374796
cond(S) = 122.90753421105822
E1 = -179.46505727095624  E_coul = 54.97250627567538
init E= -124.492550995281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.752179014105072  LUMO = 2.36384127223495
  mo_energy =
[-3.12994367e+01 -1.78036475e+00 -7.52179014e-01 -7.52179014e-01
 -7.52179014e-01  2.36384127e+00  2.36384127e+00  2.36384127e+00
  1.68841815e+01  1.68841815e+01  1.68841815e+01  1.73542470e+02
  1.68001145e+03  6.47527527e+03]
E1 = -180.1124445966481  E_coul = 54.465717788730906
cycle= 1 E= -125.646726807917  delta_E= -1.15  |g|= 0.0918  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0895518
diis-c [-0.00801953  1.        ]
  HOMO = -0.762124665515825  LUMO = 2.36678170821436
  mo_energy =
[-3.14864120e+01 -1.81782136e+00 -7.62124666e-01 -7.62124666e-01
 -7.62124666e-01  2.36678171e+00  2.36678171e+00  2.36678171e+00
  1.67974770e+01  1.67974770e+01  1.67974770e+01  1.73420062e+02
  1.67988158e+03  6.47514823e+03]
E1 = -180.2313434447848  E_coul = 54.58447497204657
cycle= 2 E= -125.646868472738  delta_E= -0.000142  |g|= 0.0131  |ddm|= 0.016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0227438
diis-c [-1.93756514e-04  1.68969133e-01  8.31030867e-01]
  HOMO = -0.755489315293332  LUMO = 2.37235607081971
  mo_energy =
[-3.14650429e+01 -1.80973164e+00 -7.55489315e-01 -7.55489315e-01
 -7.55489315e-01  2.37235607e+00  2.37235607e+00  2.37235607e+00
  1.68129045e+01  1.68129045e+01  1.68129045e+01  1.73441774e+02
  1.67990283e+03  6.47516918e+03]
E1 = -180.19936692889954  E_coul = 54.55248295518271
cycle= 3 E= -125.646883973717  delta_E= -1.55e-05  |g|= 0.00129  |ddm|= 0.0042
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00225053
diis-c [-6.62949209e-09 -2.65722705e-03  8.34046093e-02  9.19252618e-01]
  HOMO = -0.75607436516102  LUMO = 2.37186464529346
  mo_energy =
[-3.14670805e+01 -1.81044770e+00 -7.56074365e-01 -7.56074365e-01
 -7.56074365e-01  2.37186465e+00  2.37186465e+00  2.37186465e+00
  1.68115034e+01  1.68115034e+01  1.68115034e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226637974886  E_coul = 54.55538225040486
cycle= 4 E= -125.646884129344  delta_E= -1.56e-07  |g|= 4.45e-07  |ddm|= 0.000381
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.43464e-07
diis-c [-6.56251557e-14  1.85472002e-05 -5.87433354e-04 -6.38972070e-03
  1.00695861e+00]
  HOMO = -0.756074351724194  LUMO = 2.3718647079734
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074352e-01 -7.56074352e-01
 -7.56074352e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616759842  E_coul = 54.55538203825433
cycle= 5 E= -125.646884129344  delta_E= -9.95e-14  |g|= 2.07e-09  |ddm|= 2.77e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.20226616759842  E_coul = 54.55538203825433
  HOMO = -0.756074350701548  LUMO = 2.37186470847315
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074351e-01 -7.56074351e-01
 -7.56074351e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616381103  E_coul = 54.55538203446709
Extra cycle  E= -125.646884129344  delta_E= 1.56e-13  |g|= 4.14e-10  |ddm|= 4.77e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.90753421105822
E1 = -180.20226616381103  E_coul = 54.55538203446709
init E= -125.646884129344
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.756074350950622  LUMO = 2.37186470826347
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074351e-01 -7.56074351e-01
 -7.56074351e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616504198  E_coul = 54.55538203569793
cycle= 1 E= -125.646884129344  delta_E= -9.95e-14  |g|= 1.35e-10  |ddm|= 1.62e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.20226616504198  E_coul = 54.55538203569793
  HOMO = -0.756074350868669  LUMO = 2.37186470833235
  mo_energy =
[-3.14670803e+01 -1.81044767e+00 -7.56074351e-01 -7.56074351e-01
 -7.56074351e-01  2.37186471e+00  2.37186471e+00  2.37186471e+00
  1.68115035e+01  1.68115035e+01  1.68115035e+01  1.73439583e+02
  1.67990030e+03  6.47516656e+03]
E1 = -180.20226616464439  E_coul = 54.555382035300205
Extra cycle  E= -125.646884129344  delta_E= -1.42e-13  |g|= 4.37e-11  |ddm|= 5.22e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766709e+03 9.89405766e-01 1.29843624e+03 1.95948825e+02
 2.34399937e+01 1.13171061e+01 5.52954877e-01 2.48479893e+00]
grad_E = [-3.04485562e-06 -2.10033499e-02 -1.05937212e-06  2.01748745e-02
 -1.57851813e-03 -1.21641435e-02 -2.87740268e-02  2.07699706e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66711555        1
[INPUT] 0    0    [1    /1   ]  0.989224710319       1
[INPUT] 0    0    [1    /1   ]  1298.43621913        1
[INPUT] 0    0    [1    /1   ]  195.72010137         1
[INPUT] 0    0    [1    /1   ]  23.39692788          1
[INPUT] 1    0    [1    /1   ]  11.3450705625        1
[INPUT] 1    0    [1    /1   ]  0.564060439484       1
[INPUT] 1    0    [1    /1   ]  2.54356971761        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.667115551529, 1.0]], [0, [0.9892247103188356, 1.0]], [0, [1298.4362191315918, 1.0]], [0, [195.72010136952275, 1.0]], [0, [23.39692787996388, 1.0]], [1, [11.345070562543299, 1.0]], [1, [0.5640604394841724, 1.0]], [1, [2.54356971760536, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66711555]
bas 1, expnt(s) = [0.98922471]
bas 2, expnt(s) = [1298.43621913]
bas 3, expnt(s) = [195.72010137]
bas 4, expnt(s) = [23.39692788]
bas 5, expnt(s) = [11.34507056]
bas 6, expnt(s) = [0.56406044]
bas 7, expnt(s) = [2.54356972]
CPU time:        50.44
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766712e+03 7.40714887e+02 9.89224710e-01 2.50602986e+00
 1.29843622e+03 5.46487824e+02 1.95720101e+02 1.32203088e+02
 2.33969279e+01 2.68772080e+01 1.13450706e+01 6.07426024e+01
 5.64060439e-01 1.42607197e+00 2.54356972e+00 9.37106499e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.915436383640895
cond(S) = 122.80180442934093
E1 = -179.46447301223614  E_coul = 54.971085409632224
init E= -124.493387602604
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.751714450855454  LUMO = 2.43235577987311
  mo_energy =
[-3.13032310e+01 -1.78024017e+00 -7.51714451e-01 -7.51714451e-01
 -7.51714451e-01  2.43235578e+00  2.43235578e+00  2.43235578e+00
  1.71280925e+01  1.71280925e+01  1.71280925e+01  1.73211776e+02
  1.67916944e+03  6.47432499e+03]
E1 = -180.15956215908506  E_coul = 54.5096113376975
cycle= 1 E= -125.649950821388  delta_E= -1.16  |g|= 0.0928  |ddm|= 0.208
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.08724
diis-c [-0.00761081  1.        ]
  HOMO = -0.758660738832543  LUMO = 2.43724925946585
  mo_energy =
[-3.14804833e+01 -1.81378666e+00 -7.58660739e-01 -7.58660739e-01
 -7.58660739e-01  2.43724926e+00  2.43724926e+00  2.43724926e+00
  1.70475980e+01  1.70475980e+01  1.70475980e+01  1.73098004e+02
  1.67904515e+03  6.47420265e+03]
E1 = -180.26455560087618  E_coul = 54.614490188777985
cycle= 2 E= -125.650065412098  delta_E= -0.000115  |g|= 0.0117  |ddm|= 0.014
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020159
diis-c [-1.81208716e-04  1.48277566e-01  8.51722434e-01]
  HOMO = -0.752673325496353  LUMO = 2.4424019574139
  mo_energy =
[-3.14610657e+01 -1.80648716e+00 -7.52673325e-01 -7.52673325e-01
 -7.52673325e-01  2.44240196e+00  2.44240196e+00  2.44240196e+00
  1.70616011e+01  1.70616011e+01  1.70616011e+01  1.73117689e+02
  1.67906425e+03  6.47422141e+03]
E1 = -180.2358007155487  E_coul = 54.58572325159652
cycle= 3 E= -125.650077463952  delta_E= -1.21e-05  |g|= 0.00144  |ddm|= 0.00377
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00251245
diis-c [-8.27776656e-09 -2.82483414e-03  1.03837533e-01  8.98987301e-01]
  HOMO = -0.7533280312455  LUMO = 2.44183856370376
  mo_energy =
[-3.14633061e+01 -1.80728610e+00 -7.53328031e-01 -7.53328031e-01
 -7.53328031e-01  2.44183856e+00  2.44183856e+00  2.44183856e+00
  1.70600418e+01  1.70600418e+01  1.70600418e+01  1.73115298e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.2389870004803  E_coul = 54.588909345796026
cycle= 4 E= -125.650077654684  delta_E= -1.91e-07  |g|= 1.87e-06  |ddm|= 0.000418
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.2575e-06
diis-c [-1.81671916e-13  2.07098321e-05 -8.29513596e-04 -8.39043467e-03
  1.00919924e+00]
  HOMO = -0.753328960599514  LUMO = 2.44183783224693
  mo_energy =
[-3.14633082e+01 -1.80728717e+00 -7.53328961e-01 -7.53328961e-01
 -7.53328961e-01  2.44183783e+00  2.44183783e+00  2.44183783e+00
  1.70600400e+01  1.70600400e+01  1.70600400e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.2389904922212  E_coul = 54.58891283753666
cycle= 5 E= -125.650077654685  delta_E= -2.56e-13  |g|= 4.38e-08  |ddm|= 4.32e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.2389904922212  E_coul = 54.58891283753666
  HOMO = -0.753328988540506  LUMO = 2.44183780805059
  mo_energy =
[-3.14633082e+01 -1.80728720e+00 -7.53328989e-01 -7.53328989e-01
 -7.53328989e-01  2.44183781e+00  2.44183781e+00  2.44183781e+00
  1.70600399e+01  1.70600399e+01  1.70600399e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.23899060934528  E_coul = 54.58891295466071
Extra cycle  E= -125.650077654685  delta_E= -2.84e-14  |g|= 1.29e-08  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766712e+03 9.89224710e-01 1.29843622e+03 1.95720101e+02
 2.33969279e+01 1.13450706e+01 5.64060439e-01 2.54356972e+00]
E = -125.65007765468457
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66711555        1
[INPUT] 0    0    [1    /1   ]  0.989224710319       1
[INPUT] 0    0    [1    /1   ]  1298.43621913        1
[INPUT] 0    0    [1    /1   ]  195.72010137         1
[INPUT] 0    0    [1    /1   ]  23.39692788          1
[INPUT] 1    0    [1    /1   ]  11.3450705625        1
[INPUT] 1    0    [1    /1   ]  0.564060439484       1
[INPUT] 1    0    [1    /1   ]  2.54356971761        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.667115551529, 1.0]], [0, [0.9892247103188356, 1.0]], [0, [1298.4362191315918, 1.0]], [0, [195.72010136952275, 1.0]], [0, [23.39692787996388, 1.0]], [1, [11.345070562543299, 1.0]], [1, [0.5640604394841724, 1.0]], [1, [2.54356971760536, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66711555]
bas 1, expnt(s) = [0.98922471]
bas 2, expnt(s) = [1298.43621913]
bas 3, expnt(s) = [195.72010137]
bas 4, expnt(s) = [23.39692788]
bas 5, expnt(s) = [11.34507056]
bas 6, expnt(s) = [0.56406044]
bas 7, expnt(s) = [2.54356972]
CPU time:        50.77
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766712e+03 7.40714887e+02 9.89224710e-01 2.50602986e+00
 1.29843622e+03 5.46487824e+02 1.95720101e+02 1.32203088e+02
 2.33969279e+01 2.68772080e+01 1.13450706e+01 6.07426024e+01
 5.64060439e-01 1.42607197e+00 2.54356972e+00 9.37106499e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.915436383640895
cond(S) = 122.80180442934093
E1 = -179.46447301223614  E_coul = 54.971085409632224
init E= -124.493387602604
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.751714450855454  LUMO = 2.43235577987311
  mo_energy =
[-3.13032310e+01 -1.78024017e+00 -7.51714451e-01 -7.51714451e-01
 -7.51714451e-01  2.43235578e+00  2.43235578e+00  2.43235578e+00
  1.71280925e+01  1.71280925e+01  1.71280925e+01  1.73211776e+02
  1.67916944e+03  6.47432499e+03]
E1 = -180.15956215908506  E_coul = 54.5096113376975
cycle= 1 E= -125.649950821388  delta_E= -1.16  |g|= 0.0928  |ddm|= 0.208
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.08724
diis-c [-0.00761081  1.        ]
  HOMO = -0.758660738832543  LUMO = 2.43724925946585
  mo_energy =
[-3.14804833e+01 -1.81378666e+00 -7.58660739e-01 -7.58660739e-01
 -7.58660739e-01  2.43724926e+00  2.43724926e+00  2.43724926e+00
  1.70475980e+01  1.70475980e+01  1.70475980e+01  1.73098004e+02
  1.67904515e+03  6.47420265e+03]
E1 = -180.26455560087618  E_coul = 54.614490188777985
cycle= 2 E= -125.650065412098  delta_E= -0.000115  |g|= 0.0117  |ddm|= 0.014
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020159
diis-c [-1.81208716e-04  1.48277566e-01  8.51722434e-01]
  HOMO = -0.752673325496353  LUMO = 2.4424019574139
  mo_energy =
[-3.14610657e+01 -1.80648716e+00 -7.52673325e-01 -7.52673325e-01
 -7.52673325e-01  2.44240196e+00  2.44240196e+00  2.44240196e+00
  1.70616011e+01  1.70616011e+01  1.70616011e+01  1.73117689e+02
  1.67906425e+03  6.47422141e+03]
E1 = -180.2358007155487  E_coul = 54.58572325159652
cycle= 3 E= -125.650077463952  delta_E= -1.21e-05  |g|= 0.00144  |ddm|= 0.00377
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00251245
diis-c [-8.27776656e-09 -2.82483414e-03  1.03837533e-01  8.98987301e-01]
  HOMO = -0.7533280312455  LUMO = 2.44183856370376
  mo_energy =
[-3.14633061e+01 -1.80728610e+00 -7.53328031e-01 -7.53328031e-01
 -7.53328031e-01  2.44183856e+00  2.44183856e+00  2.44183856e+00
  1.70600418e+01  1.70600418e+01  1.70600418e+01  1.73115298e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.2389870004803  E_coul = 54.588909345796026
cycle= 4 E= -125.650077654684  delta_E= -1.91e-07  |g|= 1.87e-06  |ddm|= 0.000418
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.2575e-06
diis-c [-1.81671916e-13  2.07098321e-05 -8.29513596e-04 -8.39043467e-03
  1.00919924e+00]
  HOMO = -0.753328960599514  LUMO = 2.44183783224693
  mo_energy =
[-3.14633082e+01 -1.80728717e+00 -7.53328961e-01 -7.53328961e-01
 -7.53328961e-01  2.44183783e+00  2.44183783e+00  2.44183783e+00
  1.70600400e+01  1.70600400e+01  1.70600400e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.2389904922212  E_coul = 54.58891283753666
cycle= 5 E= -125.650077654685  delta_E= -2.56e-13  |g|= 4.38e-08  |ddm|= 4.32e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.2389904922212  E_coul = 54.58891283753666
  HOMO = -0.753328988540506  LUMO = 2.44183780805059
  mo_energy =
[-3.14633082e+01 -1.80728720e+00 -7.53328989e-01 -7.53328989e-01
 -7.53328989e-01  2.44183781e+00  2.44183781e+00  2.44183781e+00
  1.70600399e+01  1.70600399e+01  1.70600399e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.23899060934528  E_coul = 54.58891295466071
Extra cycle  E= -125.650077654685  delta_E= -2.84e-14  |g|= 1.29e-08  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.80180442934093
E1 = -180.23899060934528  E_coul = 54.58891295466071
init E= -125.650077654685
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.753328980843883  LUMO = 2.4418378146871
  mo_energy =
[-3.14633082e+01 -1.80728719e+00 -7.53328981e-01 -7.53328981e-01
 -7.53328981e-01  2.44183781e+00  2.44183781e+00  2.44183781e+00
  1.70600400e+01  1.70600400e+01  1.70600400e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.23899057160207  E_coul = 54.588912916917465
cycle= 1 E= -125.650077654685  delta_E= -4.26e-14  |g|= 4.15e-09  |ddm|= 4.97e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.23899057160207  E_coul = 54.588912916917465
  HOMO = -0.753328983352251  LUMO = 2.44183781252753
  mo_energy =
[-3.14633082e+01 -1.80728719e+00 -7.53328983e-01 -7.53328983e-01
 -7.53328983e-01  2.44183781e+00  2.44183781e+00  2.44183781e+00
  1.70600399e+01  1.70600399e+01  1.70600399e+01  1.73115296e+02
  1.67906153e+03  6.47421860e+03]
E1 = -180.23899058369793  E_coul = 54.58891292901341
Extra cycle  E= -125.650077654685  delta_E= 9.95e-14  |g|= 1.33e-09  |ddm|= 1.59e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766712e+03 9.89224710e-01 1.29843622e+03 1.95720101e+02
 2.33969279e+01 1.13450706e+01 5.64060439e-01 2.54356972e+00]
grad_E = [-3.02996776e-06 -1.59630881e-02 -1.07829749e-06  2.02930863e-02
 -4.59211173e-03 -1.64260562e-02 -4.78105104e-02  5.09999380e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66719424        1
[INPUT] 0    0    [1    /1   ]  0.989082577617       1
[INPUT] 0    0    [1    /1   ]  1298.43619607        1
[INPUT] 0    0    [1    /1   ]  195.131277488        1
[INPUT] 0    0    [1    /1   ]  23.3306437681        1
[INPUT] 1    0    [1    /1   ]  11.4726116963        1
[INPUT] 1    0    [1    /1   ]  0.583854408117       1
[INPUT] 1    0    [1    /1   ]  2.65024562846        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671942406103, 1.0]], [0, [0.9890825776170203, 1.0]], [0, [1298.4361960741323, 1.0]], [0, [195.13127748779274, 1.0]], [0, [23.330643768127846, 1.0]], [1, [11.47261169632773, 1.0]], [1, [0.5838544081170941, 1.0]], [1, [2.6502456284649485, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66719424]
bas 1, expnt(s) = [0.98908258]
bas 2, expnt(s) = [1298.43619607]
bas 3, expnt(s) = [195.13127749]
bas 4, expnt(s) = [23.33064377]
bas 5, expnt(s) = [11.4726117]
bas 6, expnt(s) = [0.58385441]
bas 7, expnt(s) = [2.65024563]
CPU time:        53.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766719e+03 7.40714909e+02 9.89082578e-01 2.50575980e+00
 1.29843620e+03 5.46487817e+02 1.95131277e+02 1.31904676e+02
 2.33306438e+01 2.68200798e+01 1.14726117e+01 6.15973829e+01
 5.83854408e-01 1.48889852e+00 2.65024563e+00 9.86488555e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.912085458341698
cond(S) = 122.554093624093
E1 = -179.46884601887237  E_coul = 54.96886841479435
init E= -124.499977604078
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.750816073950532  LUMO = 2.55540262116773
  mo_energy =
[-3.13106830e+01 -1.78031394e+00 -7.50816074e-01 -7.50816074e-01
 -7.50816074e-01  2.55540262e+00  2.55540262e+00  2.55540262e+00
  1.76439378e+01  1.76439378e+01  1.76439378e+01  1.72516963e+02
  1.67715351e+03  6.47202202e+03]
E1 = -180.25125202547315  E_coul = 54.593728851239284
cycle= 1 E= -125.657523174234  delta_E= -1.16  |g|= 0.0936  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0821224
diis-c [-0.00674409  1.        ]
  HOMO = -0.751790682142343  LUMO = 2.56459095741061
  mo_energy =
[-3.14702641e+01 -1.80631175e+00 -7.51790682e-01 -7.51790682e-01
 -7.51790682e-01  2.56459096e+00  2.56459096e+00  2.56459096e+00
  1.75749956e+01  1.75749956e+01  1.75749956e+01  1.72419536e+02
  1.67704198e+03  6.47191134e+03]
E1 = -180.33072020318497  E_coul = 54.673124847673414
cycle= 2 E= -125.657595355512  delta_E= -7.22e-05  |g|= 0.0089  |ddm|= 0.0105
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153338
diis-c [-1.41362541e-04  1.06478011e-01  8.93521989e-01]
  HOMO = -0.747061377026771  LUMO = 2.56883176350512
  mo_energy =
[-3.14547394e+01 -1.80054394e+00 -7.47061377e-01 -7.47061377e-01
 -7.47061377e-01  2.56883176e+00  2.56883176e+00  2.56883176e+00
  1.75862028e+01  1.75862028e+01  1.75862028e+01  1.72435182e+02
  1.67705680e+03  6.47192577e+03]
E1 = -180.30821024040338  E_coul = 54.65060807487535
cycle= 3 E= -125.657602165528  delta_E= -6.81e-06  |g|= 0.00154  |ddm|= 0.00296
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0026957
diis-c [-1.11646697e-08 -3.05211787e-03  1.42194940e-01  8.60857178e-01]
  HOMO = -0.747764854973078  LUMO = 2.56820106125087
  mo_energy =
[-3.14571151e+01 -1.80139992e+00 -7.47764855e-01 -7.47764855e-01
 -7.47764855e-01  2.56820106e+00  2.56820106e+00  2.56820106e+00
  1.75845252e+01  1.75845252e+01  1.75845252e+01  1.72432670e+02
  1.67705401e+03  6.47192291e+03]
E1 = -180.31155102901033  E_coul = 54.65394864857407
cycle= 4 E= -125.657602380436  delta_E= -2.15e-07  |g|= 4.05e-06  |ddm|= 0.000438
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.1264e-06
diis-c [-4.83205800e-13  2.54207102e-05 -1.44437193e-03 -1.12599240e-02
  1.01267888e+00]
  HOMO = -0.74776687899999  LUMO = 2.56819933052788
  mo_energy =
[-3.14571198e+01 -1.80140226e+00 -7.47766879e-01 -7.47766879e-01
 -7.47766879e-01  2.56819933e+00  2.56819933e+00  2.56819933e+00
  1.75845211e+01  1.75845211e+01  1.75845211e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.31155871632376  E_coul = 54.653956335886384
cycle= 5 E= -125.657602380437  delta_E= -1.11e-12  |g|= 8.1e-08  |ddm|= 9.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.31155871632376  E_coul = 54.653956335886384
  HOMO = -0.747766930325201  LUMO = 2.56819928462129
  mo_energy =
[-3.14571199e+01 -1.80140232e+00 -7.47766930e-01 -7.47766930e-01
 -7.47766930e-01  2.56819928e+00  2.56819928e+00  2.56819928e+00
  1.75845210e+01  1.75845210e+01  1.75845210e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.31155892832157  E_coul = 54.653956547884206
Extra cycle  E= -125.657602380437  delta_E=    0  |g|= 2.34e-08  |ddm|= 2.67e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766719e+03 9.89082578e-01 1.29843620e+03 1.95131277e+02
 2.33306438e+01 1.14726117e+01 5.83854408e-01 2.65024563e+00]
E = -125.65760238043737
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66719424        1
[INPUT] 0    0    [1    /1   ]  0.989082577617       1
[INPUT] 0    0    [1    /1   ]  1298.43619607        1
[INPUT] 0    0    [1    /1   ]  195.131277488        1
[INPUT] 0    0    [1    /1   ]  23.3306437681        1
[INPUT] 1    0    [1    /1   ]  11.4726116963        1
[INPUT] 1    0    [1    /1   ]  0.583854408117       1
[INPUT] 1    0    [1    /1   ]  2.65024562846        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6671942406103, 1.0]], [0, [0.9890825776170203, 1.0]], [0, [1298.4361960741323, 1.0]], [0, [195.13127748779274, 1.0]], [0, [23.330643768127846, 1.0]], [1, [11.47261169632773, 1.0]], [1, [0.5838544081170941, 1.0]], [1, [2.6502456284649485, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66719424]
bas 1, expnt(s) = [0.98908258]
bas 2, expnt(s) = [1298.43619607]
bas 3, expnt(s) = [195.13127749]
bas 4, expnt(s) = [23.33064377]
bas 5, expnt(s) = [11.4726117]
bas 6, expnt(s) = [0.58385441]
bas 7, expnt(s) = [2.65024563]
CPU time:        53.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766719e+03 7.40714909e+02 9.89082578e-01 2.50575980e+00
 1.29843620e+03 5.46487817e+02 1.95131277e+02 1.31904676e+02
 2.33306438e+01 2.68200798e+01 1.14726117e+01 6.15973829e+01
 5.83854408e-01 1.48889852e+00 2.65024563e+00 9.86488555e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.912085458341698
cond(S) = 122.554093624093
E1 = -179.46884601887237  E_coul = 54.96886841479435
init E= -124.499977604078
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.750816073950532  LUMO = 2.55540262116773
  mo_energy =
[-3.13106830e+01 -1.78031394e+00 -7.50816074e-01 -7.50816074e-01
 -7.50816074e-01  2.55540262e+00  2.55540262e+00  2.55540262e+00
  1.76439378e+01  1.76439378e+01  1.76439378e+01  1.72516963e+02
  1.67715351e+03  6.47202202e+03]
E1 = -180.25125202547315  E_coul = 54.593728851239284
cycle= 1 E= -125.657523174234  delta_E= -1.16  |g|= 0.0936  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0821224
diis-c [-0.00674409  1.        ]
  HOMO = -0.751790682142343  LUMO = 2.56459095741061
  mo_energy =
[-3.14702641e+01 -1.80631175e+00 -7.51790682e-01 -7.51790682e-01
 -7.51790682e-01  2.56459096e+00  2.56459096e+00  2.56459096e+00
  1.75749956e+01  1.75749956e+01  1.75749956e+01  1.72419536e+02
  1.67704198e+03  6.47191134e+03]
E1 = -180.33072020318497  E_coul = 54.673124847673414
cycle= 2 E= -125.657595355512  delta_E= -7.22e-05  |g|= 0.0089  |ddm|= 0.0105
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153338
diis-c [-1.41362541e-04  1.06478011e-01  8.93521989e-01]
  HOMO = -0.747061377026771  LUMO = 2.56883176350512
  mo_energy =
[-3.14547394e+01 -1.80054394e+00 -7.47061377e-01 -7.47061377e-01
 -7.47061377e-01  2.56883176e+00  2.56883176e+00  2.56883176e+00
  1.75862028e+01  1.75862028e+01  1.75862028e+01  1.72435182e+02
  1.67705680e+03  6.47192577e+03]
E1 = -180.30821024040338  E_coul = 54.65060807487535
cycle= 3 E= -125.657602165528  delta_E= -6.81e-06  |g|= 0.00154  |ddm|= 0.00296
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0026957
diis-c [-1.11646697e-08 -3.05211787e-03  1.42194940e-01  8.60857178e-01]
  HOMO = -0.747764854973078  LUMO = 2.56820106125087
  mo_energy =
[-3.14571151e+01 -1.80139992e+00 -7.47764855e-01 -7.47764855e-01
 -7.47764855e-01  2.56820106e+00  2.56820106e+00  2.56820106e+00
  1.75845252e+01  1.75845252e+01  1.75845252e+01  1.72432670e+02
  1.67705401e+03  6.47192291e+03]
E1 = -180.31155102901033  E_coul = 54.65394864857407
cycle= 4 E= -125.657602380436  delta_E= -2.15e-07  |g|= 4.05e-06  |ddm|= 0.000438
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.1264e-06
diis-c [-4.83205800e-13  2.54207102e-05 -1.44437193e-03 -1.12599240e-02
  1.01267888e+00]
  HOMO = -0.74776687899999  LUMO = 2.56819933052788
  mo_energy =
[-3.14571198e+01 -1.80140226e+00 -7.47766879e-01 -7.47766879e-01
 -7.47766879e-01  2.56819933e+00  2.56819933e+00  2.56819933e+00
  1.75845211e+01  1.75845211e+01  1.75845211e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.31155871632376  E_coul = 54.653956335886384
cycle= 5 E= -125.657602380437  delta_E= -1.11e-12  |g|= 8.1e-08  |ddm|= 9.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.31155871632376  E_coul = 54.653956335886384
  HOMO = -0.747766930325201  LUMO = 2.56819928462129
  mo_energy =
[-3.14571199e+01 -1.80140232e+00 -7.47766930e-01 -7.47766930e-01
 -7.47766930e-01  2.56819928e+00  2.56819928e+00  2.56819928e+00
  1.75845210e+01  1.75845210e+01  1.75845210e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.31155892832157  E_coul = 54.653956547884206
Extra cycle  E= -125.657602380437  delta_E=    0  |g|= 2.34e-08  |ddm|= 2.67e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 122.554093624093
E1 = -180.31155892832157  E_coul = 54.653956547884206
init E= -125.657602380437
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.74776691644194  LUMO = 2.56819929709389
  mo_energy =
[-3.14571199e+01 -1.80140231e+00 -7.47766916e-01 -7.47766916e-01
 -7.47766916e-01  2.56819930e+00  2.56819930e+00  2.56819930e+00
  1.75845211e+01  1.75845211e+01  1.75845211e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.31155886124205  E_coul = 54.65395648080456
cycle= 1 E= -125.657602380437  delta_E= -1.14e-13  |g|= 7.41e-09  |ddm|= 8.84e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.31155886124205  E_coul = 54.65395648080456
  HOMO = -0.747766920885491  LUMO = 2.56819929310866
  mo_energy =
[-3.14571199e+01 -1.80140231e+00 -7.47766921e-01 -7.47766921e-01
 -7.47766921e-01  2.56819929e+00  2.56819929e+00  2.56819929e+00
  1.75845210e+01  1.75845210e+01  1.75845210e+01  1.72432665e+02
  1.67705400e+03  6.47192291e+03]
E1 = -180.3115588823567  E_coul = 54.65395650191926
Extra cycle  E= -125.657602380437  delta_E= 2.84e-14  |g|= 2.33e-09  |ddm|= 2.77e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94766719e+03 9.89082578e-01 1.29843620e+03 1.95131277e+02
 2.33306438e+01 1.14726117e+01 5.83854408e-01 2.65024563e+00]
grad_E = [-3.19937409e-06 -7.21053424e-03 -1.18504372e-06  2.04489435e-02
 -8.42725638e-03 -2.16991851e-02 -6.89837898e-02  9.09543050e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66741393        1
[INPUT] 0    0    [1    /1   ]  0.988357691581       1
[INPUT] 0    0    [1    /1   ]  1298.43617635        1
[INPUT] 0    0    [1    /1   ]  193.558516572        1
[INPUT] 0    0    [1    /1   ]  23.2158454106        1
[INPUT] 1    0    [1    /1   ]  11.8935726961        1
[INPUT] 1    0    [1    /1   ]  0.623038986765       1
[INPUT] 1    0    [1    /1   ]  2.86980177297        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6674139324048, 1.0]], [0, [0.9883576915814111, 1.0]], [0, [1298.4361763544043, 1.0]], [0, [193.5585165717766, 1.0]], [0, [23.215845410608363, 1.0]], [1, [11.89357269610312, 1.0]], [1, [0.6230389867650779, 1.0]], [1, [2.869801772969035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66741393]
bas 1, expnt(s) = [0.98835769]
bas 2, expnt(s) = [1298.43617635]
bas 3, expnt(s) = [193.55851657]
bas 4, expnt(s) = [23.21584541]
bas 5, expnt(s) = [11.8935727]
bas 6, expnt(s) = [0.62303899]
bas 7, expnt(s) = [2.86980177]
CPU time:        56.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766741e+03 7.40714972e+02 9.88357692e-01 2.50438235e+00
 1.29843618e+03 5.46487811e+02 1.93558517e+02 1.31106504e+02
 2.32158454e+01 2.67210427e+01 1.18935727e+01 6.44354412e+01
 6.23038987e-01 1.61483600e+00 2.86980177e+00 1.08968072e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.904358476218157
cond(S) = 121.92792223774764
E1 = -179.4863380145096  E_coul = 54.96256177562601
init E= -124.523776238884
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748942892314437  LUMO = 2.80451565612955
  mo_energy =
[-3.13276351e+01 -1.78146108e+00 -7.48942892e-01 -7.48942892e-01
 -7.48942892e-01  2.80451566e+00  2.80451566e+00  2.80451566e+00
  1.88574153e+01  1.88574153e+01  1.88574153e+01  1.70877275e+02
  1.67197490e+03  6.46606976e+03]
E1 = -180.44869190102182  E_coul = 54.77245762794683
cycle= 1 E= -125.676234273075  delta_E= -1.15  |g|= 0.0939  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0731829
diis-c [-0.00535574  1.        ]
  HOMO = -0.736618140074821  LUMO = 2.82456900288287
  mo_energy =
[-3.14510511e+01 -1.79099447e+00 -7.36618140e-01 -7.36618140e-01
 -7.36618140e-01  2.82456900e+00  2.82456900e+00  2.82456900e+00
  1.88130789e+01  1.88130789e+01  1.88130789e+01  1.70814512e+02
  1.67189426e+03  6.46598875e+03]
E1 = -180.47763816103745  E_coul = 54.8013845356265
cycle= 2 E= -125.676253625411  delta_E= -1.94e-05  |g|= 0.00341  |ddm|= 0.00363
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0056821
diis-c [-3.13439586e-05  1.31287869e-02  9.86871213e-01]
  HOMO = -0.734742417381536  LUMO = 2.82638679619585
  mo_energy =
[-3.14447046e+01 -1.78869318e+00 -7.34742417e-01 -7.34742417e-01
 -7.34742417e-01  2.82638680e+00  2.82638680e+00  2.82638680e+00
  1.88177012e+01  1.88177012e+01  1.88177012e+01  1.70820643e+02
  1.67189905e+03  6.46599305e+03]
E1 = -180.46879225247767  E_coul = 54.7925377538765
cycle= 3 E= -125.676254498601  delta_E= -8.73e-07  |g|= 0.000941  |ddm|= 0.00118
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163639
diis-c [-1.60764696e-08 -3.39262019e-03  2.17360266e-01  7.86032354e-01]
  HOMO = -0.735169302059524  LUMO = 2.82597410047701
  mo_energy =
[-3.14461440e+01 -1.78921101e+00 -7.35169302e-01 -7.35169302e-01
 -7.35169302e-01  2.82597410e+00  2.82597410e+00  2.82597410e+00
  1.88166637e+01  1.88166637e+01  1.88166637e+01  1.70819142e+02
  1.67189745e+03  6.46599143e+03]
E1 = -180.47073761968485  E_coul = 54.794483044423956
cycle= 4 E= -125.676254575261  delta_E= -7.67e-08  |g|= 5.49e-06  |ddm|= 0.000256
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.7091e-06
diis-c [-7.88546058e-13  3.09785932e-05 -2.85923462e-03 -1.59935745e-02
  1.01882183e+00]
  HOMO = -0.735172047359177  LUMO = 2.82597153010791
  mo_energy =
[-3.14461501e+01 -1.78921417e+00 -7.35172047e-01 -7.35172047e-01
 -7.35172047e-01  2.82597153e+00  2.82597153e+00  2.82597153e+00
  1.88166582e+01  1.88166582e+01  1.88166582e+01  1.70819136e+02
  1.67189745e+03  6.46599142e+03]
E1 = -180.47074752005236  E_coul = 54.794492944789354
cycle= 5 E= -125.676254575263  delta_E= -2.1e-12  |g|= 9.3e-08  |ddm|= 1.22e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.47074752005236  E_coul = 54.794492944789354
  HOMO = -0.735172105451405  LUMO = 2.82597147468143
  mo_energy =
[-3.14461503e+01 -1.78921424e+00 -7.35172105e-01 -7.35172105e-01
 -7.35172105e-01  2.82597147e+00  2.82597147e+00  2.82597147e+00
  1.88166581e+01  1.88166581e+01  1.88166581e+01  1.70819136e+02
  1.67189744e+03  6.46599142e+03]
E1 = -180.4707477520249  E_coul = 54.79449317676194
Extra cycle  E= -125.676254575263  delta_E= 4.26e-14  |g|= 2.58e-08  |ddm|= 2.94e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766741e+03 9.88357692e-01 1.29843618e+03 1.93558517e+02
 2.32158454e+01 1.18935727e+01 6.23038987e-01 2.86980177e+00]
E = -125.67625457526296
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66741393        1
[INPUT] 0    0    [1    /1   ]  0.988357691581       1
[INPUT] 0    0    [1    /1   ]  1298.43617635        1
[INPUT] 0    0    [1    /1   ]  193.558516572        1
[INPUT] 0    0    [1    /1   ]  23.2158454106        1
[INPUT] 1    0    [1    /1   ]  11.8935726961        1
[INPUT] 1    0    [1    /1   ]  0.623038986765       1
[INPUT] 1    0    [1    /1   ]  2.86980177297        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6674139324048, 1.0]], [0, [0.9883576915814111, 1.0]], [0, [1298.4361763544043, 1.0]], [0, [193.5585165717766, 1.0]], [0, [23.215845410608363, 1.0]], [1, [11.89357269610312, 1.0]], [1, [0.6230389867650779, 1.0]], [1, [2.869801772969035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66741393]
bas 1, expnt(s) = [0.98835769]
bas 2, expnt(s) = [1298.43617635]
bas 3, expnt(s) = [193.55851657]
bas 4, expnt(s) = [23.21584541]
bas 5, expnt(s) = [11.8935727]
bas 6, expnt(s) = [0.62303899]
bas 7, expnt(s) = [2.86980177]
CPU time:        56.86
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766741e+03 7.40714972e+02 9.88357692e-01 2.50438235e+00
 1.29843618e+03 5.46487811e+02 1.93558517e+02 1.31106504e+02
 2.32158454e+01 2.67210427e+01 1.18935727e+01 6.44354412e+01
 6.23038987e-01 1.61483600e+00 2.86980177e+00 1.08968072e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.904358476218157
cond(S) = 121.92792223774764
E1 = -179.4863380145096  E_coul = 54.96256177562601
init E= -124.523776238884
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748942892314437  LUMO = 2.80451565612955
  mo_energy =
[-3.13276351e+01 -1.78146108e+00 -7.48942892e-01 -7.48942892e-01
 -7.48942892e-01  2.80451566e+00  2.80451566e+00  2.80451566e+00
  1.88574153e+01  1.88574153e+01  1.88574153e+01  1.70877275e+02
  1.67197490e+03  6.46606976e+03]
E1 = -180.44869190102182  E_coul = 54.77245762794683
cycle= 1 E= -125.676234273075  delta_E= -1.15  |g|= 0.0939  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0731829
diis-c [-0.00535574  1.        ]
  HOMO = -0.736618140074821  LUMO = 2.82456900288287
  mo_energy =
[-3.14510511e+01 -1.79099447e+00 -7.36618140e-01 -7.36618140e-01
 -7.36618140e-01  2.82456900e+00  2.82456900e+00  2.82456900e+00
  1.88130789e+01  1.88130789e+01  1.88130789e+01  1.70814512e+02
  1.67189426e+03  6.46598875e+03]
E1 = -180.47763816103745  E_coul = 54.8013845356265
cycle= 2 E= -125.676253625411  delta_E= -1.94e-05  |g|= 0.00341  |ddm|= 0.00363
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0056821
diis-c [-3.13439586e-05  1.31287869e-02  9.86871213e-01]
  HOMO = -0.734742417381536  LUMO = 2.82638679619585
  mo_energy =
[-3.14447046e+01 -1.78869318e+00 -7.34742417e-01 -7.34742417e-01
 -7.34742417e-01  2.82638680e+00  2.82638680e+00  2.82638680e+00
  1.88177012e+01  1.88177012e+01  1.88177012e+01  1.70820643e+02
  1.67189905e+03  6.46599305e+03]
E1 = -180.46879225247767  E_coul = 54.7925377538765
cycle= 3 E= -125.676254498601  delta_E= -8.73e-07  |g|= 0.000941  |ddm|= 0.00118
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163639
diis-c [-1.60764696e-08 -3.39262019e-03  2.17360266e-01  7.86032354e-01]
  HOMO = -0.735169302059524  LUMO = 2.82597410047701
  mo_energy =
[-3.14461440e+01 -1.78921101e+00 -7.35169302e-01 -7.35169302e-01
 -7.35169302e-01  2.82597410e+00  2.82597410e+00  2.82597410e+00
  1.88166637e+01  1.88166637e+01  1.88166637e+01  1.70819142e+02
  1.67189745e+03  6.46599143e+03]
E1 = -180.47073761968485  E_coul = 54.794483044423956
cycle= 4 E= -125.676254575261  delta_E= -7.67e-08  |g|= 5.49e-06  |ddm|= 0.000256
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.7091e-06
diis-c [-7.88546058e-13  3.09785932e-05 -2.85923462e-03 -1.59935745e-02
  1.01882183e+00]
  HOMO = -0.735172047359177  LUMO = 2.82597153010791
  mo_energy =
[-3.14461501e+01 -1.78921417e+00 -7.35172047e-01 -7.35172047e-01
 -7.35172047e-01  2.82597153e+00  2.82597153e+00  2.82597153e+00
  1.88166582e+01  1.88166582e+01  1.88166582e+01  1.70819136e+02
  1.67189745e+03  6.46599142e+03]
E1 = -180.47074752005236  E_coul = 54.794492944789354
cycle= 5 E= -125.676254575263  delta_E= -2.1e-12  |g|= 9.3e-08  |ddm|= 1.22e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.47074752005236  E_coul = 54.794492944789354
  HOMO = -0.735172105451405  LUMO = 2.82597147468143
  mo_energy =
[-3.14461503e+01 -1.78921424e+00 -7.35172105e-01 -7.35172105e-01
 -7.35172105e-01  2.82597147e+00  2.82597147e+00  2.82597147e+00
  1.88166581e+01  1.88166581e+01  1.88166581e+01  1.70819136e+02
  1.67189744e+03  6.46599142e+03]
E1 = -180.4707477520249  E_coul = 54.79449317676194
Extra cycle  E= -125.676254575263  delta_E= 4.26e-14  |g|= 2.58e-08  |ddm|= 2.94e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 121.92792223774764
E1 = -180.4707477520249  E_coul = 54.79449317676194
init E= -125.676254575263
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.735172090369127  LUMO = 2.82597148930151
  mo_energy =
[-3.14461502e+01 -1.78921422e+00 -7.35172090e-01 -7.35172090e-01
 -7.35172090e-01  2.82597149e+00  2.82597149e+00  2.82597149e+00
  1.88166581e+01  1.88166581e+01  1.88166581e+01  1.70819136e+02
  1.67189745e+03  6.46599142e+03]
E1 = -180.47074768174335  E_coul = 54.79449310648031
cycle= 1 E= -125.676254575263  delta_E= -8.53e-14  |g|= 7.82e-09  |ddm|= 9.32e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.47074768174335  E_coul = 54.79449310648031
  HOMO = -0.735172094992756  LUMO = 2.82597148482894
  mo_energy =
[-3.14461502e+01 -1.78921423e+00 -7.35172095e-01 -7.35172095e-01
 -7.35172095e-01  2.82597148e+00  2.82597148e+00  2.82597148e+00
  1.88166581e+01  1.88166581e+01  1.88166581e+01  1.70819136e+02
  1.67189744e+03  6.46599142e+03]
E1 = -180.47074770293796  E_coul = 54.79449312767506
Extra cycle  E= -125.676254575263  delta_E= 1.42e-13  |g|= 2.36e-09  |ddm|= 2.8e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766741e+03 9.88357692e-01 1.29843618e+03 1.93558517e+02
 2.32158454e+01 1.18935727e+01 6.23038987e-01 2.86980177e+00]
grad_E = [-3.92889065e-06  6.56979645e-03 -1.50067365e-06  2.06546758e-02
 -1.30918374e-02 -2.71191704e-02 -8.48982059e-02  1.41364126e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66795261        1
[INPUT] 0    0    [1    /1   ]  0.985671095921       1
[INPUT] 0    0    [1    /1   ]  1298.43618668        1
[INPUT] 0    0    [1    /1   ]  189.805075913        1
[INPUT] 0    0    [1    /1   ]  23.0251714026        1
[INPUT] 1    0    [1    /1   ]  13.0068091766        1
[INPUT] 1    0    [1    /1   ]  0.695154940644       1
[INPUT] 1    0    [1    /1   ]  3.30212587362        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6679526075293, 1.0]], [0, [0.9856710959212776, 1.0]], [0, [1298.4361866848235, 1.0]], [0, [189.80507591300935, 1.0]], [0, [23.025171402572678, 1.0]], [1, [13.006809176619523, 1.0]], [1, [0.6951549406439518, 1.0]], [1, [3.302125873622309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66795261]
bas 1, expnt(s) = [0.9856711]
bas 2, expnt(s) = [1298.43618668]
bas 3, expnt(s) = [189.80507591]
bas 4, expnt(s) = [23.0251714]
bas 5, expnt(s) = [13.00680918]
bas 6, expnt(s) = [0.69515494]
bas 7, expnt(s) = [3.30212587]
CPU time:        59.71
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766795e+03 7.40715125e+02 9.85671096e-01 2.49927497e+00
 1.29843619e+03 5.46487814e+02 1.89805076e+02 1.29195055e+02
 2.30251714e+01 2.65562763e+01 1.30068092e+01 7.20605966e+01
 6.95154941e-01 1.85176730e+00 3.30212587e+00 1.29860306e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8866803344668
cond(S) = 120.49108316882366
E1 = -179.53252474021588  E_coul = 54.94463458178459
init E= -124.587890158431
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.744827091593965  LUMO = 3.2857903751612
  mo_energy =
[-3.13649781e+01 -1.78582344e+00 -7.44827092e-01 -7.44827092e-01
 -7.44827092e-01  3.28579038e+00  3.28579038e+00  3.28579038e+00
  2.15388323e+01  2.15388323e+01  2.15388323e+01  1.67252551e+02
  1.65986738e+03  6.45213261e+03]
E1 = -180.84743993901563  E_coul = 55.13118843666577
cycle= 1 E= -125.71625150235  delta_E= -1.13  |g|= 0.0972  |ddm|= 0.192
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0783377
diis-c [-0.0061368  1.       ]
  HOMO = -0.704534408029286  LUMO = 3.33289056785205
  mo_energy =
[-3.14175662e+01 -1.76139636e+00 -7.04534408e-01 -7.04534408e-01
 -7.04534408e-01  3.33289057e+00  3.33289057e+00  3.33289057e+00
  2.15459624e+01  2.15459624e+01  2.15459624e+01  1.67259888e+02
  1.65985591e+03  6.45212007e+03]
E1 = -180.78941858373938  E_coul = 55.07311373328382
cycle= 2 E= -125.716304850456  delta_E= -5.33e-05  |g|= 0.0065  |ddm|= 0.00849
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0113858
diis-c [-1.00851403e-04  6.45976264e-02  9.35402374e-01]
  HOMO = -0.708097556885779  LUMO = 3.32899684602702
  mo_energy =
[-3.14297618e+01 -1.76566770e+00 -7.08097557e-01 -7.08097557e-01
 -7.08097557e-01  3.32899685e+00  3.32899685e+00  3.32899685e+00
  2.15369193e+01  2.15369193e+01  2.15369193e+01  1.67246881e+02
  1.65984092e+03  6.45210452e+03]
E1 = -180.80412940313468  E_coul = 55.087821334794114
cycle= 3 E= -125.716308068341  delta_E= -3.22e-06  |g|= 0.00124  |ddm|= 0.00195
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00210477
diis-c [-1.84635365e-08 -3.64794444e-03  1.47331468e-01  8.56316476e-01]
  HOMO = -0.707543135357689  LUMO = 3.3296069559057
  mo_energy =
[-3.14277832e+01 -1.76499345e+00 -7.07543135e-01 -7.07543135e-01
 -7.07543135e-01  3.32960696e+00  3.32960696e+00  3.32960696e+00
  2.15383689e+01  2.15383689e+01  2.15383689e+01  1.67248903e+02
  1.65984290e+03  6.45210647e+03]
E1 = -180.8017370501203  E_coul = 55.085428858252115
cycle= 4 E= -125.716308191868  delta_E= -1.24e-07  |g|= 7.93e-06  |ddm|= 0.000324
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40083e-05
diis-c [-6.82378085e-13  3.36379242e-05 -2.57654014e-03 -7.80389833e-03
  1.01034680e+00]
  HOMO = -0.707547012016308  LUMO = 3.3296028337024
  mo_energy =
[-3.14277934e+01 -1.76499795e+00 -7.07547012e-01 -7.07547012e-01
 -7.07547012e-01  3.32960283e+00  3.32960283e+00  3.32960283e+00
  2.15383603e+01  2.15383603e+01  2.15383603e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.8017510882884  E_coul = 55.08544289641588
cycle= 5 E= -125.716308191873  delta_E= -4.33e-12  |g|= 6.66e-08  |ddm|= 1.8e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.8017510882884  E_coul = 55.08544289641588
  HOMO = -0.70754705248182  LUMO = 3.32960278989214
  mo_energy =
[-3.14277935e+01 -1.76499800e+00 -7.07547052e-01 -7.07547052e-01
 -7.07547052e-01  3.32960279e+00  3.32960279e+00  3.32960279e+00
  2.15383602e+01  2.15383602e+01  2.15383602e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.80175123899804  E_coul = 55.08544304712539
Extra cycle  E= -125.716308191873  delta_E= -1.42e-13  |g|= 1.69e-08  |ddm|= 1.94e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766795e+03 9.85671096e-01 1.29843619e+03 1.89805076e+02
 2.30251714e+01 1.30068092e+01 6.95154941e-01 3.30212587e+00]
E = -125.71630819187266
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66795261        1
[INPUT] 0    0    [1    /1   ]  0.985671095921       1
[INPUT] 0    0    [1    /1   ]  1298.43618668        1
[INPUT] 0    0    [1    /1   ]  189.805075913        1
[INPUT] 0    0    [1    /1   ]  23.0251714026        1
[INPUT] 1    0    [1    /1   ]  13.0068091766        1
[INPUT] 1    0    [1    /1   ]  0.695154940644       1
[INPUT] 1    0    [1    /1   ]  3.30212587362        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6679526075293, 1.0]], [0, [0.9856710959212776, 1.0]], [0, [1298.4361866848235, 1.0]], [0, [189.80507591300935, 1.0]], [0, [23.025171402572678, 1.0]], [1, [13.006809176619523, 1.0]], [1, [0.6951549406439518, 1.0]], [1, [3.302125873622309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66795261]
bas 1, expnt(s) = [0.9856711]
bas 2, expnt(s) = [1298.43618668]
bas 3, expnt(s) = [189.80507591]
bas 4, expnt(s) = [23.0251714]
bas 5, expnt(s) = [13.00680918]
bas 6, expnt(s) = [0.69515494]
bas 7, expnt(s) = [3.30212587]
CPU time:        60.12
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766795e+03 7.40715125e+02 9.85671096e-01 2.49927497e+00
 1.29843619e+03 5.46487814e+02 1.89805076e+02 1.29195055e+02
 2.30251714e+01 2.65562763e+01 1.30068092e+01 7.20605966e+01
 6.95154941e-01 1.85176730e+00 3.30212587e+00 1.29860306e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8866803344668
cond(S) = 120.49108316882366
E1 = -179.53252474021588  E_coul = 54.94463458178459
init E= -124.587890158431
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.744827091593965  LUMO = 3.2857903751612
  mo_energy =
[-3.13649781e+01 -1.78582344e+00 -7.44827092e-01 -7.44827092e-01
 -7.44827092e-01  3.28579038e+00  3.28579038e+00  3.28579038e+00
  2.15388323e+01  2.15388323e+01  2.15388323e+01  1.67252551e+02
  1.65986738e+03  6.45213261e+03]
E1 = -180.84743993901563  E_coul = 55.13118843666577
cycle= 1 E= -125.71625150235  delta_E= -1.13  |g|= 0.0972  |ddm|= 0.192
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0783377
diis-c [-0.0061368  1.       ]
  HOMO = -0.704534408029286  LUMO = 3.33289056785205
  mo_energy =
[-3.14175662e+01 -1.76139636e+00 -7.04534408e-01 -7.04534408e-01
 -7.04534408e-01  3.33289057e+00  3.33289057e+00  3.33289057e+00
  2.15459624e+01  2.15459624e+01  2.15459624e+01  1.67259888e+02
  1.65985591e+03  6.45212007e+03]
E1 = -180.78941858373938  E_coul = 55.07311373328382
cycle= 2 E= -125.716304850456  delta_E= -5.33e-05  |g|= 0.0065  |ddm|= 0.00849
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0113858
diis-c [-1.00851403e-04  6.45976264e-02  9.35402374e-01]
  HOMO = -0.708097556885779  LUMO = 3.32899684602702
  mo_energy =
[-3.14297618e+01 -1.76566770e+00 -7.08097557e-01 -7.08097557e-01
 -7.08097557e-01  3.32899685e+00  3.32899685e+00  3.32899685e+00
  2.15369193e+01  2.15369193e+01  2.15369193e+01  1.67246881e+02
  1.65984092e+03  6.45210452e+03]
E1 = -180.80412940313468  E_coul = 55.087821334794114
cycle= 3 E= -125.716308068341  delta_E= -3.22e-06  |g|= 0.00124  |ddm|= 0.00195
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00210477
diis-c [-1.84635365e-08 -3.64794444e-03  1.47331468e-01  8.56316476e-01]
  HOMO = -0.707543135357689  LUMO = 3.3296069559057
  mo_energy =
[-3.14277832e+01 -1.76499345e+00 -7.07543135e-01 -7.07543135e-01
 -7.07543135e-01  3.32960696e+00  3.32960696e+00  3.32960696e+00
  2.15383689e+01  2.15383689e+01  2.15383689e+01  1.67248903e+02
  1.65984290e+03  6.45210647e+03]
E1 = -180.8017370501203  E_coul = 55.085428858252115
cycle= 4 E= -125.716308191868  delta_E= -1.24e-07  |g|= 7.93e-06  |ddm|= 0.000324
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40083e-05
diis-c [-6.82378085e-13  3.36379242e-05 -2.57654014e-03 -7.80389833e-03
  1.01034680e+00]
  HOMO = -0.707547012016308  LUMO = 3.3296028337024
  mo_energy =
[-3.14277934e+01 -1.76499795e+00 -7.07547012e-01 -7.07547012e-01
 -7.07547012e-01  3.32960283e+00  3.32960283e+00  3.32960283e+00
  2.15383603e+01  2.15383603e+01  2.15383603e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.8017510882884  E_coul = 55.08544289641588
cycle= 5 E= -125.716308191873  delta_E= -4.33e-12  |g|= 6.66e-08  |ddm|= 1.8e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.8017510882884  E_coul = 55.08544289641588
  HOMO = -0.70754705248182  LUMO = 3.32960278989214
  mo_energy =
[-3.14277935e+01 -1.76499800e+00 -7.07547052e-01 -7.07547052e-01
 -7.07547052e-01  3.32960279e+00  3.32960279e+00  3.32960279e+00
  2.15383602e+01  2.15383602e+01  2.15383602e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.80175123899804  E_coul = 55.08544304712539
Extra cycle  E= -125.716308191873  delta_E= -1.42e-13  |g|= 1.69e-08  |ddm|= 1.94e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 120.49108316882366
E1 = -180.80175123899804  E_coul = 55.08544304712539
init E= -125.716308191873
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.707547042817856  LUMO = 3.32960280052095
  mo_energy =
[-3.14277935e+01 -1.76499799e+00 -7.07547043e-01 -7.07547043e-01
 -7.07547043e-01  3.32960280e+00  3.32960280e+00  3.32960280e+00
  2.15383602e+01  2.15383602e+01  2.15383602e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.80175119744595  E_coul = 55.085443005573424
cycle= 1 E= -125.716308191873  delta_E= 1.28e-13  |g|= 4.65e-09  |ddm|= 5.61e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.80175119744595  E_coul = 55.085443005573424
  HOMO = -0.707547045514777  LUMO = 3.32960279756291
  mo_energy =
[-3.14277935e+01 -1.76499799e+00 -7.07547046e-01 -7.07547046e-01
 -7.07547046e-01  3.32960280e+00  3.32960280e+00  3.32960280e+00
  2.15383602e+01  2.15383602e+01  2.15383602e+01  1.67248893e+02
  1.65984289e+03  6.45210646e+03]
E1 = -180.80175120886042  E_coul = 55.085443016987774
Extra cycle  E= -125.716308191873  delta_E= -1.28e-13  |g|= 1.28e-09  |ddm|= 1.53e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766795e+03 9.85671096e-01 1.29843619e+03 1.89805076e+02
 2.30251714e+01 1.30068092e+01 6.95154941e-01 3.30212587e+00]
grad_E = [-5.91430352e-06  2.40109643e-02 -1.87753053e-06  2.08427985e-02
 -1.64710457e-02 -2.87488610e-02 -6.39996791e-02  1.86602719e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66903309        1
[INPUT] 0    0    [1    /1   ]  0.979764605347       1
[INPUT] 0    0    [1    /1   ]  1298.43627339        1
[INPUT] 0    0    [1    /1   ]  182.417012379        1
[INPUT] 0    0    [1    /1   ]  22.7396610471        1
[INPUT] 1    0    [1    /1   ]  15.328141242         1
[INPUT] 1    0    [1    /1   ]  0.802934057589       1
[INPUT] 1    0    [1    /1   ]  4.03516491146        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6690330916865, 1.0]], [0, [0.9797646053469212, 1.0]], [0, [1298.4362733909804, 1.0]], [0, [182.417012378663, 1.0]], [0, [22.739661047128262, 1.0]], [1, [15.328141242026241, 1.0]], [1, [0.8029340575894457, 1.0]], [1, [4.035164911461122, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66903309]
bas 1, expnt(s) = [0.97976461]
bas 2, expnt(s) = [1298.43627339]
bas 3, expnt(s) = [182.41701238]
bas 4, expnt(s) = [22.73966105]
bas 5, expnt(s) = [15.32814124]
bas 6, expnt(s) = [0.80293406]
bas 7, expnt(s) = [4.03516491]
CPU time:        62.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766903e+03 7.40715434e+02 9.79764605e-01 2.48803413e+00
 1.29843627e+03 5.46487841e+02 1.82417012e+02 1.25404762e+02
 2.27396610e+01 2.63089196e+01 1.53281412e+01 8.84802334e+01
 8.02934058e-01 2.21734996e+00 4.03516491e+00 1.66844157e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852117035095116
cond(S) = 117.76548986909006
E1 = -179.61231388622  E_coul = 54.89720208921998
init E= -124.715111797
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.736316724063085  LUMO = 4.07920743301486
  mo_energy =
[-3.14382880e+01 -1.79672114e+00 -7.36316724e-01 -7.36316724e-01
 -7.36316724e-01  4.07920743e+00  4.07920743e+00  4.07920743e+00
  2.66123603e+01  2.66123603e+01  2.66123603e+01  1.60433547e+02
  1.63621710e+03  6.42500252e+03]
E1 = -181.47610401353757  E_coul = 55.69367602246561
cycle= 1 E= -125.782427991072  delta_E= -1.07  |g|= 0.116  |ddm|= 0.172
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133693
diis-c [-0.01787388  1.        ]
  HOMO = -0.64952022208866  LUMO = 4.18031067662076
  mo_energy =
[-3.13790698e+01 -1.71701078e+00 -6.49520222e-01 -6.49520222e-01
 -6.49520222e-01  4.18031068e+00  4.18031068e+00  4.18031068e+00
  2.67074717e+01  2.67074717e+01  2.67074717e+01  1.60554563e+02
  1.63632740e+03  6.42511291e+03]
E1 = -181.3166176739853  E_coul = 55.533779595429145
cycle= 2 E= -125.782838078556  delta_E= -0.00041  |g|= 0.0179  |ddm|= 0.023
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306731
diis-c [-1.67921779e-04  1.72824305e-01  8.27175695e-01]
  HOMO = -0.657976864041296  LUMO = 4.16937039962692
  mo_energy =
[-3.14097128e+01 -1.72708897e+00 -6.57976864e-01 -6.57976864e-01
 -6.57976864e-01  4.16937040e+00  4.16937040e+00  4.16937040e+00
  2.66837579e+01  2.66837579e+01  2.66837579e+01  1.60522497e+02
  1.63629266e+03  6.42507758e+03]
E1 = -181.3474538647234  E_coul = 55.564592878976285
cycle= 3 E= -125.782860985747  delta_E= -2.29e-05  |g|= 0.000434  |ddm|= 0.00424
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000623975
diis-c [-1.48847267e-08 -4.18114270e-03  2.02349907e-03  1.00215764e+00]
  HOMO = -0.657830635200507  LUMO = 4.16957241867236
  mo_energy =
[-3.14090418e+01 -1.72690125e+00 -6.57830635e-01 -6.57830635e-01
 -6.57830635e-01  4.16957242e+00  4.16957242e+00  4.16957242e+00
  2.66842409e+01  2.66842409e+01  2.66842409e+01  1.60523146e+02
  1.63629310e+03  6.42507793e+03]
E1 = -181.34681829312655  E_coul = 55.563957297107926
cycle= 4 E= -125.782860996019  delta_E= -1.03e-08  |g|= 4.09e-06  |ddm|= 9.4e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.2155e-06
diis-c [-2.69742363e-13  3.29070355e-05 -2.92494922e-04 -1.03997061e-02
  1.01065929e+00]
  HOMO = -0.657832611841084  LUMO = 4.16956985525786
  mo_energy =
[-3.14090472e+01 -1.72690355e+00 -6.57832612e-01 -6.57832612e-01
 -6.57832612e-01  4.16956986e+00  4.16956986e+00  4.16956986e+00
  2.66842361e+01  2.66842361e+01  2.66842361e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682461133363  E_coul = 55.56396361531391
cycle= 5 E= -125.78286099602  delta_E= -1.09e-12  |g|= 2e-08  |ddm|= 8.29e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.34682461133363  E_coul = 55.56396361531391
  HOMO = -0.657832623689387  LUMO = 4.16956984069684
  mo_energy =
[-3.14090473e+01 -1.72690356e+00 -6.57832624e-01 -6.57832624e-01
 -6.57832624e-01  4.16956984e+00  4.16956984e+00  4.16956984e+00
  2.66842360e+01  2.66842360e+01  2.66842360e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682464976586  E_coul = 55.56396365374621
Extra cycle  E= -125.78286099602  delta_E= 7.11e-14  |g|= 4.31e-09  |ddm|= 5.08e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766903e+03 9.79764605e-01 1.29843627e+03 1.82417012e+02
 2.27396610e+01 1.53281412e+01 8.02934058e-01 4.03516491e+00]
E = -125.78286099601965
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66903309        1
[INPUT] 0    0    [1    /1   ]  0.979764605347       1
[INPUT] 0    0    [1    /1   ]  1298.43627339        1
[INPUT] 0    0    [1    /1   ]  182.417012379        1
[INPUT] 0    0    [1    /1   ]  22.7396610471        1
[INPUT] 1    0    [1    /1   ]  15.328141242         1
[INPUT] 1    0    [1    /1   ]  0.802934057589       1
[INPUT] 1    0    [1    /1   ]  4.03516491146        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6690330916865, 1.0]], [0, [0.9797646053469212, 1.0]], [0, [1298.4362733909804, 1.0]], [0, [182.417012378663, 1.0]], [0, [22.739661047128262, 1.0]], [1, [15.328141242026241, 1.0]], [1, [0.8029340575894457, 1.0]], [1, [4.035164911461122, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66903309]
bas 1, expnt(s) = [0.97976461]
bas 2, expnt(s) = [1298.43627339]
bas 3, expnt(s) = [182.41701238]
bas 4, expnt(s) = [22.73966105]
bas 5, expnt(s) = [15.32814124]
bas 6, expnt(s) = [0.80293406]
bas 7, expnt(s) = [4.03516491]
CPU time:        63.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766903e+03 7.40715434e+02 9.79764605e-01 2.48803413e+00
 1.29843627e+03 5.46487841e+02 1.82417012e+02 1.25404762e+02
 2.27396610e+01 2.63089196e+01 1.53281412e+01 8.84802334e+01
 8.02934058e-01 2.21734996e+00 4.03516491e+00 1.66844157e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852117035095116
cond(S) = 117.76548986909006
E1 = -179.61231388622  E_coul = 54.89720208921998
init E= -124.715111797
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.736316724063085  LUMO = 4.07920743301486
  mo_energy =
[-3.14382880e+01 -1.79672114e+00 -7.36316724e-01 -7.36316724e-01
 -7.36316724e-01  4.07920743e+00  4.07920743e+00  4.07920743e+00
  2.66123603e+01  2.66123603e+01  2.66123603e+01  1.60433547e+02
  1.63621710e+03  6.42500252e+03]
E1 = -181.47610401353757  E_coul = 55.69367602246561
cycle= 1 E= -125.782427991072  delta_E= -1.07  |g|= 0.116  |ddm|= 0.172
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133693
diis-c [-0.01787388  1.        ]
  HOMO = -0.64952022208866  LUMO = 4.18031067662076
  mo_energy =
[-3.13790698e+01 -1.71701078e+00 -6.49520222e-01 -6.49520222e-01
 -6.49520222e-01  4.18031068e+00  4.18031068e+00  4.18031068e+00
  2.67074717e+01  2.67074717e+01  2.67074717e+01  1.60554563e+02
  1.63632740e+03  6.42511291e+03]
E1 = -181.3166176739853  E_coul = 55.533779595429145
cycle= 2 E= -125.782838078556  delta_E= -0.00041  |g|= 0.0179  |ddm|= 0.023
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306731
diis-c [-1.67921779e-04  1.72824305e-01  8.27175695e-01]
  HOMO = -0.657976864041296  LUMO = 4.16937039962692
  mo_energy =
[-3.14097128e+01 -1.72708897e+00 -6.57976864e-01 -6.57976864e-01
 -6.57976864e-01  4.16937040e+00  4.16937040e+00  4.16937040e+00
  2.66837579e+01  2.66837579e+01  2.66837579e+01  1.60522497e+02
  1.63629266e+03  6.42507758e+03]
E1 = -181.3474538647234  E_coul = 55.564592878976285
cycle= 3 E= -125.782860985747  delta_E= -2.29e-05  |g|= 0.000434  |ddm|= 0.00424
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000623975
diis-c [-1.48847267e-08 -4.18114270e-03  2.02349907e-03  1.00215764e+00]
  HOMO = -0.657830635200507  LUMO = 4.16957241867236
  mo_energy =
[-3.14090418e+01 -1.72690125e+00 -6.57830635e-01 -6.57830635e-01
 -6.57830635e-01  4.16957242e+00  4.16957242e+00  4.16957242e+00
  2.66842409e+01  2.66842409e+01  2.66842409e+01  1.60523146e+02
  1.63629310e+03  6.42507793e+03]
E1 = -181.34681829312655  E_coul = 55.563957297107926
cycle= 4 E= -125.782860996019  delta_E= -1.03e-08  |g|= 4.09e-06  |ddm|= 9.4e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.2155e-06
diis-c [-2.69742363e-13  3.29070355e-05 -2.92494922e-04 -1.03997061e-02
  1.01065929e+00]
  HOMO = -0.657832611841084  LUMO = 4.16956985525786
  mo_energy =
[-3.14090472e+01 -1.72690355e+00 -6.57832612e-01 -6.57832612e-01
 -6.57832612e-01  4.16956986e+00  4.16956986e+00  4.16956986e+00
  2.66842361e+01  2.66842361e+01  2.66842361e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682461133363  E_coul = 55.56396361531391
cycle= 5 E= -125.78286099602  delta_E= -1.09e-12  |g|= 2e-08  |ddm|= 8.29e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.34682461133363  E_coul = 55.56396361531391
  HOMO = -0.657832623689387  LUMO = 4.16956984069684
  mo_energy =
[-3.14090473e+01 -1.72690356e+00 -6.57832624e-01 -6.57832624e-01
 -6.57832624e-01  4.16956984e+00  4.16956984e+00  4.16956984e+00
  2.66842360e+01  2.66842360e+01  2.66842360e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682464976586  E_coul = 55.56396365374621
Extra cycle  E= -125.78286099602  delta_E= 7.11e-14  |g|= 4.31e-09  |ddm|= 5.08e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 117.76548986909006
E1 = -181.34682464976586  E_coul = 55.56396365374621
init E= -125.78286099602
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.65783262128016  LUMO = 4.16956984383606
  mo_energy =
[-3.14090472e+01 -1.72690356e+00 -6.57832621e-01 -6.57832621e-01
 -6.57832621e-01  4.16956984e+00  4.16956984e+00  4.16956984e+00
  2.66842361e+01  2.66842361e+01  2.66842361e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682464074618  E_coul = 55.56396364472644
cycle= 1 E= -125.78286099602  delta_E= -8.53e-14  |g|= 1.01e-09  |ddm|= 1.25e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.34682464074618  E_coul = 55.56396364472644
  HOMO = -0.657832621853079  LUMO = 4.16956984309238
  mo_energy =
[-3.14090473e+01 -1.72690356e+00 -6.57832622e-01 -6.57832622e-01
 -6.57832622e-01  4.16956984e+00  4.16956984e+00  4.16956984e+00
  2.66842360e+01  2.66842360e+01  2.66842360e+01  1.60523140e+02
  1.63629309e+03  6.42507793e+03]
E1 = -181.34682464285805  E_coul = 55.563963646838296
Extra cycle  E= -125.78286099602  delta_E= -2.84e-14  |g|= 2.37e-10  |ddm|= 2.92e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94766903e+03 9.79764605e-01 1.29843627e+03 1.82417012e+02
 2.27396610e+01 1.53281412e+01 8.02934058e-01 4.03516491e+00]
grad_E = [-9.41824950e-06  3.84782838e-02 -1.18206830e-07  2.07737787e-02
 -1.37838044e-02 -2.40528580e-02  7.34310960e-03  2.12274011e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67067623        1
[INPUT] 0    0    [1    /1   ]  0.97287865032        1
[INPUT] 0    0    [1    /1   ]  1298.43645197        1
[INPUT] 0    0    [1    /1   ]  171.34415905         1
[INPUT] 0    0    [1    /1   ]  22.3531511342        1
[INPUT] 1    0    [1    /1   ]  18.9564183784        1
[INPUT] 1    0    [1    /1   ]  0.915499485508       1
[INPUT] 1    0    [1    /1   ]  4.99003901651        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6706762332115, 1.0]], [0, [0.9728786503203842, 1.0]], [0, [1298.4364519682938, 1.0]], [0, [171.34415904961978, 1.0]], [0, [22.353151134173572, 1.0]], [1, [18.95641837843062, 1.0]], [1, [0.9154994855078107, 1.0]], [1, [4.990039016506653, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67067623]
bas 1, expnt(s) = [0.97287865]
bas 2, expnt(s) = [1298.43645197]
bas 3, expnt(s) = [171.34415905]
bas 4, expnt(s) = [22.35315113]
bas 5, expnt(s) = [18.95641838]
bas 6, expnt(s) = [0.91549949]
bas 7, expnt(s) = [4.99003902]
CPU time:        65.97
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767068e+03 7.40715902e+02 9.72878650e-01 2.47490783e+00
 1.29843645e+03 5.46487898e+02 1.71344159e+02 1.19651185e+02
 2.23531511e+01 2.59728191e+01 1.89564184e+01 1.15393076e+02
 9.15499486e-01 2.61250436e+00 4.99003902e+00 2.17577669e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.806153207953063
cond(S) = 113.83831892901102
E1 = -179.69493853381297  E_coul = 54.805697397721154
init E= -124.889241136092
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.723035468166144  LUMO = 5.06774207901451
  mo_energy =
[-3.15510113e+01 -1.81456357e+00 -7.23035468e-01 -7.23035468e-01
 -7.23035468e-01  5.06774208e+00  5.06774208e+00  5.06774208e+00
  3.40984120e+01  3.40984120e+01  3.40984120e+01  1.50390874e+02
  1.60062396e+03  6.38454256e+03]
E1 = -182.0847292291283  E_coul = 56.219300128524786
cycle= 1 E= -125.865429100604  delta_E= -0.976  |g|= 0.14  |ddm|= 0.166
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.192268
diis-c [-0.03696684  1.        ]
  HOMO = -0.587535792640107  LUMO = 5.23439923142501
  mo_energy =
[-3.13829158e+01 -1.67811109e+00 -5.87535793e-01 -5.87535793e-01
 -5.87535793e-01  5.23439923e+00  5.23439923e+00  5.23439923e+00
  3.42865304e+01  3.42865304e+01  3.42865304e+01  1.50624694e+02
  1.60086637e+03  6.38478806e+03]
E1 = -181.8719912750951  E_coul = 56.00563975804706
cycle= 2 E= -125.866351517048  delta_E= -0.000922  |g|= 0.0238  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0398886
diis-c [-1.1179894e-04  1.6690652e-01  8.3309348e-01]
  HOMO = -0.598613703668701  LUMO = 5.21738462979557
  mo_energy =
[-3.14255270e+01 -1.69118981e+00 -5.98613704e-01 -5.98613704e-01
 -5.98613704e-01  5.21738463e+00  5.21738463e+00  5.21738463e+00
  3.42517469e+01  3.42517469e+01  3.42517469e+01  1.50580236e+02
  1.60081839e+03  6.38473940e+03]
E1 = -181.90638046494007  E_coul = 56.039993701530804
cycle= 3 E= -125.866386763409  delta_E= -3.52e-05  |g|= 0.000271  |ddm|= 0.00486
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000433967
diis-c [-5.56288731e-09 -4.67730854e-03 -2.98408645e-02  1.03451817e+00]
  HOMO = -0.59870469739044  LUMO = 5.2172661937314
  mo_energy =
[-3.14257065e+01 -1.69128226e+00 -5.98704697e-01 -5.98704697e-01
 -5.98704697e-01  5.21726619e+00  5.21726619e+00  5.21726619e+00
  3.42515588e+01  3.42515588e+01  3.42515588e+01  1.50580033e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658658697586  E_coul = 56.040199821878105
cycle= 4 E= -125.866386765098  delta_E= -1.69e-09  |g|= 2.26e-06  |ddm|= 2.55e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85449e-06
diis-c [-1.43552117e-13  3.28736309e-05  3.01525216e-04 -6.76074897e-03
  1.00642635e+00]
  HOMO = -0.598703602481039  LUMO = 5.21726755457409
  mo_energy =
[-3.14257032e+01 -1.69128108e+00 -5.98703602e-01 -5.98703602e-01
 -5.98703602e-01  5.21726755e+00  5.21726755e+00  5.21726755e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658347133046  E_coul = 56.040196706232514
cycle= 5 E= -125.866386765098  delta_E= -1.99e-13  |g|= 3.59e-09  |ddm|= 4.33e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.90658347133046  E_coul = 56.040196706232514
  HOMO = -0.598703600886866  LUMO = 5.21726755917123
  mo_energy =
[-3.14257032e+01 -1.69128107e+00 -5.98703601e-01 -5.98703601e-01
 -5.98703601e-01  5.21726756e+00  5.21726756e+00  5.21726756e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658346619398  E_coul = 56.04019670109593
Extra cycle  E= -125.866386765098  delta_E= -8.53e-14  |g|= 5.77e-10  |ddm|= 7.03e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767068e+03 9.72878650e-01 1.29843645e+03 1.71344159e+02
 2.23531511e+01 1.89564184e+01 9.15499486e-01 4.99003902e+00]
E = -125.86638676509804
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67067623        1
[INPUT] 0    0    [1    /1   ]  0.97287865032        1
[INPUT] 0    0    [1    /1   ]  1298.43645197        1
[INPUT] 0    0    [1    /1   ]  171.34415905         1
[INPUT] 0    0    [1    /1   ]  22.3531511342        1
[INPUT] 1    0    [1    /1   ]  18.9564183784        1
[INPUT] 1    0    [1    /1   ]  0.915499485508       1
[INPUT] 1    0    [1    /1   ]  4.99003901651        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6706762332115, 1.0]], [0, [0.9728786503203842, 1.0]], [0, [1298.4364519682938, 1.0]], [0, [171.34415904961978, 1.0]], [0, [22.353151134173572, 1.0]], [1, [18.95641837843062, 1.0]], [1, [0.9154994855078107, 1.0]], [1, [4.990039016506653, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67067623]
bas 1, expnt(s) = [0.97287865]
bas 2, expnt(s) = [1298.43645197]
bas 3, expnt(s) = [171.34415905]
bas 4, expnt(s) = [22.35315113]
bas 5, expnt(s) = [18.95641838]
bas 6, expnt(s) = [0.91549949]
bas 7, expnt(s) = [4.99003902]
CPU time:        66.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767068e+03 7.40715902e+02 9.72878650e-01 2.47490783e+00
 1.29843645e+03 5.46487898e+02 1.71344159e+02 1.19651185e+02
 2.23531511e+01 2.59728191e+01 1.89564184e+01 1.15393076e+02
 9.15499486e-01 2.61250436e+00 4.99003902e+00 2.17577669e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.806153207953063
cond(S) = 113.83831892901102
E1 = -179.69493853381297  E_coul = 54.805697397721154
init E= -124.889241136092
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.723035468166144  LUMO = 5.06774207901451
  mo_energy =
[-3.15510113e+01 -1.81456357e+00 -7.23035468e-01 -7.23035468e-01
 -7.23035468e-01  5.06774208e+00  5.06774208e+00  5.06774208e+00
  3.40984120e+01  3.40984120e+01  3.40984120e+01  1.50390874e+02
  1.60062396e+03  6.38454256e+03]
E1 = -182.0847292291283  E_coul = 56.219300128524786
cycle= 1 E= -125.865429100604  delta_E= -0.976  |g|= 0.14  |ddm|= 0.166
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.192268
diis-c [-0.03696684  1.        ]
  HOMO = -0.587535792640107  LUMO = 5.23439923142501
  mo_energy =
[-3.13829158e+01 -1.67811109e+00 -5.87535793e-01 -5.87535793e-01
 -5.87535793e-01  5.23439923e+00  5.23439923e+00  5.23439923e+00
  3.42865304e+01  3.42865304e+01  3.42865304e+01  1.50624694e+02
  1.60086637e+03  6.38478806e+03]
E1 = -181.8719912750951  E_coul = 56.00563975804706
cycle= 2 E= -125.866351517048  delta_E= -0.000922  |g|= 0.0238  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0398886
diis-c [-1.1179894e-04  1.6690652e-01  8.3309348e-01]
  HOMO = -0.598613703668701  LUMO = 5.21738462979557
  mo_energy =
[-3.14255270e+01 -1.69118981e+00 -5.98613704e-01 -5.98613704e-01
 -5.98613704e-01  5.21738463e+00  5.21738463e+00  5.21738463e+00
  3.42517469e+01  3.42517469e+01  3.42517469e+01  1.50580236e+02
  1.60081839e+03  6.38473940e+03]
E1 = -181.90638046494007  E_coul = 56.039993701530804
cycle= 3 E= -125.866386763409  delta_E= -3.52e-05  |g|= 0.000271  |ddm|= 0.00486
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000433967
diis-c [-5.56288731e-09 -4.67730854e-03 -2.98408645e-02  1.03451817e+00]
  HOMO = -0.59870469739044  LUMO = 5.2172661937314
  mo_energy =
[-3.14257065e+01 -1.69128226e+00 -5.98704697e-01 -5.98704697e-01
 -5.98704697e-01  5.21726619e+00  5.21726619e+00  5.21726619e+00
  3.42515588e+01  3.42515588e+01  3.42515588e+01  1.50580033e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658658697586  E_coul = 56.040199821878105
cycle= 4 E= -125.866386765098  delta_E= -1.69e-09  |g|= 2.26e-06  |ddm|= 2.55e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85449e-06
diis-c [-1.43552117e-13  3.28736309e-05  3.01525216e-04 -6.76074897e-03
  1.00642635e+00]
  HOMO = -0.598703602481039  LUMO = 5.21726755457409
  mo_energy =
[-3.14257032e+01 -1.69128108e+00 -5.98703602e-01 -5.98703602e-01
 -5.98703602e-01  5.21726755e+00  5.21726755e+00  5.21726755e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658347133046  E_coul = 56.040196706232514
cycle= 5 E= -125.866386765098  delta_E= -1.99e-13  |g|= 3.59e-09  |ddm|= 4.33e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.90658347133046  E_coul = 56.040196706232514
  HOMO = -0.598703600886866  LUMO = 5.21726755917123
  mo_energy =
[-3.14257032e+01 -1.69128107e+00 -5.98703601e-01 -5.98703601e-01
 -5.98703601e-01  5.21726756e+00  5.21726756e+00  5.21726756e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658346619398  E_coul = 56.04019670109593
Extra cycle  E= -125.866386765098  delta_E= -8.53e-14  |g|= 5.77e-10  |ddm|= 7.03e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 113.83831892901102
E1 = -181.90658346619398  E_coul = 56.04019670109593
init E= -125.866386765098
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.598703601201079  LUMO = 5.21726755868475
  mo_energy =
[-3.14257032e+01 -1.69128107e+00 -5.98703601e-01 -5.98703601e-01
 -5.98703601e-01  5.21726756e+00  5.21726756e+00  5.21726756e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.90658346718968  E_coul = 56.040196702091585
cycle= 1 E= -125.866386765098  delta_E= -5.68e-14  |g|= 1.11e-10  |ddm|= 1.42e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.90658346718968  E_coul = 56.040196702091585
  HOMO = -0.598703601139555  LUMO = 5.21726755877967
  mo_energy =
[-3.14257032e+01 -1.69128107e+00 -5.98703601e-01 -5.98703601e-01
 -5.98703601e-01  5.21726756e+00  5.21726756e+00  5.21726756e+00
  3.42515617e+01  3.42515617e+01  3.42515617e+01  1.50580036e+02
  1.60081802e+03  6.38473896e+03]
E1 = -181.9065834669968  E_coul = 56.040196701898815
Extra cycle  E= -125.866386765098  delta_E= 1.14e-13  |g|= 2.14e-11  |ddm|= 2.73e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767068e+03 9.72878650e-01 1.29843645e+03 1.71344159e+02
 2.23531511e+01 1.89564184e+01 9.15499486e-01 4.99003902e+00]
grad_E = [-1.22787069e-05  4.32577519e-02  1.04325463e-05  2.00838660e-02
 -2.68528307e-03 -1.70336761e-02  2.94884587e-02  2.28778626e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67297867        1
[INPUT] 0    0    [1    /1   ]  0.966717552182       1
[INPUT] 0    0    [1    /1   ]  1298.43669243        1
[INPUT] 0    0    [1    /1   ]  155.984631203        1
[INPUT] 0    0    [1    /1   ]  21.7478092645        1
[INPUT] 1    0    [1    /1   ]  24.1726315299        1
[INPUT] 1    0    [1    /1   ]  1.01800952963        1
[INPUT] 1    0    [1    /1   ]  6.13771089189        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6729786709311, 1.0]], [0, [0.9667175521819448, 1.0]], [0, [1298.4366924319893, 1.0]], [0, [155.98463120342672, 1.0]], [0, [21.74780926446697, 1.0]], [1, [24.17263152988349, 1.0]], [1, [1.0180095296266167, 1.0]], [1, [6.1377108918935654, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67297867]
bas 1, expnt(s) = [0.96671755]
bas 2, expnt(s) = [1298.43669243]
bas 3, expnt(s) = [155.9846312]
bas 4, expnt(s) = [21.74780926]
bas 5, expnt(s) = [24.17263153]
bas 6, expnt(s) = [1.01800953]
bas 7, expnt(s) = [6.13771089]
CPU time:        69.24
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767298e+03 7.40716559e+02 9.66717552e-01 2.46314357e+00
 1.29843669e+03 5.46487974e+02 1.55984631e+02 1.11513227e+02
 2.17478093e+01 2.54434888e+01 2.41726315e+01 1.56364913e+02
 1.01800953e+00 2.98314386e+00 6.13771089e+00 2.81833379e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.756465989805621
cond(S) = 108.6195330716356
E1 = -179.74573239076506  E_coul = 54.661934052443186
init E= -125.083798338322
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.704502983448506  LUMO = 6.21757883679309
  mo_energy =
[-3.17079848e+01 -1.83838948e+00 -7.04502983e-01 -7.04502983e-01
 -7.04502983e-01  6.21757884e+00  6.21757884e+00  6.21757884e+00
  4.45188737e+01  4.45188737e+01  4.45188737e+01  1.36340572e+02
  1.55048285e+03  6.32840790e+03]
E1 = -182.504577209241  E_coul = 56.54013808639871
cycle= 1 E= -125.964439122842  delta_E= -0.881  |g|= 0.153  |ddm|= 0.188
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.216249
diis-c [-0.04676354  1.        ]
  HOMO = -0.529386009156012  LUMO = 6.4411681611004
  mo_energy =
[-3.14683038e+01 -1.65635966e+00 -5.29386009e-01 -5.29386009e-01
 -5.29386009e-01  6.44116816e+00  6.44116816e+00  6.44116816e+00
  4.47751513e+01  4.47751513e+01  4.47751513e+01  1.36647456e+02
  1.55082258e+03  6.32875261e+03]
E1 = -182.29690652303339  E_coul = 56.3313330240013
cycle= 2 E= -125.965573499032  delta_E= -0.00113  |g|= 0.0231  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0375438
diis-c [-1.02927982e-04  1.43350933e-01  8.56649067e-01]
  HOMO = -0.540172947145593  LUMO = 6.42153787058216
  mo_energy =
[-3.15126295e+01 -1.66903252e+00 -5.40172947e-01 -5.40172947e-01
 -5.40172947e-01  6.42153787e+00  6.42153787e+00  6.42153787e+00
  4.47368362e+01  4.47368362e+01  4.47368362e+01  1.36601359e+02
  1.55077235e+03  6.32870163e+03]
E1 = -182.3249975151658  E_coul = 56.35939583166477
cycle= 3 E= -125.965601683501  delta_E= -2.82e-05  |g|= 0.000284  |ddm|= 0.00406
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000490807
diis-c [-1.09574568e-08 -3.50075266e-03 -3.07179727e-02  1.03421873e+00]
  HOMO = -0.540292214997585  LUMO = 6.4213444378413
  mo_energy =
[-3.15129516e+01 -1.66915966e+00 -5.40292215e-01 -5.40292215e-01
 -5.40292215e-01  6.42134444e+00  6.42134444e+00  6.42134444e+00
  4.47365228e+01  4.47365228e+01  4.47365228e+01  1.36601039e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525998090296  E_coul = 56.35965829473874
cycle= 4 E= -125.965601686164  delta_E= -2.66e-09  |g|= 3.98e-06  |ddm|= 3.51e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.32735e-06
diis-c [-1.65926368e-13  1.87136303e-05  3.54482631e-04 -7.54006649e-03
  1.00716687e+00]
  HOMO = -0.540290323791025  LUMO = 6.42134751358987
  mo_energy =
[-3.15129455e+01 -1.66915753e+00 -5.40290324e-01 -5.40290324e-01
 -5.40290324e-01  6.42134751e+00  6.42134751e+00  6.42134751e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525543300983  E_coul = 56.359653746844806
cycle= 5 E= -125.965601686165  delta_E= -8.24e-13  |g|= 1.56e-08  |ddm|= 6.53e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.32525543300983  E_coul = 56.359653746844806
  HOMO = -0.540290315033312  LUMO = 6.42134753086073
  mo_energy =
[-3.15129455e+01 -1.66915752e+00 -5.40290315e-01 -5.40290315e-01
 -5.40290315e-01  6.42134753e+00  6.42134753e+00  6.42134753e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525541153979  E_coul = 56.35965372537486
Extra cycle  E= -125.965601686165  delta_E= 1.14e-13  |g|= 2.4e-09  |ddm|= 3.03e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94767298e+03 9.66717552e-01 1.29843669e+03 1.55984631e+02
 2.17478093e+01 2.41726315e+01 1.01800953e+00 6.13771089e+00]
E = -125.96560168616492
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67297867        1
[INPUT] 0    0    [1    /1   ]  0.966717552182       1
[INPUT] 0    0    [1    /1   ]  1298.43669243        1
[INPUT] 0    0    [1    /1   ]  155.984631203        1
[INPUT] 0    0    [1    /1   ]  21.7478092645        1
[INPUT] 1    0    [1    /1   ]  24.1726315299        1
[INPUT] 1    0    [1    /1   ]  1.01800952963        1
[INPUT] 1    0    [1    /1   ]  6.13771089189        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6729786709311, 1.0]], [0, [0.9667175521819448, 1.0]], [0, [1298.4366924319893, 1.0]], [0, [155.98463120342672, 1.0]], [0, [21.74780926446697, 1.0]], [1, [24.17263152988349, 1.0]], [1, [1.0180095296266167, 1.0]], [1, [6.1377108918935654, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67297867]
bas 1, expnt(s) = [0.96671755]
bas 2, expnt(s) = [1298.43669243]
bas 3, expnt(s) = [155.9846312]
bas 4, expnt(s) = [21.74780926]
bas 5, expnt(s) = [24.17263153]
bas 6, expnt(s) = [1.01800953]
bas 7, expnt(s) = [6.13771089]
CPU time:        69.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767298e+03 7.40716559e+02 9.66717552e-01 2.46314357e+00
 1.29843669e+03 5.46487974e+02 1.55984631e+02 1.11513227e+02
 2.17478093e+01 2.54434888e+01 2.41726315e+01 1.56364913e+02
 1.01800953e+00 2.98314386e+00 6.13771089e+00 2.81833379e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.756465989805621
cond(S) = 108.6195330716356
E1 = -179.74573239076506  E_coul = 54.661934052443186
init E= -125.083798338322
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.704502983448506  LUMO = 6.21757883679309
  mo_energy =
[-3.17079848e+01 -1.83838948e+00 -7.04502983e-01 -7.04502983e-01
 -7.04502983e-01  6.21757884e+00  6.21757884e+00  6.21757884e+00
  4.45188737e+01  4.45188737e+01  4.45188737e+01  1.36340572e+02
  1.55048285e+03  6.32840790e+03]
E1 = -182.504577209241  E_coul = 56.54013808639871
cycle= 1 E= -125.964439122842  delta_E= -0.881  |g|= 0.153  |ddm|= 0.188
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.216249
diis-c [-0.04676354  1.        ]
  HOMO = -0.529386009156012  LUMO = 6.4411681611004
  mo_energy =
[-3.14683038e+01 -1.65635966e+00 -5.29386009e-01 -5.29386009e-01
 -5.29386009e-01  6.44116816e+00  6.44116816e+00  6.44116816e+00
  4.47751513e+01  4.47751513e+01  4.47751513e+01  1.36647456e+02
  1.55082258e+03  6.32875261e+03]
E1 = -182.29690652303339  E_coul = 56.3313330240013
cycle= 2 E= -125.965573499032  delta_E= -0.00113  |g|= 0.0231  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0375438
diis-c [-1.02927982e-04  1.43350933e-01  8.56649067e-01]
  HOMO = -0.540172947145593  LUMO = 6.42153787058216
  mo_energy =
[-3.15126295e+01 -1.66903252e+00 -5.40172947e-01 -5.40172947e-01
 -5.40172947e-01  6.42153787e+00  6.42153787e+00  6.42153787e+00
  4.47368362e+01  4.47368362e+01  4.47368362e+01  1.36601359e+02
  1.55077235e+03  6.32870163e+03]
E1 = -182.3249975151658  E_coul = 56.35939583166477
cycle= 3 E= -125.965601683501  delta_E= -2.82e-05  |g|= 0.000284  |ddm|= 0.00406
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000490807
diis-c [-1.09574568e-08 -3.50075266e-03 -3.07179727e-02  1.03421873e+00]
  HOMO = -0.540292214997585  LUMO = 6.4213444378413
  mo_energy =
[-3.15129516e+01 -1.66915966e+00 -5.40292215e-01 -5.40292215e-01
 -5.40292215e-01  6.42134444e+00  6.42134444e+00  6.42134444e+00
  4.47365228e+01  4.47365228e+01  4.47365228e+01  1.36601039e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525998090296  E_coul = 56.35965829473874
cycle= 4 E= -125.965601686164  delta_E= -2.66e-09  |g|= 3.98e-06  |ddm|= 3.51e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.32735e-06
diis-c [-1.65926368e-13  1.87136303e-05  3.54482631e-04 -7.54006649e-03
  1.00716687e+00]
  HOMO = -0.540290323791025  LUMO = 6.42134751358987
  mo_energy =
[-3.15129455e+01 -1.66915753e+00 -5.40290324e-01 -5.40290324e-01
 -5.40290324e-01  6.42134751e+00  6.42134751e+00  6.42134751e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525543300983  E_coul = 56.359653746844806
cycle= 5 E= -125.965601686165  delta_E= -8.24e-13  |g|= 1.56e-08  |ddm|= 6.53e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.32525543300983  E_coul = 56.359653746844806
  HOMO = -0.540290315033312  LUMO = 6.42134753086073
  mo_energy =
[-3.15129455e+01 -1.66915752e+00 -5.40290315e-01 -5.40290315e-01
 -5.40290315e-01  6.42134753e+00  6.42134753e+00  6.42134753e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525541153979  E_coul = 56.35965372537486
Extra cycle  E= -125.965601686165  delta_E= 1.14e-13  |g|= 2.4e-09  |ddm|= 3.03e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 108.6195330716356
E1 = -182.32525541153979  E_coul = 56.35965372537486
init E= -125.965601686165
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.540290316305068  LUMO = 6.4213475285255
  mo_energy =
[-3.15129455e+01 -1.66915752e+00 -5.40290316e-01 -5.40290316e-01
 -5.40290316e-01  6.42134753e+00  6.42134753e+00  6.42134753e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.3252554149091  E_coul = 56.35965372874426
cycle= 1 E= -125.965601686165  delta_E= 8.53e-14  |g|= 3.73e-10  |ddm|= 4.91e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.3252554149091  E_coul = 56.35965372874426
  HOMO = -0.540290316103764  LUMO = 6.42134752889394
  mo_energy =
[-3.15129455e+01 -1.66915752e+00 -5.40290316e-01 -5.40290316e-01
 -5.40290316e-01  6.42134753e+00  6.42134753e+00  6.42134753e+00
  4.47365284e+01  4.47365284e+01  4.47365284e+01  1.36601044e+02
  1.55077196e+03  6.32870122e+03]
E1 = -182.32525541437994  E_coul = 56.35965372821503
Extra cycle  E= -125.965601686165  delta_E= -8.53e-14  |g|= 5.89e-11  |ddm|= 7.68e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94767298e+03 9.66717552e-01 1.29843669e+03 1.55984631e+02
 2.17478093e+01 2.41726315e+01 1.01800953e+00 6.13771089e+00]
grad_E = [-9.65794052e-06  3.96512425e-02  4.40696628e-05  1.82148044e-02
  1.42786516e-02 -1.08830246e-02 -5.63192134e-02  2.44241472e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67579099        1
[INPUT] 0    0    [1    /1   ]  0.961321763939       1
[INPUT] 0    0    [1    /1   ]  1298.43686962        1
[INPUT] 0    0    [1    /1   ]  137.301162144        1
[INPUT] 0    0    [1    /1   ]  20.8023812641        1
[INPUT] 1    0    [1    /1   ]  30.7360857345        1
[INPUT] 1    0    [1    /1   ]  1.09718824551        1
[INPUT] 1    0    [1    /1   ]  7.32854816016        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.675790986904, 1.0]], [0, [0.9613217639391154, 1.0]], [0, [1298.4368696181355, 1.0]], [0, [137.30116214360095, 1.0]], [0, [20.802381264061445, 1.0]], [1, [30.736085734451457, 1.0]], [1, [1.0971882455149224, 1.0]], [1, [7.328548160157477, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67579099]
bas 1, expnt(s) = [0.96132176]
bas 2, expnt(s) = [1298.43686962]
bas 3, expnt(s) = [137.30116214]
bas 4, expnt(s) = [20.80238126]
bas 5, expnt(s) = [30.73608573]
bas 6, expnt(s) = [1.09718825]
bas 7, expnt(s) = [7.32854816]
CPU time:        72.44
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767579e+03 7.40717361e+02 9.61321764e-01 2.45282523e+00
 1.29843687e+03 5.46488030e+02 1.37301162e+02 1.01337616e+02
 2.08023813e+01 2.46093313e+01 3.07360857e+01 2.11127639e+02
 1.09718825e+00 3.27593914e+00 7.32854816e+00 3.51768402e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.713696285677717
cond(S) = 102.57112139194997
E1 = -179.71422830830733  E_coul = 54.478236321403784
init E= -125.235991986904
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.683459148250022  LUMO = 7.39809151675648
  mo_energy =
[-3.18895831e+01 -1.86352060e+00 -6.83459148e-01 -6.83459148e-01
 -6.83459148e-01  7.39809152e+00  7.39809152e+00  7.39809152e+00
  5.73623345e+01  5.73623345e+01  5.73623345e+01  1.18836795e+02
  1.48802789e+03  6.25994568e+03]
E1 = -182.6505665804392  E_coul = 56.58821295248009
cycle= 1 E= -126.062353627959  delta_E= -0.826  |g|= 0.15  |ddm|= 0.234
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.210166
diis-c [-0.04416972  1.        ]
  HOMO = -0.483936176152229  LUMO = 7.65245380683689
  mo_energy =
[-3.16323111e+01 -1.65349265e+00 -4.83936176e-01 -4.83936176e-01
 -4.83936176e-01  7.65245381e+00  7.65245381e+00  7.65245381e+00
  5.76408929e+01  5.76408929e+01  5.76408929e+01  1.19155243e+02
  1.48839122e+03  6.26030877e+03]
E1 = -182.4825851217063  E_coul = 56.41928247927141
cycle= 2 E= -126.063302642435  delta_E= -0.000949  |g|= 0.0185  |ddm|= 0.0261
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0290739
diis-c [-1.54151407e-04  1.11354600e-01  8.88645400e-01]
  HOMO = -0.492695717620303  LUMO = 7.63389475811203
  mo_energy =
[-3.16707379e+01 -1.66379371e+00 -4.92695718e-01 -4.92695718e-01
 -4.92695718e-01  7.63389476e+00  7.63389476e+00  7.63389476e+00
  5.76058864e+01  5.76058864e+01  5.76058864e+01  1.19115604e+02
  1.48834728e+03  6.26026410e+03]
E1 = -182.50177657010593  E_coul = 56.43845864160301
cycle= 3 E= -126.063317928503  delta_E= -1.53e-05  |g|= 0.00016  |ddm|= 0.00283
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000208491
diis-c [-1.56718616e-08 -1.67353089e-03 -1.07993361e-02  1.01247287e+00]
  HOMO = -0.492694648940096  LUMO = 7.63391866870997
  mo_energy =
[-3.16705840e+01 -1.66378339e+00 -4.92694649e-01 -4.92694649e-01
 -4.92694649e-01  7.63391867e+00  7.63391867e+00  7.63391867e+00
  5.76060058e+01  5.76060058e+01  5.76060058e+01  1.19115793e+02
  1.48834756e+03  6.26026439e+03]
E1 = -182.50174238934704  E_coul = 56.43842446063136
cycle= 4 E= -126.063317928716  delta_E= -2.13e-10  |g|= 2.31e-06  |ddm|= 7.91e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -182.50174238934704  E_coul = 56.43842446063136
  HOMO = -0.492694016485696  LUMO = 7.63391982774311
  mo_energy =
[-3.16705821e+01 -1.66378263e+00 -4.92694016e-01 -4.92694016e-01
 -4.92694016e-01  7.63391983e+00  7.63391983e+00  7.63391983e+00
  5.76060075e+01  5.76060075e+01  5.76060075e+01  1.19115794e+02
  1.48834756e+03  6.26026439e+03]
E1 = -182.5017412087886  E_coul = 56.43842328007271
Extra cycle  E= -126.063317928716  delta_E= -1.85e-13  |g|= 1.28e-07  |ddm|= 1.86e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94767579e+03 9.61321764e-01 1.29843687e+03 1.37301162e+02
 2.08023813e+01 3.07360857e+01 1.09718825e+00 7.32854816e+00]
E = -126.06331792871588
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67579099        1
[INPUT] 0    0    [1    /1   ]  0.961321763939       1
[INPUT] 0    0    [1    /1   ]  1298.43686962        1
[INPUT] 0    0    [1    /1   ]  137.301162144        1
[INPUT] 0    0    [1    /1   ]  20.8023812641        1
[INPUT] 1    0    [1    /1   ]  30.7360857345        1
[INPUT] 1    0    [1    /1   ]  1.09718824551        1
[INPUT] 1    0    [1    /1   ]  7.32854816016        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.675790986904, 1.0]], [0, [0.9613217639391154, 1.0]], [0, [1298.4368696181355, 1.0]], [0, [137.30116214360095, 1.0]], [0, [20.802381264061445, 1.0]], [1, [30.736085734451457, 1.0]], [1, [1.0971882455149224, 1.0]], [1, [7.328548160157477, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67579099]
bas 1, expnt(s) = [0.96132176]
bas 2, expnt(s) = [1298.43686962]
bas 3, expnt(s) = [137.30116214]
bas 4, expnt(s) = [20.80238126]
bas 5, expnt(s) = [30.73608573]
bas 6, expnt(s) = [1.09718825]
bas 7, expnt(s) = [7.32854816]
CPU time:        72.88
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767579e+03 7.40717361e+02 9.61321764e-01 2.45282523e+00
 1.29843687e+03 5.46488030e+02 1.37301162e+02 1.01337616e+02
 2.08023813e+01 2.46093313e+01 3.07360857e+01 2.11127639e+02
 1.09718825e+00 3.27593914e+00 7.32854816e+00 3.51768402e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.713696285677717
cond(S) = 102.57112139194997
E1 = -179.71422830830733  E_coul = 54.478236321403784
init E= -125.235991986904
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.683459148250022  LUMO = 7.39809151675648
  mo_energy =
[-3.18895831e+01 -1.86352060e+00 -6.83459148e-01 -6.83459148e-01
 -6.83459148e-01  7.39809152e+00  7.39809152e+00  7.39809152e+00
  5.73623345e+01  5.73623345e+01  5.73623345e+01  1.18836795e+02
  1.48802789e+03  6.25994568e+03]
E1 = -182.6505665804392  E_coul = 56.58821295248009
cycle= 1 E= -126.062353627959  delta_E= -0.826  |g|= 0.15  |ddm|= 0.234
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.210166
diis-c [-0.04416972  1.        ]
  HOMO = -0.483936176152229  LUMO = 7.65245380683689
  mo_energy =
[-3.16323111e+01 -1.65349265e+00 -4.83936176e-01 -4.83936176e-01
 -4.83936176e-01  7.65245381e+00  7.65245381e+00  7.65245381e+00
  5.76408929e+01  5.76408929e+01  5.76408929e+01  1.19155243e+02
  1.48839122e+03  6.26030877e+03]
E1 = -182.4825851217063  E_coul = 56.41928247927141
cycle= 2 E= -126.063302642435  delta_E= -0.000949  |g|= 0.0185  |ddm|= 0.0261
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0290739
diis-c [-1.54151407e-04  1.11354600e-01  8.88645400e-01]
  HOMO = -0.492695717620303  LUMO = 7.63389475811203
  mo_energy =
[-3.16707379e+01 -1.66379371e+00 -4.92695718e-01 -4.92695718e-01
 -4.92695718e-01  7.63389476e+00  7.63389476e+00  7.63389476e+00
  5.76058864e+01  5.76058864e+01  5.76058864e+01  1.19115604e+02
  1.48834728e+03  6.26026410e+03]
E1 = -182.50177657010593  E_coul = 56.43845864160301
cycle= 3 E= -126.063317928503  delta_E= -1.53e-05  |g|= 0.00016  |ddm|= 0.00283
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000208491
diis-c [-1.56718616e-08 -1.67353089e-03 -1.07993361e-02  1.01247287e+00]
  HOMO = -0.492694648940096  LUMO = 7.63391866870997
  mo_energy =
[-3.16705840e+01 -1.66378339e+00 -4.92694649e-01 -4.92694649e-01
 -4.92694649e-01  7.63391867e+00  7.63391867e+00  7.63391867e+00
  5.76060058e+01  5.76060058e+01  5.76060058e+01  1.19115793e+02
  1.48834756e+03  6.26026439e+03]
E1 = -182.50174238934704  E_coul = 56.43842446063136
cycle= 4 E= -126.063317928716  delta_E= -2.13e-10  |g|= 2.31e-06  |ddm|= 7.91e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -182.50174238934704  E_coul = 56.43842446063136
  HOMO = -0.492694016485696  LUMO = 7.63391982774311
  mo_energy =
[-3.16705821e+01 -1.66378263e+00 -4.92694016e-01 -4.92694016e-01
 -4.92694016e-01  7.63391983e+00  7.63391983e+00  7.63391983e+00
  5.76060075e+01  5.76060075e+01  5.76060075e+01  1.19115794e+02
  1.48834756e+03  6.26026439e+03]
E1 = -182.5017412087886  E_coul = 56.43842328007271
Extra cycle  E= -126.063317928716  delta_E= -1.85e-13  |g|= 1.28e-07  |ddm|= 1.86e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 102.57112139194997
E1 = -182.5017412087886  E_coul = 56.43842328007271
init E= -126.063317928716
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.492694084266351  LUMO = 7.63391968260178
  mo_energy =
[-3.16705824e+01 -1.66378271e+00 -4.92694084e-01 -4.92694084e-01
 -4.92694084e-01  7.63391968e+00  7.63391968e+00  7.63391968e+00
  5.76060072e+01  5.76060072e+01  5.76060072e+01  1.19115794e+02
  1.48834756e+03  6.26026438e+03]
E1 = -182.5017413603882  E_coul = 56.43842343167246
cycle= 1 E= -126.063317928716  delta_E= 1.42e-13  |g|= 1.69e-08  |ddm|= 2.22e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.5017413603882  E_coul = 56.43842343167246
  HOMO = -0.492694075556967  LUMO = 7.63391970120722
  mo_energy =
[-3.16705823e+01 -1.66378270e+00 -4.92694076e-01 -4.92694076e-01
 -4.92694076e-01  7.63391970e+00  7.63391970e+00  7.63391970e+00
  5.76060073e+01  5.76060073e+01  5.76060073e+01  1.19115794e+02
  1.48834756e+03  6.26026438e+03]
E1 = -182.5017413410573  E_coul = 56.438423412341585
Extra cycle  E= -126.063317928716  delta_E= 1.42e-14  |g|= 2.13e-09  |ddm|= 2.87e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767579e+03 9.61321764e-01 1.29843687e+03 1.37301162e+02
 2.08023813e+01 3.07360857e+01 1.09718825e+00 7.32854816e+00]
grad_E = [ 6.69270735e-06  3.13270043e-02  1.21269282e-04  1.41873190e-02
  3.11774652e-02 -6.69185472e-03 -2.21512906e-01  2.54442381e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67746805        1
[INPUT] 0    0    [1    /1   ]  0.959001023588       1
[INPUT] 0    0    [1    /1   ]  1298.43673719        1
[INPUT] 0    0    [1    /1   ]  126.122044987        1
[INPUT] 0    0    [1    /1   ]  19.9361012221        1
[INPUT] 1    0    [1    /1   ]  34.9618312134        1
[INPUT] 1    0    [1    /1   ]  1.09358681543        1
[INPUT] 1    0    [1    /1   ]  7.7662526293         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.677468045565, 1.0]], [0, [0.9590010235881004, 1.0]], [0, [1298.4367371944263, 1.0]], [0, [126.12204498723581, 1.0]], [0, [19.93610122208856, 1.0]], [1, [34.96183121338548, 1.0]], [1, [1.0935868154282824, 1.0]], [1, [7.766252629303526, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67746805]
bas 1, expnt(s) = [0.95900102]
bas 2, expnt(s) = [1298.43673719]
bas 3, expnt(s) = [126.12204499]
bas 4, expnt(s) = [19.93610122]
bas 5, expnt(s) = [34.96183121]
bas 6, expnt(s) = [1.09358682]
bas 7, expnt(s) = [7.76625263]
CPU time:        75.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767747e+03 7.40717839e+02 9.59001024e-01 2.44838284e+00
 1.29843674e+03 5.46487988e+02 1.26122045e+02 9.50841826e+01
 1.99361012e+01 2.38366487e+01 3.49618312e+01 2.48014520e+02
 1.09358682e+00 3.26250341e+00 7.76625263e+00 3.78223740e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.71484170177347
cond(S) = 99.01395402102565
E1 = -179.66788726142076  E_coul = 54.351933739502954
init E= -125.315953521918
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.678062716950554  LUMO = 7.71821056692072
  mo_energy =
[-3.19935661e+01 -1.87492086e+00 -6.78062717e-01 -6.78062717e-01
 -6.78062717e-01  7.71821057e+00  7.71821057e+00  7.71821057e+00
  6.47610089e+01  6.47610089e+01  6.47610089e+01  1.07604557e+02
  1.44932545e+03  6.21840851e+03]
E1 = -182.2563752750946  E_coul = 56.117844278109715
cycle= 1 E= -126.138530996985  delta_E= -0.823  |g|= 0.123  |ddm|= 0.28
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.166502
diis-c [-0.02772295  1.        ]
  HOMO = -0.500130500043537  LUMO = 7.92858764071373
  mo_energy =
[-3.18220432e+01 -1.68816344e+00 -5.00130500e-01 -5.00130500e-01
 -5.00130500e-01  7.92858764e+00  7.92858764e+00  7.92858764e+00
  6.49581722e+01  6.49581722e+01  6.49581722e+01  1.07826407e+02
  1.44956438e+03  6.21863518e+03]
E1 = -182.1473024556061  E_coul = 56.00831900995807
cycle= 2 E= -126.138983445648  delta_E= -0.000452  |g|= 0.0122  |ddm|= 0.0174
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0189164
diis-c [-1.91590132e-04  7.21032008e-02  9.27896799e-01]
  HOMO = -0.505993393093918  LUMO = 7.9153962079304
  mo_energy =
[-3.18482946e+01 -1.69511400e+00 -5.05993393e-01 -5.05993393e-01
 -5.05993393e-01  7.91539621e+00  7.91539621e+00  7.91539621e+00
  6.49335352e+01  6.49335352e+01  6.49335352e+01  1.07799571e+02
  1.44953410e+03  6.21860427e+03]
E1 = -182.1597376407337  E_coul = 56.02074794288138
cycle= 3 E= -126.138989697852  delta_E= -6.25e-06  |g|= 0.000538  |ddm|= 0.00183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000747425
diis-c [-1.73329264e-08 -1.52506418e-03  2.80619694e-02  9.73463095e-01]
  HOMO = -0.505776756950413  LUMO = 7.91590134874859
  mo_energy =
[-3.18471897e+01 -1.69484929e+00 -5.05776757e-01 -5.05776757e-01
 -5.05776757e-01  7.91590135e+00  7.91590135e+00  7.91590135e+00
  6.49345573e+01  6.49345573e+01  6.49345573e+01  1.07800728e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.1592500383392  E_coul = 56.02026032988562
cycle= 4 E= -126.138989708454  delta_E= -1.06e-08  |g|= 2.47e-06  |ddm|= 7.35e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.85874e-06
diis-c [-5.52173066e-14  1.58101019e-05 -4.69879817e-04 -1.66360518e-02
  1.01709012e+00]
  HOMO = -0.505776177627977  LUMO = 7.91590249639347
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776178e-01 -5.05776178e-01
 -5.05776178e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.15924909857455  E_coul = 56.020259390121
cycle= 5 E= -126.138989708454  delta_E= 2.84e-14  |g|= 2.63e-09  |ddm|= 1.5e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.15924909857455  E_coul = 56.020259390121
  HOMO = -0.505776176529966  LUMO = 7.91590249904811
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776177e-01 -5.05776177e-01
 -5.05776177e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.15924909617584  E_coul = 56.02025938772232
Extra cycle  E= -126.138989708454  delta_E= 2.84e-14  |g|= 2.79e-10  |ddm|= 3.48e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767747e+03 9.59001024e-01 1.29843674e+03 1.26122045e+02
 1.99361012e+01 3.49618312e+01 1.09358682e+00 7.76625263e+00]
E = -126.13898970845352
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67746805        1
[INPUT] 0    0    [1    /1   ]  0.959001023588       1
[INPUT] 0    0    [1    /1   ]  1298.43673719        1
[INPUT] 0    0    [1    /1   ]  126.122044987        1
[INPUT] 0    0    [1    /1   ]  19.9361012221        1
[INPUT] 1    0    [1    /1   ]  34.9618312134        1
[INPUT] 1    0    [1    /1   ]  1.09358681543        1
[INPUT] 1    0    [1    /1   ]  7.7662526293         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.677468045565, 1.0]], [0, [0.9590010235881004, 1.0]], [0, [1298.4367371944263, 1.0]], [0, [126.12204498723581, 1.0]], [0, [19.93610122208856, 1.0]], [1, [34.96183121338548, 1.0]], [1, [1.0935868154282824, 1.0]], [1, [7.766252629303526, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67746805]
bas 1, expnt(s) = [0.95900102]
bas 2, expnt(s) = [1298.43673719]
bas 3, expnt(s) = [126.12204499]
bas 4, expnt(s) = [19.93610122]
bas 5, expnt(s) = [34.96183121]
bas 6, expnt(s) = [1.09358682]
bas 7, expnt(s) = [7.76625263]
CPU time:        76.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767747e+03 7.40717839e+02 9.59001024e-01 2.44838284e+00
 1.29843674e+03 5.46487988e+02 1.26122045e+02 9.50841826e+01
 1.99361012e+01 2.38366487e+01 3.49618312e+01 2.48014520e+02
 1.09358682e+00 3.26250341e+00 7.76625263e+00 3.78223740e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.71484170177347
cond(S) = 99.01395402102565
E1 = -179.66788726142076  E_coul = 54.351933739502954
init E= -125.315953521918
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.678062716950554  LUMO = 7.71821056692072
  mo_energy =
[-3.19935661e+01 -1.87492086e+00 -6.78062717e-01 -6.78062717e-01
 -6.78062717e-01  7.71821057e+00  7.71821057e+00  7.71821057e+00
  6.47610089e+01  6.47610089e+01  6.47610089e+01  1.07604557e+02
  1.44932545e+03  6.21840851e+03]
E1 = -182.2563752750946  E_coul = 56.117844278109715
cycle= 1 E= -126.138530996985  delta_E= -0.823  |g|= 0.123  |ddm|= 0.28
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.166502
diis-c [-0.02772295  1.        ]
  HOMO = -0.500130500043537  LUMO = 7.92858764071373
  mo_energy =
[-3.18220432e+01 -1.68816344e+00 -5.00130500e-01 -5.00130500e-01
 -5.00130500e-01  7.92858764e+00  7.92858764e+00  7.92858764e+00
  6.49581722e+01  6.49581722e+01  6.49581722e+01  1.07826407e+02
  1.44956438e+03  6.21863518e+03]
E1 = -182.1473024556061  E_coul = 56.00831900995807
cycle= 2 E= -126.138983445648  delta_E= -0.000452  |g|= 0.0122  |ddm|= 0.0174
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0189164
diis-c [-1.91590132e-04  7.21032008e-02  9.27896799e-01]
  HOMO = -0.505993393093918  LUMO = 7.9153962079304
  mo_energy =
[-3.18482946e+01 -1.69511400e+00 -5.05993393e-01 -5.05993393e-01
 -5.05993393e-01  7.91539621e+00  7.91539621e+00  7.91539621e+00
  6.49335352e+01  6.49335352e+01  6.49335352e+01  1.07799571e+02
  1.44953410e+03  6.21860427e+03]
E1 = -182.1597376407337  E_coul = 56.02074794288138
cycle= 3 E= -126.138989697852  delta_E= -6.25e-06  |g|= 0.000538  |ddm|= 0.00183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000747425
diis-c [-1.73329264e-08 -1.52506418e-03  2.80619694e-02  9.73463095e-01]
  HOMO = -0.505776756950413  LUMO = 7.91590134874859
  mo_energy =
[-3.18471897e+01 -1.69484929e+00 -5.05776757e-01 -5.05776757e-01
 -5.05776757e-01  7.91590135e+00  7.91590135e+00  7.91590135e+00
  6.49345573e+01  6.49345573e+01  6.49345573e+01  1.07800728e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.1592500383392  E_coul = 56.02026032988562
cycle= 4 E= -126.138989708454  delta_E= -1.06e-08  |g|= 2.47e-06  |ddm|= 7.35e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.85874e-06
diis-c [-5.52173066e-14  1.58101019e-05 -4.69879817e-04 -1.66360518e-02
  1.01709012e+00]
  HOMO = -0.505776177627977  LUMO = 7.91590249639347
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776178e-01 -5.05776178e-01
 -5.05776178e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.15924909857455  E_coul = 56.020259390121
cycle= 5 E= -126.138989708454  delta_E= 2.84e-14  |g|= 2.63e-09  |ddm|= 1.5e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.15924909857455  E_coul = 56.020259390121
  HOMO = -0.505776176529966  LUMO = 7.91590249904811
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776177e-01 -5.05776177e-01
 -5.05776177e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.15924909617584  E_coul = 56.02025938772232
Extra cycle  E= -126.138989708454  delta_E= 2.84e-14  |g|= 2.79e-10  |ddm|= 3.48e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 99.01395402102565
E1 = -182.15924909617584  E_coul = 56.02025938772232
init E= -126.138989708454
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.505776176664413  LUMO = 7.91590249874187
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776177e-01 -5.05776177e-01
 -5.05776177e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.15924909646554  E_coul = 56.02025938801198
cycle= 1 E= -126.138989708454  delta_E= -4.26e-14  |g|= 3.22e-11  |ddm|= 4.31e-11
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
E1 = -182.15924909646554  E_coul = 56.02025938801198
  HOMO = -0.505776176648054  LUMO = 7.91590249877906
  mo_energy =
[-3.18471881e+01 -1.69484856e+00 -5.05776177e-01 -5.05776177e-01
 -5.05776177e-01  7.91590250e+00  7.91590250e+00  7.91590250e+00
  6.49345588e+01  6.49345588e+01  6.49345588e+01  1.07800729e+02
  1.44953545e+03  6.21860564e+03]
E1 = -182.1592490964302  E_coul = 56.02025938797666
Extra cycle  E= -126.138989708454  delta_E= 4.26e-14  |g|= 4.28e-12  |ddm|= 5.24e-12
    CPU time for scf_cycle      0.13 sec, wall time      0.14 sec
exp = [1.94767747e+03 9.59001024e-01 1.29843674e+03 1.26122045e+02
 1.99361012e+01 3.49618312e+01 1.09358682e+00 7.76625263e+00]
grad_E = [ 2.38359199e-05  1.77413719e-02  1.85821449e-04  1.16208348e-02
  2.21720406e-02 -4.94350884e-03 -5.57785813e-01  2.73416366e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67859413        1
[INPUT] 0    0    [1    /1   ]  0.950646734665       1
[INPUT] 0    0    [1    /1   ]  1298.43617369        1
[INPUT] 0    0    [1    /1   ]  118.478185365        1
[INPUT] 0    0    [1    /1   ]  18.915756484         1
[INPUT] 1    0    [1    /1   ]  38.3651609074        1
[INPUT] 1    0    [1    /1   ]  1.04344892923        1
[INPUT] 1    0    [1    /1   ]  7.58887666743        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6785941308606, 1.0]], [0, [0.9506467346645309, 1.0]], [0, [1298.4361736931342, 1.0]], [0, [118.47818536519442, 1.0]], [0, [18.91575648397661, 1.0]], [1, [38.365160907418264, 1.0]], [1, [1.0434489292333595, 1.0]], [1, [7.588876667433942, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67859413]
bas 1, expnt(s) = [0.95064673]
bas 2, expnt(s) = [1298.43617369]
bas 3, expnt(s) = [118.47818537]
bas 4, expnt(s) = [18.91575648]
bas 5, expnt(s) = [38.36516091]
bas 6, expnt(s) = [1.04344893]
bas 7, expnt(s) = [7.58887667]
CPU time:        79.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767859e+03 7.40718161e+02 9.50646735e-01 2.43236864e+00
 1.29843617e+03 5.46487810e+02 1.18478185e+02 9.07285185e+01
 1.89157565e+01 2.29156832e+01 3.83651609e+01 2.78551610e+02
 1.04344893e+00 3.07661668e+00 7.58887667e+00 3.67456777e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.742350132901063
cond(S) = 96.45468492040126
E1 = -179.734297918162  E_coul = 54.25554503514204
init E= -125.47875288302
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.689208580683569  LUMO = 7.34361379130549
  mo_energy =
[-3.20618191e+01 -1.87712463e+00 -6.89208581e-01 -6.89208581e-01
 -6.89208581e-01  7.34361379e+00  7.34361379e+00  7.34361379e+00
  6.90955878e+01  6.90955878e+01  6.90955878e+01  9.86542540e+01
  1.42134450e+03  6.18890718e+03]
E1 = -181.6701348038673  E_coul = 55.41378611084387
cycle= 1 E= -126.256348693023  delta_E= -0.778  |g|= 0.0977  |ddm|= 0.305
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138508
diis-c [-0.0191846  1.       ]
  HOMO = -0.554689175823102  LUMO = 7.47846512509014
  mo_energy =
[-3.20197144e+01 -1.73755506e+00 -5.54689176e-01 -5.54689176e-01
 -5.54689176e-01  7.47846513e+00  7.47846513e+00  7.47846513e+00
  6.91613397e+01  6.91613397e+01  6.91613397e+01  9.87324138e+01
  1.42136482e+03  6.18889694e+03]
E1 = -181.6295042625223  E_coul = 55.37305163004135
cycle= 2 E= -126.256452632481  delta_E= -0.000104  |g|= 0.00475  |ddm|= 0.00717
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00783519
diis-c [-6.06439629e-05 -6.28581202e-03  1.00628581e+00]
  HOMO = -0.55712151750983  LUMO = 7.47308852316805
  mo_energy =
[-3.20300671e+01 -1.74039738e+00 -5.57121518e-01 -5.57121518e-01
 -5.57121518e-01  7.47308852e+00  7.47308852e+00  7.47308852e+00
  6.91513226e+01  6.91513226e+01  6.91513226e+01  9.87219780e+01
  1.42135227e+03  6.18888384e+03]
E1 = -181.6350258706969  E_coul = 55.37857226091206
cycle= 3 E= -126.256453609785  delta_E= -9.77e-07  |g|= 0.000679  |ddm|= 0.000799
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000990006
diis-c [-2.34828254e-08 -2.00349049e-03  1.11440426e-01  8.90563065e-01]
  HOMO = -0.556833667654366  LUMO = 7.47373626867508
  mo_energy =
[-3.20287308e+01 -1.74005181e+00 -5.56833668e-01 -5.56833668e-01
 -5.56833668e-01  7.47373627e+00  7.47373627e+00  7.47373627e+00
  6.91525981e+01  6.91525981e+01  6.91525981e+01  9.87233444e+01
  1.42135381e+03  6.18888540e+03]
E1 = -181.63434994819417  E_coul = 55.377896319182895
cycle= 4 E= -126.256453629011  delta_E= -1.92e-08  |g|= 2.61e-06  |ddm|= 9.92e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.0067e-06
diis-c [-1.06242446e-13  1.75142104e-05 -1.54164077e-03 -1.35230944e-02
  1.01504722e+00]
  HOMO = -0.556833000576021  LUMO = 7.47373755626749
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833001e-01 -5.56833001e-01
 -5.56833001e-01  7.47373756e+00  7.47373756e+00  7.47373756e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233453e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.63434886999687  E_coul = 55.377895240985396
cycle= 5 E= -126.256453629011  delta_E= -1.99e-13  |g|= 5.37e-09  |ddm|= 1.65e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63434886999687  E_coul = 55.377895240985396
  HOMO = -0.556833002669177  LUMO = 7.47373755169305
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833003e-01 -5.56833003e-01
 -5.56833003e-01  7.47373755e+00  7.47373755e+00  7.47373755e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233452e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.6343488742591  E_coul = 55.377895245247814
Extra cycle  E= -126.256453629011  delta_E= 1.85e-13  |g|= 4.89e-10  |ddm|= 6.27e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767859e+03 9.50646735e-01 1.29843617e+03 1.18478185e+02
 1.89157565e+01 3.83651609e+01 1.04344893e+00 7.58887667e+00]
E = -126.25645362901129
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67859413        1
[INPUT] 0    0    [1    /1   ]  0.950646734665       1
[INPUT] 0    0    [1    /1   ]  1298.43617369        1
[INPUT] 0    0    [1    /1   ]  118.478185365        1
[INPUT] 0    0    [1    /1   ]  18.915756484         1
[INPUT] 1    0    [1    /1   ]  38.3651609074        1
[INPUT] 1    0    [1    /1   ]  1.04344892923        1
[INPUT] 1    0    [1    /1   ]  7.58887666743        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6785941308606, 1.0]], [0, [0.9506467346645309, 1.0]], [0, [1298.4361736931342, 1.0]], [0, [118.47818536519442, 1.0]], [0, [18.91575648397661, 1.0]], [1, [38.365160907418264, 1.0]], [1, [1.0434489292333595, 1.0]], [1, [7.588876667433942, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67859413]
bas 1, expnt(s) = [0.95064673]
bas 2, expnt(s) = [1298.43617369]
bas 3, expnt(s) = [118.47818537]
bas 4, expnt(s) = [18.91575648]
bas 5, expnt(s) = [38.36516091]
bas 6, expnt(s) = [1.04344893]
bas 7, expnt(s) = [7.58887667]
CPU time:        79.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767859e+03 7.40718161e+02 9.50646735e-01 2.43236864e+00
 1.29843617e+03 5.46487810e+02 1.18478185e+02 9.07285185e+01
 1.89157565e+01 2.29156832e+01 3.83651609e+01 2.78551610e+02
 1.04344893e+00 3.07661668e+00 7.58887667e+00 3.67456777e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.742350132901063
cond(S) = 96.45468492040126
E1 = -179.734297918162  E_coul = 54.25554503514204
init E= -125.47875288302
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.689208580683569  LUMO = 7.34361379130549
  mo_energy =
[-3.20618191e+01 -1.87712463e+00 -6.89208581e-01 -6.89208581e-01
 -6.89208581e-01  7.34361379e+00  7.34361379e+00  7.34361379e+00
  6.90955878e+01  6.90955878e+01  6.90955878e+01  9.86542540e+01
  1.42134450e+03  6.18890718e+03]
E1 = -181.6701348038673  E_coul = 55.41378611084387
cycle= 1 E= -126.256348693023  delta_E= -0.778  |g|= 0.0977  |ddm|= 0.305
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138508
diis-c [-0.0191846  1.       ]
  HOMO = -0.554689175823102  LUMO = 7.47846512509014
  mo_energy =
[-3.20197144e+01 -1.73755506e+00 -5.54689176e-01 -5.54689176e-01
 -5.54689176e-01  7.47846513e+00  7.47846513e+00  7.47846513e+00
  6.91613397e+01  6.91613397e+01  6.91613397e+01  9.87324138e+01
  1.42136482e+03  6.18889694e+03]
E1 = -181.6295042625223  E_coul = 55.37305163004135
cycle= 2 E= -126.256452632481  delta_E= -0.000104  |g|= 0.00475  |ddm|= 0.00717
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00783519
diis-c [-6.06439629e-05 -6.28581202e-03  1.00628581e+00]
  HOMO = -0.55712151750983  LUMO = 7.47308852316805
  mo_energy =
[-3.20300671e+01 -1.74039738e+00 -5.57121518e-01 -5.57121518e-01
 -5.57121518e-01  7.47308852e+00  7.47308852e+00  7.47308852e+00
  6.91513226e+01  6.91513226e+01  6.91513226e+01  9.87219780e+01
  1.42135227e+03  6.18888384e+03]
E1 = -181.6350258706969  E_coul = 55.37857226091206
cycle= 3 E= -126.256453609785  delta_E= -9.77e-07  |g|= 0.000679  |ddm|= 0.000799
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000990006
diis-c [-2.34828254e-08 -2.00349049e-03  1.11440426e-01  8.90563065e-01]
  HOMO = -0.556833667654366  LUMO = 7.47373626867508
  mo_energy =
[-3.20287308e+01 -1.74005181e+00 -5.56833668e-01 -5.56833668e-01
 -5.56833668e-01  7.47373627e+00  7.47373627e+00  7.47373627e+00
  6.91525981e+01  6.91525981e+01  6.91525981e+01  9.87233444e+01
  1.42135381e+03  6.18888540e+03]
E1 = -181.63434994819417  E_coul = 55.377896319182895
cycle= 4 E= -126.256453629011  delta_E= -1.92e-08  |g|= 2.61e-06  |ddm|= 9.92e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.0067e-06
diis-c [-1.06242446e-13  1.75142104e-05 -1.54164077e-03 -1.35230944e-02
  1.01504722e+00]
  HOMO = -0.556833000576021  LUMO = 7.47373755626749
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833001e-01 -5.56833001e-01
 -5.56833001e-01  7.47373756e+00  7.47373756e+00  7.47373756e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233453e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.63434886999687  E_coul = 55.377895240985396
cycle= 5 E= -126.256453629011  delta_E= -1.99e-13  |g|= 5.37e-09  |ddm|= 1.65e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63434886999687  E_coul = 55.377895240985396
  HOMO = -0.556833002669177  LUMO = 7.47373755169305
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833003e-01 -5.56833003e-01
 -5.56833003e-01  7.47373755e+00  7.47373755e+00  7.47373755e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233452e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.6343488742591  E_coul = 55.377895245247814
Extra cycle  E= -126.256453629011  delta_E= 1.85e-13  |g|= 4.89e-10  |ddm|= 6.27e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 96.45468492040126
E1 = -181.6343488742591  E_coul = 55.377895245247814
init E= -126.256453629011
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.556833002428603  LUMO = 7.47373755223584
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833002e-01 -5.56833002e-01
 -5.56833002e-01  7.47373755e+00  7.47373755e+00  7.47373755e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233452e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.63434887368774  E_coul = 55.37789524467628
cycle= 1 E= -126.256453629011  delta_E= -1.71e-13  |g|= 6.66e-11  |ddm|= 8.38e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.63434887368774  E_coul = 55.37789524467628
  HOMO = -0.556833002460936  LUMO = 7.47373755216308
  mo_energy =
[-3.20287292e+01 -1.74005097e+00 -5.56833002e-01 -5.56833002e-01
 -5.56833002e-01  7.47373755e+00  7.47373755e+00  7.47373755e+00
  6.91525994e+01  6.91525994e+01  6.91525994e+01  9.87233452e+01
  1.42135381e+03  6.18888539e+03]
E1 = -181.63434887376366  E_coul = 55.37789524475225
Extra cycle  E= -126.256453629011  delta_E= 5.68e-14  |g|= 9.07e-12  |ddm|= 1.11e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767859e+03 9.50646735e-01 1.29843617e+03 1.18478185e+02
 1.89157565e+01 3.83651609e+01 1.04344893e+00 7.58887667e+00]
grad_E = [ 3.65864708e-05 -1.44279697e-02  2.29480469e-04  1.21910630e-02
 -2.29804140e-02 -3.27079708e-03 -9.53771232e-01  2.96292833e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6800216         1
[INPUT] 0    0    [1    /1   ]  0.924521954401       1
[INPUT] 0    0    [1    /1   ]  1298.43470929        1
[INPUT] 0    0    [1    /1   ]  108.606699292        1
[INPUT] 0    0    [1    /1   ]  17.3348429811        1
[INPUT] 1    0    [1    /1   ]  43.5579416801        1
[INPUT] 1    0    [1    /1   ]  0.960315514829       1
[INPUT] 1    0    [1    /1   ]  6.59597831664        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6800216041177, 1.0]], [0, [0.9245219544008981, 1.0]], [0, [1298.4347092884318, 1.0]], [0, [108.60669929150893, 1.0]], [0, [17.334842981141286, 1.0]], [1, [43.55794168009453, 1.0]], [1, [0.9603155148290503, 1.0]], [1, [6.5959783166352155, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6800216]
bas 1, expnt(s) = [0.92452195]
bas 2, expnt(s) = [1298.43470929]
bas 3, expnt(s) = [108.60669929]
bas 4, expnt(s) = [17.33484298]
bas 5, expnt(s) = [43.55794168]
bas 6, expnt(s) = [0.96031551]
bas 7, expnt(s) = [6.59597832]
CPU time:        82.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768002e+03 7.40718568e+02 9.24521954e-01 2.38206137e+00
 1.29843471e+03 5.46487348e+02 1.08606699e+02 8.49977610e+01
 1.73348430e+01 2.14637182e+01 4.35579417e+01 3.26451433e+02
 9.60315515e-01 2.77333175e+00 6.59597832e+00 3.08378021e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.79311210361257
cond(S) = 93.11816186769978
E1 = -180.12552173195436  E_coul = 54.277116331149
init E= -125.848405400805
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.719712476471783  LUMO = 6.19585402186751
  mo_energy =
[-3.20960914e+01 -1.85652583e+00 -7.19712476e-01 -7.19712476e-01
 -7.19712476e-01  6.19585402e+00  6.19585402e+00  6.19585402e+00
  7.38123797e+01  7.38123797e+01  7.38123797e+01  8.64458131e+01
  1.38428240e+03  6.15034491e+03]
E1 = -181.35973570020775  E_coul = 54.86676620238331
cycle= 1 E= -126.492969497824  delta_E= -0.645  |g|= 0.0848  |ddm|= 0.273
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136262
diis-c [-0.01856741  1.        ]
  HOMO = -0.629530233833904  LUMO = 6.27392790324242
  mo_energy =
[-3.21610834e+01 -1.76345327e+00 -6.29530234e-01 -6.29530234e-01
 -6.29530234e-01  6.27392790e+00  6.27392790e+00  6.27392790e+00
  7.37545930e+01  7.37545930e+01  7.37545930e+01  8.64014453e+01
  1.38404027e+03  6.15004228e+03]
E1 = -181.3772477275468  E_coul = 54.88422736906416
cycle= 2 E= -126.493020358483  delta_E= -5.09e-05  |g|= 0.00304  |ddm|= 0.00256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00364842
diis-c [-1.18372748e-05 -8.99196373e-03  1.00899196e+00]
  HOMO = -0.628554673551722  LUMO = 6.27585992203382
  mo_energy =
[-3.21564015e+01 -1.76225262e+00 -6.28554674e-01 -6.28554674e-01
 -6.28554674e-01  6.27585992e+00  6.27585992e+00  6.27585992e+00
  7.37590604e+01  7.37590604e+01  7.37590604e+01  8.64063147e+01
  1.38404439e+03  6.15004596e+03]
E1 = -181.37442926141068  E_coul = 54.8814086844592
cycle= 3 E= -126.493020576951  delta_E= -2.18e-07  |g|= 0.000356  |ddm|= 0.000415
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000525865
diis-c [-1.74693672e-08 -2.51869066e-03  1.19876791e-01  8.82641899e-01]
  HOMO = -0.628707797709319  LUMO = 6.2755598176941
  mo_energy =
[-3.21570669e+01 -1.76242832e+00 -6.28707798e-01 -6.28707798e-01
 -6.28707798e-01  6.27555982e+00  6.27555982e+00  6.27555982e+00
  7.37583999e+01  7.37583999e+01  7.37583999e+01  8.64056384e+01
  1.38404355e+03  6.15004509e+03]
E1 = -181.37486286680505  E_coul = 54.88184228343124
cycle= 4 E= -126.493020583374  delta_E= -6.42e-09  |g|= 7.62e-06  |ddm|= 6.25e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.04121e-05
diis-c [-3.97989912e-13  2.21154678e-05 -1.74412020e-03  8.66517420e-03
  9.93056831e-01]
  HOMO = -0.628704636794842  LUMO = 6.27556582393485
  mo_energy =
[-3.21570547e+01 -1.76242465e+00 -6.28704637e-01 -6.28704637e-01
 -6.28704637e-01  6.27556582e+00  6.27556582e+00  6.27556582e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056502e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485448329417  E_coul = 54.88183389991815
cycle= 5 E= -126.493020583376  delta_E= -2.22e-12  |g|= 1.81e-08  |ddm|= 1.21e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.37485448329417  E_coul = 54.88183389991815
  HOMO = -0.628704645055193  LUMO = 6.27556580820273
  mo_energy =
[-3.21570547e+01 -1.76242466e+00 -6.28704645e-01 -6.28704645e-01
 -6.28704645e-01  6.27556581e+00  6.27556581e+00  6.27556581e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056501e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485450462182  E_coul = 54.8818339212456
Extra cycle  E= -126.493020583376  delta_E= -1.99e-13  |g|= 2.58e-09  |ddm|= 3.07e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94768002e+03 9.24521954e-01 1.29843471e+03 1.08606699e+02
 1.73348430e+01 4.35579417e+01 9.60315515e-01 6.59597832e+00]
E = -126.49302058337622
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6800216         1
[INPUT] 0    0    [1    /1   ]  0.924521954401       1
[INPUT] 0    0    [1    /1   ]  1298.43470929        1
[INPUT] 0    0    [1    /1   ]  108.606699292        1
[INPUT] 0    0    [1    /1   ]  17.3348429811        1
[INPUT] 1    0    [1    /1   ]  43.5579416801        1
[INPUT] 1    0    [1    /1   ]  0.960315514829       1
[INPUT] 1    0    [1    /1   ]  6.59597831664        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6800216041177, 1.0]], [0, [0.9245219544008981, 1.0]], [0, [1298.4347092884318, 1.0]], [0, [108.60669929150893, 1.0]], [0, [17.334842981141286, 1.0]], [1, [43.55794168009453, 1.0]], [1, [0.9603155148290503, 1.0]], [1, [6.5959783166352155, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6800216]
bas 1, expnt(s) = [0.92452195]
bas 2, expnt(s) = [1298.43470929]
bas 3, expnt(s) = [108.60669929]
bas 4, expnt(s) = [17.33484298]
bas 5, expnt(s) = [43.55794168]
bas 6, expnt(s) = [0.96031551]
bas 7, expnt(s) = [6.59597832]
CPU time:        82.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768002e+03 7.40718568e+02 9.24521954e-01 2.38206137e+00
 1.29843471e+03 5.46487348e+02 1.08606699e+02 8.49977610e+01
 1.73348430e+01 2.14637182e+01 4.35579417e+01 3.26451433e+02
 9.60315515e-01 2.77333175e+00 6.59597832e+00 3.08378021e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.79311210361257
cond(S) = 93.11816186769978
E1 = -180.12552173195436  E_coul = 54.277116331149
init E= -125.848405400805
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.719712476471783  LUMO = 6.19585402186751
  mo_energy =
[-3.20960914e+01 -1.85652583e+00 -7.19712476e-01 -7.19712476e-01
 -7.19712476e-01  6.19585402e+00  6.19585402e+00  6.19585402e+00
  7.38123797e+01  7.38123797e+01  7.38123797e+01  8.64458131e+01
  1.38428240e+03  6.15034491e+03]
E1 = -181.35973570020775  E_coul = 54.86676620238331
cycle= 1 E= -126.492969497824  delta_E= -0.645  |g|= 0.0848  |ddm|= 0.273
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136262
diis-c [-0.01856741  1.        ]
  HOMO = -0.629530233833904  LUMO = 6.27392790324242
  mo_energy =
[-3.21610834e+01 -1.76345327e+00 -6.29530234e-01 -6.29530234e-01
 -6.29530234e-01  6.27392790e+00  6.27392790e+00  6.27392790e+00
  7.37545930e+01  7.37545930e+01  7.37545930e+01  8.64014453e+01
  1.38404027e+03  6.15004228e+03]
E1 = -181.3772477275468  E_coul = 54.88422736906416
cycle= 2 E= -126.493020358483  delta_E= -5.09e-05  |g|= 0.00304  |ddm|= 0.00256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00364842
diis-c [-1.18372748e-05 -8.99196373e-03  1.00899196e+00]
  HOMO = -0.628554673551722  LUMO = 6.27585992203382
  mo_energy =
[-3.21564015e+01 -1.76225262e+00 -6.28554674e-01 -6.28554674e-01
 -6.28554674e-01  6.27585992e+00  6.27585992e+00  6.27585992e+00
  7.37590604e+01  7.37590604e+01  7.37590604e+01  8.64063147e+01
  1.38404439e+03  6.15004596e+03]
E1 = -181.37442926141068  E_coul = 54.8814086844592
cycle= 3 E= -126.493020576951  delta_E= -2.18e-07  |g|= 0.000356  |ddm|= 0.000415
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000525865
diis-c [-1.74693672e-08 -2.51869066e-03  1.19876791e-01  8.82641899e-01]
  HOMO = -0.628707797709319  LUMO = 6.2755598176941
  mo_energy =
[-3.21570669e+01 -1.76242832e+00 -6.28707798e-01 -6.28707798e-01
 -6.28707798e-01  6.27555982e+00  6.27555982e+00  6.27555982e+00
  7.37583999e+01  7.37583999e+01  7.37583999e+01  8.64056384e+01
  1.38404355e+03  6.15004509e+03]
E1 = -181.37486286680505  E_coul = 54.88184228343124
cycle= 4 E= -126.493020583374  delta_E= -6.42e-09  |g|= 7.62e-06  |ddm|= 6.25e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.04121e-05
diis-c [-3.97989912e-13  2.21154678e-05 -1.74412020e-03  8.66517420e-03
  9.93056831e-01]
  HOMO = -0.628704636794842  LUMO = 6.27556582393485
  mo_energy =
[-3.21570547e+01 -1.76242465e+00 -6.28704637e-01 -6.28704637e-01
 -6.28704637e-01  6.27556582e+00  6.27556582e+00  6.27556582e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056502e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485448329417  E_coul = 54.88183389991815
cycle= 5 E= -126.493020583376  delta_E= -2.22e-12  |g|= 1.81e-08  |ddm|= 1.21e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.37485448329417  E_coul = 54.88183389991815
  HOMO = -0.628704645055193  LUMO = 6.27556580820273
  mo_energy =
[-3.21570547e+01 -1.76242466e+00 -6.28704645e-01 -6.28704645e-01
 -6.28704645e-01  6.27556581e+00  6.27556581e+00  6.27556581e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056501e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485450462182  E_coul = 54.8818339212456
Extra cycle  E= -126.493020583376  delta_E= -1.99e-13  |g|= 2.58e-09  |ddm|= 3.07e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 93.11816186769978
E1 = -181.37485450462182  E_coul = 54.8818339212456
init E= -126.493020583376
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.628704643797306  LUMO = 6.27556581066332
  mo_energy =
[-3.21570547e+01 -1.76242466e+00 -6.28704644e-01 -6.28704644e-01
 -6.28704644e-01  6.27556581e+00  6.27556581e+00  6.27556581e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056501e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485450106493  E_coul = 54.88183391768864
cycle= 1 E= -126.493020583376  delta_E= -7.11e-14  |g|= 4.32e-10  |ddm|= 5.14e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.37485450106493  E_coul = 54.88183391768864
  HOMO = -0.628704644007325  LUMO = 6.27556581025286
  mo_energy =
[-3.21570547e+01 -1.76242466e+00 -6.28704644e-01 -6.28704644e-01
 -6.28704644e-01  6.27556581e+00  6.27556581e+00  6.27556581e+00
  7.37584115e+01  7.37584115e+01  7.37584115e+01  8.64056501e+01
  1.38404356e+03  6.15004510e+03]
E1 = -181.37485450165582  E_coul = 54.881833918279625
Extra cycle  E= -126.493020583376  delta_E= 9.95e-14  |g|= 7.17e-11  |ddm|= 8.53e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94768002e+03 9.24521954e-01 1.29843471e+03 1.08606699e+02
 1.73348430e+01 4.35579417e+01 9.60315515e-01 6.59597832e+00]
grad_E = [ 5.56662895e-05 -8.01663279e-02  2.91721302e-04  1.48625034e-02
 -1.09250295e-01  1.35823313e-03 -1.01589526e+00  2.70291845e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68052585        1
[INPUT] 0    0    [1    /1   ]  0.906208787025       1
[INPUT] 0    0    [1    /1   ]  1298.4326175         1
[INPUT] 0    0    [1    /1   ]  104.831275219        1
[INPUT] 0    0    [1    /1   ]  16.4879379474        1
[INPUT] 1    0    [1    /1   ]  47.4070176745        1
[INPUT] 1    0    [1    /1   ]  0.800000814052       1
[INPUT] 1    0    [1    /1   ]  4.41094555012        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.680525854604, 1.0]], [0, [0.9062087870247223, 1.0]], [0, [1298.432617501236, 1.0]], [0, [104.8312752188095, 1.0]], [0, [16.487937947371762, 1.0]], [1, [47.407017674501, 1.0]], [1, [0.8000008140518747, 1.0]], [1, [4.410945550115894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68052585]
bas 1, expnt(s) = [0.90620879]
bas 2, expnt(s) = [1298.4326175]
bas 3, expnt(s) = [104.83127522]
bas 4, expnt(s) = [16.48793795]
bas 5, expnt(s) = [47.40701767]
bas 6, expnt(s) = [0.80000081]
bas 7, expnt(s) = [4.41094555]
CPU time:        85.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768053e+03 7.40718712e+02 9.06208787e-01 2.34658465e+00
 1.29843262e+03 5.46486687e+02 1.04831275e+02 8.27719479e+01
 1.64879379e+01 2.06723468e+01 4.74070177e+01 3.62900600e+02
 8.00000814e-01 2.20722918e+00 4.41094555e+00 1.86487194e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.873248397753908
cond(S) = 91.74837337316262
E1 = -180.29643950356905  E_coul = 54.40705111806321
init E= -125.889388385506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.720928986335574  LUMO = 4.21317729375278
  mo_energy =
[-3.21230891e+01 -1.81298183e+00 -7.20928986e-01 -7.20928986e-01
 -7.20928986e-01  4.21317729e+00  4.21317729e+00  4.21317729e+00
  7.36557197e+01  7.36557197e+01  7.36557197e+01  8.10146474e+01
  1.36928449e+03  6.13495700e+03]
E1 = -180.78762676247155  E_coul = 54.187040848547966
cycle= 1 E= -126.600585913924  delta_E= -0.711  |g|= 0.0618  |ddm|= 0.241
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0785
diis-c [-0.00616225  1.        ]
  HOMO = -0.690285670546798  LUMO = 4.23767100613444
  mo_energy =
[-3.23472201e+01 -1.78880838e+00 -6.90285671e-01 -6.90285671e-01
 -6.90285671e-01  4.23767101e+00  4.23767101e+00  4.23767101e+00
  7.34227574e+01  7.34227574e+01  7.34227574e+01  8.07927924e+01
  1.36873896e+03  6.13433213e+03]
E1 = -180.88640437107375  E_coul = 54.28563858513587
cycle= 2 E= -126.600765785938  delta_E= -0.00018  |g|= 0.0109  |ddm|= 0.0151
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.014908
diis-c [-6.17726065e-05  1.39554661e-01  8.60445339e-01]
  HOMO = -0.684808290215386  LUMO = 4.24490008874068
  mo_energy =
[-3.23273850e+01 -1.78264040e+00 -6.84808290e-01 -6.84808290e-01
 -6.84808290e-01  4.24490009e+00  4.24490009e+00  4.24490009e+00
  7.34427936e+01  7.34427936e+01  7.34427936e+01  8.08128623e+01
  1.36876237e+03  6.13435610e+03]
E1 = -180.86862096532397  E_coul = 54.2678471768927
cycle= 3 E= -126.600773788431  delta_E= -8e-06  |g|= 0.000463  |ddm|= 0.0027
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000614047
diis-c [-4.97660258e-09 -3.87222192e-03  2.20391845e-02  9.81833037e-01]
  HOMO = -0.685024519300321  LUMO = 4.24461770979371
  mo_energy =
[-3.23281556e+01 -1.78288163e+00 -6.85024519e-01 -6.85024519e-01
 -6.85024519e-01  4.24461771e+00  4.24461771e+00  4.24461771e+00
  7.34420414e+01  7.34420414e+01  7.34420414e+01  8.08121168e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.86933225077092  E_coul = 54.26855844846127
cycle= 4 E= -126.60077380231  delta_E= -1.39e-08  |g|= 7.51e-07  |ddm|= 0.000108
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.16238e-06
diis-c [-2.58195137e-13  9.74796215e-06 -1.10611909e-04 -2.10629305e-03
  1.00220716e+00]
  HOMO = -0.685024193681509  LUMO = 4.24461811607375
  mo_energy =
[-3.23281544e+01 -1.78288131e+00 -6.85024194e-01 -6.85024194e-01
 -6.85024194e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.8693311339756  E_coul = 54.268557331665924
cycle= 5 E= -126.60077380231  delta_E= -2.84e-14  |g|= 9.55e-09  |ddm|= 1.7e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.8693311339756  E_coul = 54.268557331665924
  HOMO = -0.685024189273804  LUMO = 4.24461812201328
  mo_energy =
[-3.23281544e+01 -1.78288130e+00 -6.85024189e-01 -6.85024189e-01
 -6.85024189e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.86933111859338  E_coul = 54.268557316283754
Extra cycle  E= -126.60077380231  delta_E= 5.68e-14  |g|= 1.73e-09  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94768053e+03 9.06208787e-01 1.29843262e+03 1.04831275e+02
 1.64879379e+01 4.74070177e+01 8.00000814e-01 4.41094555e+00]
E = -126.60077380230962
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68052585        1
[INPUT] 0    0    [1    /1   ]  0.906208787025       1
[INPUT] 0    0    [1    /1   ]  1298.4326175         1
[INPUT] 0    0    [1    /1   ]  104.831275219        1
[INPUT] 0    0    [1    /1   ]  16.4879379474        1
[INPUT] 1    0    [1    /1   ]  47.4070176745        1
[INPUT] 1    0    [1    /1   ]  0.800000814052       1
[INPUT] 1    0    [1    /1   ]  4.41094555012        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.680525854604, 1.0]], [0, [0.9062087870247223, 1.0]], [0, [1298.432617501236, 1.0]], [0, [104.8312752188095, 1.0]], [0, [16.487937947371762, 1.0]], [1, [47.407017674501, 1.0]], [1, [0.8000008140518747, 1.0]], [1, [4.410945550115894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68052585]
bas 1, expnt(s) = [0.90620879]
bas 2, expnt(s) = [1298.4326175]
bas 3, expnt(s) = [104.83127522]
bas 4, expnt(s) = [16.48793795]
bas 5, expnt(s) = [47.40701767]
bas 6, expnt(s) = [0.80000081]
bas 7, expnt(s) = [4.41094555]
CPU time:        86.25
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768053e+03 7.40718712e+02 9.06208787e-01 2.34658465e+00
 1.29843262e+03 5.46486687e+02 1.04831275e+02 8.27719479e+01
 1.64879379e+01 2.06723468e+01 4.74070177e+01 3.62900600e+02
 8.00000814e-01 2.20722918e+00 4.41094555e+00 1.86487194e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.873248397753908
cond(S) = 91.74837337316262
E1 = -180.29643950356905  E_coul = 54.40705111806321
init E= -125.889388385506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.720928986335574  LUMO = 4.21317729375278
  mo_energy =
[-3.21230891e+01 -1.81298183e+00 -7.20928986e-01 -7.20928986e-01
 -7.20928986e-01  4.21317729e+00  4.21317729e+00  4.21317729e+00
  7.36557197e+01  7.36557197e+01  7.36557197e+01  8.10146474e+01
  1.36928449e+03  6.13495700e+03]
E1 = -180.78762676247155  E_coul = 54.187040848547966
cycle= 1 E= -126.600585913924  delta_E= -0.711  |g|= 0.0618  |ddm|= 0.241
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0785
diis-c [-0.00616225  1.        ]
  HOMO = -0.690285670546798  LUMO = 4.23767100613444
  mo_energy =
[-3.23472201e+01 -1.78880838e+00 -6.90285671e-01 -6.90285671e-01
 -6.90285671e-01  4.23767101e+00  4.23767101e+00  4.23767101e+00
  7.34227574e+01  7.34227574e+01  7.34227574e+01  8.07927924e+01
  1.36873896e+03  6.13433213e+03]
E1 = -180.88640437107375  E_coul = 54.28563858513587
cycle= 2 E= -126.600765785938  delta_E= -0.00018  |g|= 0.0109  |ddm|= 0.0151
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.014908
diis-c [-6.17726065e-05  1.39554661e-01  8.60445339e-01]
  HOMO = -0.684808290215386  LUMO = 4.24490008874068
  mo_energy =
[-3.23273850e+01 -1.78264040e+00 -6.84808290e-01 -6.84808290e-01
 -6.84808290e-01  4.24490009e+00  4.24490009e+00  4.24490009e+00
  7.34427936e+01  7.34427936e+01  7.34427936e+01  8.08128623e+01
  1.36876237e+03  6.13435610e+03]
E1 = -180.86862096532397  E_coul = 54.2678471768927
cycle= 3 E= -126.600773788431  delta_E= -8e-06  |g|= 0.000463  |ddm|= 0.0027
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000614047
diis-c [-4.97660258e-09 -3.87222192e-03  2.20391845e-02  9.81833037e-01]
  HOMO = -0.685024519300321  LUMO = 4.24461770979371
  mo_energy =
[-3.23281556e+01 -1.78288163e+00 -6.85024519e-01 -6.85024519e-01
 -6.85024519e-01  4.24461771e+00  4.24461771e+00  4.24461771e+00
  7.34420414e+01  7.34420414e+01  7.34420414e+01  8.08121168e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.86933225077092  E_coul = 54.26855844846127
cycle= 4 E= -126.60077380231  delta_E= -1.39e-08  |g|= 7.51e-07  |ddm|= 0.000108
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.16238e-06
diis-c [-2.58195137e-13  9.74796215e-06 -1.10611909e-04 -2.10629305e-03
  1.00220716e+00]
  HOMO = -0.685024193681509  LUMO = 4.24461811607375
  mo_energy =
[-3.23281544e+01 -1.78288131e+00 -6.85024194e-01 -6.85024194e-01
 -6.85024194e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.8693311339756  E_coul = 54.268557331665924
cycle= 5 E= -126.60077380231  delta_E= -2.84e-14  |g|= 9.55e-09  |ddm|= 1.7e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.8693311339756  E_coul = 54.268557331665924
  HOMO = -0.685024189273804  LUMO = 4.24461812201328
  mo_energy =
[-3.23281544e+01 -1.78288130e+00 -6.85024189e-01 -6.85024189e-01
 -6.85024189e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.86933111859338  E_coul = 54.268557316283754
Extra cycle  E= -126.60077380231  delta_E= 5.68e-14  |g|= 1.73e-09  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.74837337316262
E1 = -180.86933111859338  E_coul = 54.268557316283754
init E= -126.60077380231
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.685024190269201  LUMO = 4.24461812070324
  mo_energy =
[-3.23281544e+01 -1.78288130e+00 -6.85024190e-01 -6.85024190e-01
 -6.85024190e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.86933112181586  E_coul = 54.26855731950617
cycle= 1 E= -126.60077380231  delta_E= -7.11e-14  |g|= 3.55e-10  |ddm|= 4.9e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.86933112181586  E_coul = 54.26855731950617
  HOMO = -0.685024190060985  LUMO = 4.24461812097772
  mo_energy =
[-3.23281544e+01 -1.78288130e+00 -6.85024190e-01 -6.85024190e-01
 -6.85024190e-01  4.24461812e+00  4.24461812e+00  4.24461812e+00
  7.34420427e+01  7.34420427e+01  7.34420427e+01  8.08121179e+01
  1.36876169e+03  6.13435546e+03]
E1 = -180.8693311211378  E_coul = 54.26855731882819
Extra cycle  E= -126.60077380231  delta_E= 7.11e-14  |g|= 7.5e-11  |ddm|= 1.03e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94768053e+03 9.06208787e-01 1.29843262e+03 1.04831275e+02
 1.64879379e+01 4.74070177e+01 8.00000814e-01 4.41094555e+00]
grad_E = [ 6.21029845e-05 -1.60181797e-01  3.11581942e-04  1.88394238e-02
 -1.77982152e-01  1.08914927e-02  2.14131791e-02 -1.05335301e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68291397        1
[INPUT] 0    0    [1    /1   ]  0.910403079448       1
[INPUT] 0    0    [1    /1   ]  1298.43279239        1
[INPUT] 0    0    [1    /1   ]  88.6700672545        1
[INPUT] 0    0    [1    /1   ]  16.3853518408        1
[INPUT] 1    0    [1    /1   ]  52.6703223831        1
[INPUT] 1    0    [1    /1   ]  0.968271061208       1
[INPUT] 1    0    [1    /1   ]  5.7909270381         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6829139739757, 1.0]], [0, [0.9104030794484542, 1.0]], [0, [1298.43279239475, 1.0]], [0, [88.67006725454688, 1.0]], [0, [16.38535184078599, 1.0]], [1, [52.670322383054376, 1.0]], [1, [0.9682710612080165, 1.0]], [1, [5.790927038100685, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68291397]
bas 1, expnt(s) = [0.91040308]
bas 2, expnt(s) = [1298.43279239]
bas 3, expnt(s) = [88.67006725]
bas 4, expnt(s) = [16.38535184]
bas 5, expnt(s) = [52.67032238]
bas 6, expnt(s) = [0.96827106]
bas 7, expnt(s) = [5.79092704]
CPU time:        89.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768291e+03 7.40719393e+02 9.10403079e-01 2.35472564e+00
 1.29843279e+03 5.46486743e+02 8.86700673e+01 7.30041927e+01
 1.63853518e+01 2.05758058e+01 5.26703224e+01 4.13944259e+02
 9.68271061e-01 2.80208034e+00 5.79092704e+00 2.62071328e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.802275161869778
cond(S) = 87.92019987430001
E1 = -180.20231701226535  E_coul = 54.4971203384339
init E= -125.705196673831
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.714419372543047  LUMO = 5.66975261455992
  mo_energy =
[-3.20907182e+01 -1.82793744e+00 -7.14419373e-01 -7.14419373e-01
 -7.14419373e-01  5.66975261e+00  5.66975261e+00  5.66975261e+00
  7.00596383e+01  8.63486324e+01  8.63486324e+01  8.63486324e+01
  1.31654276e+03  6.08039326e+03]
E1 = -182.23576444719305  E_coul = 55.623313177387395
cycle= 1 E= -126.612451269806  delta_E= -0.907  |g|= 0.162  |ddm|= 0.205
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.225324
diis-c [-0.05077077  1.        ]
  HOMO = -0.589835965403051  LUMO = 5.81554427596943
  mo_energy =
[-3.20267523e+01 -1.69844104e+00 -5.89835965e-01 -5.89835965e-01
 -5.89835965e-01  5.81554428e+00  5.81554428e+00  5.81554428e+00
  7.01505725e+01  8.64150202e+01  8.64150202e+01  8.64150202e+01
  1.31644826e+03  6.08020515e+03]
E1 = -182.14418970797848  E_coul = 55.53151472204402
cycle= 2 E= -126.612674985934  delta_E= -0.000224  |g|= 0.0109  |ddm|= 0.014
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0144089
diis-c [-1.78788792e-04  2.33145448e-02  9.76685455e-01]
  HOMO = -0.595445063079385  LUMO = 5.80620969479702
  mo_energy =
[-3.20485525e+01 -1.70462608e+00 -5.95445063e-01 -5.95445063e-01
 -5.95445063e-01  5.80620969e+00  5.80620969e+00  5.80620969e+00
  7.01293952e+01  8.63932314e+01  8.63932314e+01  8.63932314e+01
  1.31642558e+03  6.08018235e+03]
E1 = -182.15942609728998  E_coul = 55.546745298597706
cycle= 3 E= -126.612680798692  delta_E= -5.81e-06  |g|= 0.00151  |ddm|= 0.00227
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00206448
diis-c [-2.92792523e-08 -9.19673044e-04  1.20428849e-01  8.80490824e-01]
  HOMO = -0.594759037535573  LUMO = 5.807363937527
  mo_energy =
[-3.20457752e+01 -1.70386788e+00 -5.94759038e-01 -5.94759038e-01
 -5.94759038e-01  5.80736394e+00  5.80736394e+00  5.80736394e+00
  7.01321346e+01  8.63960696e+01  8.63960696e+01  8.63960696e+01
  1.31642894e+03  6.08018580e+03]
E1 = -182.15753176030688  E_coul = 55.54485084175621
cycle= 4 E= -126.612680918551  delta_E= -1.2e-07  |g|= 3.04e-06  |ddm|= 0.000283
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.457e-06
diis-c [-3.74809414e-13  2.32355362e-05 -2.84337682e-03 -2.16713119e-02
  1.02449145e+00]
  HOMO = -0.594758544533644  LUMO = 5.80736486378131
  mo_energy =
[-3.20457727e+01 -1.70386732e+00 -5.94758545e-01 -5.94758545e-01
 -5.94758545e-01  5.80736486e+00  5.80736486e+00  5.80736486e+00
  7.01321375e+01  8.63960728e+01  8.63960728e+01  8.63960728e+01
  1.31642895e+03  6.08018581e+03]
E1 = -182.157530359817  E_coul = 55.54484944126623
cycle= 5 E= -126.612680918551  delta_E= -1.14e-13  |g|= 1.41e-08  |ddm|= 2.13e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.157530359817  E_coul = 55.54484944126623
  HOMO = -0.594758550464892  LUMO = 5.80736485356837
  mo_energy =
[-3.20457728e+01 -1.70386733e+00 -5.94758550e-01 -5.94758550e-01
 -5.94758550e-01  5.80736485e+00  5.80736485e+00  5.80736485e+00
  7.01321374e+01  8.63960727e+01  8.63960727e+01  8.63960727e+01
  1.31642895e+03  6.08018581e+03]
E1 = -182.15753037390388  E_coul = 55.54484945535306
Extra cycle  E= -126.612680918551  delta_E= -4.26e-14  |g|= 1.61e-09  |ddm|= 2.1e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94768291e+03 9.10403079e-01 1.29843279e+03 8.86700673e+01
 1.63853518e+01 5.26703224e+01 9.68271061e-01 5.79092704e+00]
E = -126.61268091855082
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68175947        1
[INPUT] 0    0    [1    /1   ]  0.908375411626       1
[INPUT] 0    0    [1    /1   ]  1298.43270785        1
[INPUT] 0    0    [1    /1   ]  96.4829610774        1
[INPUT] 0    0    [1    /1   ]  16.4349455568        1
[INPUT] 1    0    [1    /1   ]  50.1258565896        1
[INPUT] 1    0    [1    /1   ]  0.886923331664       1
[INPUT] 1    0    [1    /1   ]  5.12379566605        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6817594734503, 1.0]], [0, [0.9083754116255378, 1.0]], [0, [1298.4327078451015, 1.0]], [0, [96.48296107739559, 1.0]], [0, [16.4349455568143, 1.0]], [1, [50.12585658964588, 1.0]], [1, [0.8869233316643711, 1.0]], [1, [5.123795666054519, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68175947]
bas 1, expnt(s) = [0.90837541]
bas 2, expnt(s) = [1298.43270785]
bas 3, expnt(s) = [96.48296108]
bas 4, expnt(s) = [16.43494556]
bas 5, expnt(s) = [50.12585659]
bas 6, expnt(s) = [0.88692333]
bas 7, expnt(s) = [5.12379567]
CPU time:        89.64
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768176e+03 7.40719063e+02 9.08375412e-01 2.35079118e+00
 1.29843271e+03 5.46486716e+02 9.64829611e+01 7.77773231e+01
 1.64349456e+01 2.06224959e+01 5.01258566e+01 3.89100377e+02
 8.86923332e-01 2.51097271e+00 5.12379567e+00 2.24892072e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.839928723834788
cond(S) = 89.72390909341432
E1 = -180.54265449833997  E_coul = 54.484734526767966
init E= -126.057919971572
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.720584700476934  LUMO = 4.94397459854432
  mo_energy =
[-3.21270676e+01 -1.82012767e+00 -7.20584700e-01 -7.20584700e-01
 -7.20584700e-01  4.94397460e+00  4.94397460e+00  4.94397460e+00
  7.52911972e+01  8.01822244e+01  8.01822244e+01  8.01822244e+01
  1.34205678e+03  6.10663386e+03]
E1 = -181.64975437538632  E_coul = 54.952282794779194
cycle= 1 E= -126.697471580607  delta_E= -0.64  |g|= 0.0819  |ddm|= 0.205
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107348
diis-c [-0.01152356  1.        ]
  HOMO = -0.64327471325711  LUMO = 5.02482096804755
  mo_energy =
[-3.21999103e+01 -1.74286616e+00 -6.43274713e-01 -6.43274713e-01
 -6.43274713e-01  5.02482097e+00  5.02482097e+00  5.02482097e+00
  7.52363698e+01  8.01044364e+01  8.01044364e+01  8.01044364e+01
  1.34175425e+03  6.10624853e+03]
E1 = -181.64085180373806  E_coul = 54.94336809818045
cycle= 2 E= -126.697483705558  delta_E= -1.21e-05  |g|= 0.00137  |ddm|= 0.00165
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00169325
diis-c [-2.56172448e-06 -5.17498557e-03  1.00517499e+00]
  HOMO = -0.643885096889483  LUMO = 5.02392885694023
  mo_energy =
[-3.22018957e+01 -1.74352988e+00 -6.43885097e-01 -6.43885097e-01
 -6.43885097e-01  5.02392886e+00  5.02392886e+00  5.02392886e+00
  7.52346272e+01  8.01026413e+01  8.01026413e+01  8.01026413e+01
  1.34175369e+03  6.10624819e+03]
E1 = -181.64263675212501  E_coul = 54.945152979273345
cycle= 3 E= -126.697483772852  delta_E= -6.73e-08  |g|= 0.000209  |ddm|= 0.000268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000286129
diis-c [-1.63860666e-08 -9.76424390e-04  1.38208562e-01  8.62767862e-01]
  HOMO = -0.643785855652405  LUMO = 5.02407850143097
  mo_energy =
[-3.22015154e+01 -1.74341927e+00 -6.43785856e-01 -6.43785856e-01
 -6.43785856e-01  5.02407850e+00  5.02407850e+00  5.02407850e+00
  7.52350078e+01  8.01030277e+01  8.01030277e+01  8.01030277e+01
  1.34175414e+03  6.10624866e+03]
E1 = -181.64233743126445  E_coul = 54.94485365583668
cycle= 4 E= -126.697483775428  delta_E= -2.58e-09  |g|= 5.61e-06  |ddm|= 4.48e-05
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=7.37284e-06
diis-c [-2.48414382e-13  2.23841338e-05 -3.41225182e-03  7.33660111e-03
  9.96053267e-01]
  HOMO = -0.643788280090493  LUMO = 5.02407486711966
  mo_energy =
[-3.22015245e+01 -1.74342196e+00 -6.43788280e-01 -6.43788280e-01
 -6.43788280e-01  5.02407487e+00  5.02407487e+00  5.02407487e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.6423448353504  E_coul = 54.9448610599211
cycle= 5 E= -126.697483775429  delta_E= -1.53e-12  |g|= 7.87e-09  |ddm|= 1.11e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6423448353504  E_coul = 54.9448610599211
  HOMO = -0.643788282137861  LUMO = 5.02407486428972
  mo_energy =
[-3.22015246e+01 -1.74342196e+00 -6.43788282e-01 -6.43788282e-01
 -6.43788282e-01  5.02407486e+00  5.02407486e+00  5.02407486e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.64234484002014  E_coul = 54.944861064590675
Extra cycle  E= -126.697483775429  delta_E= -1.71e-13  |g|= 5.25e-10  |ddm|= 7.14e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.94768176e+03 9.08375412e-01 1.29843271e+03 9.64829611e+01
 1.64349456e+01 5.01258566e+01 8.86923332e-01 5.12379567e+00]
E = -126.69748377542948
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68175947        1
[INPUT] 0    0    [1    /1   ]  0.908375411626       1
[INPUT] 0    0    [1    /1   ]  1298.43270785        1
[INPUT] 0    0    [1    /1   ]  96.4829610774        1
[INPUT] 0    0    [1    /1   ]  16.4349455568        1
[INPUT] 1    0    [1    /1   ]  50.1258565896        1
[INPUT] 1    0    [1    /1   ]  0.886923331664       1
[INPUT] 1    0    [1    /1   ]  5.12379566605        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6817594734503, 1.0]], [0, [0.9083754116255378, 1.0]], [0, [1298.4327078451015, 1.0]], [0, [96.48296107739559, 1.0]], [0, [16.4349455568143, 1.0]], [1, [50.12585658964588, 1.0]], [1, [0.8869233316643711, 1.0]], [1, [5.123795666054519, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68175947]
bas 1, expnt(s) = [0.90837541]
bas 2, expnt(s) = [1298.43270785]
bas 3, expnt(s) = [96.48296108]
bas 4, expnt(s) = [16.43494556]
bas 5, expnt(s) = [50.12585659]
bas 6, expnt(s) = [0.88692333]
bas 7, expnt(s) = [5.12379567]
CPU time:        90.23
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768176e+03 7.40719063e+02 9.08375412e-01 2.35079118e+00
 1.29843271e+03 5.46486716e+02 9.64829611e+01 7.77773231e+01
 1.64349456e+01 2.06224959e+01 5.01258566e+01 3.89100377e+02
 8.86923332e-01 2.51097271e+00 5.12379567e+00 2.24892072e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.839928723834788
cond(S) = 89.72390909341432
E1 = -180.54265449833997  E_coul = 54.484734526767966
init E= -126.057919971572
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.720584700476934  LUMO = 4.94397459854432
  mo_energy =
[-3.21270676e+01 -1.82012767e+00 -7.20584700e-01 -7.20584700e-01
 -7.20584700e-01  4.94397460e+00  4.94397460e+00  4.94397460e+00
  7.52911972e+01  8.01822244e+01  8.01822244e+01  8.01822244e+01
  1.34205678e+03  6.10663386e+03]
E1 = -181.64975437538632  E_coul = 54.952282794779194
cycle= 1 E= -126.697471580607  delta_E= -0.64  |g|= 0.0819  |ddm|= 0.205
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107348
diis-c [-0.01152356  1.        ]
  HOMO = -0.64327471325711  LUMO = 5.02482096804755
  mo_energy =
[-3.21999103e+01 -1.74286616e+00 -6.43274713e-01 -6.43274713e-01
 -6.43274713e-01  5.02482097e+00  5.02482097e+00  5.02482097e+00
  7.52363698e+01  8.01044364e+01  8.01044364e+01  8.01044364e+01
  1.34175425e+03  6.10624853e+03]
E1 = -181.64085180373806  E_coul = 54.94336809818045
cycle= 2 E= -126.697483705558  delta_E= -1.21e-05  |g|= 0.00137  |ddm|= 0.00165
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00169325
diis-c [-2.56172448e-06 -5.17498557e-03  1.00517499e+00]
  HOMO = -0.643885096889483  LUMO = 5.02392885694023
  mo_energy =
[-3.22018957e+01 -1.74352988e+00 -6.43885097e-01 -6.43885097e-01
 -6.43885097e-01  5.02392886e+00  5.02392886e+00  5.02392886e+00
  7.52346272e+01  8.01026413e+01  8.01026413e+01  8.01026413e+01
  1.34175369e+03  6.10624819e+03]
E1 = -181.64263675212501  E_coul = 54.945152979273345
cycle= 3 E= -126.697483772852  delta_E= -6.73e-08  |g|= 0.000209  |ddm|= 0.000268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000286129
diis-c [-1.63860666e-08 -9.76424390e-04  1.38208562e-01  8.62767862e-01]
  HOMO = -0.643785855652405  LUMO = 5.02407850143097
  mo_energy =
[-3.22015154e+01 -1.74341927e+00 -6.43785856e-01 -6.43785856e-01
 -6.43785856e-01  5.02407850e+00  5.02407850e+00  5.02407850e+00
  7.52350078e+01  8.01030277e+01  8.01030277e+01  8.01030277e+01
  1.34175414e+03  6.10624866e+03]
E1 = -181.64233743126445  E_coul = 54.94485365583668
cycle= 4 E= -126.697483775428  delta_E= -2.58e-09  |g|= 5.61e-06  |ddm|= 4.48e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.37284e-06
diis-c [-2.48414382e-13  2.23841338e-05 -3.41225182e-03  7.33660111e-03
  9.96053267e-01]
  HOMO = -0.643788280090493  LUMO = 5.02407486711966
  mo_energy =
[-3.22015245e+01 -1.74342196e+00 -6.43788280e-01 -6.43788280e-01
 -6.43788280e-01  5.02407487e+00  5.02407487e+00  5.02407487e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.6423448353504  E_coul = 54.9448610599211
cycle= 5 E= -126.697483775429  delta_E= -1.53e-12  |g|= 7.87e-09  |ddm|= 1.11e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6423448353504  E_coul = 54.9448610599211
  HOMO = -0.643788282137861  LUMO = 5.02407486428972
  mo_energy =
[-3.22015246e+01 -1.74342196e+00 -6.43788282e-01 -6.43788282e-01
 -6.43788282e-01  5.02407486e+00  5.02407486e+00  5.02407486e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.64234484002014  E_coul = 54.944861064590675
Extra cycle  E= -126.697483775429  delta_E= -1.71e-13  |g|= 5.25e-10  |ddm|= 7.14e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 89.72390909341432
E1 = -181.64234484002014  E_coul = 54.944861064590675
init E= -126.697483775429
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.643788281847246  LUMO = 5.02407486473138
  mo_energy =
[-3.22015246e+01 -1.74342196e+00 -6.43788282e-01 -6.43788282e-01
 -6.43788282e-01  5.02407486e+00  5.02407486e+00  5.02407486e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.64234483912165  E_coul = 54.94486106369228
cycle= 1 E= -126.697483775429  delta_E= 1.14e-13  |g|= 1.03e-10  |ddm|= 1.35e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.64234483912165  E_coul = 54.94486106369228
  HOMO = -0.643788281903937  LUMO = 5.02407486464606
  mo_energy =
[-3.22015246e+01 -1.74342196e+00 -6.43788282e-01 -6.43788282e-01
 -6.43788282e-01  5.02407486e+00  5.02407486e+00  5.02407486e+00
  7.52349991e+01  8.01030188e+01  8.01030188e+01  8.01030188e+01
  1.34175413e+03  6.10624865e+03]
E1 = -181.64234483929243  E_coul = 54.944861063863044
Extra cycle  E= -126.697483775429  delta_E= -2.84e-14  |g|= 1.97e-11  |ddm|= 2.56e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94768176e+03 9.08375412e-01 1.29843271e+03 9.64829611e+01
 1.64349456e+01 5.01258566e+01 8.86923332e-01 5.12379567e+00]
grad_E = [ 9.98386242e-05 -1.22967081e-01  4.33854051e-04  4.63522822e-03
 -8.42486406e-02  7.84066202e-03 -1.99218547e-02  1.83339461e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67998436        1
[INPUT] 0    0    [1    /1   ]  0.94766138291        1
[INPUT] 0    0    [1    /1   ]  1298.43318661        1
[INPUT] 0    0    [1    /1   ]  108.072458148        1
[INPUT] 0    0    [1    /1   ]  17.9016526432        1
[INPUT] 1    0    [1    /1   ]  45.1439914344        1
[INPUT] 1    0    [1    /1   ]  0.874708458037       1
[INPUT] 1    0    [1    /1   ]  5.21934901016        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.679984359168, 1.0]], [0, [0.9476613829097272, 1.0]], [0, [1298.4331866085265, 1.0]], [0, [108.07245814762388, 1.0]], [0, [17.901652643210006, 1.0]], [1, [45.14399143439135, 1.0]], [1, [0.8747084580367668, 1.0]], [1, [5.219349010157338, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67998436]
bas 1, expnt(s) = [0.94766138]
bas 2, expnt(s) = [1298.43318661]
bas 3, expnt(s) = [108.07245815]
bas 4, expnt(s) = [17.90165264]
bas 5, expnt(s) = [45.14399143]
bas 6, expnt(s) = [0.87470846]
bas 7, expnt(s) = [5.21934901]
CPU time:        93.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767998e+03 7.40718557e+02 9.47661383e-01 2.42663754e+00
 1.29843319e+03 5.46486867e+02 1.08072458e+02 8.46839870e+01
 1.79016526e+01 2.19879565e+01 4.51439914e+01 3.41377062e+02
 8.74708458e-01 2.46782040e+00 5.21934901e+00 2.30146734e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.838847656783408
cond(S) = 93.28795795523142
E1 = -180.84513446998295  E_coul = 54.65637824551448
init E= -126.188756224468
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.715917247721102  LUMO = 4.96599756138418
  mo_energy =
[-3.20743682e+01 -1.82433633e+00 -7.15917248e-01 -7.15917248e-01
 -7.15917248e-01  4.96599756e+00  4.96599756e+00  4.96599756e+00
  7.22594947e+01  7.22594947e+01  7.22594947e+01  8.80236974e+01
  1.38445239e+03  6.15027494e+03]
E1 = -181.8236338565145  E_coul = 55.07908907724802
cycle= 1 E= -126.744544779266  delta_E= -0.556  |g|= 0.0631  |ddm|= 0.192
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0916393
diis-c [-0.00839776  1.        ]
  HOMO = -0.645462169581004  LUMO = 5.03800479714236
  mo_energy =
[-3.21380522e+01 -1.75829173e+00 -6.45462170e-01 -6.45462170e-01
 -6.45462170e-01  5.03800480e+00  5.03800480e+00  5.03800480e+00
  7.22102434e+01  7.22102434e+01  7.22102434e+01  8.79785511e+01
  1.38427728e+03  6.15004902e+03]
E1 = -181.81672528016455  E_coul = 55.07217558615779
cycle= 2 E= -126.744549694007  delta_E= -4.91e-06  |g|= 0.00097  |ddm|= 0.00122
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00124501
diis-c [-1.38834853e-06 -4.40786568e-03  1.00440787e+00]
  HOMO = -0.645934144302728  LUMO = 5.03729589640265
  mo_energy =
[-3.21395658e+01 -1.75883407e+00 -6.45934144e-01 -6.45934144e-01
 -6.45934144e-01  5.03729590e+00  5.03729590e+00  5.03729590e+00
  7.22088424e+01  7.22088424e+01  7.22088424e+01  8.79771815e+01
  1.38427675e+03  6.15004866e+03]
E1 = -181.81811909845408  E_coul = 55.07356936549754
cycle= 3 E= -126.744549732957  delta_E= -3.89e-08  |g|= 0.000163  |ddm|= 0.000205
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000229731
diis-c [-4.11737449e-09 -8.55686044e-04  1.58323849e-01  8.42531837e-01]
  HOMO = -0.645859676939012  LUMO = 5.03741150326
  mo_energy =
[-3.21392761e+01 -1.75874770e+00 -6.45859677e-01 -6.45859677e-01
 -6.45859677e-01  5.03741150e+00  5.03741150e+00  5.03741150e+00
  7.22091305e+01  7.22091305e+01  7.22091305e+01  8.79774747e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788543175318  E_coul = 55.07333569719236
cycle= 4 E= -126.744549734561  delta_E= -1.6e-09  |g|= 1.41e-06  |ddm|= 3.43e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.82487e-06
diis-c [-7.55466209e-14  2.10843908e-05 -3.58595360e-03 -1.22479759e-02
  1.01581285e+00]
  HOMO = -0.645860106412774  LUMO = 5.03741084432807
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860106e-01 -6.45860106e-01
 -6.45860106e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.8178868222765  E_coul = 55.07333708771578
cycle= 5 E= -126.744549734561  delta_E= 8.53e-14  |g|= 5.22e-09  |ddm|= 2.07e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.8178868222765  E_coul = 55.07333708771578
  HOMO = -0.645860108391777  LUMO = 5.03741084138393
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860108e-01 -6.45860108e-01
 -6.45860108e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788682770448  E_coul = 55.07333709314363
Extra cycle  E= -126.744549734561  delta_E= -1.14e-13  |g|= 6.15e-10  |ddm|= 8.02e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767998e+03 9.47661383e-01 1.29843319e+03 1.08072458e+02
 1.79016526e+01 4.51439914e+01 8.74708458e-01 5.21934901e+00]
E = -126.74454973456085
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67998436        1
[INPUT] 0    0    [1    /1   ]  0.94766138291        1
[INPUT] 0    0    [1    /1   ]  1298.43318661        1
[INPUT] 0    0    [1    /1   ]  108.072458148        1
[INPUT] 0    0    [1    /1   ]  17.9016526432        1
[INPUT] 1    0    [1    /1   ]  45.1439914344        1
[INPUT] 1    0    [1    /1   ]  0.874708458037       1
[INPUT] 1    0    [1    /1   ]  5.21934901016        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.679984359168, 1.0]], [0, [0.9476613829097272, 1.0]], [0, [1298.4331866085265, 1.0]], [0, [108.07245814762388, 1.0]], [0, [17.901652643210006, 1.0]], [1, [45.14399143439135, 1.0]], [1, [0.8747084580367668, 1.0]], [1, [5.219349010157338, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67998436]
bas 1, expnt(s) = [0.94766138]
bas 2, expnt(s) = [1298.43318661]
bas 3, expnt(s) = [108.07245815]
bas 4, expnt(s) = [17.90165264]
bas 5, expnt(s) = [45.14399143]
bas 6, expnt(s) = [0.87470846]
bas 7, expnt(s) = [5.21934901]
CPU time:        94.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767998e+03 7.40718557e+02 9.47661383e-01 2.42663754e+00
 1.29843319e+03 5.46486867e+02 1.08072458e+02 8.46839870e+01
 1.79016526e+01 2.19879565e+01 4.51439914e+01 3.41377062e+02
 8.74708458e-01 2.46782040e+00 5.21934901e+00 2.30146734e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.838847656783408
cond(S) = 93.28795795523142
E1 = -180.84513446998295  E_coul = 54.65637824551448
init E= -126.188756224468
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.715917247721102  LUMO = 4.96599756138418
  mo_energy =
[-3.20743682e+01 -1.82433633e+00 -7.15917248e-01 -7.15917248e-01
 -7.15917248e-01  4.96599756e+00  4.96599756e+00  4.96599756e+00
  7.22594947e+01  7.22594947e+01  7.22594947e+01  8.80236974e+01
  1.38445239e+03  6.15027494e+03]
E1 = -181.8236338565145  E_coul = 55.07908907724802
cycle= 1 E= -126.744544779266  delta_E= -0.556  |g|= 0.0631  |ddm|= 0.192
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0916393
diis-c [-0.00839776  1.        ]
  HOMO = -0.645462169581004  LUMO = 5.03800479714236
  mo_energy =
[-3.21380522e+01 -1.75829173e+00 -6.45462170e-01 -6.45462170e-01
 -6.45462170e-01  5.03800480e+00  5.03800480e+00  5.03800480e+00
  7.22102434e+01  7.22102434e+01  7.22102434e+01  8.79785511e+01
  1.38427728e+03  6.15004902e+03]
E1 = -181.81672528016455  E_coul = 55.07217558615779
cycle= 2 E= -126.744549694007  delta_E= -4.91e-06  |g|= 0.00097  |ddm|= 0.00122
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00124501
diis-c [-1.38834853e-06 -4.40786568e-03  1.00440787e+00]
  HOMO = -0.645934144302728  LUMO = 5.03729589640265
  mo_energy =
[-3.21395658e+01 -1.75883407e+00 -6.45934144e-01 -6.45934144e-01
 -6.45934144e-01  5.03729590e+00  5.03729590e+00  5.03729590e+00
  7.22088424e+01  7.22088424e+01  7.22088424e+01  8.79771815e+01
  1.38427675e+03  6.15004866e+03]
E1 = -181.81811909845408  E_coul = 55.07356936549754
cycle= 3 E= -126.744549732957  delta_E= -3.89e-08  |g|= 0.000163  |ddm|= 0.000205
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000229731
diis-c [-4.11737449e-09 -8.55686044e-04  1.58323849e-01  8.42531837e-01]
  HOMO = -0.645859676939012  LUMO = 5.03741150326
  mo_energy =
[-3.21392761e+01 -1.75874770e+00 -6.45859677e-01 -6.45859677e-01
 -6.45859677e-01  5.03741150e+00  5.03741150e+00  5.03741150e+00
  7.22091305e+01  7.22091305e+01  7.22091305e+01  8.79774747e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788543175318  E_coul = 55.07333569719236
cycle= 4 E= -126.744549734561  delta_E= -1.6e-09  |g|= 1.41e-06  |ddm|= 3.43e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.82487e-06
diis-c [-7.55466209e-14  2.10843908e-05 -3.58595360e-03 -1.22479759e-02
  1.01581285e+00]
  HOMO = -0.645860106412774  LUMO = 5.03741084432807
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860106e-01 -6.45860106e-01
 -6.45860106e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.8178868222765  E_coul = 55.07333708771578
cycle= 5 E= -126.744549734561  delta_E= 8.53e-14  |g|= 5.22e-09  |ddm|= 2.07e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.8178868222765  E_coul = 55.07333708771578
  HOMO = -0.645860108391777  LUMO = 5.03741084138393
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860108e-01 -6.45860108e-01
 -6.45860108e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788682770448  E_coul = 55.07333709314363
Extra cycle  E= -126.744549734561  delta_E= -1.14e-13  |g|= 6.15e-10  |ddm|= 8.02e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 93.28795795523142
E1 = -181.81788682770448  E_coul = 55.07333709314363
init E= -126.744549734561
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.645860108055516  LUMO = 5.03741084190706
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860108e-01 -6.45860108e-01
 -6.45860108e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788682664134  E_coul = 55.0733370920805
cycle= 1 E= -126.744549734561  delta_E=    0  |g|= 1.22e-10  |ddm|= 1.56e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.81788682664134  E_coul = 55.0733370920805
  HOMO = -0.645860108121585  LUMO = 5.03741084180453
  mo_energy =
[-3.21392778e+01 -1.75874821e+00 -6.45860108e-01 -6.45860108e-01
 -6.45860108e-01  5.03741084e+00  5.03741084e+00  5.03741084e+00
  7.22091290e+01  7.22091290e+01  7.22091290e+01  8.79774732e+01
  1.38427709e+03  6.15004900e+03]
E1 = -181.81788682684854  E_coul = 55.07333709228791
Extra cycle  E= -126.744549734561  delta_E= 2.27e-13  |g|= 2.41e-11  |ddm|= 3.04e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94767998e+03 9.47661383e-01 1.29843319e+03 1.08072458e+02
 1.79016526e+01 4.51439914e+01 8.74708458e-01 5.21934901e+00]
grad_E = [ 6.30792743e-05  1.98221980e-03  3.17893093e-04  8.57500474e-03
 -4.09639269e-02  7.47392885e-03 -3.03085856e-01  8.80648787e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68019041        1
[INPUT] 0    0    [1    /1   ]  0.951061480701       1
[INPUT] 0    0    [1    /1   ]  1298.43256359        1
[INPUT] 0    0    [1    /1   ]  106.157149583        1
[INPUT] 0    0    [1    /1   ]  18.0869872456        1
[INPUT] 1    0    [1    /1   ]  46.1629107949        1
[INPUT] 1    0    [1    /1   ]  0.8669267747         1
[INPUT] 1    0    [1    /1   ]  4.97570160936        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6801904131485, 1.0]], [0, [0.951061480701349, 1.0]], [0, [1298.4325635862758, 1.0]], [0, [106.15714958326588, 1.0]], [0, [18.0869872455615, 1.0]], [1, [46.16291079491616, 1.0]], [1, [0.8669267747000052, 1.0]], [1, [4.975701609358307, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68019041]
bas 1, expnt(s) = [0.95106148]
bas 2, expnt(s) = [1298.43256359]
bas 3, expnt(s) = [106.15714958]
bas 4, expnt(s) = [18.08698725]
bas 5, expnt(s) = [46.16291079]
bas 6, expnt(s) = [0.86692677]
bas 7, expnt(s) = [4.97570161]
CPU time:        97.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768019e+03 7.40718616e+02 9.51061481e-01 2.43316448e+00
 1.29843256e+03 5.46486670e+02 1.06157150e+02 8.35558691e+01
 1.80869872e+01 2.21584664e+01 4.61629108e+01 3.51035367e+02
 8.66926775e-01 2.44040785e+00 4.97570161e+00 2.16796518e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842819657735483
cond(S) = 92.90886121497228
E1 = -180.8374666126908  E_coul = 54.70609276422995
init E= -126.131373848461
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709848572738597  LUMO = 4.79762685922343
  mo_energy =
[-3.20809631e+01 -1.82044599e+00 -7.09848573e-01 -7.09848573e-01
 -7.09848573e-01  4.79762686e+00  4.79762686e+00  4.79762686e+00
  7.32484081e+01  7.32484081e+01  7.32484081e+01  8.72895786e+01
  1.37883995e+03  6.14430191e+03]
E1 = -181.95840174518915  E_coul = 55.19427252745181
cycle= 1 E= -126.764129217737  delta_E= -0.633  |g|= 0.0964  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.127892
diis-c [-0.01635627  1.        ]
  HOMO = -0.635756184772914  LUMO = 4.87754262959017
  mo_energy =
[-3.21259526e+01 -1.75172403e+00 -6.35756185e-01 -6.35756185e-01
 -6.35756185e-01  4.87754263e+00  4.87754263e+00  4.87754263e+00
  7.32225836e+01  7.32225836e+01  7.32225836e+01  8.72653537e+01
  1.37871828e+03  6.14413171e+03]
E1 = -181.92954349849532  E_coul = 55.16538444800294
cycle= 2 E= -126.764159050492  delta_E= -2.98e-05  |g|= 0.0036  |ddm|= 0.00442
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00449215
diis-c [-1.99850150e-05  3.43739282e-03  9.96562607e-01]
  HOMO = -0.63760376135511  LUMO = 4.87483546900902
  mo_energy =
[-3.21326383e+01 -1.75388850e+00 -6.37603761e-01 -6.37603761e-01
 -6.37603761e-01  4.87483547e+00  4.87483547e+00  4.87483547e+00
  7.32161658e+01  7.32161658e+01  7.32161658e+01  8.72588188e+01
  1.37871309e+03  6.14412689e+03]
E1 = -181.93519179600003  E_coul = 55.17103210718773
cycle= 3 E= -126.764159688812  delta_E= -6.38e-07  |g|= 0.000619  |ddm|= 0.000843
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000865838
diis-c [-4.21237869e-08 -1.29373840e-03  1.52459371e-01  8.48834367e-01]
  HOMO = -0.637312128184092  LUMO = 4.87526789315779
  mo_energy =
[-3.21315224e+01 -1.75355059e+00 -6.37312128e-01 -6.37312128e-01
 -6.37312128e-01  4.87526789e+00  4.87526789e+00  4.87526789e+00
  7.32172804e+01  7.32172804e+01  7.32172804e+01  8.72599446e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428385114058  E_coul = 55.170124138387344
cycle= 4 E= -126.764159712753  delta_E= -2.39e-08  |g|= 3.78e-06  |ddm|= 0.000135
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.84673e-06
diis-c [-7.43436684e-14  2.37790520e-05 -3.48557757e-03 -1.57185744e-02
  1.01918037e+00]
  HOMO = -0.637313024155942  LUMO = 4.87526660139708
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313024e-01 -6.37313024e-01
 -6.37313024e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428663619446  E_coul = 55.17012692344093
cycle= 5 E= -126.764159712754  delta_E= -2.84e-13  |g|= 5.19e-09  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.93428663619446  E_coul = 55.17012692344093
  HOMO = -0.63731302665081  LUMO = 4.87526659766419
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313027e-01 -6.37313027e-01
 -6.37313027e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.9342866434151  E_coul = 55.17012693066147
Extra cycle  E= -126.764159712754  delta_E= -1.14e-13  |g|= 8.04e-10  |ddm|= 1.07e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94768019e+03 9.51061481e-01 1.29843256e+03 1.06157150e+02
 1.80869872e+01 4.61629108e+01 8.66926775e-01 4.97570161e+00]
E = -126.76415971275364
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68019041        1
[INPUT] 0    0    [1    /1   ]  0.951061480701       1
[INPUT] 0    0    [1    /1   ]  1298.43256359        1
[INPUT] 0    0    [1    /1   ]  106.157149583        1
[INPUT] 0    0    [1    /1   ]  18.0869872456        1
[INPUT] 1    0    [1    /1   ]  46.1629107949        1
[INPUT] 1    0    [1    /1   ]  0.8669267747         1
[INPUT] 1    0    [1    /1   ]  4.97570160936        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6801904131485, 1.0]], [0, [0.951061480701349, 1.0]], [0, [1298.4325635862758, 1.0]], [0, [106.15714958326588, 1.0]], [0, [18.0869872455615, 1.0]], [1, [46.16291079491616, 1.0]], [1, [0.8669267747000052, 1.0]], [1, [4.975701609358307, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68019041]
bas 1, expnt(s) = [0.95106148]
bas 2, expnt(s) = [1298.43256359]
bas 3, expnt(s) = [106.15714958]
bas 4, expnt(s) = [18.08698725]
bas 5, expnt(s) = [46.16291079]
bas 6, expnt(s) = [0.86692677]
bas 7, expnt(s) = [4.97570161]
CPU time:        97.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768019e+03 7.40718616e+02 9.51061481e-01 2.43316448e+00
 1.29843256e+03 5.46486670e+02 1.06157150e+02 8.35558691e+01
 1.80869872e+01 2.21584664e+01 4.61629108e+01 3.51035367e+02
 8.66926775e-01 2.44040785e+00 4.97570161e+00 2.16796518e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842819657735483
cond(S) = 92.90886121497228
E1 = -180.8374666126908  E_coul = 54.70609276422995
init E= -126.131373848461
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709848572738597  LUMO = 4.79762685922343
  mo_energy =
[-3.20809631e+01 -1.82044599e+00 -7.09848573e-01 -7.09848573e-01
 -7.09848573e-01  4.79762686e+00  4.79762686e+00  4.79762686e+00
  7.32484081e+01  7.32484081e+01  7.32484081e+01  8.72895786e+01
  1.37883995e+03  6.14430191e+03]
E1 = -181.95840174518915  E_coul = 55.19427252745181
cycle= 1 E= -126.764129217737  delta_E= -0.633  |g|= 0.0964  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.127892
diis-c [-0.01635627  1.        ]
  HOMO = -0.635756184772914  LUMO = 4.87754262959017
  mo_energy =
[-3.21259526e+01 -1.75172403e+00 -6.35756185e-01 -6.35756185e-01
 -6.35756185e-01  4.87754263e+00  4.87754263e+00  4.87754263e+00
  7.32225836e+01  7.32225836e+01  7.32225836e+01  8.72653537e+01
  1.37871828e+03  6.14413171e+03]
E1 = -181.92954349849532  E_coul = 55.16538444800294
cycle= 2 E= -126.764159050492  delta_E= -2.98e-05  |g|= 0.0036  |ddm|= 0.00442
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00449215
diis-c [-1.99850150e-05  3.43739282e-03  9.96562607e-01]
  HOMO = -0.63760376135511  LUMO = 4.87483546900902
  mo_energy =
[-3.21326383e+01 -1.75388850e+00 -6.37603761e-01 -6.37603761e-01
 -6.37603761e-01  4.87483547e+00  4.87483547e+00  4.87483547e+00
  7.32161658e+01  7.32161658e+01  7.32161658e+01  8.72588188e+01
  1.37871309e+03  6.14412689e+03]
E1 = -181.93519179600003  E_coul = 55.17103210718773
cycle= 3 E= -126.764159688812  delta_E= -6.38e-07  |g|= 0.000619  |ddm|= 0.000843
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000865838
diis-c [-4.21237869e-08 -1.29373840e-03  1.52459371e-01  8.48834367e-01]
  HOMO = -0.637312128184092  LUMO = 4.87526789315779
  mo_energy =
[-3.21315224e+01 -1.75355059e+00 -6.37312128e-01 -6.37312128e-01
 -6.37312128e-01  4.87526789e+00  4.87526789e+00  4.87526789e+00
  7.32172804e+01  7.32172804e+01  7.32172804e+01  8.72599446e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428385114058  E_coul = 55.170124138387344
cycle= 4 E= -126.764159712753  delta_E= -2.39e-08  |g|= 3.78e-06  |ddm|= 0.000135
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.84673e-06
diis-c [-7.43436684e-14  2.37790520e-05 -3.48557757e-03 -1.57185744e-02
  1.01918037e+00]
  HOMO = -0.637313024155942  LUMO = 4.87526660139708
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313024e-01 -6.37313024e-01
 -6.37313024e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428663619446  E_coul = 55.17012692344093
cycle= 5 E= -126.764159712754  delta_E= -2.84e-13  |g|= 5.19e-09  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.93428663619446  E_coul = 55.17012692344093
  HOMO = -0.63731302665081  LUMO = 4.87526659766419
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313027e-01 -6.37313027e-01
 -6.37313027e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.9342866434151  E_coul = 55.17012693066147
Extra cycle  E= -126.764159712754  delta_E= -1.14e-13  |g|= 8.04e-10  |ddm|= 1.07e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 92.90886121497228
E1 = -181.9342866434151  E_coul = 55.17012693066147
init E= -126.764159712754
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.63731302619854  LUMO = 4.87526659833471
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313026e-01 -6.37313026e-01
 -6.37313026e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428664200326  E_coul = 55.17012692924964
cycle= 1 E= -126.764159712754  delta_E= 2.84e-14  |g|= 1.58e-10  |ddm|= 2.1e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.93428664200326  E_coul = 55.17012692924964
  HOMO = -0.637313026287132  LUMO = 4.87526659820353
  mo_energy =
[-3.21315256e+01 -1.75355170e+00 -6.37313026e-01 -6.37313026e-01
 -6.37313026e-01  4.87526660e+00  4.87526660e+00  4.87526660e+00
  7.32172777e+01  7.32172777e+01  7.32172777e+01  8.72599417e+01
  1.37871441e+03  6.14412824e+03]
E1 = -181.93428664227855  E_coul = 55.170126929525
Extra cycle  E= -126.764159712754  delta_E= 5.68e-14  |g|= 3.11e-11  |ddm|= 4.1e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94768019e+03 9.51061481e-01 1.29843256e+03 1.06157150e+02
 1.80869872e+01 4.61629108e+01 8.66926775e-01 4.97570161e+00]
grad_E = [ 7.26836146e-05  5.75793844e-03  3.50011490e-04  3.96173050e-03
 -2.82352590e-03  8.58589225e-03 -2.48414006e-02  1.73144942e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68012478        1
[INPUT] 0    0    [1    /1   ]  0.950567912902       1
[INPUT] 0    0    [1    /1   ]  1298.43214342        1
[INPUT] 0    0    [1    /1   ]  106.045439264        1
[INPUT] 0    0    [1    /1   ]  18.1103556812        1
[INPUT] 1    0    [1    /1   ]  46.2318817578        1
[INPUT] 1    0    [1    /1   ]  0.864766578937       1
[INPUT] 1    0    [1    /1   ]  4.94052913829        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6801247751382, 1.0]], [0, [0.9505679129022343, 1.0]], [0, [1298.4321434163883, 1.0]], [0, [106.04543926446239, 1.0]], [0, [18.110355681205494, 1.0]], [1, [46.23188175777801, 1.0]], [1, [0.8647665789368613, 1.0]], [1, [4.940529138285553, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68012478]
bas 1, expnt(s) = [0.95056791]
bas 2, expnt(s) = [1298.43214342]
bas 3, expnt(s) = [106.04543926]
bas 4, expnt(s) = [18.11035568]
bas 5, expnt(s) = [46.23188176]
bas 6, expnt(s) = [0.86476658]
bas 7, expnt(s) = [4.94052914]
CPU time:       101.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768012e+03 7.40718597e+02 9.50567913e-01 2.43221738e+00
 1.29843214e+03 5.46486538e+02 1.06045439e+02 8.34899154e+01
 1.81103557e+01 2.21799345e+01 4.62318818e+01 3.51691082e+02
 8.64766579e-01 2.43280900e+00 4.94052914e+00 2.14882587e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843808257108702
cond(S) = 92.89229303444172
E1 = -180.82670066714834  E_coul = 54.70634224938599
init E= -126.120358417762
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709446445220168  LUMO = 4.76920913181889
  mo_energy =
[-3.20822329e+01 -1.82031099e+00 -7.09446445e-01 -7.09446445e-01
 -7.09446445e-01  4.76920913e+00  4.76920913e+00  4.76920913e+00
  7.32632755e+01  7.32632755e+01  7.32632755e+01  8.72827917e+01
  1.37854971e+03  6.14398743e+03]
E1 = -181.954082980521  E_coul = 55.18967948878106
cycle= 1 E= -126.76440349174  delta_E= -0.644  |g|= 0.0999  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.131524
diis-c [-0.01729852  1.        ]
  HOMO = -0.635807773069677  LUMO = 4.84882325700158
  mo_energy =
[-3.21277575e+01 -1.75219909e+00 -6.35807773e-01 -6.35807773e-01
 -6.35807773e-01  4.84882326e+00  4.84882326e+00  4.84882326e+00
  7.32374973e+01  7.32374973e+01  7.32374973e+01  8.72582239e+01
  1.37843037e+03  6.14381980e+03]
E1 = -181.92477089785928  E_coul = 55.160335411509685
cycle= 2 E= -126.76443548635  delta_E= -3.2e-05  |g|= 0.00368  |ddm|= 0.00449
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00455469
diis-c [-2.05808153e-05  3.07513086e-03  9.96924869e-01]
  HOMO = -0.637686722689544  LUMO = 4.84608834093801
  mo_energy =
[-3.21345431e+01 -1.75440207e+00 -6.37686723e-01 -6.37686723e-01
 -6.37686723e-01  4.84608834e+00  4.84608834e+00  4.84608834e+00
  7.32309931e+01  7.32309931e+01  7.32309931e+01  8.72515938e+01
  1.37842519e+03  6.14381503e+03]
E1 = -181.93051909094956  E_coul = 55.1660829457673
cycle= 3 E= -126.764436145182  delta_E= -6.59e-07  |g|= 0.000629  |ddm|= 0.000859
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879559
diis-c [-4.83255552e-08 -1.35860907e-03  1.51946836e-01  8.49411773e-01]
  HOMO = -0.637388749067938  LUMO = 4.84652721912458
  mo_energy =
[-3.21334061e+01 -1.75405693e+00 -6.37388749e-01 -6.37388749e-01
 -6.37388749e-01  4.84652722e+00  4.84652722e+00  4.84652722e+00
  7.32321292e+01  7.32321292e+01  7.32321292e+01  8.72527408e+01
  1.37842654e+03  6.14381640e+03]
E1 = -181.92959133070818  E_coul = 55.16515516065093
cycle= 4 E= -126.764436170057  delta_E= -2.49e-08  |g|= 4.29e-06  |ddm|= 0.000138
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.43163e-06
diis-c [-7.41294986e-14  2.38305767e-05 -3.44104068e-03 -1.44830105e-02
  1.01790022e+00]
  HOMO = -0.637389937954053  LUMO = 4.84652550630101
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389938e-01 -6.37389938e-01
 -6.37389938e-01  4.84652551e+00  4.84652551e+00  4.84652551e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527368e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.9295950272963  E_coul = 55.16515885723859
cycle= 5 E= -126.764436170058  delta_E= -4.55e-13  |g|= 4.92e-09  |ddm|= 5.61e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9295950272963  E_coul = 55.16515885723859
  HOMO = -0.637389940311645  LUMO = 4.84652550278756
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389940e-01 -6.37389940e-01
 -6.37389940e-01  4.84652550e+00  4.84652550e+00  4.84652550e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527367e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.92959503413326  E_coul = 55.16515886407567
Extra cycle  E= -126.764436170058  delta_E= 1.14e-13  |g|= 7.59e-10  |ddm|= 1.02e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94768012e+03 9.50567913e-01 1.29843214e+03 1.06045439e+02
 1.81103557e+01 4.62318818e+01 8.64766579e-01 4.94052914e+00]
E = -126.76443617005759
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68012478        1
[INPUT] 0    0    [1    /1   ]  0.950567912902       1
[INPUT] 0    0    [1    /1   ]  1298.43214342        1
[INPUT] 0    0    [1    /1   ]  106.045439264        1
[INPUT] 0    0    [1    /1   ]  18.1103556812        1
[INPUT] 1    0    [1    /1   ]  46.2318817578        1
[INPUT] 1    0    [1    /1   ]  0.864766578937       1
[INPUT] 1    0    [1    /1   ]  4.94052913829        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6801247751382, 1.0]], [0, [0.9505679129022343, 1.0]], [0, [1298.4321434163883, 1.0]], [0, [106.04543926446239, 1.0]], [0, [18.110355681205494, 1.0]], [1, [46.23188175777801, 1.0]], [1, [0.8647665789368613, 1.0]], [1, [4.940529138285553, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68012478]
bas 1, expnt(s) = [0.95056791]
bas 2, expnt(s) = [1298.43214342]
bas 3, expnt(s) = [106.04543926]
bas 4, expnt(s) = [18.11035568]
bas 5, expnt(s) = [46.23188176]
bas 6, expnt(s) = [0.86476658]
bas 7, expnt(s) = [4.94052914]
CPU time:       101.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768012e+03 7.40718597e+02 9.50567913e-01 2.43221738e+00
 1.29843214e+03 5.46486538e+02 1.06045439e+02 8.34899154e+01
 1.81103557e+01 2.21799345e+01 4.62318818e+01 3.51691082e+02
 8.64766579e-01 2.43280900e+00 4.94052914e+00 2.14882587e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843808257108702
cond(S) = 92.89229303444172
E1 = -180.82670066714834  E_coul = 54.70634224938599
init E= -126.120358417762
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709446445220168  LUMO = 4.76920913181889
  mo_energy =
[-3.20822329e+01 -1.82031099e+00 -7.09446445e-01 -7.09446445e-01
 -7.09446445e-01  4.76920913e+00  4.76920913e+00  4.76920913e+00
  7.32632755e+01  7.32632755e+01  7.32632755e+01  8.72827917e+01
  1.37854971e+03  6.14398743e+03]
E1 = -181.954082980521  E_coul = 55.18967948878106
cycle= 1 E= -126.76440349174  delta_E= -0.644  |g|= 0.0999  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.131524
diis-c [-0.01729852  1.        ]
  HOMO = -0.635807773069677  LUMO = 4.84882325700158
  mo_energy =
[-3.21277575e+01 -1.75219909e+00 -6.35807773e-01 -6.35807773e-01
 -6.35807773e-01  4.84882326e+00  4.84882326e+00  4.84882326e+00
  7.32374973e+01  7.32374973e+01  7.32374973e+01  8.72582239e+01
  1.37843037e+03  6.14381980e+03]
E1 = -181.92477089785928  E_coul = 55.160335411509685
cycle= 2 E= -126.76443548635  delta_E= -3.2e-05  |g|= 0.00368  |ddm|= 0.00449
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00455469
diis-c [-2.05808153e-05  3.07513086e-03  9.96924869e-01]
  HOMO = -0.637686722689544  LUMO = 4.84608834093801
  mo_energy =
[-3.21345431e+01 -1.75440207e+00 -6.37686723e-01 -6.37686723e-01
 -6.37686723e-01  4.84608834e+00  4.84608834e+00  4.84608834e+00
  7.32309931e+01  7.32309931e+01  7.32309931e+01  8.72515938e+01
  1.37842519e+03  6.14381503e+03]
E1 = -181.93051909094956  E_coul = 55.1660829457673
cycle= 3 E= -126.764436145182  delta_E= -6.59e-07  |g|= 0.000629  |ddm|= 0.000859
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879559
diis-c [-4.83255552e-08 -1.35860907e-03  1.51946836e-01  8.49411773e-01]
  HOMO = -0.637388749067938  LUMO = 4.84652721912458
  mo_energy =
[-3.21334061e+01 -1.75405693e+00 -6.37388749e-01 -6.37388749e-01
 -6.37388749e-01  4.84652722e+00  4.84652722e+00  4.84652722e+00
  7.32321292e+01  7.32321292e+01  7.32321292e+01  8.72527408e+01
  1.37842654e+03  6.14381640e+03]
E1 = -181.92959133070818  E_coul = 55.16515516065093
cycle= 4 E= -126.764436170057  delta_E= -2.49e-08  |g|= 4.29e-06  |ddm|= 0.000138
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.43163e-06
diis-c [-7.41294986e-14  2.38305767e-05 -3.44104068e-03 -1.44830105e-02
  1.01790022e+00]
  HOMO = -0.637389937954053  LUMO = 4.84652550630101
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389938e-01 -6.37389938e-01
 -6.37389938e-01  4.84652551e+00  4.84652551e+00  4.84652551e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527368e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.9295950272963  E_coul = 55.16515885723859
cycle= 5 E= -126.764436170058  delta_E= -4.55e-13  |g|= 4.92e-09  |ddm|= 5.61e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.02 sec
E1 = -181.9295950272963  E_coul = 55.16515885723859
  HOMO = -0.637389940311645  LUMO = 4.84652550278756
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389940e-01 -6.37389940e-01
 -6.37389940e-01  4.84652550e+00  4.84652550e+00  4.84652550e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527367e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.92959503413326  E_coul = 55.16515886407567
Extra cycle  E= -126.764436170058  delta_E= 1.14e-13  |g|= 7.59e-10  |ddm|= 1.02e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 92.89229303444172
E1 = -181.92959503413326  E_coul = 55.16515886407567
init E= -126.764436170058
    CPU time for initialize scf      0.06 sec, wall time      0.07 sec
  HOMO = -0.637389939882795  LUMO = 4.8465255034191
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389940e-01 -6.37389940e-01
 -6.37389940e-01  4.84652550e+00  4.84652550e+00  4.84652550e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527367e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.92959503279474  E_coul = 55.16515886273699
cycle= 1 E= -126.764436170058  delta_E= -1.56e-13  |g|= 1.5e-10  |ddm|= 2e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.92959503279474  E_coul = 55.16515886273699
  HOMO = -0.637389939966886  LUMO = 4.84652550329536
  mo_energy =
[-3.21334104e+01 -1.75405839e+00 -6.37389940e-01 -6.37389940e-01
 -6.37389940e-01  4.84652550e+00  4.84652550e+00  4.84652550e+00
  7.32321254e+01  7.32321254e+01  7.32321254e+01  8.72527367e+01
  1.37842654e+03  6.14381641e+03]
E1 = -181.9295950330561  E_coul = 55.16515886299847
Extra cycle  E= -126.764436170058  delta_E= 1.14e-13  |g|= 2.93e-11  |ddm|= 3.9e-11
    CPU time for scf_cycle      0.14 sec, wall time      0.14 sec
exp = [1.94768012e+03 9.50567913e-01 1.29843214e+03 1.06045439e+02
 1.81103557e+01 4.62318818e+01 8.64766579e-01 4.94052914e+00]
grad_E = [7.33885094e-05 1.63742591e-03 3.52368002e-04 3.56712180e-03
 6.85732848e-04 8.73617525e-03 2.41717559e-03 8.27767111e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68001408        1
[INPUT] 0    0    [1    /1   ]  0.950362947441       1
[INPUT] 0    0    [1    /1   ]  1298.43162126        1
[INPUT] 0    0    [1    /1   ]  106.058075521        1
[INPUT] 0    0    [1    /1   ]  18.1192398351        1
[INPUT] 1    0    [1    /1   ]  46.2174462955        1
[INPUT] 1    0    [1    /1   ]  0.864370542735       1
[INPUT] 1    0    [1    /1   ]  4.93353804439        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6800140846326, 1.0]], [0, [0.9503629474412345, 1.0]], [0, [1298.4316212593526, 1.0]], [0, [106.05807552083245, 1.0]], [0, [18.119239835100444, 1.0]], [1, [46.21744629546302, 1.0]], [1, [0.8643705427353661, 1.0]], [1, [4.933538044391995, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68001408]
bas 1, expnt(s) = [0.95036295]
bas 2, expnt(s) = [1298.43162126]
bas 3, expnt(s) = [106.05807552]
bas 4, expnt(s) = [18.11923984]
bas 5, expnt(s) = [46.2174463]
bas 6, expnt(s) = [0.86437054]
bas 7, expnt(s) = [4.93353804]
CPU time:       105.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768001e+03 7.40718566e+02 9.50362947e-01 2.43182403e+00
 1.29843162e+03 5.46486373e+02 1.06058076e+02 8.34973767e+01
 1.81192398e+01 2.21880944e+01 4.62174463e+01 3.51553822e+02
 8.64370543e-01 2.43141639e+00 4.93353804e+00 2.14502567e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843996088820116
cond(S) = 92.89944028112734
E1 = -180.82430278535946  E_coul = 54.70615589503344
init E= -126.118146890326
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709431302223591  LUMO = 4.76356784393425
  mo_energy =
[-3.20823961e+01 -1.82033280e+00 -7.09431302e-01 -7.09431302e-01
 -7.09431302e-01  4.76356784e+00  4.76356784e+00  4.76356784e+00
  7.32201657e+01  7.32201657e+01  7.32201657e+01  8.73187288e+01
  1.37861808e+03  6.14405460e+03]
E1 = -181.9541478727066  E_coul = 55.18961881171327
cycle= 1 E= -126.764529060993  delta_E= -0.646  |g|= 0.101  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.132249
diis-c [-0.01748986  1.        ]
  HOMO = -0.635820156139392  LUMO = 4.84321412753278
  mo_energy =
[-3.21277495e+01 -1.75226345e+00 -6.35820156e-01 -6.35820156e-01
 -6.35820156e-01  4.84321413e+00  4.84321413e+00  4.84321413e+00
  7.31947310e+01  7.31947310e+01  7.31947310e+01  8.72944095e+01
  1.37849978e+03  6.14388815e+03]
E1 = -181.9245307400206  E_coul = 55.15996900100554
cycle= 2 E= -126.764561739015  delta_E= -3.27e-05  |g|= 0.00371  |ddm|= 0.00454
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00459884
diis-c [-2.09765955e-05  3.13464552e-03  9.96865354e-01]
  HOMO = -0.637718536600753  LUMO = 4.84045435745489
  mo_energy =
[-3.21346055e+01 -1.75448920e+00 -6.37718537e-01 -6.37718537e-01
 -6.37718537e-01  4.84045436e+00  4.84045436e+00  4.84045436e+00
  7.31881595e+01  7.31881595e+01  7.31881595e+01  8.72877096e+01
  1.37849455e+03  6.14388332e+03]
E1 = -181.93034017887996  E_coul = 55.165777767288965
cycle= 3 E= -126.764562411591  delta_E= -6.73e-07  |g|= 0.000635  |ddm|= 0.000869
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088809
diis-c [-4.95734280e-08 -1.37170103e-03  1.51826790e-01  8.49544911e-01]
  HOMO = -0.637417389974753  LUMO = 4.84089731600781
  mo_energy =
[-3.21334571e+01 -1.75414043e+00 -6.37417390e-01 -6.37417390e-01
 -6.37417390e-01  4.84089732e+00  4.84089732e+00  4.84089732e+00
  7.31893070e+01  7.31893070e+01  7.31893070e+01  8.72888681e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940250294743  E_coul = 55.164840065967034
cycle= 4 E= -126.76456243698  delta_E= -2.54e-08  |g|= 4.37e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.51891e-06
diis-c [-7.42273130e-14  2.38383177e-05 -3.42962117e-03 -1.43485302e-02
  1.01775431e+00]
  HOMO = -0.637418614040272  LUMO = 4.84089555400641
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418614e-01 -6.37418614e-01
 -6.37418614e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940630973283  E_coul = 55.16484387275194
cycle= 5 E= -126.764562436981  delta_E= -5.12e-13  |g|= 4.87e-09  |ddm|= 5.78e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.02 sec
E1 = -181.92940630973283  E_coul = 55.16484387275194
  HOMO = -0.637418616364921  LUMO = 4.84089555054283
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418616e-01 -6.37418616e-01
 -6.37418616e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940631647585  E_coul = 55.164843879495116
Extra cycle  E= -126.764562436981  delta_E= 1.71e-13  |g|= 7.48e-10  |ddm|= 1.01e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94768001e+03 9.50362947e-01 1.29843162e+03 1.06058076e+02
 1.81192398e+01 4.62174463e+01 8.64370543e-01 4.93353804e+00]
E = -126.76456243698073
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68001408        1
[INPUT] 0    0    [1    /1   ]  0.950362947441       1
[INPUT] 0    0    [1    /1   ]  1298.43162126        1
[INPUT] 0    0    [1    /1   ]  106.058075521        1
[INPUT] 0    0    [1    /1   ]  18.1192398351        1
[INPUT] 1    0    [1    /1   ]  46.2174462955        1
[INPUT] 1    0    [1    /1   ]  0.864370542735       1
[INPUT] 1    0    [1    /1   ]  4.93353804439        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6800140846326, 1.0]], [0, [0.9503629474412345, 1.0]], [0, [1298.4316212593526, 1.0]], [0, [106.05807552083245, 1.0]], [0, [18.119239835100444, 1.0]], [1, [46.21744629546302, 1.0]], [1, [0.8643705427353661, 1.0]], [1, [4.933538044391995, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68001408]
bas 1, expnt(s) = [0.95036295]
bas 2, expnt(s) = [1298.43162126]
bas 3, expnt(s) = [106.05807552]
bas 4, expnt(s) = [18.11923984]
bas 5, expnt(s) = [46.2174463]
bas 6, expnt(s) = [0.86437054]
bas 7, expnt(s) = [4.93353804]
CPU time:       105.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768001e+03 7.40718566e+02 9.50362947e-01 2.43182403e+00
 1.29843162e+03 5.46486373e+02 1.06058076e+02 8.34973767e+01
 1.81192398e+01 2.21880944e+01 4.62174463e+01 3.51553822e+02
 8.64370543e-01 2.43141639e+00 4.93353804e+00 2.14502567e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843996088820116
cond(S) = 92.89944028112734
E1 = -180.82430278535946  E_coul = 54.70615589503344
init E= -126.118146890326
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709431302223591  LUMO = 4.76356784393425
  mo_energy =
[-3.20823961e+01 -1.82033280e+00 -7.09431302e-01 -7.09431302e-01
 -7.09431302e-01  4.76356784e+00  4.76356784e+00  4.76356784e+00
  7.32201657e+01  7.32201657e+01  7.32201657e+01  8.73187288e+01
  1.37861808e+03  6.14405460e+03]
E1 = -181.9541478727066  E_coul = 55.18961881171327
cycle= 1 E= -126.764529060993  delta_E= -0.646  |g|= 0.101  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.132249
diis-c [-0.01748986  1.        ]
  HOMO = -0.635820156139392  LUMO = 4.84321412753278
  mo_energy =
[-3.21277495e+01 -1.75226345e+00 -6.35820156e-01 -6.35820156e-01
 -6.35820156e-01  4.84321413e+00  4.84321413e+00  4.84321413e+00
  7.31947310e+01  7.31947310e+01  7.31947310e+01  8.72944095e+01
  1.37849978e+03  6.14388815e+03]
E1 = -181.9245307400206  E_coul = 55.15996900100554
cycle= 2 E= -126.764561739015  delta_E= -3.27e-05  |g|= 0.00371  |ddm|= 0.00454
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00459884
diis-c [-2.09765955e-05  3.13464552e-03  9.96865354e-01]
  HOMO = -0.637718536600753  LUMO = 4.84045435745489
  mo_energy =
[-3.21346055e+01 -1.75448920e+00 -6.37718537e-01 -6.37718537e-01
 -6.37718537e-01  4.84045436e+00  4.84045436e+00  4.84045436e+00
  7.31881595e+01  7.31881595e+01  7.31881595e+01  8.72877096e+01
  1.37849455e+03  6.14388332e+03]
E1 = -181.93034017887996  E_coul = 55.165777767288965
cycle= 3 E= -126.764562411591  delta_E= -6.73e-07  |g|= 0.000635  |ddm|= 0.000869
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088809
diis-c [-4.95734280e-08 -1.37170103e-03  1.51826790e-01  8.49544911e-01]
  HOMO = -0.637417389974753  LUMO = 4.84089731600781
  mo_energy =
[-3.21334571e+01 -1.75414043e+00 -6.37417390e-01 -6.37417390e-01
 -6.37417390e-01  4.84089732e+00  4.84089732e+00  4.84089732e+00
  7.31893070e+01  7.31893070e+01  7.31893070e+01  8.72888681e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940250294743  E_coul = 55.164840065967034
cycle= 4 E= -126.76456243698  delta_E= -2.54e-08  |g|= 4.37e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.51891e-06
diis-c [-7.42273130e-14  2.38383177e-05 -3.42962117e-03 -1.43485302e-02
  1.01775431e+00]
  HOMO = -0.637418614040272  LUMO = 4.84089555400641
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418614e-01 -6.37418614e-01
 -6.37418614e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940630973283  E_coul = 55.16484387275194
cycle= 5 E= -126.764562436981  delta_E= -5.12e-13  |g|= 4.87e-09  |ddm|= 5.78e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.92940630973283  E_coul = 55.16484387275194
  HOMO = -0.637418616364921  LUMO = 4.84089555054283
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418616e-01 -6.37418616e-01
 -6.37418616e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940631647585  E_coul = 55.164843879495116
Extra cycle  E= -126.764562436981  delta_E= 1.71e-13  |g|= 7.48e-10  |ddm|= 1.01e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 92.89944028112734
E1 = -181.92940631647585  E_coul = 55.164843879495116
init E= -126.764562436981
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.637418615941873  LUMO = 4.84089555116504
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418616e-01 -6.37418616e-01
 -6.37418616e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.92940631515512  E_coul = 55.1648438781743
cycle= 1 E= -126.764562436981  delta_E= -8.53e-14  |g|= 1.48e-10  |ddm|= 1.97e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.92940631515512  E_coul = 55.1648438781743
  HOMO = -0.637418616024859  LUMO = 4.8408955510431
  mo_energy =
[-3.21334615e+01 -1.75414193e+00 -6.37418616e-01 -6.37418616e-01
 -6.37418616e-01  4.84089555e+00  4.84089555e+00  4.84089555e+00
  7.31893031e+01  7.31893031e+01  7.31893031e+01  8.72888640e+01
  1.37849591e+03  6.14388471e+03]
E1 = -181.9294063154132  E_coul = 55.16484387843235
Extra cycle  E= -126.764562436981  delta_E= -2.84e-14  |g|= 2.9e-11  |ddm|= 3.85e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94768001e+03 9.50362947e-01 1.29843162e+03 1.06058076e+02
 1.81192398e+01 4.62174463e+01 8.64370543e-01 4.93353804e+00]
grad_E = [7.34253834e-05 2.83488461e-04 3.52507006e-04 3.50111864e-03
 1.50424223e-03 8.76894150e-03 8.00391260e-03 6.55536604e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67928237        1
[INPUT] 0    0    [1    /1   ]  0.949759354103       1
[INPUT] 0    0    [1    /1   ]  1298.42816132        1
[INPUT] 0    0    [1    /1   ]  106.107656287        1
[INPUT] 0    0    [1    /1   ]  18.1423491171        1
[INPUT] 1    0    [1    /1   ]  46.1084281134        1
[INPUT] 1    0    [1    /1   ]  0.863305840524       1
[INPUT] 1    0    [1    /1   ]  4.91537298532        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6792823746591, 1.0]], [0, [0.9497593541033902, 1.0]], [0, [1298.428161316652, 1.0]], [0, [106.10765628732449, 1.0]], [0, [18.14234911708327, 1.0]], [1, [46.108428113415805, 1.0]], [1, [0.8633058405239159, 1.0]], [1, [4.915372985320093, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67928237]
bas 1, expnt(s) = [0.94975935]
bas 2, expnt(s) = [1298.42816132]
bas 3, expnt(s) = [106.10765629]
bas 4, expnt(s) = [18.14234912]
bas 5, expnt(s) = [46.10842811]
bas 6, expnt(s) = [0.86330584]
bas 7, expnt(s) = [4.91537299]
CPU time:       109.32
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767928e+03 7.40718357e+02 9.49759354e-01 2.43066557e+00
 1.29842816e+03 5.46485281e+02 1.06107656e+02 8.35266504e+01
 1.81423491e+01 2.22093150e+01 4.61084281e+01 3.50517567e+02
 8.63305841e-01 2.42767330e+00 4.91537299e+00 2.13515786e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.844509942986681
cond(S) = 92.92148783109164
E1 = -180.81921831102053  E_coul = 54.70563809943967
init E= -126.113580211581
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709514364050506  LUMO = 4.74852971390905
  mo_energy =
[-3.20827159e+01 -1.82039693e+00 -7.09514364e-01 -7.09514364e-01
 -7.09514364e-01  4.74852971e+00  4.74852971e+00  4.74852971e+00
  7.29909191e+01  7.29909191e+01  7.29909191e+01  8.74236499e+01
  1.37884878e+03  6.14428075e+03]
E1 = -181.9552954718792  E_coul = 55.189936797425595
cycle= 1 E= -126.765358674454  delta_E= -0.652  |g|= 0.102  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133944
diis-c [-0.01794107  1.        ]
  HOMO = -0.635955575259583  LUMO = 4.8282868896394
  mo_energy =
[-3.21274618e+01 -1.75240174e+00 -6.35955575e-01 -6.35955575e-01
 -6.35955575e-01  4.82828689e+00  4.82828689e+00  4.82828689e+00
  7.29665736e+01  7.29665736e+01  7.29665736e+01  8.74001560e+01
  1.37873330e+03  6.14411745e+03]
E1 = -181.92479714082344  E_coul = 55.15940399569887
cycle= 2 E= -126.765393145125  delta_E= -3.45e-05  |g|= 0.00382  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.00472692
diis-c [-2.21378211e-05  3.37901190e-03  9.96620988e-01]
  HOMO = -0.637909771710941  LUMO = 4.82545497165494
  mo_energy =
[-3.21345216e+01 -1.75469248e+00 -6.37909772e-01 -6.37909772e-01
 -6.37909772e-01  4.82545497e+00  4.82545497e+00  4.82545497e+00
  7.29598064e+01  7.29598064e+01  7.29598064e+01  8.73932534e+01
  1.37872788e+03  6.14411246e+03]
E1 = -181.9307844777568  E_coul = 55.16539061943236
cycle= 3 E= -126.765393858324  delta_E= -7.13e-07  |g|= 0.000653  |ddm|= 0.000896
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913014
diis-c [-5.25196430e-08 -1.40189208e-03  1.51606917e-01  8.49794975e-01]
  HOMO = -0.637599608345095  LUMO = 4.82590961250426
  mo_energy =
[-3.21333404e+01 -1.75433341e+00 -6.37599608e-01 -6.37599608e-01
 -6.37599608e-01  4.82590961e+00  4.82590961e+00  4.82590961e+00
  7.29609861e+01  7.29609861e+01  7.29609861e+01  8.73944450e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92981833279967  E_coul = 55.16442444757433
cycle= 4 E= -126.765393885225  delta_E= -2.69e-08  |g|= 4.5e-06  |ddm|= 0.000144
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.68662e-06
diis-c [-7.49714237e-14  2.38727117e-05 -3.40474689e-03 -1.41599596e-02
  1.01754083e+00]
  HOMO = -0.637600889072404  LUMO = 4.82590777403094
  mo_energy =
[-3.21333451e+01 -1.75433497e+00 -6.37600889e-01 -6.37600889e-01
 -6.37600889e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92982232029814  E_coul = 55.164428435072296
cycle= 5 E= -126.765393885226  delta_E= -5.12e-13  |g|= 4.74e-09  |ddm|= 6.06e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.92982232029814  E_coul = 55.164428435072296
  HOMO = -0.637600891318327  LUMO = 4.8259077706857
  mo_energy =
[-3.21333451e+01 -1.75433498e+00 -6.37600891e-01 -6.37600891e-01
 -6.37600891e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92982232681575  E_coul = 55.16442844159002
Extra cycle  E= -126.765393885226  delta_E= 1.14e-13  |g|= 7.22e-10  |ddm|= 9.73e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767928e+03 9.49759354e-01 1.29842816e+03 1.06107656e+02
 1.81423491e+01 4.61084281e+01 8.63305841e-01 4.91537299e+00]
E = -126.76539388522573
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:42:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67928237        1
[INPUT] 0    0    [1    /1   ]  0.949759354103       1
[INPUT] 0    0    [1    /1   ]  1298.42816132        1
[INPUT] 0    0    [1    /1   ]  106.107656287        1
[INPUT] 0    0    [1    /1   ]  18.1423491171        1
[INPUT] 1    0    [1    /1   ]  46.1084281134        1
[INPUT] 1    0    [1    /1   ]  0.863305840524       1
[INPUT] 1    0    [1    /1   ]  4.91537298532        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6792823746591, 1.0]], [0, [0.9497593541033902, 1.0]], [0, [1298.428161316652, 1.0]], [0, [106.10765628732449, 1.0]], [0, [18.14234911708327, 1.0]], [1, [46.108428113415805, 1.0]], [1, [0.8633058405239159, 1.0]], [1, [4.915372985320093, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67928237]
bas 1, expnt(s) = [0.94975935]
bas 2, expnt(s) = [1298.42816132]
bas 3, expnt(s) = [106.10765629]
bas 4, expnt(s) = [18.14234912]
bas 5, expnt(s) = [46.10842811]
bas 6, expnt(s) = [0.86330584]
bas 7, expnt(s) = [4.91537299]
CPU time:       109.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767928e+03 7.40718357e+02 9.49759354e-01 2.43066557e+00
 1.29842816e+03 5.46485281e+02 1.06107656e+02 8.35266504e+01
 1.81423491e+01 2.22093150e+01 4.61084281e+01 3.50517567e+02
 8.63305841e-01 2.42767330e+00 4.91537299e+00 2.13515786e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.844509942986681
cond(S) = 92.92148783109164
E1 = -180.81921831102053  E_coul = 54.70563809943967
init E= -126.113580211581
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709514364050506  LUMO = 4.74852971390905
  mo_energy =
[-3.20827159e+01 -1.82039693e+00 -7.09514364e-01 -7.09514364e-01
 -7.09514364e-01  4.74852971e+00  4.74852971e+00  4.74852971e+00
  7.29909191e+01  7.29909191e+01  7.29909191e+01  8.74236499e+01
  1.37884878e+03  6.14428075e+03]
E1 = -181.9552954718792  E_coul = 55.189936797425595
cycle= 1 E= -126.765358674454  delta_E= -0.652  |g|= 0.102  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133944
diis-c [-0.01794107  1.        ]
  HOMO = -0.635955575259583  LUMO = 4.8282868896394
  mo_energy =
[-3.21274618e+01 -1.75240174e+00 -6.35955575e-01 -6.35955575e-01
 -6.35955575e-01  4.82828689e+00  4.82828689e+00  4.82828689e+00
  7.29665736e+01  7.29665736e+01  7.29665736e+01  8.74001560e+01
  1.37873330e+03  6.14411745e+03]
E1 = -181.92479714082344  E_coul = 55.15940399569887
cycle= 2 E= -126.765393145125  delta_E= -3.45e-05  |g|= 0.00382  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00472692
diis-c [-2.21378211e-05  3.37901190e-03  9.96620988e-01]
  HOMO = -0.637909771710941  LUMO = 4.82545497165494
  mo_energy =
[-3.21345216e+01 -1.75469248e+00 -6.37909772e-01 -6.37909772e-01
 -6.37909772e-01  4.82545497e+00  4.82545497e+00  4.82545497e+00
  7.29598064e+01  7.29598064e+01  7.29598064e+01  8.73932534e+01
  1.37872788e+03  6.14411246e+03]
E1 = -181.9307844777568  E_coul = 55.16539061943236
cycle= 3 E= -126.765393858324  delta_E= -7.13e-07  |g|= 0.000653  |ddm|= 0.000896
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913014
diis-c [-5.25196430e-08 -1.40189208e-03  1.51606917e-01  8.49794975e-01]
  HOMO = -0.637599608345095  LUMO = 4.82590961250426
  mo_energy =
[-3.21333404e+01 -1.75433341e+00 -6.37599608e-01 -6.37599608e-01
 -6.37599608e-01  4.82590961e+00  4.82590961e+00  4.82590961e+00
  7.29609861e+01  7.29609861e+01  7.29609861e+01  8.73944450e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92981833279967  E_coul = 55.16442444757433
cycle= 4 E= -126.765393885225  delta_E= -2.69e-08  |g|= 4.5e-06  |ddm|= 0.000144
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.68662e-06
diis-c [-7.49714237e-14  2.38727117e-05 -3.40474689e-03 -1.41599596e-02
  1.01754083e+00]
  HOMO = -0.637600889072404  LUMO = 4.82590777403094
  mo_energy =
[-3.21333451e+01 -1.75433497e+00 -6.37600889e-01 -6.37600889e-01
 -6.37600889e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92982232029814  E_coul = 55.164428435072296
cycle= 5 E= -126.765393885226  delta_E= -5.12e-13  |g|= 4.74e-09  |ddm|= 6.06e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.92982232029814  E_coul = 55.164428435072296
  HOMO = -0.637600891318327  LUMO = 4.8259077706857
  mo_energy =
[-3.21333451e+01 -1.75433498e+00 -6.37600891e-01 -6.37600891e-01
 -6.37600891e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.92982232681575  E_coul = 55.16442844159002
Extra cycle  E= -126.765393885226  delta_E= 1.14e-13  |g|= 7.22e-10  |ddm|= 9.73e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 92.92148783109164
E1 = -181.92982232681575  E_coul = 55.16442844159002
init E= -126.765393885226
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.637600890909099  LUMO = 4.82590777128544
  mo_energy =
[-3.21333451e+01 -1.75433498e+00 -6.37600891e-01 -6.37600891e-01
 -6.37600891e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.9298223255377  E_coul = 55.16442844031192
cycle= 1 E= -126.765393885226  delta_E= -5.68e-14  |g|= 1.43e-10  |ddm|= 1.91e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.9298223255377  E_coul = 55.16442844031192
  HOMO = -0.637600890989488  LUMO = 4.82590777116775
  mo_energy =
[-3.21333451e+01 -1.75433498e+00 -6.37600891e-01 -6.37600891e-01
 -6.37600891e-01  4.82590777e+00  4.82590777e+00  4.82590777e+00
  7.29609821e+01  7.29609821e+01  7.29609821e+01  8.73944407e+01
  1.37872928e+03  6.14411389e+03]
E1 = -181.9298223257877  E_coul = 55.164428440561935
Extra cycle  E= -126.765393885226  delta_E= 1.42e-14  |g|= 2.8e-11  |ddm|= 3.73e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94767928e+03 9.49759354e-01 1.29842816e+03 1.06107656e+02
 1.81423491e+01 4.61084281e+01 8.63305841e-01 4.91537299e+00]
grad_E = [ 7.34507032e-05 -3.43794035e-03  3.52638960e-04  3.35498302e-03
  3.48013879e-03  8.86197201e-03  2.15377938e-02  2.45743822e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67497913        1
[INPUT] 0    0    [1    /1   ]  0.948037944856       1
[INPUT] 0    0    [1    /1   ]  1298.40776067        1
[INPUT] 0    0    [1    /1   ]  106.289526064        1
[INPUT] 0    0    [1    /1   ]  18.2091954774        1
[INPUT] 1    0    [1    /1   ]  45.4626096229        1
[INPUT] 1    0    [1    /1   ]  0.859662644316       1
[INPUT] 1    0    [1    /1   ]  4.8583927466         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6749791271175, 1.0]], [0, [0.9480379448563286, 1.0]], [0, [1298.4077606680644, 1.0]], [0, [106.28952606424387, 1.0]], [0, [18.209195477397053, 1.0]], [1, [45.46260962293685, 1.0]], [1, [0.8596626443163727, 1.0]], [1, [4.85839274659641, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67497913]
bas 1, expnt(s) = [0.94803794]
bas 2, expnt(s) = [1298.40776067]
bas 3, expnt(s) = [106.28952606]
bas 4, expnt(s) = [18.20919548]
bas 5, expnt(s) = [45.46260962]
bas 6, expnt(s) = [0.85966264]
bas 7, expnt(s) = [4.85839275]
CPU time:       113.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767498e+03 7.40717130e+02 9.48037945e-01 2.42736069e+00
 1.29840776e+03 5.46478841e+02 1.06289526e+02 8.36340017e+01
 1.82091955e+01 2.22706603e+01 4.54626096e+01 3.44391437e+02
 8.59662644e-01 2.41487392e+00 4.85839275e+00 2.10426372e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.84623953138886
cond(S) = 92.99190370819365
E1 = -180.8102547034381  E_coul = 54.705388273952245
init E= -126.104866429486
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.71017312752258  LUMO = 4.69943847166601
  mo_energy =
[-3.20830630e+01 -1.82047953e+00 -7.10173128e-01 -7.10173128e-01
 -7.10173128e-01  4.69943847e+00  4.69943847e+00  4.69943847e+00
  7.17753826e+01  7.17753826e+01  7.17753826e+01  8.77544645e+01
  1.37963505e+03  6.14503976e+03]
E1 = -181.96272819502593  E_coul = 55.19257198836619
cycle= 1 E= -126.77015620666  delta_E= -0.665  |g|= 0.106  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.13842
diis-c [-0.01916016  1.        ]
  HOMO = -0.636812193065284  LUMO = 4.77947601430067
  mo_energy =
[-3.21256478e+01 -1.75273011e+00 -6.36812193e-01 -6.36812193e-01
 -6.36812193e-01  4.77947601e+00  4.77947601e+00  4.77947601e+00
  7.17547902e+01  7.17547902e+01  7.17547902e+01  8.77338337e+01
  1.37952815e+03  6.14488608e+03]
E1 = -181.92944191938756  E_coul = 55.159245894241934
cycle= 2 E= -126.770196025146  delta_E= -3.98e-05  |g|= 0.00414  |ddm|= 0.00508
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00513361
diis-c [-2.59930735e-05  4.32421385e-03  9.95675786e-01]
  HOMO = -0.638942334680615  LUMO = 4.77641942366139
  mo_energy =
[-3.21333518e+01 -1.75522474e+00 -6.38942335e-01 -6.38942335e-01
 -6.38942335e-01  4.77641942e+00  4.77641942e+00  4.77641942e+00
  7.17474044e+01  7.17474044e+01  7.17474044e+01  8.77262892e+01
  1.37952213e+03  6.14488051e+03]
E1 = -181.9360023283513  E_coul = 55.165805452705435
cycle= 3 E= -126.770196875646  delta_E= -8.51e-07  |g|= 0.000709  |ddm|= 0.000983
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000993726
diis-c [-6.05166293e-08 -1.47698540e-03  1.51379298e-01  8.50097688e-01]
  HOMO = -0.638603727353789  LUMO = 4.77691041206467
  mo_energy =
[-3.21320676e+01 -1.75483321e+00 -6.38603727e-01 -6.38603727e-01
 -6.38603727e-01  4.77691041e+00  4.77691041e+00  4.77691041e+00
  7.17486843e+01  7.17486843e+01  7.17486843e+01  8.77275849e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.93494460683755  E_coul = 55.164747699156464
cycle= 4 E= -126.770196907681  delta_E= -3.2e-08  |g|= 4.73e-06  |ddm|= 0.000158
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.9958e-06
diis-c [-7.90224787e-14  2.40623923e-05 -3.35645375e-03 -1.41036174e-02
  1.01743601e+00]
  HOMO = -0.638605063776277  LUMO = 4.77690851301583
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605064e-01 -6.38605064e-01
 -6.38605064e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.9349487938338  E_coul = 55.16475188615208
cycle= 5 E= -126.770196907682  delta_E= -6.25e-13  |g|= 4.46e-09  |ddm|= 6.37e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.9349487938338  E_coul = 55.16475188615208
  HOMO = -0.638605065825195  LUMO = 4.77690850996332
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605066e-01 -6.38605066e-01
 -6.38605066e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.9349487997889  E_coul = 55.16475189210721
Extra cycle  E= -126.770196907682  delta_E=    0  |g|= 6.57e-10  |ddm|= 8.9e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767498e+03 9.48037945e-01 1.29840776e+03 1.06289526e+02
 1.82091955e+01 4.54626096e+01 8.59662644e-01 4.85839275e+00]
E = -126.77019690768171
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67497913        1
[INPUT] 0    0    [1    /1   ]  0.948037944856       1
[INPUT] 0    0    [1    /1   ]  1298.40776067        1
[INPUT] 0    0    [1    /1   ]  106.289526064        1
[INPUT] 0    0    [1    /1   ]  18.2091954774        1
[INPUT] 1    0    [1    /1   ]  45.4626096229        1
[INPUT] 1    0    [1    /1   ]  0.859662644316       1
[INPUT] 1    0    [1    /1   ]  4.8583927466         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6749791271175, 1.0]], [0, [0.9480379448563286, 1.0]], [0, [1298.4077606680644, 1.0]], [0, [106.28952606424387, 1.0]], [0, [18.209195477397053, 1.0]], [1, [45.46260962293685, 1.0]], [1, [0.8596626443163727, 1.0]], [1, [4.85839274659641, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67497913]
bas 1, expnt(s) = [0.94803794]
bas 2, expnt(s) = [1298.40776067]
bas 3, expnt(s) = [106.28952606]
bas 4, expnt(s) = [18.20919548]
bas 5, expnt(s) = [45.46260962]
bas 6, expnt(s) = [0.85966264]
bas 7, expnt(s) = [4.85839275]
CPU time:       114.09
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767498e+03 7.40717130e+02 9.48037945e-01 2.42736069e+00
 1.29840776e+03 5.46478841e+02 1.06289526e+02 8.36340017e+01
 1.82091955e+01 2.22706603e+01 4.54626096e+01 3.44391437e+02
 8.59662644e-01 2.41487392e+00 4.85839275e+00 2.10426372e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.84623953138886
cond(S) = 92.99190370819365
E1 = -180.8102547034381  E_coul = 54.705388273952245
init E= -126.104866429486
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.71017312752258  LUMO = 4.69943847166601
  mo_energy =
[-3.20830630e+01 -1.82047953e+00 -7.10173128e-01 -7.10173128e-01
 -7.10173128e-01  4.69943847e+00  4.69943847e+00  4.69943847e+00
  7.17753826e+01  7.17753826e+01  7.17753826e+01  8.77544645e+01
  1.37963505e+03  6.14503976e+03]
E1 = -181.96272819502593  E_coul = 55.19257198836619
cycle= 1 E= -126.77015620666  delta_E= -0.665  |g|= 0.106  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.13842
diis-c [-0.01916016  1.        ]
  HOMO = -0.636812193065284  LUMO = 4.77947601430067
  mo_energy =
[-3.21256478e+01 -1.75273011e+00 -6.36812193e-01 -6.36812193e-01
 -6.36812193e-01  4.77947601e+00  4.77947601e+00  4.77947601e+00
  7.17547902e+01  7.17547902e+01  7.17547902e+01  8.77338337e+01
  1.37952815e+03  6.14488608e+03]
E1 = -181.92944191938756  E_coul = 55.159245894241934
cycle= 2 E= -126.770196025146  delta_E= -3.98e-05  |g|= 0.00414  |ddm|= 0.00508
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00513361
diis-c [-2.59930735e-05  4.32421385e-03  9.95675786e-01]
  HOMO = -0.638942334680615  LUMO = 4.77641942366139
  mo_energy =
[-3.21333518e+01 -1.75522474e+00 -6.38942335e-01 -6.38942335e-01
 -6.38942335e-01  4.77641942e+00  4.77641942e+00  4.77641942e+00
  7.17474044e+01  7.17474044e+01  7.17474044e+01  8.77262892e+01
  1.37952213e+03  6.14488051e+03]
E1 = -181.9360023283513  E_coul = 55.165805452705435
cycle= 3 E= -126.770196875646  delta_E= -8.51e-07  |g|= 0.000709  |ddm|= 0.000983
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000993726
diis-c [-6.05166293e-08 -1.47698540e-03  1.51379298e-01  8.50097688e-01]
  HOMO = -0.638603727353789  LUMO = 4.77691041206467
  mo_energy =
[-3.21320676e+01 -1.75483321e+00 -6.38603727e-01 -6.38603727e-01
 -6.38603727e-01  4.77691041e+00  4.77691041e+00  4.77691041e+00
  7.17486843e+01  7.17486843e+01  7.17486843e+01  8.77275849e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.93494460683755  E_coul = 55.164747699156464
cycle= 4 E= -126.770196907681  delta_E= -3.2e-08  |g|= 4.73e-06  |ddm|= 0.000158
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.9958e-06
diis-c [-7.90224787e-14  2.40623923e-05 -3.35645375e-03 -1.41036174e-02
  1.01743601e+00]
  HOMO = -0.638605063776277  LUMO = 4.77690851301583
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605064e-01 -6.38605064e-01
 -6.38605064e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.9349487938338  E_coul = 55.16475188615208
cycle= 5 E= -126.770196907682  delta_E= -6.25e-13  |g|= 4.46e-09  |ddm|= 6.37e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9349487938338  E_coul = 55.16475188615208
  HOMO = -0.638605065825195  LUMO = 4.77690850996332
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605066e-01 -6.38605066e-01
 -6.38605066e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.9349487997889  E_coul = 55.16475189210721
Extra cycle  E= -126.770196907682  delta_E=    0  |g|= 6.57e-10  |ddm|= 8.9e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 92.99190370819365
E1 = -181.9349487997889  E_coul = 55.16475189210721
init E= -126.770196907682
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.638605065450472  LUMO = 4.77690851050656
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605065e-01 -6.38605065e-01
 -6.38605065e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.93494879861498  E_coul = 55.1647518909333
cycle= 1 E= -126.770196907682  delta_E= 2.84e-14  |g|= 1.31e-10  |ddm|= 1.75e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.93494879861498  E_coul = 55.1647518909333
  HOMO = -0.638605065524474  LUMO = 4.77690851039943
  mo_energy =
[-3.21320725e+01 -1.75483484e+00 -6.38605066e-01 -6.38605066e-01
 -6.38605066e-01  4.77690851e+00  4.77690851e+00  4.77690851e+00
  7.17486801e+01  7.17486801e+01  7.17486801e+01  8.77275804e+01
  1.37952365e+03  6.14488206e+03]
E1 = -181.9349487988456  E_coul = 55.16475189116401
Extra cycle  E= -126.770196907682  delta_E= 8.53e-14  |g|= 2.56e-11  |ddm|= 3.45e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94767498e+03 9.48037945e-01 1.29840776e+03 1.06289526e+02
 1.82091955e+01 4.54626096e+01 8.59662644e-01 4.85839275e+00]
grad_E = [ 7.33618384e-05 -1.38541717e-02  3.52499324e-04  2.99266926e-03
  8.82777643e-03  9.19354495e-03  5.85842566e-02 -8.70633531e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.64927303        1
[INPUT] 0    0    [1    /1   ]  0.942280232571       1
[INPUT] 0    0    [1    /1   ]  1298.28577231        1
[INPUT] 0    0    [1    /1   ]  107.121549304        1
[INPUT] 0    0    [1    /1   ]  18.4512439733        1
[INPUT] 1    0    [1    /1   ]  41.5925545524        1
[INPUT] 1    0    [1    /1   ]  0.844016877931       1
[INPUT] 1    0    [1    /1   ]  4.63413080839        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6492730302257, 1.0]], [0, [0.9422802325713776, 1.0]], [0, [1298.2857723131444, 1.0]], [0, [107.12154930405845, 1.0]], [0, [18.451243973253675, 1.0]], [1, [41.59255455239886, 1.0]], [1, [0.8440168779312458, 1.0]], [1, [4.63413080838722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.64927303]
bas 1, expnt(s) = [0.94228023]
bas 2, expnt(s) = [1298.28577231]
bas 3, expnt(s) = [107.1215493]
bas 4, expnt(s) = [18.45124397]
bas 5, expnt(s) = [41.59255455]
bas 6, expnt(s) = [0.84401688]
bas 7, expnt(s) = [4.63413081]
CPU time:       117.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94764927e+03 7.40709797e+02 9.42280233e-01 2.41629572e+00
 1.29828577e+03 5.46440333e+02 1.07121549e+02 8.41245314e+01
 1.84512440e+01 2.24923205e+01 4.15925546e+01 3.08144121e+02
 8.44016878e-01 2.36006143e+00 4.63413081e+00 1.98355731e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853365444968302
cond(S) = 93.27737920157121
E1 = -180.8045797187211  E_coul = 54.71105737071203
init E= -126.093522348009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.714692076994695  LUMO = 4.49909588595376
  mo_energy =
[-3.20804305e+01 -1.82028515e+00 -7.14692077e-01 -7.14692077e-01
 -7.14692077e-01  4.49909589e+00  4.49909589e+00  4.49909589e+00
  6.48916403e+01  6.48916403e+01  6.48916403e+01  8.90787734e+01
  1.38302003e+03  6.14826164e+03]
E1 = -182.01628509241922  E_coul = 55.21820424204593
cycle= 1 E= -126.798080850373  delta_E= -0.705  |g|= 0.117  |ddm|= 0.166
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.153008
diis-c [-0.02341139  1.        ]
  HOMO = -0.64168755478503  LUMO = 4.58045194102674
  mo_energy =
[-3.21119485e+01 -1.75296388e+00 -6.41687555e-01 -6.41687555e-01
 -6.41687555e-01  4.58045194e+00  4.58045194e+00  4.58045194e+00
  6.48884353e+01  6.48884353e+01  6.48884353e+01  8.90722763e+01
  1.38294802e+03  6.14814688e+03]
E1 = -181.9703817130545  E_coul = 55.17223691573002
cycle= 2 E= -126.798144797324  delta_E= -6.39e-05  |g|= 0.00552  |ddm|= 0.00689
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00699581
diis-c [-4.66597615e-05  9.78514903e-03  9.90214851e-01]
  HOMO = -0.644607504025414  LUMO = 4.57642443237251
  mo_energy =
[-3.21225405e+01 -1.75636708e+00 -6.44607504e-01 -6.44607504e-01
 -6.44607504e-01  4.57642443e+00  4.57642443e+00  4.57642443e+00
  6.48783098e+01  6.48783098e+01  6.48783098e+01  8.90618421e+01
  1.38293906e+03  6.14813839e+03]
E1 = -181.97960951519718  E_coul = 55.181463085468216
cycle= 3 E= -126.798146429729  delta_E= -1.63e-06  |g|= 0.000962  |ddm|= 0.00139
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00136326
diis-c [-8.92339836e-08 -1.67818528e-03  1.51385844e-01  8.50292341e-01]
  HOMO = -0.644143443712436  LUMO = 4.57706903010286
  mo_energy =
[-3.21208077e+01 -1.75583284e+00 -6.44143444e-01 -6.44143444e-01
 -6.44143444e-01  4.57706903e+00  4.57706903e+00  4.57706903e+00
  6.48800134e+01  6.48800134e+01  6.48800134e+01  8.90635917e+01
  1.38294110e+03  6.14814048e+03]
E1 = -181.97813421997643  E_coul = 55.17998772958537
cycle= 4 E= -126.798146490391  delta_E= -6.07e-08  |g|= 4.84e-06  |ddm|= 0.000221
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.42116e-06
diis-c [-1.07387633e-13  2.52365370e-05 -3.29034496e-03 -1.59558376e-02
  1.01922095e+00]
  HOMO = -0.644144320352294  LUMO = 4.57706784539466
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144320e-01 -6.44144320e-01
 -6.44144320e-01  4.57706785e+00  4.57706785e+00  4.57706785e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.9781371257311  E_coul = 55.17999063533966
cycle= 5 E= -126.798146490391  delta_E= -3.98e-13  |g|= 3.93e-09  |ddm|= 4.56e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9781371257311  E_coul = 55.17999063533966
  HOMO = -0.644144321760254  LUMO = 4.57706784320578
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144322e-01 -6.44144322e-01
 -6.44144322e-01  4.57706784e+00  4.57706784e+00  4.57706784e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.97813712984095  E_coul = 55.17999063944954
Extra cycle  E= -126.798146490391  delta_E= 4.26e-14  |g|= 4.47e-10  |ddm|= 6.18e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94764927e+03 9.42280233e-01 1.29828577e+03 1.07121549e+02
 1.84512440e+01 4.15925546e+01 8.44016878e-01 4.63413081e+00]
E = -126.7981464903914
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.64927303        1
[INPUT] 0    0    [1    /1   ]  0.942280232571       1
[INPUT] 0    0    [1    /1   ]  1298.28577231        1
[INPUT] 0    0    [1    /1   ]  107.121549304        1
[INPUT] 0    0    [1    /1   ]  18.4512439733        1
[INPUT] 1    0    [1    /1   ]  41.5925545524        1
[INPUT] 1    0    [1    /1   ]  0.844016877931       1
[INPUT] 1    0    [1    /1   ]  4.63413080839        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.6492730302257, 1.0]], [0, [0.9422802325713776, 1.0]], [0, [1298.2857723131444, 1.0]], [0, [107.12154930405845, 1.0]], [0, [18.451243973253675, 1.0]], [1, [41.59255455239886, 1.0]], [1, [0.8440168779312458, 1.0]], [1, [4.63413080838722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.64927303]
bas 1, expnt(s) = [0.94228023]
bas 2, expnt(s) = [1298.28577231]
bas 3, expnt(s) = [107.1215493]
bas 4, expnt(s) = [18.45124397]
bas 5, expnt(s) = [41.59255455]
bas 6, expnt(s) = [0.84401688]
bas 7, expnt(s) = [4.63413081]
CPU time:       118.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94764927e+03 7.40709797e+02 9.42280233e-01 2.41629572e+00
 1.29828577e+03 5.46440333e+02 1.07121549e+02 8.41245314e+01
 1.84512440e+01 2.24923205e+01 4.15925546e+01 3.08144121e+02
 8.44016878e-01 2.36006143e+00 4.63413081e+00 1.98355731e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853365444968302
cond(S) = 93.27737920157121
E1 = -180.8045797187211  E_coul = 54.71105737071203
init E= -126.093522348009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.714692076994695  LUMO = 4.49909588595376
  mo_energy =
[-3.20804305e+01 -1.82028515e+00 -7.14692077e-01 -7.14692077e-01
 -7.14692077e-01  4.49909589e+00  4.49909589e+00  4.49909589e+00
  6.48916403e+01  6.48916403e+01  6.48916403e+01  8.90787734e+01
  1.38302003e+03  6.14826164e+03]
E1 = -182.01628509241922  E_coul = 55.21820424204593
cycle= 1 E= -126.798080850373  delta_E= -0.705  |g|= 0.117  |ddm|= 0.166
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.153008
diis-c [-0.02341139  1.        ]
  HOMO = -0.64168755478503  LUMO = 4.58045194102674
  mo_energy =
[-3.21119485e+01 -1.75296388e+00 -6.41687555e-01 -6.41687555e-01
 -6.41687555e-01  4.58045194e+00  4.58045194e+00  4.58045194e+00
  6.48884353e+01  6.48884353e+01  6.48884353e+01  8.90722763e+01
  1.38294802e+03  6.14814688e+03]
E1 = -181.9703817130545  E_coul = 55.17223691573002
cycle= 2 E= -126.798144797324  delta_E= -6.39e-05  |g|= 0.00552  |ddm|= 0.00689
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00699581
diis-c [-4.66597615e-05  9.78514903e-03  9.90214851e-01]
  HOMO = -0.644607504025414  LUMO = 4.57642443237251
  mo_energy =
[-3.21225405e+01 -1.75636708e+00 -6.44607504e-01 -6.44607504e-01
 -6.44607504e-01  4.57642443e+00  4.57642443e+00  4.57642443e+00
  6.48783098e+01  6.48783098e+01  6.48783098e+01  8.90618421e+01
  1.38293906e+03  6.14813839e+03]
E1 = -181.97960951519718  E_coul = 55.181463085468216
cycle= 3 E= -126.798146429729  delta_E= -1.63e-06  |g|= 0.000962  |ddm|= 0.00139
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00136326
diis-c [-8.92339836e-08 -1.67818528e-03  1.51385844e-01  8.50292341e-01]
  HOMO = -0.644143443712436  LUMO = 4.57706903010286
  mo_energy =
[-3.21208077e+01 -1.75583284e+00 -6.44143444e-01 -6.44143444e-01
 -6.44143444e-01  4.57706903e+00  4.57706903e+00  4.57706903e+00
  6.48800134e+01  6.48800134e+01  6.48800134e+01  8.90635917e+01
  1.38294110e+03  6.14814048e+03]
E1 = -181.97813421997643  E_coul = 55.17998772958537
cycle= 4 E= -126.798146490391  delta_E= -6.07e-08  |g|= 4.84e-06  |ddm|= 0.000221
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.42116e-06
diis-c [-1.07387633e-13  2.52365370e-05 -3.29034496e-03 -1.59558376e-02
  1.01922095e+00]
  HOMO = -0.644144320352294  LUMO = 4.57706784539466
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144320e-01 -6.44144320e-01
 -6.44144320e-01  4.57706785e+00  4.57706785e+00  4.57706785e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.9781371257311  E_coul = 55.17999063533966
cycle= 5 E= -126.798146490391  delta_E= -3.98e-13  |g|= 3.93e-09  |ddm|= 4.56e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9781371257311  E_coul = 55.17999063533966
  HOMO = -0.644144321760254  LUMO = 4.57706784320578
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144322e-01 -6.44144322e-01
 -6.44144322e-01  4.57706784e+00  4.57706784e+00  4.57706784e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.97813712984095  E_coul = 55.17999063944954
Extra cycle  E= -126.798146490391  delta_E= 4.26e-14  |g|= 4.47e-10  |ddm|= 6.18e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 93.27737920157121
E1 = -181.97813712984095  E_coul = 55.17999063944954
init E= -126.798146490391
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.64414432149957  LUMO = 4.57706784356796
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144321e-01 -6.44144321e-01
 -6.44144321e-01  4.57706784e+00  4.57706784e+00  4.57706784e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.97813712900756  E_coul = 55.179990638616054
cycle= 1 E= -126.798146490392  delta_E= -9.95e-14  |g|= 9.2e-11  |ddm|= 1.25e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.97813712900756  E_coul = 55.179990638616054
  HOMO = -0.64414432155247  LUMO = 4.57706784349455
  mo_energy =
[-3.21208110e+01 -1.75583396e+00 -6.44144322e-01 -6.44144322e-01
 -6.44144322e-01  4.57706784e+00  4.57706784e+00  4.57706784e+00
  6.48800108e+01  6.48800108e+01  6.48800108e+01  8.90635889e+01
  1.38294110e+03  6.14814049e+03]
E1 = -181.97813712917568  E_coul = 55.179990638784226
Extra cycle  E= -126.798146490391  delta_E= 5.68e-14  |g|= 1.85e-11  |ddm|= 2.52e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94764927e+03 9.42280233e-01 1.29828577e+03 1.07121549e+02
 1.84512440e+01 4.15925546e+01 8.44016878e-01 4.63413081e+00]
grad_E = [ 7.23284030e-05 -4.82874554e-02  3.49706846e-04  1.96586757e-03
  2.64345863e-02  1.08188438e-02  1.84518366e-01 -4.62339367e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.47238868        1
[INPUT] 0    0    [1    /1   ]  0.915073718911       1
[INPUT] 0    0    [1    /1   ]  1297.4463197         1
[INPUT] 0    0    [1    /1   ]  112.527252335        1
[INPUT] 0    0    [1    /1   ]  19.7373496972        1
[INPUT] 1    0    [1    /1   ]  14.7676223406        1
[INPUT] 1    0    [1    /1   ]  0.753451603721       1
[INPUT] 1    0    [1    /1   ]  3.41605956612        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4723886839056, 1.0]], [0, [0.9150737189110213, 1.0]], [0, [1297.4463196969555, 1.0]], [0, [112.52725233483059, 1.0]], [0, [19.73734969720122, 1.0]], [1, [14.767622340581095, 1.0]], [1, [0.7534516037212514, 1.0]], [1, [3.416059566118056, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.47238868]
bas 1, expnt(s) = [0.91507372]
bas 2, expnt(s) = [1297.4463197]
bas 3, expnt(s) = [112.52725233]
bas 4, expnt(s) = [19.7373497]
bas 5, expnt(s) = [14.76762234]
bas 6, expnt(s) = [0.7534516]
bas 7, expnt(s) = [3.41605957]
CPU time:       121.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94747239e+03 7.40659344e+02 9.15073719e-01 2.36378018e+00
 1.29744632e+03 5.46175322e+02 1.12527252e+02 8.72887572e+01
 1.97373497e+01 2.36581974e+01 1.47676223e+01 8.44544648e+01
 7.53451604e-01 2.04787571e+00 3.41605957e+00 1.35484991e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.889409682027795
cond(S) = 95.01075552554762
E1 = -180.88672103832593  E_coul = 54.781841979052246
init E= -126.104879059274
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.755811602535943  LUMO = 3.50625593322253
  mo_energy =
[-3.20105560e+01 -1.81939412e+00 -7.55811603e-01 -7.55811603e-01
 -7.55811603e-01  3.50625593e+00  3.50625593e+00  3.50625593e+00
  2.39067262e+01  2.39067262e+01  2.39067262e+01  9.68921061e+01
  1.40410057e+03  6.16834148e+03]
E1 = -182.48044453012616  E_coul = 55.50496921848947
cycle= 1 E= -126.975475311637  delta_E= -0.871  |g|= 0.144  |ddm|= 0.128
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.211334
diis-c [-0.04466215  1.        ]
  HOMO = -0.68256587747246  LUMO = 3.58967675291396
  mo_energy =
[-3.19375906e+01 -1.75015735e+00 -6.82565877e-01 -6.82565877e-01
 -6.82565877e-01  3.58967675e+00  3.58967675e+00  3.58967675e+00
  2.39992270e+01  2.39992270e+01  2.39992270e+01  9.70179932e+01
  1.40428807e+03  6.16851092e+03]
E1 = -182.33992414013636  E_coul = 55.364156473568826
cycle= 2 E= -126.975767666568  delta_E= -0.000292  |g|= 0.0161  |ddm|= 0.0193
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0263252
diis-c [-4.42333886e-04  7.00205662e-02  9.29979434e-01]
  HOMO = -0.69111563873945  LUMO = 3.58020597178013
  mo_energy =
[-3.19677451e+01 -1.75979702e+00 -6.91115639e-01 -6.91115639e-01
 -6.91115639e-01  3.58020597e+00  3.58020597e+00  3.58020597e+00
  2.39762701e+01  2.39762701e+01  2.39762701e+01  9.69879169e+01
  1.40425690e+03  6.16847974e+03]
E1 = -182.37307635962682  E_coul = 55.39729049458315
cycle= 3 E= -126.975785865044  delta_E= -1.82e-05  |g|= 0.00263  |ddm|= 0.00462
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00439048
diis-c [-5.29874379e-08 -1.14447978e-03  1.38667196e-01  8.62477284e-01]
  HOMO = -0.689904989115932  LUMO = 3.58154990935049
  mo_energy =
[-3.19634578e+01 -1.75843437e+00 -6.89904989e-01 -6.89904989e-01
 -6.89904989e-01  3.58154991e+00  3.58154991e+00  3.58154991e+00
  2.39795258e+01  2.39795258e+01  2.39795258e+01  9.69922537e+01
  1.40426181e+03  6.16848474e+03]
E1 = -182.36841789103798  E_coul = 55.39263152185222
cycle= 4 E= -126.975786369186  delta_E= -5.04e-07  |g|= 8.06e-06  |ddm|= 0.000645
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.37135e-05
diis-c [-1.08400018e-12  3.27969919e-05 -3.70310260e-03 -2.59024853e-02
  1.02957279e+00]
  HOMO = -0.689901536594846  LUMO = 3.58155377169722
  mo_energy =
[-3.19634480e+01 -1.75843060e+00 -6.89901537e-01 -6.89901537e-01
 -6.89901537e-01  3.58155377e+00  3.58155377e+00  3.58155377e+00
  2.39795340e+01  2.39795340e+01  2.39795340e+01  9.69922642e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.36840685076942  E_coul = 55.39262048158038
cycle= 5 E= -126.975786369189  delta_E= -3.28e-12  |g|= 5.83e-08  |ddm|= 1.42e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.36840685076942  E_coul = 55.39262048158038
  HOMO = -0.689901500430515  LUMO = 3.58155380730544
  mo_energy =
[-3.19634479e+01 -1.75843056e+00 -6.89901500e-01 -6.89901500e-01
 -6.89901500e-01  3.58155381e+00  3.58155381e+00  3.58155381e+00
  2.39795341e+01  2.39795341e+01  2.39795341e+01  9.69922643e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.3684067303644  E_coul = 55.39262036117548
Extra cycle  E= -126.975786369189  delta_E= 1.28e-13  |g|= 1.37e-08  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94747239e+03 9.15073719e-01 1.29744632e+03 1.12527252e+02
 1.97373497e+01 1.47676223e+01 7.53451604e-01 3.41605957e+00]
E = -126.97578636918891
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.47238868        1
[INPUT] 0    0    [1    /1   ]  0.915073718911       1
[INPUT] 0    0    [1    /1   ]  1297.4463197         1
[INPUT] 0    0    [1    /1   ]  112.527252335        1
[INPUT] 0    0    [1    /1   ]  19.7373496972        1
[INPUT] 1    0    [1    /1   ]  14.7676223406        1
[INPUT] 1    0    [1    /1   ]  0.753451603721       1
[INPUT] 1    0    [1    /1   ]  3.41605956612        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4723886839056, 1.0]], [0, [0.9150737189110213, 1.0]], [0, [1297.4463196969555, 1.0]], [0, [112.52725233483059, 1.0]], [0, [19.73734969720122, 1.0]], [1, [14.767622340581095, 1.0]], [1, [0.7534516037212514, 1.0]], [1, [3.416059566118056, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.47238868]
bas 1, expnt(s) = [0.91507372]
bas 2, expnt(s) = [1297.4463197]
bas 3, expnt(s) = [112.52725233]
bas 4, expnt(s) = [19.7373497]
bas 5, expnt(s) = [14.76762234]
bas 6, expnt(s) = [0.7534516]
bas 7, expnt(s) = [3.41605957]
CPU time:       122.03
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94747239e+03 7.40659344e+02 9.15073719e-01 2.36378018e+00
 1.29744632e+03 5.46175322e+02 1.12527252e+02 8.72887572e+01
 1.97373497e+01 2.36581974e+01 1.47676223e+01 8.44544648e+01
 7.53451604e-01 2.04787571e+00 3.41605957e+00 1.35484991e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.889409682027795
cond(S) = 95.01075552554762
E1 = -180.88672103832593  E_coul = 54.781841979052246
init E= -126.104879059274
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.755811602535943  LUMO = 3.50625593322253
  mo_energy =
[-3.20105560e+01 -1.81939412e+00 -7.55811603e-01 -7.55811603e-01
 -7.55811603e-01  3.50625593e+00  3.50625593e+00  3.50625593e+00
  2.39067262e+01  2.39067262e+01  2.39067262e+01  9.68921061e+01
  1.40410057e+03  6.16834148e+03]
E1 = -182.48044453012616  E_coul = 55.50496921848947
cycle= 1 E= -126.975475311637  delta_E= -0.871  |g|= 0.144  |ddm|= 0.128
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.211334
diis-c [-0.04466215  1.        ]
  HOMO = -0.68256587747246  LUMO = 3.58967675291396
  mo_energy =
[-3.19375906e+01 -1.75015735e+00 -6.82565877e-01 -6.82565877e-01
 -6.82565877e-01  3.58967675e+00  3.58967675e+00  3.58967675e+00
  2.39992270e+01  2.39992270e+01  2.39992270e+01  9.70179932e+01
  1.40428807e+03  6.16851092e+03]
E1 = -182.33992414013636  E_coul = 55.364156473568826
cycle= 2 E= -126.975767666568  delta_E= -0.000292  |g|= 0.0161  |ddm|= 0.0193
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0263252
diis-c [-4.42333886e-04  7.00205662e-02  9.29979434e-01]
  HOMO = -0.69111563873945  LUMO = 3.58020597178013
  mo_energy =
[-3.19677451e+01 -1.75979702e+00 -6.91115639e-01 -6.91115639e-01
 -6.91115639e-01  3.58020597e+00  3.58020597e+00  3.58020597e+00
  2.39762701e+01  2.39762701e+01  2.39762701e+01  9.69879169e+01
  1.40425690e+03  6.16847974e+03]
E1 = -182.37307635962682  E_coul = 55.39729049458315
cycle= 3 E= -126.975785865044  delta_E= -1.82e-05  |g|= 0.00263  |ddm|= 0.00462
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00439048
diis-c [-5.29874379e-08 -1.14447978e-03  1.38667196e-01  8.62477284e-01]
  HOMO = -0.689904989115932  LUMO = 3.58154990935049
  mo_energy =
[-3.19634578e+01 -1.75843437e+00 -6.89904989e-01 -6.89904989e-01
 -6.89904989e-01  3.58154991e+00  3.58154991e+00  3.58154991e+00
  2.39795258e+01  2.39795258e+01  2.39795258e+01  9.69922537e+01
  1.40426181e+03  6.16848474e+03]
E1 = -182.36841789103798  E_coul = 55.39263152185222
cycle= 4 E= -126.975786369186  delta_E= -5.04e-07  |g|= 8.06e-06  |ddm|= 0.000645
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.37135e-05
diis-c [-1.08400018e-12  3.27969919e-05 -3.70310260e-03 -2.59024853e-02
  1.02957279e+00]
  HOMO = -0.689901536594846  LUMO = 3.58155377169722
  mo_energy =
[-3.19634480e+01 -1.75843060e+00 -6.89901537e-01 -6.89901537e-01
 -6.89901537e-01  3.58155377e+00  3.58155377e+00  3.58155377e+00
  2.39795340e+01  2.39795340e+01  2.39795340e+01  9.69922642e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.36840685076942  E_coul = 55.39262048158038
cycle= 5 E= -126.975786369189  delta_E= -3.28e-12  |g|= 5.83e-08  |ddm|= 1.42e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.36840685076942  E_coul = 55.39262048158038
  HOMO = -0.689901500430515  LUMO = 3.58155380730544
  mo_energy =
[-3.19634479e+01 -1.75843056e+00 -6.89901500e-01 -6.89901500e-01
 -6.89901500e-01  3.58155381e+00  3.58155381e+00  3.58155381e+00
  2.39795341e+01  2.39795341e+01  2.39795341e+01  9.69922643e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.3684067303644  E_coul = 55.39262036117548
Extra cycle  E= -126.975786369189  delta_E= 1.28e-13  |g|= 1.37e-08  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 95.01075552554762
E1 = -182.3684067303644  E_coul = 55.39262036117548
init E= -126.975786369189
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.689901508196742  LUMO = 3.58155379866962
  mo_energy =
[-3.19634479e+01 -1.75843057e+00 -6.89901508e-01 -6.89901508e-01
 -6.89901508e-01  3.58155380e+00  3.58155380e+00  3.58155380e+00
  2.39795341e+01  2.39795341e+01  2.39795341e+01  9.69922643e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.36840676082463  E_coul = 55.39262039163563
cycle= 1 E= -126.975786369189  delta_E= -8.53e-14  |g|= 3.44e-09  |ddm|= 4.25e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.36840676082463  E_coul = 55.39262039163563
  HOMO = -0.689901506207669  LUMO = 3.58155380087467
  mo_energy =
[-3.19634479e+01 -1.75843057e+00 -6.89901506e-01 -6.89901506e-01
 -6.89901506e-01  3.58155380e+00  3.58155380e+00  3.58155380e+00
  2.39795341e+01  2.39795341e+01  2.39795341e+01  9.69922643e+01
  1.40426182e+03  6.16848476e+03]
E1 = -182.36840675315605  E_coul = 55.39262038396706
Extra cycle  E= -126.975786369189  delta_E=    0  |g|= 8.67e-10  |ddm|= 1.06e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94747239e+03 9.15073719e-01 1.29744632e+03 1.12527252e+02
 1.97373497e+01 1.47676223e+01 7.53451604e-01 3.41605957e+00]
grad_E = [ 6.36411750e-05 -2.08985938e-01  3.24420161e-04 -1.59775461e-03
  1.07877084e-01 -1.09242309e-02  4.35118920e-01  6.02137139e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.52651478        1
[INPUT] 0    0    [1    /1   ]  0.936559104298       1
[INPUT] 0    0    [1    /1   ]  1297.69788667        1
[INPUT] 0    0    [1    /1   ]  104.10305256         1
[INPUT] 0    0    [1    /1   ]  18.3674754636        1
[INPUT] 1    0    [1    /1   ]  25.9238832094        1
[INPUT] 1    0    [1    /1   ]  0.738345517418       1
[INPUT] 1    0    [1    /1   ]  3.56227971527        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.5265147842385, 1.0]], [0, [0.9365591042984839, 1.0]], [0, [1297.6978866664033, 1.0]], [0, [104.10305255969772, 1.0]], [0, [18.36747546357704, 1.0]], [1, [25.92388320941732, 1.0]], [1, [0.7383455174183938, 1.0]], [1, [3.5622797152687773, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.52651478]
bas 1, expnt(s) = [0.9365591]
bas 2, expnt(s) = [1297.69788667]
bas 3, expnt(s) = [104.10305256]
bas 4, expnt(s) = [18.36747546]
bas 5, expnt(s) = [25.92388321]
bas 6, expnt(s) = [0.73834552]
bas 7, expnt(s) = [3.56227972]
CPU time:       125.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94752651e+03 7.40674782e+02 9.36559104e-01 2.40528430e+00
 1.29769789e+03 5.46254745e+02 1.04103053e+02 8.23403336e+01
 1.83674755e+01 2.24156907e+01 2.59238832e+01 1.70651246e+02
 7.38345517e-01 1.99668220e+00 3.56227972e+00 1.42772451e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.893330314443311
cond(S) = 92.32625725041584
E1 = -180.9394833669886  E_coul = 54.757125919315534
init E= -126.182357447673
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.732848545659484  LUMO = 3.49246793476559
  mo_energy =
[-3.20837281e+01 -1.81155050e+00 -7.32848546e-01 -7.32848546e-01
 -7.32848546e-01  3.49246793e+00  3.49246793e+00  3.49246793e+00
  3.81447871e+01  3.81447871e+01  3.81447871e+01  8.66795515e+01
  1.37258690e+03  6.13623124e+03]
E1 = -181.93317653381607  E_coul = 54.987957984484225
cycle= 1 E= -126.945218549332  delta_E= -0.763  |g|= 0.141  |ddm|= 0.151
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.175699
diis-c [-0.03087009  1.        ]
  HOMO = -0.683648562165146  LUMO = 3.54725909534798
  mo_energy =
[-3.21559569e+01 -1.77175193e+00 -6.83648562e-01 -6.83648562e-01
 -6.83648562e-01  3.54725910e+00  3.54725910e+00  3.54725910e+00
  3.81233940e+01  3.81233940e+01  3.81233940e+01  8.66358801e+01
  1.37248203e+03  6.13608012e+03]
E1 = -181.9137745506369  E_coul = 54.96850829961533
cycle= 2 E= -126.945266251022  delta_E= -4.77e-05  |g|= 0.0032  |ddm|= 0.00285
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00363945
diis-c [-1.25686783e-05 -4.70583895e-03  1.00470584e+00]
  HOMO = -0.684883652349957  LUMO = 3.54588758301468
  mo_energy =
[-3.21605383e+01 -1.77323569e+00 -6.84883652e-01 -6.84883652e-01
 -6.84883652e-01  3.54588758e+00  3.54588758e+00  3.54588758e+00
  3.81194457e+01  3.81194457e+01  3.81194457e+01  8.66315453e+01
  1.37248031e+03  6.13607908e+03]
E1 = -181.91851319187566  E_coul = 54.97324658578122
cycle= 3 E= -126.945266606094  delta_E= -3.55e-07  |g|= 0.000517  |ddm|= 0.000727
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000795351
diis-c [-1.99920377e-07 -1.83385248e-03  1.50715981e-01  8.51117871e-01]
  HOMO = -0.684614630202468  LUMO = 3.54618476127044
  mo_energy =
[-3.21596084e+01 -1.77292832e+00 -6.84614630e-01 -6.84614630e-01
 -6.84614630e-01  3.54618476e+00  3.54618476e+00  3.54618476e+00
  3.81202873e+01  3.81202873e+01  3.81202873e+01  8.66324811e+01
  1.37248141e+03  6.13608022e+03]
E1 = -181.9175583314594  E_coul = 54.97229170559653
cycle= 4 E= -126.945266625863  delta_E= -1.98e-08  |g|= 2.44e-05  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.36013e-05
diis-c [-4.91795310e-13  3.35302703e-05 -4.79037296e-03  2.32813053e-02
  9.81475537e-01]
  HOMO = -0.684625650804592  LUMO = 3.54617251250285
  mo_energy =
[-3.21596488e+01 -1.77294123e+00 -6.84625651e-01 -6.84625651e-01
 -6.84625651e-01  3.54617251e+00  3.54617251e+00  3.54617251e+00
  3.81202515e+01  3.81202515e+01  3.81202515e+01  8.66324411e+01
  1.37248138e+03  6.13608018e+03]
E1 = -181.91759928299456  E_coul = 54.972332657091776
cycle= 5 E= -126.945266625903  delta_E= -3.99e-11  |g|= 1e-08  |ddm|= 6.16e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.91759928299456  E_coul = 54.972332657091776
  HOMO = -0.684625645845446  LUMO = 3.5461725178818
  mo_energy =
[-3.21596488e+01 -1.77294122e+00 -6.84625646e-01 -6.84625646e-01
 -6.84625646e-01  3.54617252e+00  3.54617252e+00  3.54617252e+00
  3.81202515e+01  3.81202515e+01  3.81202515e+01  8.66324411e+01
  1.37248138e+03  6.13608018e+03]
E1 = -181.91759926551322  E_coul = 54.97233263961049
Extra cycle  E= -126.945266625903  delta_E= 5.68e-14  |g|= 1.9e-09  |ddm|= 2.55e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94752651e+03 9.36559104e-01 1.29769789e+03 1.04103053e+02
 1.83674755e+01 2.59238832e+01 7.38345517e-01 3.56227972e+00]
E = -126.94526662590272
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.49659261        1
[INPUT] 0    0    [1    /1   ]  0.924681482169       1
[INPUT] 0    0    [1    /1   ]  1297.55881458        1
[INPUT] 0    0    [1    /1   ]  108.760146667        1
[INPUT] 0    0    [1    /1   ]  19.1247738885        1
[INPUT] 1    0    [1    /1   ]  19.7564420122        1
[INPUT] 1    0    [1    /1   ]  0.746696514234       1
[INPUT] 1    0    [1    /1   ]  3.48144580664        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4965926136329, 1.0]], [0, [0.9246814821690811, 1.0]], [0, [1297.5588145785885, 1.0]], [0, [108.76014666656054, 1.0]], [0, [19.124773888453696, 1.0]], [1, [19.756442012183598, 1.0]], [1, [0.7466965142343127, 1.0]], [1, [3.4814458066375344, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.49659261]
bas 1, expnt(s) = [0.92468148]
bas 2, expnt(s) = [1297.55881458]
bas 3, expnt(s) = [108.76014667]
bas 4, expnt(s) = [19.12477389]
bas 5, expnt(s) = [19.75644201]
bas 6, expnt(s) = [0.74669651]
bas 7, expnt(s) = [3.48144581]
CPU time:       126.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94749659e+03 7.40666248e+02 9.24681482e-01 2.38236963e+00
 1.29755881e+03 5.46210838e+02 1.08760147e+02 8.50878133e+01
 1.91247739e+01 2.31053343e+01 1.97564420e+01 1.21512319e+02
 7.46696514e-01 2.02495113e+00 3.48144581e+00 1.38734330e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.892024501525407
cond(S) = 93.79815370096293
E1 = -181.01716668096898  E_coul = 54.803881190465425
init E= -126.213285490504
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.750529515910682  LUMO = 3.47444041342948
  mo_energy =
[-3.20385242e+01 -1.81409100e+00 -7.50529516e-01 -7.50529516e-01
 -7.50529516e-01  3.47444041e+00  3.47444041e+00  3.47444041e+00
  2.98803087e+01  2.98803087e+01  2.98803087e+01  9.23061385e+01
  1.39002490e+03  6.15395756e+03]
E1 = -182.4258004990595  E_coul = 55.41411085417445
cycle= 1 E= -127.011689644885  delta_E= -0.798  |g|= 0.142  |ddm|= 0.13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.198914
diis-c [-0.0395669  1.       ]
  HOMO = -0.680643906783909  LUMO = 3.55282620104724
  mo_energy =
[-3.20073329e+01 -1.74965437e+00 -6.80643907e-01 -6.80643907e-01
 -6.80643907e-01  3.55282620e+00  3.55282620e+00  3.55282620e+00
  2.99491793e+01  2.99491793e+01  2.99491793e+01  9.23783722e+01
  1.39010607e+03  6.15400815e+03]
E1 = -182.31456114283475  E_coul = 55.302668863660095
cycle= 2 E= -127.011892279175  delta_E= -0.000203  |g|= 0.0126  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0191917
diis-c [-2.65385552e-04  4.86854761e-02  9.51314524e-01]
  HOMO = -0.687533185390581  LUMO = 3.54523763782549
  mo_energy =
[-3.20318079e+01 -1.75749918e+00 -6.87533185e-01 -6.87533185e-01
 -6.87533185e-01  3.54523764e+00  3.54523764e+00  3.54523764e+00
  2.99288303e+01  2.99288303e+01  2.99288303e+01  9.23540302e+01
  1.39008141e+03  6.15398368e+03]
E1 = -182.34065380435078  E_coul = 55.32875067432354
cycle= 3 E= -127.011903130027  delta_E= -1.09e-05  |g|= 0.00227  |ddm|= 0.00376
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0036521
diis-c [-1.30552231e-07 -1.41904795e-03  1.53356446e-01  8.48062602e-01]
  HOMO = -0.686449912104569  LUMO = 3.54643038854138
  mo_energy =
[-3.20280129e+01 -1.75627445e+00 -6.86449912e-01 -6.86449912e-01
 -6.86449912e-01  3.54643039e+00  3.54643039e+00  3.54643039e+00
  2.99320054e+01  2.99320054e+01  2.99320054e+01  9.23578623e+01
  1.39008581e+03  6.15398817e+03]
E1 = -182.3366275411178  E_coul = 55.32472403249052
cycle= 4 E= -127.011903508627  delta_E= -3.79e-07  |g|= 1.25e-05  |ddm|= 0.000576
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.13025e-05
diis-c [-8.44074406e-13  3.47714936e-05 -4.16016857e-03 -2.80253558e-02
  1.03215075e+00]
  HOMO = -0.686444442926126  LUMO = 3.54643636988763
  mo_energy =
[-3.20279969e+01 -1.75626851e+00 -6.86444443e-01 -6.86444443e-01
 -6.86444443e-01  3.54643637e+00  3.54643637e+00  3.54643637e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578791e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.3366097941627  E_coul = 55.324706285527554
cycle= 5 E= -127.011903508635  delta_E= -7.89e-12  |g|= 2.69e-08  |ddm|= 2.42e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.3366097941627  E_coul = 55.324706285527554
  HOMO = -0.686444426270817  LUMO = 3.54643638534639
  mo_energy =
[-3.20279968e+01 -1.75626849e+00 -6.86444426e-01 -6.86444426e-01
 -6.86444426e-01  3.54643639e+00  3.54643639e+00  3.54643639e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578792e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.33660973878096  E_coul = 55.32470623014583
Extra cycle  E= -127.011903508635  delta_E= 2.84e-14  |g|= 6.17e-09  |ddm|= 7.72e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94749659e+03 9.24681482e-01 1.29755881e+03 1.08760147e+02
 1.91247739e+01 1.97564420e+01 7.46696514e-01 3.48144581e+00]
E = -127.01190350863513
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.49659261        1
[INPUT] 0    0    [1    /1   ]  0.924681482169       1
[INPUT] 0    0    [1    /1   ]  1297.55881458        1
[INPUT] 0    0    [1    /1   ]  108.760146667        1
[INPUT] 0    0    [1    /1   ]  19.1247738885        1
[INPUT] 1    0    [1    /1   ]  19.7564420122        1
[INPUT] 1    0    [1    /1   ]  0.746696514234       1
[INPUT] 1    0    [1    /1   ]  3.48144580664        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4965926136329, 1.0]], [0, [0.9246814821690811, 1.0]], [0, [1297.5588145785885, 1.0]], [0, [108.76014666656054, 1.0]], [0, [19.124773888453696, 1.0]], [1, [19.756442012183598, 1.0]], [1, [0.7466965142343127, 1.0]], [1, [3.4814458066375344, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.49659261]
bas 1, expnt(s) = [0.92468148]
bas 2, expnt(s) = [1297.55881458]
bas 3, expnt(s) = [108.76014667]
bas 4, expnt(s) = [19.12477389]
bas 5, expnt(s) = [19.75644201]
bas 6, expnt(s) = [0.74669651]
bas 7, expnt(s) = [3.48144581]
CPU time:       126.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94749659e+03 7.40666248e+02 9.24681482e-01 2.38236963e+00
 1.29755881e+03 5.46210838e+02 1.08760147e+02 8.50878133e+01
 1.91247739e+01 2.31053343e+01 1.97564420e+01 1.21512319e+02
 7.46696514e-01 2.02495113e+00 3.48144581e+00 1.38734330e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.892024501525407
cond(S) = 93.79815370096293
E1 = -181.01716668096898  E_coul = 54.803881190465425
init E= -126.213285490504
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.750529515910682  LUMO = 3.47444041342948
  mo_energy =
[-3.20385242e+01 -1.81409100e+00 -7.50529516e-01 -7.50529516e-01
 -7.50529516e-01  3.47444041e+00  3.47444041e+00  3.47444041e+00
  2.98803087e+01  2.98803087e+01  2.98803087e+01  9.23061385e+01
  1.39002490e+03  6.15395756e+03]
E1 = -182.4258004990595  E_coul = 55.41411085417445
cycle= 1 E= -127.011689644885  delta_E= -0.798  |g|= 0.142  |ddm|= 0.13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.198914
diis-c [-0.0395669  1.       ]
  HOMO = -0.680643906783909  LUMO = 3.55282620104724
  mo_energy =
[-3.20073329e+01 -1.74965437e+00 -6.80643907e-01 -6.80643907e-01
 -6.80643907e-01  3.55282620e+00  3.55282620e+00  3.55282620e+00
  2.99491793e+01  2.99491793e+01  2.99491793e+01  9.23783722e+01
  1.39010607e+03  6.15400815e+03]
E1 = -182.31456114283475  E_coul = 55.302668863660095
cycle= 2 E= -127.011892279175  delta_E= -0.000203  |g|= 0.0126  |ddm|= 0.0155
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0191917
diis-c [-2.65385552e-04  4.86854761e-02  9.51314524e-01]
  HOMO = -0.687533185390581  LUMO = 3.54523763782549
  mo_energy =
[-3.20318079e+01 -1.75749918e+00 -6.87533185e-01 -6.87533185e-01
 -6.87533185e-01  3.54523764e+00  3.54523764e+00  3.54523764e+00
  2.99288303e+01  2.99288303e+01  2.99288303e+01  9.23540302e+01
  1.39008141e+03  6.15398368e+03]
E1 = -182.34065380435078  E_coul = 55.32875067432354
cycle= 3 E= -127.011903130027  delta_E= -1.09e-05  |g|= 0.00227  |ddm|= 0.00376
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0036521
diis-c [-1.30552231e-07 -1.41904795e-03  1.53356446e-01  8.48062602e-01]
  HOMO = -0.686449912104569  LUMO = 3.54643038854138
  mo_energy =
[-3.20280129e+01 -1.75627445e+00 -6.86449912e-01 -6.86449912e-01
 -6.86449912e-01  3.54643039e+00  3.54643039e+00  3.54643039e+00
  2.99320054e+01  2.99320054e+01  2.99320054e+01  9.23578623e+01
  1.39008581e+03  6.15398817e+03]
E1 = -182.3366275411178  E_coul = 55.32472403249052
cycle= 4 E= -127.011903508627  delta_E= -3.79e-07  |g|= 1.25e-05  |ddm|= 0.000576
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.13025e-05
diis-c [-8.44074406e-13  3.47714936e-05 -4.16016857e-03 -2.80253558e-02
  1.03215075e+00]
  HOMO = -0.686444442926126  LUMO = 3.54643636988763
  mo_energy =
[-3.20279969e+01 -1.75626851e+00 -6.86444443e-01 -6.86444443e-01
 -6.86444443e-01  3.54643637e+00  3.54643637e+00  3.54643637e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578791e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.3366097941627  E_coul = 55.324706285527554
cycle= 5 E= -127.011903508635  delta_E= -7.89e-12  |g|= 2.69e-08  |ddm|= 2.42e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.3366097941627  E_coul = 55.324706285527554
  HOMO = -0.686444426270817  LUMO = 3.54643638534639
  mo_energy =
[-3.20279968e+01 -1.75626849e+00 -6.86444426e-01 -6.86444426e-01
 -6.86444426e-01  3.54643639e+00  3.54643639e+00  3.54643639e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578792e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.33660973878096  E_coul = 55.32470623014583
Extra cycle  E= -127.011903508635  delta_E= 2.84e-14  |g|= 6.17e-09  |ddm|= 7.72e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 93.79815370096293
E1 = -182.33660973878096  E_coul = 55.32470623014583
init E= -127.011903508635
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.686444429857125  LUMO = 3.54643638138921
  mo_energy =
[-3.20279969e+01 -1.75626850e+00 -6.86444430e-01 -6.86444430e-01
 -6.86444430e-01  3.54643638e+00  3.54643638e+00  3.54643638e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578792e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.33660975233343  E_coul = 55.32470624369838
cycle= 1 E= -127.011903508635  delta_E= 8.53e-14  |g|= 1.5e-09  |ddm|= 1.95e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.33660975233343  E_coul = 55.32470624369838
  HOMO = -0.686444428971456  LUMO = 3.54643638236428
  mo_energy =
[-3.20279968e+01 -1.75626850e+00 -6.86444429e-01 -6.86444429e-01
 -6.86444429e-01  3.54643638e+00  3.54643638e+00  3.54643638e+00
  2.99320197e+01  2.99320197e+01  2.99320197e+01  9.23578792e+01
  1.39008584e+03  6.15398820e+03]
E1 = -182.33660974902304  E_coul = 55.32470624038792
Extra cycle  E= -127.011903508635  delta_E= -8.53e-14  |g|= 3.66e-10  |ddm|= 4.75e-10
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94749659e+03 9.24681482e-01 1.29755881e+03 1.08760147e+02
 1.91247739e+01 1.97564420e+01 7.46696514e-01 3.48144581e+00]
grad_E = [ 7.23393770e-05 -1.46529228e-01  3.51738745e-04 -1.73604019e-03
  8.09321457e-02  1.54369128e-02  5.71169548e-01 -1.10572813e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.41137183        1
[INPUT] 0    0    [1    /1   ]  0.94305544897        1
[INPUT] 0    0    [1    /1   ]  1297.14583633        1
[INPUT] 0    0    [1    /1   ]  100.561659686        1
[INPUT] 0    0    [1    /1   ]  17.9613156766        1
[INPUT] 1    0    [1    /1   ]  11.6400965257        1
[INPUT] 1    0    [1    /1   ]  0.608354914596       1
[INPUT] 1    0    [1    /1   ]  2.44132272401        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4113718318674, 1.0]], [0, [0.9430554489698866, 1.0]], [0, [1297.145836328273, 1.0]], [0, [100.56165968606177, 1.0]], [0, [17.961315676603704, 1.0]], [1, [11.640096525735501, 1.0]], [1, [0.6083549145955132, 1.0]], [1, [2.4413227240105195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.41137183]
bas 1, expnt(s) = [0.94305545]
bas 2, expnt(s) = [1297.14583633]
bas 3, expnt(s) = [100.56165969]
bas 4, expnt(s) = [17.96131568]
bas 5, expnt(s) = [11.64009653]
bas 6, expnt(s) = [0.60835491]
bas 7, expnt(s) = [2.44132272]
CPU time:       130.48
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94741137e+03 7.40641939e+02 9.43055449e-01 2.41778649e+00
 1.29714584e+03 5.46080450e+02 1.00561660e+02 8.02304723e+01
 1.79613157e+01 2.20428951e+01 1.16400965e+01 6.27234762e+01
 6.08354915e-01 1.56740298e+00 2.44132272e+00 8.90257999e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.9299993639921
cond(S) = 91.12860451680072
E1 = -181.25935728740913  E_coul = 54.866630253800466
init E= -126.392727033609
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.748271204039368  LUMO = 2.52109592487022
  mo_energy =
[-3.20691166e+01 -1.80029634e+00 -7.48271204e-01 -7.48271204e-01
 -7.48271204e-01  2.52109592e+00  2.52109592e+00  2.52109592e+00
  1.71899918e+01  1.71899918e+01  1.71899918e+01  8.29940699e+01
  1.35945583e+03  6.12162121e+03]
E1 = -181.75623362249772  E_coul = 54.660576675054244
cycle= 1 E= -127.095656947443  delta_E= -0.703  |g|= 0.136  |ddm|= 0.15
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.183238
diis-c [-0.03357629  1.        ]
  HOMO = -0.736413015771468  LUMO = 2.54024754869472
  mo_energy =
[-3.22060915e+01 -1.80228776e+00 -7.36413016e-01 -7.36413016e-01
 -7.36413016e-01  2.54024755e+00  2.54024755e+00  2.54024755e+00
  1.71434362e+01  1.71434362e+01  1.71434362e+01  8.28883741e+01
  1.35927978e+03  6.12139171e+03]
E1 = -181.85203752975346  E_coul = 54.75626292776605
cycle= 2 E= -127.095774601987  delta_E= -0.000118  |g|= 0.0106  |ddm|= 0.0145
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0181943
diis-c [-3.09327716e-04  2.49064621e-02  9.75093538e-01]
  HOMO = -0.730070340570276  LUMO = 2.54549161285039
  mo_energy =
[-3.21856951e+01 -1.79504717e+00 -7.30070341e-01 -7.30070341e-01
 -7.30070341e-01  2.54549161e+00  2.54549161e+00  2.54549161e+00
  1.71581079e+01  1.71581079e+01  1.71581079e+01  8.29088629e+01
  1.35930375e+03  6.12141612e+03]
E1 = -181.82555394678664  E_coul = 54.729771102273176
cycle= 3 E= -127.095782844513  delta_E= -8.24e-06  |g|= 0.00269  |ddm|= 0.00359
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0044972
diis-c [-1.07297650e-07 -1.22970667e-03  1.96121974e-01  8.05107732e-01]
  HOMO = -0.731320704188594  LUMO = 2.54445617247457
  mo_energy =
[-3.21899182e+01 -1.79648576e+00 -7.31320704e-01 -7.31320704e-01
 -7.31320704e-01  2.54445617e+00  2.54445617e+00  2.54445617e+00
  1.71551357e+01  1.71551357e+01  1.71551357e+01  8.29046710e+01
  1.35929920e+03  6.12141155e+03]
E1 = -181.83104459235824  E_coul = 54.73526116242816
cycle= 4 E= -127.09578342993  delta_E= -5.85e-07  |g|= 2.43e-05  |ddm|= 0.000757
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=4.21348e-05
diis-c [-2.13156535e-12  4.54981854e-05 -7.22732998e-03 -2.02350998e-02
  1.02741693e+00]
  HOMO = -0.73130851702823  LUMO = 2.54446624114843
  mo_energy =
[-3.21898854e+01 -1.79647219e+00 -7.31308517e-01 -7.31308517e-01
 -7.31308517e-01  2.54446624e+00  2.54446624e+00  2.54446624e+00
  1.71551614e+01  1.71551614e+01  1.71551614e+01  8.29047044e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.83100121443582  E_coul = 54.7352177844662
cycle= 5 E= -127.09578342997  delta_E= -3.95e-11  |g|= 7.97e-08  |ddm|= 5.58e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.83100121443582  E_coul = 54.7352177844662
  HOMO = -0.731308464523221  LUMO = 2.54446628078847
  mo_energy =
[-3.21898853e+01 -1.79647213e+00 -7.31308465e-01 -7.31308465e-01
 -7.31308465e-01  2.54446628e+00  2.54446628e+00  2.54446628e+00
  1.71551615e+01  1.71551615e+01  1.71551615e+01  8.29047045e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.83100102834752  E_coul = 54.73521759837789
Extra cycle  E= -127.09578342997  delta_E= -1.42e-14  |g|= 2.08e-08  |ddm|= 2.41e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94741137e+03 9.43055449e-01 1.29714584e+03 1.00561660e+02
 1.79613157e+01 1.16400965e+01 6.08354915e-01 2.44132272e+00]
E = -127.09578342996963
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.41137183        1
[INPUT] 0    0    [1    /1   ]  0.94305544897        1
[INPUT] 0    0    [1    /1   ]  1297.14583633        1
[INPUT] 0    0    [1    /1   ]  100.561659686        1
[INPUT] 0    0    [1    /1   ]  17.9613156766        1
[INPUT] 1    0    [1    /1   ]  11.6400965257        1
[INPUT] 1    0    [1    /1   ]  0.608354914596       1
[INPUT] 1    0    [1    /1   ]  2.44132272401        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4113718318674, 1.0]], [0, [0.9430554489698866, 1.0]], [0, [1297.145836328273, 1.0]], [0, [100.56165968606177, 1.0]], [0, [17.961315676603704, 1.0]], [1, [11.640096525735501, 1.0]], [1, [0.6083549145955132, 1.0]], [1, [2.4413227240105195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.41137183]
bas 1, expnt(s) = [0.94305545]
bas 2, expnt(s) = [1297.14583633]
bas 3, expnt(s) = [100.56165969]
bas 4, expnt(s) = [17.96131568]
bas 5, expnt(s) = [11.64009653]
bas 6, expnt(s) = [0.60835491]
bas 7, expnt(s) = [2.44132272]
CPU time:       131.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94741137e+03 7.40641939e+02 9.43055449e-01 2.41778649e+00
 1.29714584e+03 5.46080450e+02 1.00561660e+02 8.02304723e+01
 1.79613157e+01 2.20428951e+01 1.16400965e+01 6.27234762e+01
 6.08354915e-01 1.56740298e+00 2.44132272e+00 8.90257999e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.9299993639921
cond(S) = 91.12860451680072
E1 = -181.25935728740913  E_coul = 54.866630253800466
init E= -126.392727033609
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748271204039368  LUMO = 2.52109592487022
  mo_energy =
[-3.20691166e+01 -1.80029634e+00 -7.48271204e-01 -7.48271204e-01
 -7.48271204e-01  2.52109592e+00  2.52109592e+00  2.52109592e+00
  1.71899918e+01  1.71899918e+01  1.71899918e+01  8.29940699e+01
  1.35945583e+03  6.12162121e+03]
E1 = -181.75623362249772  E_coul = 54.660576675054244
cycle= 1 E= -127.095656947443  delta_E= -0.703  |g|= 0.136  |ddm|= 0.15
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.183238
diis-c [-0.03357629  1.        ]
  HOMO = -0.736413015771468  LUMO = 2.54024754869472
  mo_energy =
[-3.22060915e+01 -1.80228776e+00 -7.36413016e-01 -7.36413016e-01
 -7.36413016e-01  2.54024755e+00  2.54024755e+00  2.54024755e+00
  1.71434362e+01  1.71434362e+01  1.71434362e+01  8.28883741e+01
  1.35927978e+03  6.12139171e+03]
E1 = -181.85203752975346  E_coul = 54.75626292776605
cycle= 2 E= -127.095774601987  delta_E= -0.000118  |g|= 0.0106  |ddm|= 0.0145
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0181943
diis-c [-3.09327716e-04  2.49064621e-02  9.75093538e-01]
  HOMO = -0.730070340570276  LUMO = 2.54549161285039
  mo_energy =
[-3.21856951e+01 -1.79504717e+00 -7.30070341e-01 -7.30070341e-01
 -7.30070341e-01  2.54549161e+00  2.54549161e+00  2.54549161e+00
  1.71581079e+01  1.71581079e+01  1.71581079e+01  8.29088629e+01
  1.35930375e+03  6.12141612e+03]
E1 = -181.82555394678664  E_coul = 54.729771102273176
cycle= 3 E= -127.095782844513  delta_E= -8.24e-06  |g|= 0.00269  |ddm|= 0.00359
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0044972
diis-c [-1.07297650e-07 -1.22970667e-03  1.96121974e-01  8.05107732e-01]
  HOMO = -0.731320704188594  LUMO = 2.54445617247457
  mo_energy =
[-3.21899182e+01 -1.79648576e+00 -7.31320704e-01 -7.31320704e-01
 -7.31320704e-01  2.54445617e+00  2.54445617e+00  2.54445617e+00
  1.71551357e+01  1.71551357e+01  1.71551357e+01  8.29046710e+01
  1.35929920e+03  6.12141155e+03]
E1 = -181.83104459235824  E_coul = 54.73526116242816
cycle= 4 E= -127.09578342993  delta_E= -5.85e-07  |g|= 2.43e-05  |ddm|= 0.000757
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=4.21348e-05
diis-c [-2.13156535e-12  4.54981854e-05 -7.22732998e-03 -2.02350998e-02
  1.02741693e+00]
  HOMO = -0.73130851702823  LUMO = 2.54446624114843
  mo_energy =
[-3.21898854e+01 -1.79647219e+00 -7.31308517e-01 -7.31308517e-01
 -7.31308517e-01  2.54446624e+00  2.54446624e+00  2.54446624e+00
  1.71551614e+01  1.71551614e+01  1.71551614e+01  8.29047044e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.83100121443582  E_coul = 54.7352177844662
cycle= 5 E= -127.09578342997  delta_E= -3.95e-11  |g|= 7.97e-08  |ddm|= 5.58e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.83100121443582  E_coul = 54.7352177844662
  HOMO = -0.731308464523221  LUMO = 2.54446628078847
  mo_energy =
[-3.21898853e+01 -1.79647213e+00 -7.31308465e-01 -7.31308465e-01
 -7.31308465e-01  2.54446628e+00  2.54446628e+00  2.54446628e+00
  1.71551615e+01  1.71551615e+01  1.71551615e+01  8.29047045e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.83100102834752  E_coul = 54.73521759837789
Extra cycle  E= -127.09578342997  delta_E= -1.42e-14  |g|= 2.08e-08  |ddm|= 2.41e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.12860451680072
E1 = -181.83100102834752  E_coul = 54.73521759837789
init E= -127.09578342997
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.731308476768732  LUMO = 2.54446627063163
  mo_energy =
[-3.21898853e+01 -1.79647214e+00 -7.31308477e-01 -7.31308477e-01
 -7.31308477e-01  2.54446627e+00  2.54446627e+00  2.54446627e+00
  1.71551615e+01  1.71551615e+01  1.71551615e+01  8.29047045e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.8310010828726  E_coul = 54.73521765290284
cycle= 1 E= -127.09578342997  delta_E= -1.42e-13  |g|= 6.05e-09  |ddm|= 7.55e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.8310010828726  E_coul = 54.73521765290284
  HOMO = -0.731308473121233  LUMO = 2.5444662736505
  mo_energy =
[-3.21898853e+01 -1.79647214e+00 -7.31308473e-01 -7.31308473e-01
 -7.31308473e-01  2.54446627e+00  2.54446627e+00  2.54446627e+00
  1.71551615e+01  1.71551615e+01  1.71551615e+01  8.29047045e+01
  1.35929925e+03  6.12141160e+03]
E1 = -181.83100106708588  E_coul = 54.73521763711629
Extra cycle  E= -127.09578342997  delta_E= 1.85e-13  |g|= 1.75e-09  |ddm|= 2.17e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94741137e+03 9.43055449e-01 1.29714584e+03 1.00561660e+02
 1.79613157e+01 1.16400965e+01 6.08354915e-01 2.44132272e+00]
grad_E = [ 9.64195540e-05 -6.65666767e-02  4.27622642e-04 -4.22619485e-03
  3.96631565e-02  6.56746661e-03  6.53648966e-01 -1.98001957e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.43030445        1
[INPUT] 0    0    [1    /1   ]  0.948650070703       1
[INPUT] 0    0    [1    /1   ]  1297.2375629         1
[INPUT] 0    0    [1    /1   ]  102.224677163        1
[INPUT] 0    0    [1    /1   ]  17.9852120401        1
[INPUT] 1    0    [1    /1   ]  13.415992125         1
[INPUT] 1    0    [1    /1   ]  0.620579760656       1
[INPUT] 1    0    [1    /1   ]  2.78324895862        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4303044516566, 1.0]], [0, [0.9486500707034362, 1.0]], [0, [1297.2375629030319, 1.0]], [0, [102.22467716306295, 1.0]], [0, [17.985212040060592, 1.0]], [1, [13.415992124963074, 1.0]], [1, [0.6205797606561877, 1.0]], [1, [2.7832489586161357, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.43030445]
bas 1, expnt(s) = [0.94865007]
bas 2, expnt(s) = [1297.2375629]
bas 3, expnt(s) = [102.22467716]
bas 4, expnt(s) = [17.98521204]
bas 5, expnt(s) = [13.41599212]
bas 6, expnt(s) = [0.62057976]
bas 7, expnt(s) = [2.78324896]
CPU time:       134.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94743030e+03 7.40647340e+02 9.48650071e-01 2.42853606e+00
 1.29723756e+03 5.46109411e+02 1.02224677e+02 8.12235253e+01
 1.79852120e+01 2.20648864e+01 1.34159921e+01 7.49053583e+01
 6.20579761e-01 1.60687244e+00 2.78324896e+00 1.04875601e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.929078544915054
cond(S) = 91.56922783855602
E1 = -181.40818348623972  E_coul = 54.90707207576347
init E= -126.501111410476
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.750440332118974  LUMO = 2.72143078554938
  mo_energy =
[-3.20619770e+01 -1.79706016e+00 -7.50440332e-01 -7.50440332e-01
 -7.50440332e-01  2.72143079e+00  2.72143079e+00  2.72143079e+00
  2.01023042e+01  2.01023042e+01  2.01023042e+01  8.42431296e+01
  1.36501271e+03  6.12757751e+03]
E1 = -181.7065931292781  E_coul = 54.57898577245208
cycle= 1 E= -127.127607356826  delta_E= -0.626  |g|= 0.122  |ddm|= 0.155
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.177239
diis-c [-0.03141372  1.        ]
  HOMO = -0.75073365564473  LUMO = 2.72808662660193
  mo_energy =
[-3.22100547e+01 -1.81216933e+00 -7.50733656e-01 -7.50733656e-01
 -7.50733656e-01  2.72808663e+00  2.72808663e+00  2.72808663e+00
  2.00288975e+01  2.00288975e+01  2.00288975e+01  8.41249004e+01
  1.36482190e+03  6.12733550e+03]
E1 = -181.8267393942609  E_coul = 54.69896877387655
cycle= 2 E= -127.127770620384  delta_E= -0.000163  |g|= 0.0136  |ddm|= 0.0164
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0228421
diis-c [-4.17204712e-04  5.48911318e-02  9.45108868e-01]
  HOMO = -0.743199619639939  LUMO = 2.7350067775411
  mo_energy =
[-3.21846380e+01 -1.80346747e+00 -7.43199620e-01 -7.43199620e-01
 -7.43199620e-01  2.73500678e+00  2.73500678e+00  2.73500678e+00
  2.00479045e+01  2.00479045e+01  2.00479045e+01  8.41503895e+01
  1.36485070e+03  6.12736461e+03]
E1 = -181.79330669628328  E_coul = 54.66552191514106
cycle= 3 E= -127.127784781142  delta_E= -1.42e-05  |g|= 0.00306  |ddm|= 0.00451
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00507943
diis-c [-2.09770687e-08 -1.18643838e-03  1.79335456e-01  8.21850983e-01]
  HOMO = -0.744577979389567  LUMO = 2.73374254924812
  mo_energy =
[-3.21892889e+01 -1.80505893e+00 -7.44577979e-01 -7.44577979e-01
 -7.44577979e-01  2.73374255e+00  2.73374255e+00  2.73374255e+00
  2.00444265e+01  2.00444265e+01  2.00444265e+01  8.41457645e+01
  1.36484566e+03  6.12735952e+03]
E1 = -181.799461260855  E_coul = 54.671675725836444
cycle= 4 E= -127.127785535019  delta_E= -7.54e-07  |g|= 6.68e-06  |ddm|= 0.000833
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13437e-05
diis-c [-8.49082649e-13  3.60592816e-05 -4.98292520e-03 -2.07160580e-02
  1.02566292e+00]
  HOMO = -0.744575002925577  LUMO = 2.73374539701951
  mo_energy =
[-3.21892803e+01 -1.80505552e+00 -7.44575003e-01 -7.44575003e-01
 -7.44575003e-01  2.73374540e+00  2.73374540e+00  2.73374540e+00
  2.00444334e+01  2.00444334e+01  2.00444334e+01  8.41457735e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.7994498263072  E_coul = 54.67166429128585
cycle= 5 E= -127.127785535021  delta_E= -2.81e-12  |g|= 4.78e-08  |ddm|= 1.47e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.7994498263072  E_coul = 54.67166429128585
  HOMO = -0.744574972698503  LUMO = 2.73374542029972
  mo_energy =
[-3.21892802e+01 -1.80505548e+00 -7.44574973e-01 -7.44574973e-01
 -7.44574973e-01  2.73374542e+00  2.73374542e+00  2.73374542e+00
  2.00444335e+01  2.00444335e+01  2.00444335e+01  8.41457736e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.79944971545933  E_coul = 54.671664180438015
Extra cycle  E= -127.127785535021  delta_E= 4.26e-14  |g|= 1.27e-08  |ddm|= 1.42e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94743030e+03 9.48650071e-01 1.29723756e+03 1.02224677e+02
 1.79852120e+01 1.34159921e+01 6.20579761e-01 2.78324896e+00]
E = -127.12778553502132
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.43030445        1
[INPUT] 0    0    [1    /1   ]  0.948650070703       1
[INPUT] 0    0    [1    /1   ]  1297.2375629         1
[INPUT] 0    0    [1    /1   ]  102.224677163        1
[INPUT] 0    0    [1    /1   ]  17.9852120401        1
[INPUT] 1    0    [1    /1   ]  13.415992125         1
[INPUT] 1    0    [1    /1   ]  0.620579760656       1
[INPUT] 1    0    [1    /1   ]  2.78324895862        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4303044516566, 1.0]], [0, [0.9486500707034362, 1.0]], [0, [1297.2375629030319, 1.0]], [0, [102.22467716306295, 1.0]], [0, [17.985212040060592, 1.0]], [1, [13.415992124963074, 1.0]], [1, [0.6205797606561877, 1.0]], [1, [2.7832489586161357, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.43030445]
bas 1, expnt(s) = [0.94865007]
bas 2, expnt(s) = [1297.2375629]
bas 3, expnt(s) = [102.22467716]
bas 4, expnt(s) = [17.98521204]
bas 5, expnt(s) = [13.41599212]
bas 6, expnt(s) = [0.62057976]
bas 7, expnt(s) = [2.78324896]
CPU time:       135.43
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94743030e+03 7.40647340e+02 9.48650071e-01 2.42853606e+00
 1.29723756e+03 5.46109411e+02 1.02224677e+02 8.12235253e+01
 1.79852120e+01 2.20648864e+01 1.34159921e+01 7.49053583e+01
 6.20579761e-01 1.60687244e+00 2.78324896e+00 1.04875601e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.929078544915054
cond(S) = 91.56922783855602
E1 = -181.40818348623972  E_coul = 54.90707207576347
init E= -126.501111410476
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.750440332118974  LUMO = 2.72143078554938
  mo_energy =
[-3.20619770e+01 -1.79706016e+00 -7.50440332e-01 -7.50440332e-01
 -7.50440332e-01  2.72143079e+00  2.72143079e+00  2.72143079e+00
  2.01023042e+01  2.01023042e+01  2.01023042e+01  8.42431296e+01
  1.36501271e+03  6.12757751e+03]
E1 = -181.7065931292781  E_coul = 54.57898577245208
cycle= 1 E= -127.127607356826  delta_E= -0.626  |g|= 0.122  |ddm|= 0.155
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.177239
diis-c [-0.03141372  1.        ]
  HOMO = -0.75073365564473  LUMO = 2.72808662660193
  mo_energy =
[-3.22100547e+01 -1.81216933e+00 -7.50733656e-01 -7.50733656e-01
 -7.50733656e-01  2.72808663e+00  2.72808663e+00  2.72808663e+00
  2.00288975e+01  2.00288975e+01  2.00288975e+01  8.41249004e+01
  1.36482190e+03  6.12733550e+03]
E1 = -181.8267393942609  E_coul = 54.69896877387655
cycle= 2 E= -127.127770620384  delta_E= -0.000163  |g|= 0.0136  |ddm|= 0.0164
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0228421
diis-c [-4.17204712e-04  5.48911318e-02  9.45108868e-01]
  HOMO = -0.743199619639939  LUMO = 2.7350067775411
  mo_energy =
[-3.21846380e+01 -1.80346747e+00 -7.43199620e-01 -7.43199620e-01
 -7.43199620e-01  2.73500678e+00  2.73500678e+00  2.73500678e+00
  2.00479045e+01  2.00479045e+01  2.00479045e+01  8.41503895e+01
  1.36485070e+03  6.12736461e+03]
E1 = -181.79330669628328  E_coul = 54.66552191514106
cycle= 3 E= -127.127784781142  delta_E= -1.42e-05  |g|= 0.00306  |ddm|= 0.00451
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00507943
diis-c [-2.09770687e-08 -1.18643838e-03  1.79335456e-01  8.21850983e-01]
  HOMO = -0.744577979389567  LUMO = 2.73374254924812
  mo_energy =
[-3.21892889e+01 -1.80505893e+00 -7.44577979e-01 -7.44577979e-01
 -7.44577979e-01  2.73374255e+00  2.73374255e+00  2.73374255e+00
  2.00444265e+01  2.00444265e+01  2.00444265e+01  8.41457645e+01
  1.36484566e+03  6.12735952e+03]
E1 = -181.799461260855  E_coul = 54.671675725836444
cycle= 4 E= -127.127785535019  delta_E= -7.54e-07  |g|= 6.68e-06  |ddm|= 0.000833
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13437e-05
diis-c [-8.49082649e-13  3.60592816e-05 -4.98292520e-03 -2.07160580e-02
  1.02566292e+00]
  HOMO = -0.744575002925577  LUMO = 2.73374539701951
  mo_energy =
[-3.21892803e+01 -1.80505552e+00 -7.44575003e-01 -7.44575003e-01
 -7.44575003e-01  2.73374540e+00  2.73374540e+00  2.73374540e+00
  2.00444334e+01  2.00444334e+01  2.00444334e+01  8.41457735e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.7994498263072  E_coul = 54.67166429128585
cycle= 5 E= -127.127785535021  delta_E= -2.81e-12  |g|= 4.78e-08  |ddm|= 1.47e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.7994498263072  E_coul = 54.67166429128585
  HOMO = -0.744574972698503  LUMO = 2.73374542029972
  mo_energy =
[-3.21892802e+01 -1.80505548e+00 -7.44574973e-01 -7.44574973e-01
 -7.44574973e-01  2.73374542e+00  2.73374542e+00  2.73374542e+00
  2.00444335e+01  2.00444335e+01  2.00444335e+01  8.41457736e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.79944971545933  E_coul = 54.671664180438015
Extra cycle  E= -127.127785535021  delta_E= 4.26e-14  |g|= 1.27e-08  |ddm|= 1.42e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.56922783855602
E1 = -181.79944971545933  E_coul = 54.671664180438015
init E= -127.127785535021
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.744574979969494  LUMO = 2.73374541361138
  mo_energy =
[-3.21892802e+01 -1.80505549e+00 -7.44574980e-01 -7.44574980e-01
 -7.44574980e-01  2.73374541e+00  2.73374541e+00  2.73374541e+00
  2.00444334e+01  2.00444334e+01  2.00444334e+01  8.41457736e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.7994497485023  E_coul = 54.67166421348093
cycle= 1 E= -127.127785535021  delta_E= -4.26e-14  |g|= 3.75e-09  |ddm|= 4.49e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.7994497485023  E_coul = 54.67166421348093
  HOMO = -0.744574977771478  LUMO = 2.73374541562821
  mo_energy =
[-3.21892802e+01 -1.80505549e+00 -7.44574978e-01 -7.44574978e-01
 -7.44574978e-01  2.73374542e+00  2.73374542e+00  2.73374542e+00
  2.00444334e+01  2.00444334e+01  2.00444334e+01  8.41457736e+01
  1.36484567e+03  6.12735953e+03]
E1 = -181.79944973873094  E_coul = 54.671664203709575
Extra cycle  E= -127.127785535021  delta_E=    0  |g|= 1.11e-09  |ddm|= 1.32e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94743030e+03 9.48650071e-01 1.29723756e+03 1.02224677e+02
 1.79852120e+01 1.34159921e+01 6.20579761e-01 2.78324896e+00]
grad_E = [ 8.87995970e-05 -4.10080655e-02  4.03210092e-04 -1.51122028e-03
  2.56729091e-02  2.44259102e-03  2.16125230e-01 -4.43952641e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42481725        1
[INPUT] 0    0    [1    /1   ]  0.956708112126       1
[INPUT] 0    0    [1    /1   ]  1297.21088189        1
[INPUT] 0    0    [1    /1   ]  101.508777623        1
[INPUT] 0    0    [1    /1   ]  17.7069686751        1
[INPUT] 1    0    [1    /1   ]  12.9617130619        1
[INPUT] 1    0    [1    /1   ]  0.59464004892        1
[INPUT] 1    0    [1    /1   ]  2.75012346133        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4248172537975, 1.0]], [0, [0.9567081121263359, 1.0]], [0, [1297.2108818930071, 1.0]], [0, [101.50877762268635, 1.0]], [0, [17.706968675066843, 1.0]], [1, [12.961713061924799, 1.0]], [1, [0.5946400489202325, 1.0]], [1, [2.7501234613303325, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42481725]
bas 1, expnt(s) = [0.95670811]
bas 2, expnt(s) = [1297.21088189]
bas 3, expnt(s) = [101.50877762]
bas 4, expnt(s) = [17.70696868]
bas 5, expnt(s) = [12.96171306]
bas 6, expnt(s) = [0.59464005]
bas 7, expnt(s) = [2.75012346]
CPU time:       138.97
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742482e+03 7.40645774e+02 9.56708112e-01 2.44399108e+00
 1.29721088e+03 5.46100987e+02 1.01508778e+02 8.07965325e+01
 1.77069687e+01 2.18083691e+01 1.29617131e+01 7.17484290e+01
 5.94640049e-01 1.52335838e+00 2.75012346e+00 1.03317677e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933931498764629
cond(S) = 91.26163264551325
E1 = -181.48309350255624  E_coul = 54.91832806189547
init E= -126.564765440661
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749511935181732  LUMO = 2.62216714395764
  mo_energy =
[-3.20657433e+01 -1.79360002e+00 -7.49511935e-01 -7.49511935e-01
 -7.49511935e-01  2.62216714e+00  2.62216714e+00  2.62216714e+00
  1.94514890e+01  1.94514890e+01  1.94514890e+01  8.29082171e+01
  1.36179943e+03  6.12428095e+03]
E1 = -181.44196691679844  E_coul = 54.309381583727244
cycle= 1 E= -127.132585333071  delta_E= -0.568  |g|= 0.127  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.199668
diis-c [-0.03986722  1.        ]
  HOMO = -0.770986327794512  LUMO = 2.60974935242498
  mo_energy =
[-3.22658762e+01 -1.83308258e+00 -7.70986328e-01 -7.70986328e-01
 -7.70986328e-01  2.60974935e+00  2.60974935e+00  2.60974935e+00
  1.93355767e+01  1.93355767e+01  1.93355767e+01  8.27352076e+01
  1.36152937e+03  6.12395553e+03]
E1 = -181.6475549046699  E_coul = 54.51453222712705
cycle= 2 E= -127.133022677543  delta_E= -0.000437  |g|= 0.0237  |ddm|= 0.0269
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0395768
diis-c [-7.82171383e-04  1.24069201e-01  8.75930799e-01]
  HOMO = -0.759058739980199  LUMO = 2.62057485513254
  mo_energy =
[-3.22256427e+01 -1.81918798e+00 -7.59058740e-01 -7.59058740e-01
 -7.59058740e-01  2.62057486e+00  2.62057486e+00  2.62057486e+00
  1.93653657e+01  1.93653657e+01  1.93653657e+01  8.27753787e+01
  1.36157369e+03  6.12400012e+03]
E1 = -181.59163595390194  E_coul = 54.45856814682105
cycle= 3 E= -127.133067807081  delta_E= -4.51e-05  |g|= 0.00351  |ddm|= 0.00743
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0058797
diis-c [-5.06639133e-09 -1.34997854e-03  1.25847908e-01  8.75502070e-01]
  HOMO = -0.760613793037308  LUMO = 2.61917108671218
  mo_energy =
[-3.22307971e+01 -1.82099040e+00 -7.60613793e-01 -7.60613793e-01
 -7.60613793e-01  2.61917109e+00  2.61917109e+00  2.61917109e+00
  1.93615237e+01  1.93615237e+01  1.93615237e+01  8.27702615e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59885712455446  E_coul = 54.46578830227612
cycle= 4 E= -127.133068822278  delta_E= -1.02e-06  |g|= 2.72e-06  |ddm|= 0.000957
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.82732e-06
diis-c [-5.32665675e-13  2.21512309e-05 -2.02218456e-03 -1.48774341e-02
  1.01687747e+00]
  HOMO = -0.760615176506055  LUMO = 2.61917015685107
  mo_energy =
[-3.22308003e+01 -1.82099176e+00 -7.60615177e-01 -7.60615177e-01
 -7.60615177e-01  2.61917016e+00  2.61917016e+00  2.61917016e+00
  1.93615211e+01  1.93615211e+01  1.93615211e+01  8.27702585e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886199307846  E_coul = 54.46579317079948
cycle= 5 E= -127.133068822279  delta_E= -6.25e-13  |g|= 6.5e-08  |ddm|= 6.04e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.59886199307846  E_coul = 54.46579317079948
  HOMO = -0.760615214366974  LUMO = 2.61917011824038
  mo_energy =
[-3.22308004e+01 -1.82099180e+00 -7.60615214e-01 -7.60615214e-01
 -7.60615214e-01  2.61917012e+00  2.61917012e+00  2.61917012e+00
  1.93615210e+01  1.93615210e+01  1.93615210e+01  8.27702584e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886215682383  E_coul = 54.46579333454482
Extra cycle  E= -127.133068822279  delta_E= -2.84e-14  |g|= 1.9e-08  |ddm|= 2.1e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94742482e+03 9.56708112e-01 1.29721088e+03 1.01508778e+02
 1.77069687e+01 1.29617131e+01 5.94640049e-01 2.75012346e+00]
E = -127.133068822279
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42481725        1
[INPUT] 0    0    [1    /1   ]  0.956708112126       1
[INPUT] 0    0    [1    /1   ]  1297.21088189        1
[INPUT] 0    0    [1    /1   ]  101.508777623        1
[INPUT] 0    0    [1    /1   ]  17.7069686751        1
[INPUT] 1    0    [1    /1   ]  12.9617130619        1
[INPUT] 1    0    [1    /1   ]  0.59464004892        1
[INPUT] 1    0    [1    /1   ]  2.75012346133        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4248172537975, 1.0]], [0, [0.9567081121263359, 1.0]], [0, [1297.2108818930071, 1.0]], [0, [101.50877762268635, 1.0]], [0, [17.706968675066843, 1.0]], [1, [12.961713061924799, 1.0]], [1, [0.5946400489202325, 1.0]], [1, [2.7501234613303325, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42481725]
bas 1, expnt(s) = [0.95670811]
bas 2, expnt(s) = [1297.21088189]
bas 3, expnt(s) = [101.50877762]
bas 4, expnt(s) = [17.70696868]
bas 5, expnt(s) = [12.96171306]
bas 6, expnt(s) = [0.59464005]
bas 7, expnt(s) = [2.75012346]
CPU time:       139.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742482e+03 7.40645774e+02 9.56708112e-01 2.44399108e+00
 1.29721088e+03 5.46100987e+02 1.01508778e+02 8.07965325e+01
 1.77069687e+01 2.18083691e+01 1.29617131e+01 7.17484290e+01
 5.94640049e-01 1.52335838e+00 2.75012346e+00 1.03317677e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933931498764629
cond(S) = 91.26163264551325
E1 = -181.48309350255624  E_coul = 54.91832806189547
init E= -126.564765440661
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749511935181732  LUMO = 2.62216714395764
  mo_energy =
[-3.20657433e+01 -1.79360002e+00 -7.49511935e-01 -7.49511935e-01
 -7.49511935e-01  2.62216714e+00  2.62216714e+00  2.62216714e+00
  1.94514890e+01  1.94514890e+01  1.94514890e+01  8.29082171e+01
  1.36179943e+03  6.12428095e+03]
E1 = -181.44196691679844  E_coul = 54.309381583727244
cycle= 1 E= -127.132585333071  delta_E= -0.568  |g|= 0.127  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.199668
diis-c [-0.03986722  1.        ]
  HOMO = -0.770986327794512  LUMO = 2.60974935242498
  mo_energy =
[-3.22658762e+01 -1.83308258e+00 -7.70986328e-01 -7.70986328e-01
 -7.70986328e-01  2.60974935e+00  2.60974935e+00  2.60974935e+00
  1.93355767e+01  1.93355767e+01  1.93355767e+01  8.27352076e+01
  1.36152937e+03  6.12395553e+03]
E1 = -181.6475549046699  E_coul = 54.51453222712705
cycle= 2 E= -127.133022677543  delta_E= -0.000437  |g|= 0.0237  |ddm|= 0.0269
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0395768
diis-c [-7.82171383e-04  1.24069201e-01  8.75930799e-01]
  HOMO = -0.759058739980199  LUMO = 2.62057485513254
  mo_energy =
[-3.22256427e+01 -1.81918798e+00 -7.59058740e-01 -7.59058740e-01
 -7.59058740e-01  2.62057486e+00  2.62057486e+00  2.62057486e+00
  1.93653657e+01  1.93653657e+01  1.93653657e+01  8.27753787e+01
  1.36157369e+03  6.12400012e+03]
E1 = -181.59163595390194  E_coul = 54.45856814682105
cycle= 3 E= -127.133067807081  delta_E= -4.51e-05  |g|= 0.00351  |ddm|= 0.00743
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0058797
diis-c [-5.06639133e-09 -1.34997854e-03  1.25847908e-01  8.75502070e-01]
  HOMO = -0.760613793037308  LUMO = 2.61917108671218
  mo_energy =
[-3.22307971e+01 -1.82099040e+00 -7.60613793e-01 -7.60613793e-01
 -7.60613793e-01  2.61917109e+00  2.61917109e+00  2.61917109e+00
  1.93615237e+01  1.93615237e+01  1.93615237e+01  8.27702615e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59885712455446  E_coul = 54.46578830227612
cycle= 4 E= -127.133068822278  delta_E= -1.02e-06  |g|= 2.72e-06  |ddm|= 0.000957
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.82732e-06
diis-c [-5.32665675e-13  2.21512309e-05 -2.02218456e-03 -1.48774341e-02
  1.01687747e+00]
  HOMO = -0.760615176506055  LUMO = 2.61917015685107
  mo_energy =
[-3.22308003e+01 -1.82099176e+00 -7.60615177e-01 -7.60615177e-01
 -7.60615177e-01  2.61917016e+00  2.61917016e+00  2.61917016e+00
  1.93615211e+01  1.93615211e+01  1.93615211e+01  8.27702585e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886199307846  E_coul = 54.46579317079948
cycle= 5 E= -127.133068822279  delta_E= -6.25e-13  |g|= 6.5e-08  |ddm|= 6.04e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.59886199307846  E_coul = 54.46579317079948
  HOMO = -0.760615214366974  LUMO = 2.61917011824038
  mo_energy =
[-3.22308004e+01 -1.82099180e+00 -7.60615214e-01 -7.60615214e-01
 -7.60615214e-01  2.61917012e+00  2.61917012e+00  2.61917012e+00
  1.93615210e+01  1.93615210e+01  1.93615210e+01  8.27702584e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886215682383  E_coul = 54.46579333454482
Extra cycle  E= -127.133068822279  delta_E= -2.84e-14  |g|= 1.9e-08  |ddm|= 2.1e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.26163264551325
E1 = -181.59886215682383  E_coul = 54.46579333454482
init E= -127.133068822279
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.7606152035417  LUMO = 2.61917012806162
  mo_energy =
[-3.22308003e+01 -1.82099179e+00 -7.60615204e-01 -7.60615204e-01
 -7.60615204e-01  2.61917013e+00  2.61917013e+00  2.61917013e+00
  1.93615210e+01  1.93615210e+01  1.93615210e+01  8.27702585e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886210564068  E_coul = 54.46579328336179
cycle= 1 E= -127.133068822279  delta_E= 1.14e-13  |g|= 5.9e-09  |ddm|= 6.82e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.59886210564068  E_coul = 54.46579328336179
  HOMO = -0.760615206951854  LUMO = 2.61917012497173
  mo_energy =
[-3.22308004e+01 -1.82099180e+00 -7.60615207e-01 -7.60615207e-01
 -7.60615207e-01  2.61917012e+00  2.61917012e+00  2.61917012e+00
  1.93615210e+01  1.93615210e+01  1.93615210e+01  8.27702585e+01
  1.36156806e+03  6.12399441e+03]
E1 = -181.59886212154782  E_coul = 54.46579329926894
Extra cycle  E= -127.133068822279  delta_E=    0  |g|= 1.83e-09  |ddm|= 2.11e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94742482e+03 9.56708112e-01 1.29721088e+03 1.01508778e+02
 1.77069687e+01 1.29617131e+01 5.94640049e-01 2.75012346e+00]
grad_E = [ 8.91272391e-05 -8.01765703e-03  4.03764365e-04  7.03757743e-05
  2.97370343e-03 -3.86254086e-03 -4.85548579e-02  2.51221439e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42839187        1
[INPUT] 0    0    [1    /1   ]  0.958374350142       1
[INPUT] 0    0    [1    /1   ]  1297.2275316         1
[INPUT] 0    0    [1    /1   ]  100.951565348        1
[INPUT] 0    0    [1    /1   ]  17.5963150082        1
[INPUT] 1    0    [1    /1   ]  13.6961576858        1
[INPUT] 1    0    [1    /1   ]  0.595436753595       1
[INPUT] 1    0    [1    /1   ]  2.7778556948         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4283918679623, 1.0]], [0, [0.958374350141629, 1.0]], [0, [1297.227531601684, 1.0]], [0, [100.95156534838226, 1.0]], [0, [17.596315008195848, 1.0]], [1, [13.696157685753118, 1.0]], [1, [0.5954367535946743, 1.0]], [1, [2.7778556947957043, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42839187]
bas 1, expnt(s) = [0.95837435]
bas 2, expnt(s) = [1297.2275316]
bas 3, expnt(s) = [100.95156535]
bas 4, expnt(s) = [17.59631501]
bas 5, expnt(s) = [13.69615769]
bas 6, expnt(s) = [0.59543675]
bas 7, expnt(s) = [2.77785569]
CPU time:       143.01
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742839e+03 7.40646794e+02 9.58374350e-01 2.44718279e+00
 1.29722753e+03 5.46106244e+02 1.00951565e+02 8.04636663e+01
 1.75963150e+01 2.17060761e+01 1.36961577e+01 7.68657425e+01
 5.95436754e-01 1.52591007e+00 2.77785569e+00 1.04621633e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933626319851289
cond(S) = 91.08032330950039
E1 = -181.49612438779536  E_coul = 54.922514690915136
init E= -126.57360969688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749647943379488  LUMO = 2.62997949135824
  mo_energy =
[-3.20641413e+01 -1.79264586e+00 -7.49647943e-01 -7.49647943e-01
 -7.49647943e-01  2.62997949e+00  2.62997949e+00  2.62997949e+00
  2.03080392e+01  2.03080392e+01  2.03080392e+01  8.21896707e+01
  1.35965909e+03  6.12212526e+03]
E1 = -181.44020691399643  E_coul = 54.30784440121204
cycle= 1 E= -127.132362512784  delta_E= -0.559  |g|= 0.127  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.197495
diis-c [-0.03900429  1.        ]
  HOMO = -0.770450637499469  LUMO = 2.61783363322031
  mo_energy =
[-3.22695878e+01 -1.83163985e+00 -7.70450637e-01 -7.70450637e-01
 -7.70450637e-01  2.61783363e+00  2.61783363e+00  2.61783363e+00
  2.01869255e+01  2.01869255e+01  2.01869255e+01  8.20102386e+01
  1.35937178e+03  6.12178037e+03]
E1 = -181.64710850983076  E_coul = 54.514301032484006
cycle= 2 E= -127.132807477347  delta_E= -0.000445  |g|= 0.0238  |ddm|= 0.0274
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0394533
diis-c [-7.67838565e-04  1.25585863e-01  8.74414137e-01]
  HOMO = -0.758464393624334  LUMO = 2.62874988577823
  mo_energy =
[-3.22291896e+01 -1.81766988e+00 -7.58464394e-01 -7.58464394e-01
 -7.58464394e-01  2.62874989e+00  2.62874989e+00  2.62874989e+00
  2.02174489e+01  2.02174489e+01  2.02174489e+01  8.20505660e+01
  1.35941642e+03  6.12182531e+03]
E1 = -181.59136994204252  E_coul = 54.45851717835519
cycle= 3 E= -127.132852763687  delta_E= -4.53e-05  |g|= 0.00342  |ddm|= 0.00745
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00569437
diis-c [-4.91934990e-09 -1.31443037e-03  1.22704980e-01  8.78609450e-01]
  HOMO = -0.759986986669464  LUMO = 2.62737060283148
  mo_energy =
[-3.22342500e+01 -1.81943650e+00 -7.59986987e-01 -7.59986987e-01
 -7.59986987e-01  2.62737060e+00  2.62737060e+00  2.62737060e+00
  2.02136067e+01  2.02136067e+01  2.02136067e+01  8.20455437e+01
  1.35941089e+03  6.12181971e+03]
E1 = -181.59840183267542  E_coul = 54.46554810553317
cycle= 4 E= -127.132853727142  delta_E= -9.63e-07  |g|= 1.44e-06  |ddm|= 0.000939
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.45592e-06
diis-c [-1.53328158e-13  2.10195515e-05 -1.85622168e-03 -1.37028983e-02
  1.01553810e+00]
  HOMO = -0.759987678861072  LUMO = 2.6273702788302
  mo_energy =
[-3.22342514e+01 -1.81943709e+00 -7.59987679e-01 -7.59987679e-01
 -7.59987679e-01  2.62737028e+00  2.62737028e+00  2.62737028e+00
  2.02136056e+01  2.02136056e+01  2.02136056e+01  8.20455426e+01
  1.35941089e+03  6.12181971e+03]
E1 = -181.598404052104  E_coul = 54.46555032496161
cycle= 5 E= -127.132853727142  delta_E= -1.42e-13  |g|= 3.99e-08  |ddm|= 2.76e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.598404052104  E_coul = 54.46555032496161
  HOMO = -0.759987702097346  LUMO = 2.62737025366686
  mo_energy =
[-3.22342515e+01 -1.81943712e+00 -7.59987702e-01 -7.59987702e-01
 -7.59987702e-01  2.62737025e+00  2.62737025e+00  2.62737025e+00
  2.02136055e+01  2.02136055e+01  2.02136055e+01  8.20455425e+01
  1.35941089e+03  6.12181971e+03]
E1 = -181.59840415569354  E_coul = 54.46555042855111
Extra cycle  E= -127.132853727142  delta_E= -4.26e-14  |g|= 1.19e-08  |ddm|= 1.35e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94742839e+03 9.58374350e-01 1.29722753e+03 1.00951565e+02
 1.75963150e+01 1.36961577e+01 5.95436754e-01 2.77785569e+00]
E = -127.13285372714243
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.4264657         1
[INPUT] 0    0    [1    /1   ]  0.957476502806       1
[INPUT] 0    0    [1    /1   ]  1297.21855996        1
[INPUT] 0    0    [1    /1   ]  101.251817504        1
[INPUT] 0    0    [1    /1   ]  17.6559404033        1
[INPUT] 1    0    [1    /1   ]  13.3004044125        1
[INPUT] 1    0    [1    /1   ]  0.595007451681       1
[INPUT] 1    0    [1    /1   ]  2.76291226433        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4264656978874, 1.0]], [0, [0.9574765028062016, 1.0]], [0, [1297.2185599563163, 1.0]], [0, [101.25181750393241, 1.0]], [0, [17.655940403273586, 1.0]], [1, [13.300404412528678, 1.0]], [1, [0.5950074516807191, 1.0]], [1, [2.762912264329106, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.4264657]
bas 1, expnt(s) = [0.9574765]
bas 2, expnt(s) = [1297.21855996]
bas 3, expnt(s) = [101.2518175]
bas 4, expnt(s) = [17.6559404]
bas 5, expnt(s) = [13.30040441]
bas 6, expnt(s) = [0.59500745]
bas 7, expnt(s) = [2.76291226]
CPU time:       143.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742647e+03 7.40646245e+02 9.57476503e-01 2.44546312e+00
 1.29721856e+03 5.46103411e+02 1.01251818e+02 8.06430872e+01
 1.76559404e+01 2.17612163e+01 1.33004044e+01 7.40995295e+01
 5.95007452e-01 1.52453500e+00 2.76291226e+00 1.03918594e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93380836867777
cond(S) = 91.1779651156147
E1 = -181.49054107052166  E_coul = 54.92084688852823
init E= -126.569694181993
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.749646608356074  LUMO = 2.62555376751295
  mo_energy =
[-3.20648574e+01 -1.79312741e+00 -7.49646608e-01 -7.49646608e-01
 -7.49646608e-01  2.62555377e+00  2.62555377e+00  2.62555377e+00
  1.98442097e+01  1.98442097e+01  1.98442097e+01  8.25768839e+01
  1.36081261e+03  6.12328687e+03]
E1 = -181.4438805534917  E_coul = 54.310728503055145
cycle= 1 E= -127.133152050437  delta_E= -0.563  |g|= 0.127  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.198498
diis-c [-0.03940129  1.        ]
  HOMO = -0.770714027420319  LUMO = 2.6133479879713
  mo_energy =
[-3.22671163e+01 -1.83226998e+00 -7.70714027e-01 -7.70714027e-01
 -7.70714027e-01  2.61334799e+00  2.61334799e+00  2.61334799e+00
  1.97261606e+01  1.97261606e+01  1.97261606e+01  8.24012288e+01
  1.36053494e+03  6.12295281e+03]
E1 = -181.64963588503227  E_coul = 54.516044926872716
cycle= 2 E= -127.13359095816  delta_E= -0.000439  |g|= 0.0237  |ddm|= 0.0271
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0394386
diis-c [-7.74147324e-04  1.24509585e-01  8.75490415e-01]
  HOMO = -0.758781201497102  LUMO = 2.62419486671007
  mo_energy =
[-3.22268799e+01 -1.81836660e+00 -7.58781201e-01 -7.58781201e-01
 -7.58781201e-01  2.62419487e+00  2.62419487e+00  2.62419487e+00
  1.97562370e+01  1.97562370e+01  1.97562370e+01  8.24413995e+01
  1.36057933e+03  6.12299748e+03]
E1 = -181.5938992431318  E_coul = 54.46026328113279
cycle= 3 E= -127.133635961999  delta_E= -4.5e-05  |g|= 0.00347  |ddm|= 0.00743
    CPU time for cycle= 3      0.02 sec, wall time      0.04 sec
diis-norm(errvec)=0.00579602
diis-c [-4.91823573e-09 -1.33341208e-03  1.24670547e-01  8.76662866e-01]
  HOMO = -0.760321679028706  LUMO = 2.62280205477035
  mo_energy =
[-3.22319927e+01 -1.82015292e+00 -7.60321679e-01 -7.60321679e-01
 -7.60321679e-01  2.62280205e+00  2.62280205e+00  2.62280205e+00
  1.97523929e+01  1.97523929e+01  1.97523929e+01  8.24363242e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.6010354101751  E_coul = 54.467398456488134
cycle= 4 E= -127.133636953687  delta_E= -9.92e-07  |g|= 2.09e-06  |ddm|= 0.000949
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.68891e-06
diis-c [-3.18565597e-13  2.11794372e-05 -1.90728255e-03 -1.40376130e-02
  1.01592372e+00]
  HOMO = -0.760322738015628  LUMO = 2.62280140832219
  mo_energy =
[-3.22319951e+01 -1.82015392e+00 -7.60322738e-01 -7.60322738e-01
 -7.60322738e-01  2.62280141e+00  2.62280141e+00  2.62280141e+00
  1.97523910e+01  1.97523910e+01  1.97523910e+01  8.24363221e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103904084835  E_coul = 54.46740208716132
cycle= 5 E= -127.133636953687  delta_E= -7.11e-14  |g|= 5.41e-08  |ddm|= 4.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.60103904084835  E_coul = 54.46740208716132
  HOMO = -0.760322769631568  LUMO = 2.62280137556303
  mo_energy =
[-3.22319952e+01 -1.82015396e+00 -7.60322770e-01 -7.60322770e-01
 -7.60322770e-01  2.62280138e+00  2.62280138e+00  2.62280138e+00
  1.97523909e+01  1.97523909e+01  1.97523909e+01  8.24363220e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103917876393  E_coul = 54.46740222507686
Extra cycle  E= -127.133636953687  delta_E= -4.26e-14  |g|= 1.59e-08  |ddm|= 1.78e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.13 sec
exp = [1.94742647e+03 9.57476503e-01 1.29721856e+03 1.01251818e+02
 1.76559404e+01 1.33004044e+01 5.95007452e-01 2.76291226e+00]
E = -127.13363695368707
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.4264657         1
[INPUT] 0    0    [1    /1   ]  0.957476502806       1
[INPUT] 0    0    [1    /1   ]  1297.21855996        1
[INPUT] 0    0    [1    /1   ]  101.251817504        1
[INPUT] 0    0    [1    /1   ]  17.6559404033        1
[INPUT] 1    0    [1    /1   ]  13.3004044125        1
[INPUT] 1    0    [1    /1   ]  0.595007451681       1
[INPUT] 1    0    [1    /1   ]  2.76291226433        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4264656978874, 1.0]], [0, [0.9574765028062016, 1.0]], [0, [1297.2185599563163, 1.0]], [0, [101.25181750393241, 1.0]], [0, [17.655940403273586, 1.0]], [1, [13.300404412528678, 1.0]], [1, [0.5950074516807191, 1.0]], [1, [2.762912264329106, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.4264657]
bas 1, expnt(s) = [0.9574765]
bas 2, expnt(s) = [1297.21855996]
bas 3, expnt(s) = [101.2518175]
bas 4, expnt(s) = [17.6559404]
bas 5, expnt(s) = [13.30040441]
bas 6, expnt(s) = [0.59500745]
bas 7, expnt(s) = [2.76291226]
CPU time:       144.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742647e+03 7.40646245e+02 9.57476503e-01 2.44546312e+00
 1.29721856e+03 5.46103411e+02 1.01251818e+02 8.06430872e+01
 1.76559404e+01 2.17612163e+01 1.33004044e+01 7.40995295e+01
 5.95007452e-01 1.52453500e+00 2.76291226e+00 1.03918594e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93380836867777
cond(S) = 91.1779651156147
E1 = -181.49054107052166  E_coul = 54.92084688852823
init E= -126.569694181993
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749646608356074  LUMO = 2.62555376751295
  mo_energy =
[-3.20648574e+01 -1.79312741e+00 -7.49646608e-01 -7.49646608e-01
 -7.49646608e-01  2.62555377e+00  2.62555377e+00  2.62555377e+00
  1.98442097e+01  1.98442097e+01  1.98442097e+01  8.25768839e+01
  1.36081261e+03  6.12328687e+03]
E1 = -181.4438805534917  E_coul = 54.310728503055145
cycle= 1 E= -127.133152050437  delta_E= -0.563  |g|= 0.127  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.198498
diis-c [-0.03940129  1.        ]
  HOMO = -0.770714027420319  LUMO = 2.6133479879713
  mo_energy =
[-3.22671163e+01 -1.83226998e+00 -7.70714027e-01 -7.70714027e-01
 -7.70714027e-01  2.61334799e+00  2.61334799e+00  2.61334799e+00
  1.97261606e+01  1.97261606e+01  1.97261606e+01  8.24012288e+01
  1.36053494e+03  6.12295281e+03]
E1 = -181.64963588503227  E_coul = 54.516044926872716
cycle= 2 E= -127.13359095816  delta_E= -0.000439  |g|= 0.0237  |ddm|= 0.0271
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0394386
diis-c [-7.74147324e-04  1.24509585e-01  8.75490415e-01]
  HOMO = -0.758781201497102  LUMO = 2.62419486671007
  mo_energy =
[-3.22268799e+01 -1.81836660e+00 -7.58781201e-01 -7.58781201e-01
 -7.58781201e-01  2.62419487e+00  2.62419487e+00  2.62419487e+00
  1.97562370e+01  1.97562370e+01  1.97562370e+01  8.24413995e+01
  1.36057933e+03  6.12299748e+03]
E1 = -181.5938992431318  E_coul = 54.46026328113279
cycle= 3 E= -127.133635961999  delta_E= -4.5e-05  |g|= 0.00347  |ddm|= 0.00743
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00579602
diis-c [-4.91823573e-09 -1.33341208e-03  1.24670547e-01  8.76662866e-01]
  HOMO = -0.760321679028706  LUMO = 2.62280205477035
  mo_energy =
[-3.22319927e+01 -1.82015292e+00 -7.60321679e-01 -7.60321679e-01
 -7.60321679e-01  2.62280205e+00  2.62280205e+00  2.62280205e+00
  1.97523929e+01  1.97523929e+01  1.97523929e+01  8.24363242e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.6010354101751  E_coul = 54.467398456488134
cycle= 4 E= -127.133636953687  delta_E= -9.92e-07  |g|= 2.09e-06  |ddm|= 0.000949
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.68891e-06
diis-c [-3.18565597e-13  2.11794372e-05 -1.90728255e-03 -1.40376130e-02
  1.01592372e+00]
  HOMO = -0.760322738015628  LUMO = 2.62280140832219
  mo_energy =
[-3.22319951e+01 -1.82015392e+00 -7.60322738e-01 -7.60322738e-01
 -7.60322738e-01  2.62280141e+00  2.62280141e+00  2.62280141e+00
  1.97523910e+01  1.97523910e+01  1.97523910e+01  8.24363221e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103904084835  E_coul = 54.46740208716132
cycle= 5 E= -127.133636953687  delta_E= -7.11e-14  |g|= 5.41e-08  |ddm|= 4.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.60103904084835  E_coul = 54.46740208716132
  HOMO = -0.760322769631568  LUMO = 2.62280137556303
  mo_energy =
[-3.22319952e+01 -1.82015396e+00 -7.60322770e-01 -7.60322770e-01
 -7.60322770e-01  2.62280138e+00  2.62280138e+00  2.62280138e+00
  1.97523909e+01  1.97523909e+01  1.97523909e+01  8.24363220e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103917876393  E_coul = 54.46740222507686
Extra cycle  E= -127.133636953687  delta_E= -4.26e-14  |g|= 1.59e-08  |ddm|= 1.78e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.1779651156147
E1 = -181.60103917876393  E_coul = 54.46740222507686
init E= -127.133636953687
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.760322760510099  LUMO = 2.62280138385083
  mo_energy =
[-3.22319951e+01 -1.82015395e+00 -7.60322761e-01 -7.60322761e-01
 -7.60322761e-01  2.62280138e+00  2.62280138e+00  2.62280138e+00
  1.97523909e+01  1.97523909e+01  1.97523909e+01  8.24363221e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103913582415  E_coul = 54.46740218213707
cycle= 1 E= -127.133636953687  delta_E=    0  |g|= 4.94e-09  |ddm|= 5.74e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.60103913582415  E_coul = 54.46740218213707
  HOMO = -0.760322763370172  LUMO = 2.62280138125525
  mo_energy =
[-3.22319951e+01 -1.82015395e+00 -7.60322763e-01 -7.60322763e-01
 -7.60322763e-01  2.62280138e+00  2.62280138e+00  2.62280138e+00
  1.97523909e+01  1.97523909e+01  1.97523909e+01  8.24363220e+01
  1.36057374e+03  6.12299182e+03]
E1 = -181.60103914912557  E_coul = 54.46740219543842
Extra cycle  E= -127.133636953687  delta_E= -8.53e-14  |g|= 1.53e-09  |ddm|= 1.77e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94742647e+03 9.57476503e-01 1.29721856e+03 1.01251818e+02
 1.76559404e+01 1.33004044e+01 5.95007452e-01 2.76291226e+00]
grad_E = [ 8.97877718e-05 -2.99652913e-03  4.05774497e-04  1.37211389e-04
  1.50824487e-04 -3.94009535e-05 -4.02470616e-02  7.29774083e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42553632        1
[INPUT] 0    0    [1    /1   ]  0.957396090016       1
[INPUT] 0    0    [1    /1   ]  1297.21401685        1
[INPUT] 0    0    [1    /1   ]  101.079560906        1
[INPUT] 0    0    [1    /1   ]  17.6416356842        1
[INPUT] 1    0    [1    /1   ]  13.2519131634        1
[INPUT] 1    0    [1    /1   ]  0.597417300123       1
[INPUT] 1    0    [1    /1   ]  2.75653283227        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4255363195723, 1.0]], [0, [0.957396090015954, 1.0]], [0, [1297.2140168458213, 1.0]], [0, [101.07956090640504, 1.0]], [0, [17.64163568422089, 1.0]], [1, [13.25191316342627, 1.0]], [1, [0.597417300123192, 1.0]], [1, [2.7565328322742886, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42553632]
bas 1, expnt(s) = [0.95739609]
bas 2, expnt(s) = [1297.21401685]
bas 3, expnt(s) = [101.07956091]
bas 4, expnt(s) = [17.64163568]
bas 5, expnt(s) = [13.25191316]
bas 6, expnt(s) = [0.5974173]
bas 7, expnt(s) = [2.75653283]
CPU time:       147.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742554e+03 7.40645979e+02 9.57396090e-01 2.44530908e+00
 1.29721402e+03 5.46101977e+02 1.01079561e+02 8.05401686e+01
 1.76416357e+01 2.17479918e+01 1.32519132e+01 7.37619890e+01
 5.97417300e-01 1.53225708e+00 2.75653283e+00 1.03618751e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933479486911924
cond(S) = 91.12844351769766
E1 = -181.49039982621568  E_coul = 54.92261431268523
init E= -126.56778551353
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.749398402014231  LUMO = 2.63130911827689
  mo_energy =
[-3.20649985e+01 -1.79283640e+00 -7.49398402e-01 -7.49398402e-01
 -7.49398402e-01  2.63130912e+00  2.63130912e+00  2.63130912e+00
  1.97807140e+01  1.97807140e+01  1.97807140e+01  8.24139037e+01
  1.36020486e+03  6.12265052e+03]
E1 = -181.47488308456408  E_coul = 54.34160560409371
cycle= 1 E= -127.13327748047  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195391
diis-c [-0.03817768  1.        ]
  HOMO = -0.768150427275309  LUMO = 2.62122776147702
  mo_energy =
[-3.22623358e+01 -1.82933929e+00 -7.68150427e-01 -7.68150427e-01
 -7.68150427e-01  2.62122776e+00  2.62122776e+00  2.62122776e+00
  1.96675029e+01  1.96675029e+01  1.96675029e+01  8.22431184e+01
  1.35993142e+03  6.12232033e+03]
E1 = -181.67154723150526  E_coul = 54.537866086325316
cycle= 2 E= -127.13368114518  delta_E= -0.000404  |g|= 0.0226  |ddm|= 0.026
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0376557
diis-c [-7.42848956e-04  1.18392170e-01  8.81607830e-01]
  HOMO = -0.75666296261413  LUMO = 2.63165703548534
  mo_energy =
[-3.22236031e+01 -1.81596510e+00 -7.56662963e-01 -7.56662963e-01
 -7.56662963e-01  2.63165704e+00  2.63165704e+00  2.63165704e+00
  1.96964080e+01  1.96964080e+01  1.96964080e+01  8.22817880e+01
  1.35997422e+03  6.12236340e+03]
E1 = -181.61818186117907  E_coul = 54.48445991382396
cycle= 3 E= -127.133721947355  delta_E= -4.08e-05  |g|= 0.00346  |ddm|= 0.00712
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577826
diis-c [-5.11850897e-09 -1.31156935e-03  1.29666255e-01  8.71645314e-01]
  HOMO = -0.758202121749011  LUMO = 2.63026640668775
  mo_energy =
[-3.22287203e+01 -1.81774936e+00 -7.58202122e-01 -7.58202122e-01
 -7.58202122e-01  2.63026641e+00  2.63026641e+00  2.63026641e+00
  1.96925693e+01  1.96925693e+01  1.96925693e+01  8.22767090e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528321742784  E_coul = 54.4915602860471
cycle= 4 E= -127.133722931381  delta_E= -9.84e-07  |g|= 1.44e-06  |ddm|= 0.000946
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.45933e-06
diis-c [-1.51419801e-13  2.09520865e-05 -1.95793354e-03 -1.35655204e-02
  1.01550250e+00]
  HOMO = -0.758202814294613  LUMO = 2.63026607497559
  mo_energy =
[-3.22287217e+01 -1.81774996e+00 -7.58202814e-01 -7.58202814e-01
 -7.58202814e-01  2.63026607e+00  2.63026607e+00  2.63026607e+00
  1.96925682e+01  1.96925682e+01  1.96925682e+01  8.22767079e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.6252854241463  E_coul = 54.4915624927654
cycle= 5 E= -127.133722931381  delta_E= -1.85e-13  |g|= 3.92e-08  |ddm|= 2.73e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.6252854241463  E_coul = 54.4915624927654
  HOMO = -0.758202837177626  LUMO = 2.63026605034561
  mo_energy =
[-3.22287217e+01 -1.81774999e+00 -7.58202837e-01 -7.58202837e-01
 -7.58202837e-01  2.63026605e+00  2.63026605e+00  2.63026605e+00
  1.96925681e+01  1.96925681e+01  1.96925681e+01  8.22767078e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528552527175  E_coul = 54.491562593890926
Extra cycle  E= -127.133722931381  delta_E= 9.95e-14  |g|= 1.17e-08  |ddm|= 1.31e-08
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94742554e+03 9.57396090e-01 1.29721402e+03 1.01079561e+02
 1.76416357e+01 1.32519132e+01 5.97417300e-01 2.75653283e+00]
E = -127.13372293138082
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42553632        1
[INPUT] 0    0    [1    /1   ]  0.957396090016       1
[INPUT] 0    0    [1    /1   ]  1297.21401685        1
[INPUT] 0    0    [1    /1   ]  101.079560906        1
[INPUT] 0    0    [1    /1   ]  17.6416356842        1
[INPUT] 1    0    [1    /1   ]  13.2519131634        1
[INPUT] 1    0    [1    /1   ]  0.597417300123       1
[INPUT] 1    0    [1    /1   ]  2.75653283227        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4255363195723, 1.0]], [0, [0.957396090015954, 1.0]], [0, [1297.2140168458213, 1.0]], [0, [101.07956090640504, 1.0]], [0, [17.64163568422089, 1.0]], [1, [13.25191316342627, 1.0]], [1, [0.597417300123192, 1.0]], [1, [2.7565328322742886, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42553632]
bas 1, expnt(s) = [0.95739609]
bas 2, expnt(s) = [1297.21401685]
bas 3, expnt(s) = [101.07956091]
bas 4, expnt(s) = [17.64163568]
bas 5, expnt(s) = [13.25191316]
bas 6, expnt(s) = [0.5974173]
bas 7, expnt(s) = [2.75653283]
CPU time:       148.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742554e+03 7.40645979e+02 9.57396090e-01 2.44530908e+00
 1.29721402e+03 5.46101977e+02 1.01079561e+02 8.05401686e+01
 1.76416357e+01 2.17479918e+01 1.32519132e+01 7.37619890e+01
 5.97417300e-01 1.53225708e+00 2.75653283e+00 1.03618751e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933479486911924
cond(S) = 91.12844351769766
E1 = -181.49039982621568  E_coul = 54.92261431268523
init E= -126.56778551353
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.749398402014231  LUMO = 2.63130911827689
  mo_energy =
[-3.20649985e+01 -1.79283640e+00 -7.49398402e-01 -7.49398402e-01
 -7.49398402e-01  2.63130912e+00  2.63130912e+00  2.63130912e+00
  1.97807140e+01  1.97807140e+01  1.97807140e+01  8.24139037e+01
  1.36020486e+03  6.12265052e+03]
E1 = -181.47488308456408  E_coul = 54.34160560409371
cycle= 1 E= -127.13327748047  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195391
diis-c [-0.03817768  1.        ]
  HOMO = -0.768150427275309  LUMO = 2.62122776147702
  mo_energy =
[-3.22623358e+01 -1.82933929e+00 -7.68150427e-01 -7.68150427e-01
 -7.68150427e-01  2.62122776e+00  2.62122776e+00  2.62122776e+00
  1.96675029e+01  1.96675029e+01  1.96675029e+01  8.22431184e+01
  1.35993142e+03  6.12232033e+03]
E1 = -181.67154723150526  E_coul = 54.537866086325316
cycle= 2 E= -127.13368114518  delta_E= -0.000404  |g|= 0.0226  |ddm|= 0.026
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0376557
diis-c [-7.42848956e-04  1.18392170e-01  8.81607830e-01]
  HOMO = -0.75666296261413  LUMO = 2.63165703548534
  mo_energy =
[-3.22236031e+01 -1.81596510e+00 -7.56662963e-01 -7.56662963e-01
 -7.56662963e-01  2.63165704e+00  2.63165704e+00  2.63165704e+00
  1.96964080e+01  1.96964080e+01  1.96964080e+01  8.22817880e+01
  1.35997422e+03  6.12236340e+03]
E1 = -181.61818186117907  E_coul = 54.48445991382396
cycle= 3 E= -127.133721947355  delta_E= -4.08e-05  |g|= 0.00346  |ddm|= 0.00712
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577826
diis-c [-5.11850897e-09 -1.31156935e-03  1.29666255e-01  8.71645314e-01]
  HOMO = -0.758202121749011  LUMO = 2.63026640668775
  mo_energy =
[-3.22287203e+01 -1.81774936e+00 -7.58202122e-01 -7.58202122e-01
 -7.58202122e-01  2.63026641e+00  2.63026641e+00  2.63026641e+00
  1.96925693e+01  1.96925693e+01  1.96925693e+01  8.22767090e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528321742784  E_coul = 54.4915602860471
cycle= 4 E= -127.133722931381  delta_E= -9.84e-07  |g|= 1.44e-06  |ddm|= 0.000946
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.45933e-06
diis-c [-1.51419801e-13  2.09520865e-05 -1.95793354e-03 -1.35655204e-02
  1.01550250e+00]
  HOMO = -0.758202814294613  LUMO = 2.63026607497559
  mo_energy =
[-3.22287217e+01 -1.81774996e+00 -7.58202814e-01 -7.58202814e-01
 -7.58202814e-01  2.63026607e+00  2.63026607e+00  2.63026607e+00
  1.96925682e+01  1.96925682e+01  1.96925682e+01  8.22767079e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.6252854241463  E_coul = 54.4915624927654
cycle= 5 E= -127.133722931381  delta_E= -1.85e-13  |g|= 3.92e-08  |ddm|= 2.73e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6252854241463  E_coul = 54.4915624927654
  HOMO = -0.758202837177626  LUMO = 2.63026605034561
  mo_energy =
[-3.22287217e+01 -1.81774999e+00 -7.58202837e-01 -7.58202837e-01
 -7.58202837e-01  2.63026605e+00  2.63026605e+00  2.63026605e+00
  1.96925681e+01  1.96925681e+01  1.96925681e+01  8.22767078e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528552527175  E_coul = 54.491562593890926
Extra cycle  E= -127.133722931381  delta_E= 9.95e-14  |g|= 1.17e-08  |ddm|= 1.31e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.12844351769766
E1 = -181.62528552527175  E_coul = 54.491562593890926
init E= -127.133722931381
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.758202830485068  LUMO = 2.63026605641858
  mo_energy =
[-3.22287217e+01 -1.81774998e+00 -7.58202830e-01 -7.58202830e-01
 -7.58202830e-01  2.63026606e+00  2.63026606e+00  2.63026606e+00
  1.96925681e+01  1.96925681e+01  1.96925681e+01  8.22767078e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528549396313  E_coul = 54.4915625625822
cycle= 1 E= -127.133722931381  delta_E= -1.14e-13  |g|= 3.6e-09  |ddm|= 4.19e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.62528549396313  E_coul = 54.4915625625822
  HOMO = -0.758202832570197  LUMO = 2.6302660545285
  mo_energy =
[-3.22287217e+01 -1.81774998e+00 -7.58202833e-01 -7.58202833e-01
 -7.58202833e-01  2.63026605e+00  2.63026605e+00  2.63026605e+00
  1.96925681e+01  1.96925681e+01  1.96925681e+01  8.22767078e+01
  1.35996863e+03  6.12235774e+03]
E1 = -181.62528550361247  E_coul = 54.49156257223166
Extra cycle  E= -127.133722931381  delta_E= 1.14e-13  |g|= 1.11e-09  |ddm|= 1.29e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94742554e+03 9.57396090e-01 1.29721402e+03 1.01079561e+02
 1.76416357e+01 1.32519132e+01 5.97417300e-01 2.75653283e+00]
grad_E = [ 9.04465695e-05 -1.46122696e-03  4.07863741e-04 -2.27624124e-05
  4.03591841e-04  8.29218117e-05 -2.71491838e-04 -8.16745177e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42538168        1
[INPUT] 0    0    [1    /1   ]  0.957593096668       1
[INPUT] 0    0    [1    /1   ]  1297.21328569        1
[INPUT] 0    0    [1    /1   ]  101.054223015        1
[INPUT] 0    0    [1    /1   ]  17.6361525708        1
[INPUT] 1    0    [1    /1   ]  13.2520864346        1
[INPUT] 1    0    [1    /1   ]  0.597684664265       1
[INPUT] 1    0    [1    /1   ]  2.75783184553        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.42538168418, 1.0]], [0, [0.9575930966679025, 1.0]], [0, [1297.2132856908368, 1.0]], [0, [101.05422301540052, 1.0]], [0, [17.636152570809486, 1.0]], [1, [13.252086434564076, 1.0]], [1, [0.5976846642647059, 1.0]], [1, [2.757831845526008, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42538168]
bas 1, expnt(s) = [0.9575931]
bas 2, expnt(s) = [1297.21328569]
bas 3, expnt(s) = [101.05422302]
bas 4, expnt(s) = [17.63615257]
bas 5, expnt(s) = [13.25208643]
bas 6, expnt(s) = [0.59768466]
bas 7, expnt(s) = [2.75783185]
CPU time:       152.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742538e+03 7.40645935e+02 9.57593097e-01 2.44568646e+00
 1.29721329e+03 5.46101746e+02 1.01054223e+02 8.05250262e+01
 1.76361526e+01 2.17429221e+01 1.32520864e+01 7.37631946e+01
 5.97684664e-01 1.53311430e+00 2.75783185e+00 1.03679793e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933414556507813
cond(S) = 91.11971190783814
E1 = -181.4917259886123  E_coul = 54.923263425670534
init E= -126.568462562942
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749336516276101  LUMO = 2.63294949641229
  mo_energy =
[-3.20649604e+01 -1.79273656e+00 -7.49336516e-01 -7.49336516e-01
 -7.49336516e-01  2.63294950e+00  2.63294950e+00  2.63294950e+00
  1.97858459e+01  1.97858459e+01  1.97858459e+01  8.23801984e+01
  1.36010519e+03  6.12254734e+03]
E1 = -181.47664824206464  E_coul = 54.343367314907105
cycle= 1 E= -127.133280927158  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195272
diis-c [-0.03813096  1.        ]
  HOMO = -0.767995994370478  LUMO = 2.62293591858955
  mo_energy =
[-3.22621148e+01 -1.82914352e+00 -7.67995994e-01 -7.67995994e-01
 -7.67995994e-01  2.62293592e+00  2.62293592e+00  2.62293592e+00
  1.96727882e+01  1.96727882e+01  1.96727882e+01  8.22095438e+01
  1.35983151e+03  6.12221680e+03]
E1 = -181.67296934244513  E_coul = 54.53928595809921
cycle= 2 E= -127.133683384346  delta_E= -0.000402  |g|= 0.0226  |ddm|= 0.0259
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0375927
diis-c [-7.40949320e-04  1.18234296e-01  8.81765704e-01]
  HOMO = -0.756527605883554  LUMO = 2.63335318612585
  mo_energy =
[-3.22234391e+01 -1.81579061e+00 -7.56527606e-01 -7.56527606e-01
 -7.56527606e-01  2.63335319e+00  2.63335319e+00  2.63335319e+00
  1.97016493e+01  1.97016493e+01  1.97016493e+01  8.22481554e+01
  1.35987423e+03  6.12225981e+03]
E1 = -181.6196971290008  E_coul = 54.48597308682491
cycle= 3 E= -127.133724042176  delta_E= -4.07e-05  |g|= 0.00346  |ddm|= 0.00711
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577476
diis-c [-5.06601362e-09 -1.31321300e-03  1.29783873e-01  8.71529340e-01]
  HOMO = -0.758065687632167  LUMO = 2.63196282620668
  mo_energy =
[-3.22285527e+01 -1.81757369e+00 -7.58065688e-01 -7.58065688e-01
 -7.58065688e-01  2.63196283e+00  2.63196283e+00  2.63196283e+00
  1.96978132e+01  1.96978132e+01  1.96978132e+01  8.22430799e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.62679188523066  E_coul = 54.4930668605481
cycle= 4 E= -127.133725024683  delta_E= -9.83e-07  |g|= 1.5e-06  |ddm|= 0.000945
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58162e-06
diis-c [-1.64629915e-13  2.09083618e-05 -1.95688981e-03 -1.35685541e-02
  1.01550454e+00]
  HOMO = -0.758066418220583  LUMO = 2.6319624595419
  mo_energy =
[-3.22285541e+01 -1.81757433e+00 -7.58066418e-01 -7.58066418e-01
 -7.58066418e-01  2.63196246e+00  2.63196246e+00  2.63196246e+00
  1.96978119e+01  1.96978119e+01  1.96978119e+01  8.22430787e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.62679424119736  E_coul = 54.493069216514705
cycle= 5 E= -127.133725024683  delta_E= -9.95e-14  |g|= 4.07e-08  |ddm|= 2.92e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.62679424119736  E_coul = 54.493069216514705
  HOMO = -0.758066442006764  LUMO = 2.63196243410668
  mo_energy =
[-3.22285542e+01 -1.81757436e+00 -7.58066442e-01 -7.58066442e-01
 -7.58066442e-01  2.63196243e+00  2.63196243e+00  2.63196243e+00
  1.96978118e+01  1.96978118e+01  1.96978118e+01  8.22430786e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.6267943459337  E_coul = 54.49306932125102
Extra cycle  E= -127.133725024683  delta_E=    0  |g|= 1.21e-08  |ddm|= 1.36e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94742538e+03 9.57593097e-01 1.29721329e+03 1.01054223e+02
 1.76361526e+01 1.32520864e+01 5.97684664e-01 2.75783185e+00]
E = -127.13372502468266
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42538168        1
[INPUT] 0    0    [1    /1   ]  0.957593096668       1
[INPUT] 0    0    [1    /1   ]  1297.21328569        1
[INPUT] 0    0    [1    /1   ]  101.054223015        1
[INPUT] 0    0    [1    /1   ]  17.6361525708        1
[INPUT] 1    0    [1    /1   ]  13.2520864346        1
[INPUT] 1    0    [1    /1   ]  0.597684664265       1
[INPUT] 1    0    [1    /1   ]  2.75783184553        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.42538168418, 1.0]], [0, [0.9575930966679025, 1.0]], [0, [1297.2132856908368, 1.0]], [0, [101.05422301540052, 1.0]], [0, [17.636152570809486, 1.0]], [1, [13.252086434564076, 1.0]], [1, [0.5976846642647059, 1.0]], [1, [2.757831845526008, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42538168]
bas 1, expnt(s) = [0.9575931]
bas 2, expnt(s) = [1297.21328569]
bas 3, expnt(s) = [101.05422302]
bas 4, expnt(s) = [17.63615257]
bas 5, expnt(s) = [13.25208643]
bas 6, expnt(s) = [0.59768466]
bas 7, expnt(s) = [2.75783185]
CPU time:       152.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742538e+03 7.40645935e+02 9.57593097e-01 2.44568646e+00
 1.29721329e+03 5.46101746e+02 1.01054223e+02 8.05250262e+01
 1.76361526e+01 2.17429221e+01 1.32520864e+01 7.37631946e+01
 5.97684664e-01 1.53311430e+00 2.75783185e+00 1.03679793e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933414556507813
cond(S) = 91.11971190783814
E1 = -181.4917259886123  E_coul = 54.923263425670534
init E= -126.568462562942
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749336516276101  LUMO = 2.63294949641229
  mo_energy =
[-3.20649604e+01 -1.79273656e+00 -7.49336516e-01 -7.49336516e-01
 -7.49336516e-01  2.63294950e+00  2.63294950e+00  2.63294950e+00
  1.97858459e+01  1.97858459e+01  1.97858459e+01  8.23801984e+01
  1.36010519e+03  6.12254734e+03]
E1 = -181.47664824206464  E_coul = 54.343367314907105
cycle= 1 E= -127.133280927158  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195272
diis-c [-0.03813096  1.        ]
  HOMO = -0.767995994370478  LUMO = 2.62293591858955
  mo_energy =
[-3.22621148e+01 -1.82914352e+00 -7.67995994e-01 -7.67995994e-01
 -7.67995994e-01  2.62293592e+00  2.62293592e+00  2.62293592e+00
  1.96727882e+01  1.96727882e+01  1.96727882e+01  8.22095438e+01
  1.35983151e+03  6.12221680e+03]
E1 = -181.67296934244513  E_coul = 54.53928595809921
cycle= 2 E= -127.133683384346  delta_E= -0.000402  |g|= 0.0226  |ddm|= 0.0259
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0375927
diis-c [-7.40949320e-04  1.18234296e-01  8.81765704e-01]
  HOMO = -0.756527605883554  LUMO = 2.63335318612585
  mo_energy =
[-3.22234391e+01 -1.81579061e+00 -7.56527606e-01 -7.56527606e-01
 -7.56527606e-01  2.63335319e+00  2.63335319e+00  2.63335319e+00
  1.97016493e+01  1.97016493e+01  1.97016493e+01  8.22481554e+01
  1.35987423e+03  6.12225981e+03]
E1 = -181.6196971290008  E_coul = 54.48597308682491
cycle= 3 E= -127.133724042176  delta_E= -4.07e-05  |g|= 0.00346  |ddm|= 0.00711
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577476
diis-c [-5.06601362e-09 -1.31321300e-03  1.29783873e-01  8.71529340e-01]
  HOMO = -0.758065687632167  LUMO = 2.63196282620668
  mo_energy =
[-3.22285527e+01 -1.81757369e+00 -7.58065688e-01 -7.58065688e-01
 -7.58065688e-01  2.63196283e+00  2.63196283e+00  2.63196283e+00
  1.96978132e+01  1.96978132e+01  1.96978132e+01  8.22430799e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.62679188523066  E_coul = 54.4930668605481
cycle= 4 E= -127.133725024683  delta_E= -9.83e-07  |g|= 1.5e-06  |ddm|= 0.000945
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58162e-06
diis-c [-1.64629915e-13  2.09083618e-05 -1.95688981e-03 -1.35685541e-02
  1.01550454e+00]
  HOMO = -0.758066418220583  LUMO = 2.6319624595419
  mo_energy =
[-3.22285541e+01 -1.81757433e+00 -7.58066418e-01 -7.58066418e-01
 -7.58066418e-01  2.63196246e+00  2.63196246e+00  2.63196246e+00
  1.96978119e+01  1.96978119e+01  1.96978119e+01  8.22430787e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.62679424119736  E_coul = 54.493069216514705
cycle= 5 E= -127.133725024683  delta_E= -9.95e-14  |g|= 4.07e-08  |ddm|= 2.92e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.62679424119736  E_coul = 54.493069216514705
  HOMO = -0.758066442006764  LUMO = 2.63196243410668
  mo_energy =
[-3.22285542e+01 -1.81757436e+00 -7.58066442e-01 -7.58066442e-01
 -7.58066442e-01  2.63196243e+00  2.63196243e+00  2.63196243e+00
  1.96978118e+01  1.96978118e+01  1.96978118e+01  8.22430786e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.6267943459337  E_coul = 54.49306932125102
Extra cycle  E= -127.133725024683  delta_E=    0  |g|= 1.21e-08  |ddm|= 1.36e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.11971190783814
E1 = -181.6267943459337  E_coul = 54.49306932125102
init E= -127.133725024683
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.758066435076633  LUMO = 2.63196244039855
  mo_energy =
[-3.22285542e+01 -1.81757436e+00 -7.58066435e-01 -7.58066435e-01
 -7.58066435e-01  2.63196244e+00  2.63196244e+00  2.63196244e+00
  1.96978119e+01  1.96978119e+01  1.96978119e+01  8.22430787e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.62679431351052  E_coul = 54.49306928882783
cycle= 1 E= -127.133725024683  delta_E= -2.84e-14  |g|= 3.72e-09  |ddm|= 4.34e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.62679431351052  E_coul = 54.49306928882783
  HOMO = -0.758066437235897  LUMO = 2.63196243844029
  mo_energy =
[-3.22285542e+01 -1.81757436e+00 -7.58066437e-01 -7.58066437e-01
 -7.58066437e-01  2.63196244e+00  2.63196244e+00  2.63196244e+00
  1.96978119e+01  1.96978119e+01  1.96978119e+01  8.22430787e+01
  1.35986865e+03  6.12225416e+03]
E1 = -181.6267943235014  E_coul = 54.493069298818725
Extra cycle  E= -127.133725024683  delta_E= 1.42e-14  |g|= 1.15e-09  |ddm|= 1.33e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
exp = [1.94742538e+03 9.57593097e-01 1.29721329e+03 1.01054223e+02
 1.76361526e+01 1.32520864e+01 5.97684664e-01 2.75783185e+00]
grad_E = [ 9.05072041e-05 -3.16820723e-04  4.08048804e-04 -1.10253570e-05
  6.89105866e-05  8.26054861e-07 -1.98882483e-04 -2.34894097e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.4252755         1
[INPUT] 0    0    [1    /1   ]  0.957657528771       1
[INPUT] 0    0    [1    /1   ]  1297.21281041        1
[INPUT] 0    0    [1    /1   ]  101.049893512        1
[INPUT] 0    0    [1    /1   ]  17.6348517845        1
[INPUT] 1    0    [1    /1   ]  13.2561302453        1
[INPUT] 1    0    [1    /1   ]  0.597909021758       1
[INPUT] 1    0    [1    /1   ]  2.75901585816        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.425275499021, 1.0]], [0, [0.9576575287708307, 1.0]], [0, [1297.2128104137892, 1.0]], [0, [101.04989351244816, 1.0]], [0, [17.634851784536703, 1.0]], [1, [13.256130245337076, 1.0]], [1, [0.5979090217581798, 1.0]], [1, [2.759015858159348, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.4252755]
bas 1, expnt(s) = [0.95765753]
bas 2, expnt(s) = [1297.21281041]
bas 3, expnt(s) = [101.04989351]
bas 4, expnt(s) = [17.63485178]
bas 5, expnt(s) = [13.25613025]
bas 6, expnt(s) = [0.59790902]
bas 7, expnt(s) = [2.75901586]
CPU time:       156.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742528e+03 7.40645905e+02 9.57657529e-01 2.44580988e+00
 1.29721281e+03 5.46101596e+02 1.01049894e+02 8.05224387e+01
 1.76348518e+01 2.17417193e+01 1.32561302e+01 7.37913313e+01
 5.97909022e-01 1.53383370e+00 2.75901586e+00 1.03735436e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933365041131413
cond(S) = 91.11798051335973
E1 = -181.4921901073455  E_coul = 54.923508347577354
init E= -126.568681759768
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749315498920796  LUMO = 2.63430383499831
  mo_energy =
[-3.20649295e+01 -1.79270682e+00 -7.49315499e-01 -7.49315499e-01
 -7.49315499e-01  2.63430383e+00  2.63430383e+00  2.63430383e+00
  1.97944706e+01  1.97944706e+01  1.97944706e+01  8.23734422e+01
  1.36008690e+03  6.12252784e+03]
E1 = -181.47811358021127  E_coul = 54.34483069475465
cycle= 1 E= -127.133282885457  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195133
diis-c [-0.03807696  1.        ]
  HOMO = -0.767882371608831  LUMO = 2.62436114085833
  mo_energy =
[-3.22618573e+01 -1.82901022e+00 -7.67882372e-01 -7.67882372e-01
 -7.67882372e-01  2.62436114e+00  2.62436114e+00  2.62436114e+00
  1.96815745e+01  1.96815745e+01  1.96815745e+01  8.22029978e+01
  1.35981333e+03  6.12219740e+03]
E1 = -181.67404987155447  E_coul = 54.540365921180616
cycle= 2 E= -127.133683950374  delta_E= -0.000401  |g|= 0.0225  |ddm|= 0.0259
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.037519
diis-c [-7.39148532e-04  1.18017208e-01  8.81982792e-01]
  HOMO = -0.756434331746286  LUMO = 2.63476428019025
  mo_energy =
[-3.22232450e+01 -1.81568078e+00 -7.56434332e-01 -7.56434332e-01
 -7.56434332e-01  2.63476428e+00  2.63476428e+00  2.63476428e+00
  1.97103901e+01  1.97103901e+01  1.97103901e+01  8.22415460e+01
  1.35985599e+03  6.12224034e+03]
E1 = -181.62088063457546  E_coul = 54.487156192463935
cycle= 3 E= -127.133724442112  delta_E= -4.05e-05  |g|= 0.00346  |ddm|= 0.0071
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577194
diis-c [-5.04689172e-09 -1.31363778e-03  1.29952616e-01  8.71361022e-01]
  HOMO = -0.757971663389101  LUMO = 2.63337400494844
  mo_energy =
[-3.22283564e+01 -1.81746301e+00 -7.57971663e-01 -7.57971663e-01
 -7.57971663e-01  2.63337400e+00  2.63337400e+00  2.63337400e+00
  1.97065552e+01  1.97065552e+01  1.97065552e+01  8.22364727e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797045369115  E_coul = 54.494245030193696
cycle= 4 E= -127.133725423497  delta_E= -9.81e-07  |g|= 1.52e-06  |ddm|= 0.000945
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.62233e-06
diis-c [-1.69155730e-13  2.08921543e-05 -1.95862150e-03 -1.35684804e-02
  1.01550621e+00]
  HOMO = -0.757972406339164  LUMO = 2.63337362631259
  mo_energy =
[-3.22283579e+01 -1.81746367e+00 -7.57972406e-01 -7.57972406e-01
 -7.57972406e-01  2.63337363e+00  2.63337363e+00  2.63337363e+00
  1.97065540e+01  1.97065540e+01  1.97065540e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797285906782  E_coul = 54.494247435570244
cycle= 5 E= -127.133725423498  delta_E= -1.28e-13  |g|= 4.12e-08  |ddm|= 2.98e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.62797285906782  E_coul = 54.494247435570244
  HOMO = -0.757972430393347  LUMO = 2.63337360063932
  mo_energy =
[-3.22283580e+01 -1.81746370e+00 -7.57972430e-01 -7.57972430e-01
 -7.57972430e-01  2.63337360e+00  2.63337360e+00  2.63337360e+00
  1.97065539e+01  1.97065539e+01  1.97065539e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797296484715  E_coul = 54.49424754134966
Extra cycle  E= -127.133725423497  delta_E= 9.95e-14  |g|= 1.22e-08  |ddm|= 1.37e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94742528e+03 9.57657529e-01 1.29721281e+03 1.01049894e+02
 1.76348518e+01 1.32561302e+01 5.97909022e-01 2.75901586e+00]
E = -127.13372542349748
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.4252755         1
[INPUT] 0    0    [1    /1   ]  0.957657528771       1
[INPUT] 0    0    [1    /1   ]  1297.21281041        1
[INPUT] 0    0    [1    /1   ]  101.049893512        1
[INPUT] 0    0    [1    /1   ]  17.6348517845        1
[INPUT] 1    0    [1    /1   ]  13.2561302453        1
[INPUT] 1    0    [1    /1   ]  0.597909021758       1
[INPUT] 1    0    [1    /1   ]  2.75901585816        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.425275499021, 1.0]], [0, [0.9576575287708307, 1.0]], [0, [1297.2128104137892, 1.0]], [0, [101.04989351244816, 1.0]], [0, [17.634851784536703, 1.0]], [1, [13.256130245337076, 1.0]], [1, [0.5979090217581798, 1.0]], [1, [2.759015858159348, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.4252755]
bas 1, expnt(s) = [0.95765753]
bas 2, expnt(s) = [1297.21281041]
bas 3, expnt(s) = [101.04989351]
bas 4, expnt(s) = [17.63485178]
bas 5, expnt(s) = [13.25613025]
bas 6, expnt(s) = [0.59790902]
bas 7, expnt(s) = [2.75901586]
CPU time:       157.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742528e+03 7.40645905e+02 9.57657529e-01 2.44580988e+00
 1.29721281e+03 5.46101596e+02 1.01049894e+02 8.05224387e+01
 1.76348518e+01 2.17417193e+01 1.32561302e+01 7.37913313e+01
 5.97909022e-01 1.53383370e+00 2.75901586e+00 1.03735436e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933365041131413
cond(S) = 91.11798051335973
E1 = -181.4921901073455  E_coul = 54.923508347577354
init E= -126.568681759768
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749315498920796  LUMO = 2.63430383499831
  mo_energy =
[-3.20649295e+01 -1.79270682e+00 -7.49315499e-01 -7.49315499e-01
 -7.49315499e-01  2.63430383e+00  2.63430383e+00  2.63430383e+00
  1.97944706e+01  1.97944706e+01  1.97944706e+01  8.23734422e+01
  1.36008690e+03  6.12252784e+03]
E1 = -181.47811358021127  E_coul = 54.34483069475465
cycle= 1 E= -127.133282885457  delta_E= -0.565  |g|= 0.126  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195133
diis-c [-0.03807696  1.        ]
  HOMO = -0.767882371608831  LUMO = 2.62436114085833
  mo_energy =
[-3.22618573e+01 -1.82901022e+00 -7.67882372e-01 -7.67882372e-01
 -7.67882372e-01  2.62436114e+00  2.62436114e+00  2.62436114e+00
  1.96815745e+01  1.96815745e+01  1.96815745e+01  8.22029978e+01
  1.35981333e+03  6.12219740e+03]
E1 = -181.67404987155447  E_coul = 54.540365921180616
cycle= 2 E= -127.133683950374  delta_E= -0.000401  |g|= 0.0225  |ddm|= 0.0259
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.037519
diis-c [-7.39148532e-04  1.18017208e-01  8.81982792e-01]
  HOMO = -0.756434331746286  LUMO = 2.63476428019025
  mo_energy =
[-3.22232450e+01 -1.81568078e+00 -7.56434332e-01 -7.56434332e-01
 -7.56434332e-01  2.63476428e+00  2.63476428e+00  2.63476428e+00
  1.97103901e+01  1.97103901e+01  1.97103901e+01  8.22415460e+01
  1.35985599e+03  6.12224034e+03]
E1 = -181.62088063457546  E_coul = 54.487156192463935
cycle= 3 E= -127.133724442112  delta_E= -4.05e-05  |g|= 0.00346  |ddm|= 0.0071
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00577194
diis-c [-5.04689172e-09 -1.31363778e-03  1.29952616e-01  8.71361022e-01]
  HOMO = -0.757971663389101  LUMO = 2.63337400494844
  mo_energy =
[-3.22283564e+01 -1.81746301e+00 -7.57971663e-01 -7.57971663e-01
 -7.57971663e-01  2.63337400e+00  2.63337400e+00  2.63337400e+00
  1.97065552e+01  1.97065552e+01  1.97065552e+01  8.22364727e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797045369115  E_coul = 54.494245030193696
cycle= 4 E= -127.133725423497  delta_E= -9.81e-07  |g|= 1.52e-06  |ddm|= 0.000945
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.62233e-06
diis-c [-1.69155730e-13  2.08921543e-05 -1.95862150e-03 -1.35684804e-02
  1.01550621e+00]
  HOMO = -0.757972406339164  LUMO = 2.63337362631259
  mo_energy =
[-3.22283579e+01 -1.81746367e+00 -7.57972406e-01 -7.57972406e-01
 -7.57972406e-01  2.63337363e+00  2.63337363e+00  2.63337363e+00
  1.97065540e+01  1.97065540e+01  1.97065540e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797285906782  E_coul = 54.494247435570244
cycle= 5 E= -127.133725423498  delta_E= -1.28e-13  |g|= 4.12e-08  |ddm|= 2.98e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.62797285906782  E_coul = 54.494247435570244
  HOMO = -0.757972430393347  LUMO = 2.63337360063932
  mo_energy =
[-3.22283580e+01 -1.81746370e+00 -7.57972430e-01 -7.57972430e-01
 -7.57972430e-01  2.63337360e+00  2.63337360e+00  2.63337360e+00
  1.97065539e+01  1.97065539e+01  1.97065539e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797296484715  E_coul = 54.49424754134966
Extra cycle  E= -127.133725423497  delta_E= 9.95e-14  |g|= 1.22e-08  |ddm|= 1.37e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.11798051335973
E1 = -181.62797296484715  E_coul = 54.49424754134966
init E= -127.133725423497
    CPU time for initialize scf      0.07 sec, wall time      0.07 sec
  HOMO = -0.75797242339483  LUMO = 2.63337360699599
  mo_energy =
[-3.22283580e+01 -1.81746369e+00 -7.57972423e-01 -7.57972423e-01
 -7.57972423e-01  2.63337361e+00  2.63337361e+00  2.63337361e+00
  1.97065539e+01  1.97065539e+01  1.97065539e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797293210758  E_coul = 54.49424750861002
cycle= 1 E= -127.133725423498  delta_E= -8.53e-14  |g|= 3.76e-09  |ddm|= 4.38e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.62797293210758  E_coul = 54.49424750861002
  HOMO = -0.75797242557509  LUMO = 2.63337360501786
  mo_energy =
[-3.22283580e+01 -1.81746369e+00 -7.57972426e-01 -7.57972426e-01
 -7.57972426e-01  2.63337361e+00  2.63337361e+00  2.63337361e+00
  1.97065539e+01  1.97065539e+01  1.97065539e+01  8.22364714e+01
  1.35985041e+03  6.12223469e+03]
E1 = -181.62797294219362  E_coul = 54.494247518696085
Extra cycle  E= -127.133725423498  delta_E= 2.84e-14  |g|= 1.16e-09  |ddm|= 1.34e-09
    CPU time for scf_cycle      0.14 sec, wall time      0.14 sec
exp = [1.94742528e+03 9.57657529e-01 1.29721281e+03 1.01049894e+02
 1.76348518e+01 1.32561302e+01 5.97909022e-01 2.75901586e+00]
grad_E = [ 9.05136111e-05  9.28322430e-05  4.08067476e-04 -5.26253701e-06
 -2.73169244e-05 -2.12761287e-05 -8.92362009e-06  1.25740411e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42508762        1
[INPUT] 0    0    [1    /1   ]  0.957682945875       1
[INPUT] 0    0    [1    /1   ]  1297.21196953        1
[INPUT] 0    0    [1    /1   ]  101.048759463        1
[INPUT] 0    0    [1    /1   ]  17.6343521403        1
[INPUT] 1    0    [1    /1   ]  13.2595245712        1
[INPUT] 1    0    [1    /1   ]  0.598065617567       1
[INPUT] 1    0    [1    /1   ]  2.75984725386        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.425087620036, 1.0]], [0, [0.9576829458749981, 1.0]], [0, [1297.211969531538, 1.0]], [0, [101.04875946260995, 1.0]], [0, [17.63435214031183, 1.0]], [1, [13.259524571245349, 1.0]], [1, [0.5980656175667434, 1.0]], [1, [2.759847253864783, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42508762]
bas 1, expnt(s) = [0.95768295]
bas 2, expnt(s) = [1297.21196953]
bas 3, expnt(s) = [101.04875946]
bas 4, expnt(s) = [17.63435214]
bas 5, expnt(s) = [13.25952457]
bas 6, expnt(s) = [0.59806562]
bas 7, expnt(s) = [2.75984725]
CPU time:       160.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742509e+03 7.40645851e+02 9.57682946e-01 2.44585856e+00
 1.29721197e+03 5.46101331e+02 1.01048759e+02 8.05217609e+01
 1.76343521e+01 2.17412573e+01 1.32595246e+01 7.38149505e+01
 5.98065618e-01 1.53433587e+00 2.75984725e+00 1.03774512e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933331927396523
cond(S) = 91.11726454176197
E1 = -181.4923983478513  E_coul = 54.9236179224354
init E= -126.568780425416
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749306634490796  LUMO = 2.63524023397646
  mo_energy =
[-3.20649123e+01 -1.79269481e+00 -7.49306634e-01 -7.49306634e-01
 -7.49306634e-01  2.63524023e+00  2.63524023e+00  2.63524023e+00
  1.98010932e+01  1.98010932e+01  1.98010932e+01  8.23712180e+01
  1.36008119e+03  6.12252044e+03]
E1 = -181.4791211519229  E_coul = 54.34583677834629
cycle= 1 E= -127.133284373577  delta_E= -0.565  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195031
diis-c [-0.03803722  1.        ]
  HOMO = -0.767806189416419  LUMO = 2.62534954808059
  mo_energy =
[-3.22616716e+01 -1.82892137e+00 -7.67806189e-01 -7.67806189e-01
 -7.67806189e-01  2.62534955e+00  2.62534955e+00  2.62534955e+00
  1.96883154e+01  1.96883154e+01  1.96883154e+01  8.22009347e+01
  1.35980776e+03  6.12219013e+03]
E1 = -181.67477397340105  E_coul = 54.54108956299179
cycle= 2 E= -127.133684410409  delta_E= -0.0004  |g|= 0.0225  |ddm|= 0.0258
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0374644
diis-c [-7.37862323e-04  1.17851933e-01  8.82148067e-01]
  HOMO = -0.756373004894787  LUMO = 2.63574217104558
  mo_energy =
[-3.22231061e+01 -1.81560920e+00 -7.56373005e-01 -7.56373005e-01
 -7.56373005e-01  2.63574217e+00  2.63574217e+00  2.63574217e+00
  1.97170979e+01  1.97170979e+01  1.97170979e+01  8.22394363e+01
  1.35985036e+03  6.12223302e+03]
E1 = -181.6216804570478  E_coul = 54.48795567761467
cycle= 3 E= -127.133724779433  delta_E= -4.04e-05  |g|= 0.00346  |ddm|= 0.00709
    CPU time for cycle= 3      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.00576999
diis-c [-5.03799707e-09 -1.31378631e-03  1.30081568e-01  8.71232218e-01]
  HOMO = -0.75790983899343  LUMO = 2.63435193645314
  mo_energy =
[-3.22282161e+01 -1.81739085e+00 -7.57909839e-01 -7.57909839e-01
 -7.57909839e-01  2.63435194e+00  2.63435194e+00  2.63435194e+00
  1.97132638e+01  1.97132638e+01  1.97132638e+01  8.22343643e+01
  1.35984479e+03  6.12222737e+03]
E1 = -181.62876692046612  E_coul = 54.495041160405805
cycle= 4 E= -127.13372576006  delta_E= -9.81e-07  |g|= 1.53e-06  |ddm|= 0.000944
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.64113e-06
diis-c [-1.71248387e-13  2.08834890e-05 -1.96018665e-03 -1.35676814e-02
  1.01550698e+00]
  HOMO = -0.757910587558046  LUMO = 2.6343515521376
  mo_energy =
[-3.22282176e+01 -1.81739151e+00 -7.57910588e-01 -7.57910588e-01
 -7.57910588e-01  2.63435155e+00  2.63435155e+00  2.63435155e+00
  1.97132625e+01  1.97132625e+01  1.97132625e+01  8.22343631e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.62876934863638  E_coul = 54.49504358857598
cycle= 5 E= -127.13372576006  delta_E= -8.53e-14  |g|= 4.14e-08  |ddm|= 3.01e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.62876934863638  E_coul = 54.49504358857598
  HOMO = -0.757910611724714  LUMO = 2.63435152636498
  mo_energy =
[-3.22282177e+01 -1.81739154e+00 -7.57910612e-01 -7.57910612e-01
 -7.57910612e-01  2.63435153e+00  2.63435153e+00  2.63435153e+00
  1.97132624e+01  1.97132624e+01  1.97132624e+01  8.22343630e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.628769454841  E_coul = 54.4950436947806
Extra cycle  E= -127.13372576006  delta_E=    0  |g|= 1.23e-08  |ddm|= 1.38e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94742509e+03 9.57682946e-01 1.29721197e+03 1.01048759e+02
 1.76343521e+01 1.32595246e+01 5.98065618e-01 2.75984725e+00]
E = -127.1337257600604
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42508762        1
[INPUT] 0    0    [1    /1   ]  0.957682945875       1
[INPUT] 0    0    [1    /1   ]  1297.21196953        1
[INPUT] 0    0    [1    /1   ]  101.048759463        1
[INPUT] 0    0    [1    /1   ]  17.6343521403        1
[INPUT] 1    0    [1    /1   ]  13.2595245712        1
[INPUT] 1    0    [1    /1   ]  0.598065617567       1
[INPUT] 1    0    [1    /1   ]  2.75984725386        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.425087620036, 1.0]], [0, [0.9576829458749981, 1.0]], [0, [1297.211969531538, 1.0]], [0, [101.04875946260995, 1.0]], [0, [17.63435214031183, 1.0]], [1, [13.259524571245349, 1.0]], [1, [0.5980656175667434, 1.0]], [1, [2.759847253864783, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42508762]
bas 1, expnt(s) = [0.95768295]
bas 2, expnt(s) = [1297.21196953]
bas 3, expnt(s) = [101.04875946]
bas 4, expnt(s) = [17.63435214]
bas 5, expnt(s) = [13.25952457]
bas 6, expnt(s) = [0.59806562]
bas 7, expnt(s) = [2.75984725]
CPU time:       161.37
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742509e+03 7.40645851e+02 9.57682946e-01 2.44585856e+00
 1.29721197e+03 5.46101331e+02 1.01048759e+02 8.05217609e+01
 1.76343521e+01 2.17412573e+01 1.32595246e+01 7.38149505e+01
 5.98065618e-01 1.53433587e+00 2.75984725e+00 1.03774512e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933331927396523
cond(S) = 91.11726454176197
E1 = -181.4923983478513  E_coul = 54.9236179224354
init E= -126.568780425416
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749306634490796  LUMO = 2.63524023397646
  mo_energy =
[-3.20649123e+01 -1.79269481e+00 -7.49306634e-01 -7.49306634e-01
 -7.49306634e-01  2.63524023e+00  2.63524023e+00  2.63524023e+00
  1.98010932e+01  1.98010932e+01  1.98010932e+01  8.23712180e+01
  1.36008119e+03  6.12252044e+03]
E1 = -181.4791211519229  E_coul = 54.34583677834629
cycle= 1 E= -127.133284373577  delta_E= -0.565  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.195031
diis-c [-0.03803722  1.        ]
  HOMO = -0.767806189416419  LUMO = 2.62534954808059
  mo_energy =
[-3.22616716e+01 -1.82892137e+00 -7.67806189e-01 -7.67806189e-01
 -7.67806189e-01  2.62534955e+00  2.62534955e+00  2.62534955e+00
  1.96883154e+01  1.96883154e+01  1.96883154e+01  8.22009347e+01
  1.35980776e+03  6.12219013e+03]
E1 = -181.67477397340105  E_coul = 54.54108956299179
cycle= 2 E= -127.133684410409  delta_E= -0.0004  |g|= 0.0225  |ddm|= 0.0258
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0374644
diis-c [-7.37862323e-04  1.17851933e-01  8.82148067e-01]
  HOMO = -0.756373004894787  LUMO = 2.63574217104558
  mo_energy =
[-3.22231061e+01 -1.81560920e+00 -7.56373005e-01 -7.56373005e-01
 -7.56373005e-01  2.63574217e+00  2.63574217e+00  2.63574217e+00
  1.97170979e+01  1.97170979e+01  1.97170979e+01  8.22394363e+01
  1.35985036e+03  6.12223302e+03]
E1 = -181.6216804570478  E_coul = 54.48795567761467
cycle= 3 E= -127.133724779433  delta_E= -4.04e-05  |g|= 0.00346  |ddm|= 0.00709
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00576999
diis-c [-5.03799707e-09 -1.31378631e-03  1.30081568e-01  8.71232218e-01]
  HOMO = -0.75790983899343  LUMO = 2.63435193645314
  mo_energy =
[-3.22282161e+01 -1.81739085e+00 -7.57909839e-01 -7.57909839e-01
 -7.57909839e-01  2.63435194e+00  2.63435194e+00  2.63435194e+00
  1.97132638e+01  1.97132638e+01  1.97132638e+01  8.22343643e+01
  1.35984479e+03  6.12222737e+03]
E1 = -181.62876692046612  E_coul = 54.495041160405805
cycle= 4 E= -127.13372576006  delta_E= -9.81e-07  |g|= 1.53e-06  |ddm|= 0.000944
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.64113e-06
diis-c [-1.71248387e-13  2.08834890e-05 -1.96018665e-03 -1.35676814e-02
  1.01550698e+00]
  HOMO = -0.757910587558046  LUMO = 2.6343515521376
  mo_energy =
[-3.22282176e+01 -1.81739151e+00 -7.57910588e-01 -7.57910588e-01
 -7.57910588e-01  2.63435155e+00  2.63435155e+00  2.63435155e+00
  1.97132625e+01  1.97132625e+01  1.97132625e+01  8.22343631e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.62876934863638  E_coul = 54.49504358857598
cycle= 5 E= -127.13372576006  delta_E= -8.53e-14  |g|= 4.14e-08  |ddm|= 3.01e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.62876934863638  E_coul = 54.49504358857598
  HOMO = -0.757910611724714  LUMO = 2.63435152636498
  mo_energy =
[-3.22282177e+01 -1.81739154e+00 -7.57910612e-01 -7.57910612e-01
 -7.57910612e-01  2.63435153e+00  2.63435153e+00  2.63435153e+00
  1.97132624e+01  1.97132624e+01  1.97132624e+01  8.22343630e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.628769454841  E_coul = 54.4950436947806
Extra cycle  E= -127.13372576006  delta_E=    0  |g|= 1.23e-08  |ddm|= 1.38e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.11726454176197
E1 = -181.628769454841  E_coul = 54.4950436947806
init E= -127.13372576006
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.757910604698418  LUMO = 2.63435153274873
  mo_energy =
[-3.22282177e+01 -1.81739154e+00 -7.57910605e-01 -7.57910605e-01
 -7.57910605e-01  2.63435153e+00  2.63435153e+00  2.63435153e+00
  1.97132625e+01  1.97132625e+01  1.97132625e+01  8.22343630e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.62876942197494  E_coul = 54.49504366191459
cycle= 1 E= -127.13372576006  delta_E= 5.68e-14  |g|= 3.78e-09  |ddm|= 4.4e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.62876942197494  E_coul = 54.49504366191459
  HOMO = -0.757910606887044  LUMO = 2.63435153076245
  mo_energy =
[-3.22282177e+01 -1.81739154e+00 -7.57910607e-01 -7.57910607e-01
 -7.57910607e-01  2.63435153e+00  2.63435153e+00  2.63435153e+00
  1.97132625e+01  1.97132625e+01  1.97132625e+01  8.22343630e+01
  1.35984478e+03  6.12222737e+03]
E1 = -181.62876943209807  E_coul = 54.49504367203772
Extra cycle  E= -127.13372576006  delta_E=    0  |g|= 1.16e-09  |ddm|= 1.35e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94742509e+03 9.57682946e-01 1.29721197e+03 1.01048759e+02
 1.76343521e+01 1.32595246e+01 5.98065618e-01 2.75984725e+00]
grad_E = [ 9.05134252e-05  2.80392059e-04  4.08066812e-04 -2.12347678e-06
 -6.91842367e-05 -2.90786625e-05  1.61887041e-04  1.41429030e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42427285        1
[INPUT] 0    0    [1    /1   ]  0.957727614697       1
[INPUT] 0    0    [1    /1   ]  1297.20831083        1
[INPUT] 0    0    [1    /1   ]  101.047051264        1
[INPUT] 0    0    [1    /1   ]  17.6334336238        1
[INPUT] 1    0    [1    /1   ]  13.2670979699        1
[INPUT] 1    0    [1    /1   ]  0.598403895328       1
[INPUT] 1    0    [1    /1   ]  2.76164495975        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4242728456427, 1.0]], [0, [0.957727614696721, 1.0]], [0, [1297.2083108252223, 1.0]], [0, [101.04705126403908, 1.0]], [0, [17.63343362378385, 1.0]], [1, [13.267097969851841, 1.0]], [1, [0.5984038953283992, 1.0]], [1, [2.7616449597462194, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42427285]
bas 1, expnt(s) = [0.95772761]
bas 2, expnt(s) = [1297.20831083]
bas 3, expnt(s) = [101.04705126]
bas 4, expnt(s) = [17.63343362]
bas 5, expnt(s) = [13.26709797]
bas 6, expnt(s) = [0.5984039]
bas 7, expnt(s) = [2.76164496]
CPU time:       164.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742427e+03 7.40645619e+02 9.57727615e-01 2.44594412e+00
 1.29720831e+03 5.46100175e+02 1.01047051e+02 8.05207400e+01
 1.76334336e+01 2.17404080e+01 1.32670980e+01 7.38676551e+01
 5.98403895e-01 1.53542076e+00 2.76164496e+00 1.03859015e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933261189557205
cond(S) = 91.115464405611
E1 = -181.49279241798325  E_coul = 54.92382110851891
init E= -126.568971309464
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749290471176785  LUMO = 2.63725884500339
  mo_energy =
[-3.20648790e+01 -1.79267309e+00 -7.49290471e-01 -7.49290471e-01
 -7.49290471e-01  2.63725885e+00  2.63725885e+00  2.63725885e+00
  1.98156520e+01  1.98156520e+01  1.98156520e+01  8.23673825e+01
  1.36007063e+03  6.12250266e+03]
E1 = -181.48128426526654  E_coul = 54.347996271195356
cycle= 1 E= -127.133287994071  delta_E= -0.564  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194809
diis-c [-0.03795049  1.        ]
  HOMO = -0.767643455666478  LUMO = 2.62748166264814
  mo_energy =
[-3.22612701e+01 -1.82873147e+00 -7.67643456e-01 -7.67643456e-01
 -7.67643456e-01  2.62748166e+00  2.62748166e+00  2.62748166e+00
  1.97031322e+01  1.97031322e+01  1.97031322e+01  8.21974528e+01
  1.35979749e+03  6.12217263e+03]
E1 = -181.67631888044184  E_coul = 54.542633089076666
cycle= 2 E= -127.133685791365  delta_E= -0.000398  |g|= 0.0224  |ddm|= 0.0257
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0373452
diis-c [-7.35069019e-04  1.17489177e-01  8.82510823e-01]
  HOMO = -0.756242626842792  LUMO = 2.63785127305165
  mo_energy =
[-3.22228065e+01 -1.81545696e+00 -7.56242627e-01 -7.56242627e-01
 -7.56242627e-01  2.63785127e+00  2.63785127e+00  2.63785127e+00
  1.97318427e+01  1.97318427e+01  1.97318427e+01  8.22358529e+01
  1.35983999e+03  6.12221541e+03]
E1 = -181.6233904775184  E_coul = 54.48966458430286
cycle= 3 E= -127.133725893216  delta_E= -4.01e-05  |g|= 0.00345  |ddm|= 0.00706
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00576574
diis-c [-5.02108869e-09 -1.31404682e-03  1.30364591e-01  8.70949456e-01]
  HOMO = -0.757778383896822  LUMO = 2.63646113205579
  mo_energy =
[-3.22279136e+01 -1.81723736e+00 -7.57778384e-01 -7.57778384e-01
 -7.57778384e-01  2.63646113e+00  2.63646113e+00  2.63646113e+00
  1.97280101e+01  1.97280101e+01  1.97280101e+01  8.22307838e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63046966822668  E_coul = 54.49674279602948
cycle= 4 E= -127.133726872197  delta_E= -9.79e-07  |g|= 1.55e-06  |ddm|= 0.000943
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.67786e-06
diis-c [-1.75408004e-13  2.08665869e-05 -1.96378152e-03 -1.35661296e-02
  1.01550904e+00]
  HOMO = -0.757779143336193  LUMO = 2.6364607365766
  mo_energy =
[-3.22279152e+01 -1.81723804e+00 -7.57779143e-01 -7.57779143e-01
 -7.57779143e-01  2.63646074e+00  2.63646074e+00  2.63646074e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307826e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63047214075715  E_coul = 54.49674526855971
cycle= 5 E= -127.133726872197  delta_E= -2.42e-13  |g|= 4.17e-08  |ddm|= 3.07e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63047214075715  E_coul = 54.49674526855971
  HOMO = -0.757779167714524  LUMO = 2.63646071061721
  mo_energy =
[-3.22279152e+01 -1.81723807e+00 -7.57779168e-01 -7.57779168e-01
 -7.57779168e-01  2.63646071e+00  2.63646071e+00  2.63646071e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307825e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63047224775298  E_coul = 54.49674537555568
Extra cycle  E= -127.133726872197  delta_E= 1.56e-13  |g|= 1.23e-08  |ddm|= 1.39e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94742427e+03 9.57727615e-01 1.29720831e+03 1.01047051e+02
 1.76334336e+01 1.32670980e+01 5.98403895e-01 2.76164496e+00]
E = -127.13372687219729
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.42427285        1
[INPUT] 0    0    [1    /1   ]  0.957727614697       1
[INPUT] 0    0    [1    /1   ]  1297.20831083        1
[INPUT] 0    0    [1    /1   ]  101.047051264        1
[INPUT] 0    0    [1    /1   ]  17.6334336238        1
[INPUT] 1    0    [1    /1   ]  13.2670979699        1
[INPUT] 1    0    [1    /1   ]  0.598403895328       1
[INPUT] 1    0    [1    /1   ]  2.76164495975        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4242728456427, 1.0]], [0, [0.957727614696721, 1.0]], [0, [1297.2083108252223, 1.0]], [0, [101.04705126403908, 1.0]], [0, [17.63343362378385, 1.0]], [1, [13.267097969851841, 1.0]], [1, [0.5984038953283992, 1.0]], [1, [2.7616449597462194, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.42427285]
bas 1, expnt(s) = [0.95772761]
bas 2, expnt(s) = [1297.20831083]
bas 3, expnt(s) = [101.04705126]
bas 4, expnt(s) = [17.63343362]
bas 5, expnt(s) = [13.26709797]
bas 6, expnt(s) = [0.5984039]
bas 7, expnt(s) = [2.76164496]
CPU time:       165.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742427e+03 7.40645619e+02 9.57727615e-01 2.44594412e+00
 1.29720831e+03 5.46100175e+02 1.01047051e+02 8.05207400e+01
 1.76334336e+01 2.17404080e+01 1.32670980e+01 7.38676551e+01
 5.98403895e-01 1.53542076e+00 2.76164496e+00 1.03859015e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933261189557205
cond(S) = 91.115464405611
E1 = -181.49279241798325  E_coul = 54.92382110851891
init E= -126.568971309464
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749290471176785  LUMO = 2.63725884500339
  mo_energy =
[-3.20648790e+01 -1.79267309e+00 -7.49290471e-01 -7.49290471e-01
 -7.49290471e-01  2.63725885e+00  2.63725885e+00  2.63725885e+00
  1.98156520e+01  1.98156520e+01  1.98156520e+01  8.23673825e+01
  1.36007063e+03  6.12250266e+03]
E1 = -181.48128426526654  E_coul = 54.347996271195356
cycle= 1 E= -127.133287994071  delta_E= -0.564  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194809
diis-c [-0.03795049  1.        ]
  HOMO = -0.767643455666478  LUMO = 2.62748166264814
  mo_energy =
[-3.22612701e+01 -1.82873147e+00 -7.67643456e-01 -7.67643456e-01
 -7.67643456e-01  2.62748166e+00  2.62748166e+00  2.62748166e+00
  1.97031322e+01  1.97031322e+01  1.97031322e+01  8.21974528e+01
  1.35979749e+03  6.12217263e+03]
E1 = -181.67631888044184  E_coul = 54.542633089076666
cycle= 2 E= -127.133685791365  delta_E= -0.000398  |g|= 0.0224  |ddm|= 0.0257
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0373452
diis-c [-7.35069019e-04  1.17489177e-01  8.82510823e-01]
  HOMO = -0.756242626842792  LUMO = 2.63785127305165
  mo_energy =
[-3.22228065e+01 -1.81545696e+00 -7.56242627e-01 -7.56242627e-01
 -7.56242627e-01  2.63785127e+00  2.63785127e+00  2.63785127e+00
  1.97318427e+01  1.97318427e+01  1.97318427e+01  8.22358529e+01
  1.35983999e+03  6.12221541e+03]
E1 = -181.6233904775184  E_coul = 54.48966458430286
cycle= 3 E= -127.133725893216  delta_E= -4.01e-05  |g|= 0.00345  |ddm|= 0.00706
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00576574
diis-c [-5.02108869e-09 -1.31404682e-03  1.30364591e-01  8.70949456e-01]
  HOMO = -0.757778383896822  LUMO = 2.63646113205579
  mo_energy =
[-3.22279136e+01 -1.81723736e+00 -7.57778384e-01 -7.57778384e-01
 -7.57778384e-01  2.63646113e+00  2.63646113e+00  2.63646113e+00
  1.97280101e+01  1.97280101e+01  1.97280101e+01  8.22307838e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63046966822668  E_coul = 54.49674279602948
cycle= 4 E= -127.133726872197  delta_E= -9.79e-07  |g|= 1.55e-06  |ddm|= 0.000943
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.67786e-06
diis-c [-1.75408004e-13  2.08665869e-05 -1.96378152e-03 -1.35661296e-02
  1.01550904e+00]
  HOMO = -0.757779143336193  LUMO = 2.6364607365766
  mo_energy =
[-3.22279152e+01 -1.81723804e+00 -7.57779143e-01 -7.57779143e-01
 -7.57779143e-01  2.63646074e+00  2.63646074e+00  2.63646074e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307826e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63047214075715  E_coul = 54.49674526855971
cycle= 5 E= -127.133726872197  delta_E= -2.42e-13  |g|= 4.17e-08  |ddm|= 3.07e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63047214075715  E_coul = 54.49674526855971
  HOMO = -0.757779167714524  LUMO = 2.63646071061721
  mo_energy =
[-3.22279152e+01 -1.81723807e+00 -7.57779168e-01 -7.57779168e-01
 -7.57779168e-01  2.63646071e+00  2.63646071e+00  2.63646071e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307825e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63047224775298  E_coul = 54.49674537555568
Extra cycle  E= -127.133726872197  delta_E= 1.56e-13  |g|= 1.23e-08  |ddm|= 1.39e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.115464405611
E1 = -181.63047224775298  E_coul = 54.49674537555568
init E= -127.133726872197
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.757779160636602  LUMO = 2.63646071705186
  mo_energy =
[-3.22279152e+01 -1.81723806e+00 -7.57779161e-01 -7.57779161e-01
 -7.57779161e-01  2.63646072e+00  2.63646072e+00  2.63646072e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307825e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.6304722146536  E_coul = 54.496745342456215
cycle= 1 E= -127.133726872197  delta_E= -8.53e-14  |g|= 3.8e-09  |ddm|= 4.43e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6304722146536  E_coul = 54.496745342456215
  HOMO = -0.757779162840646  LUMO = 2.63646071505036
  mo_energy =
[-3.22279152e+01 -1.81723806e+00 -7.57779163e-01 -7.57779163e-01
 -7.57779163e-01  2.63646072e+00  2.63646072e+00  2.63646072e+00
  1.97280088e+01  1.97280088e+01  1.97280088e+01  8.22307825e+01
  1.35983441e+03  6.12220976e+03]
E1 = -181.63047222484485  E_coul = 54.4967453526475
Extra cycle  E= -127.133726872197  delta_E= 2.84e-14  |g|= 1.17e-09  |ddm|= 1.36e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94742427e+03 9.57727615e-01 1.29720831e+03 1.01047051e+02
 1.76334336e+01 1.32670980e+01 5.98403895e-01 2.76164496e+00]
grad_E = [ 9.05108179e-05  6.36016490e-04  4.08060447e-04  4.32799326e-06
 -1.49592181e-04 -4.26679267e-05  5.47624064e-04  4.00559080e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.422056          1
[INPUT] 0    0    [1    /1   ]  0.957788029089       1
[INPUT] 0    0    [1    /1   ]  1297.19833766        1
[INPUT] 0    0    [1    /1   ]  101.044772235        1
[INPUT] 0    0    [1    /1   ]  17.6321526996        1
[INPUT] 1    0    [1    /1   ]  13.2781967604        1
[INPUT] 1    0    [1    /1   ]  0.598895507969       1
[INPUT] 1    0    [1    /1   ]  2.76425927555        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.422056002469, 1.0]], [0, [0.9577880290886552, 1.0]], [0, [1297.198337657805, 1.0]], [0, [101.04477223471072, 1.0]], [0, [17.632152699632663, 1.0]], [1, [13.278196760386646, 1.0]], [1, [0.5988955079691409, 1.0]], [1, [2.764259275545451, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.422056]
bas 1, expnt(s) = [0.95778803]
bas 2, expnt(s) = [1297.19833766]
bas 3, expnt(s) = [101.04477223]
bas 4, expnt(s) = [17.6321527]
bas 5, expnt(s) = [13.27819676]
bas 6, expnt(s) = [0.59889551]
bas 7, expnt(s) = [2.76425928]
CPU time:       168.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742206e+03 7.40644987e+02 9.57788029e-01 2.44605984e+00
 1.29719834e+03 5.46097027e+02 1.01044772e+02 8.05193780e+01
 1.76321527e+01 2.17392235e+01 1.32781968e+01 7.39449071e+01
 5.98895508e-01 1.53699768e+00 2.76425928e+00 1.03981927e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933158601283976
cond(S) = 91.11165883839648
E1 = -181.4933423534627  E_coul = 54.92410085013897
init E= -126.569241503324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74926821059465  LUMO = 2.64019181593615
  mo_energy =
[-3.20648332e+01 -1.79264337e+00 -7.49268211e-01 -7.49268211e-01
 -7.49268211e-01  2.64019182e+00  2.64019182e+00  2.64019182e+00
  1.98369129e+01  1.98369129e+01  1.98369129e+01  8.23620979e+01
  1.36005325e+03  6.12246563e+03]
E1 = -181.4844209300971  E_coul = 54.3511266844021
cycle= 1 E= -127.133294245695  delta_E= -0.564  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194485
diis-c [-0.03782439  1.        ]
  HOMO = -0.767407738932454  LUMO = 2.63058022916054
  mo_energy =
[-3.22606878e+01 -1.82845639e+00 -7.67407739e-01 -7.67407739e-01
 -7.67407739e-01  2.63058023e+00  2.63058023e+00  2.63058023e+00
  1.97247691e+01  1.97247691e+01  1.97247691e+01  8.21926845e+01
  1.35978054e+03  6.12213601e+03]
E1 = -181.67855576644928  E_coul = 54.5448669740922
cycle= 2 E= -127.133688792357  delta_E= -0.000395  |g|= 0.0223  |ddm|= 0.0256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0371717
diis-c [-7.31002449e-04  1.16959073e-01  8.83040927e-01]
  HOMO = -0.756054011675532  LUMO = 2.64091624921112
  mo_energy =
[-3.22223728e+01 -1.81523676e+00 -7.56054012e-01 -7.56054012e-01
 -7.56054012e-01  2.64091625e+00  2.64091625e+00  2.64091625e+00
  1.97533747e+01  1.97533747e+01  1.97533747e+01  8.22309367e+01
  1.35982287e+03  6.12217863e+03]
E1 = -181.6258676755253  E_coul = 54.492139168599095
cycle= 3 E= -127.133728506926  delta_E= -3.97e-05  |g|= 0.00345  |ddm|= 0.00703
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00575947
diis-c [-4.99792072e-09 -1.31440719e-03  1.30777958e-01  8.70536450e-01]
  HOMO = -0.757588181799977  LUMO = 2.63952626735333
  mo_energy =
[-3.22274755e+01 -1.81701530e+00 -7.57588182e-01 -7.57588182e-01
 -7.57588182e-01  2.63952627e+00  2.63952627e+00  2.63952627e+00
  1.97495444e+01  1.97495444e+01  1.97495444e+01  8.22258719e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293619643153  E_coul = 54.49920671294155
cycle= 4 E= -127.13372948349  delta_E= -9.77e-07  |g|= 1.58e-06  |ddm|= 0.000942
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.72997e-06
diis-c [-1.81426074e-13  2.08447814e-05 -1.96929707e-03 -1.35653433e-02
  1.01551380e+00]
  HOMO = -0.757588956555288  LUMO = 2.63952585606315
  mo_energy =
[-3.22274771e+01 -1.81701600e+00 -7.57588957e-01 -7.57588957e-01
 -7.57588957e-01  2.63952586e+00  2.63952586e+00  2.63952586e+00
  1.97495431e+01  1.97495431e+01  1.97495431e+01  8.22258706e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293873149755  E_coul = 54.49920924800738
cycle= 5 E= -127.13372948349  delta_E= -1.71e-13  |g|= 4.22e-08  |ddm|= 3.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63293873149755  E_coul = 54.49920924800738
  HOMO = -0.7575889812274  LUMO = 2.63952582984385
  mo_energy =
[-3.22274771e+01 -1.81701603e+00 -7.57588981e-01 -7.57588981e-01
 -7.57588981e-01  2.63952583e+00  2.63952583e+00  2.63952583e+00
  1.97495430e+01  1.97495430e+01  1.97495430e+01  8.22258705e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293883958792  E_coul = 54.49920935609775
Extra cycle  E= -127.13372948349  delta_E= -1.42e-14  |g|= 1.25e-08  |ddm|= 1.4e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94742206e+03 9.57788029e-01 1.29719834e+03 1.01044772e+02
 1.76321527e+01 1.32781968e+01 5.98895508e-01 2.76425928e+00]
E = -127.13372948349017
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:43:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.422056          1
[INPUT] 0    0    [1    /1   ]  0.957788029089       1
[INPUT] 0    0    [1    /1   ]  1297.19833766        1
[INPUT] 0    0    [1    /1   ]  101.044772235        1
[INPUT] 0    0    [1    /1   ]  17.6321526996        1
[INPUT] 1    0    [1    /1   ]  13.2781967604        1
[INPUT] 1    0    [1    /1   ]  0.598895507969       1
[INPUT] 1    0    [1    /1   ]  2.76425927555        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.422056002469, 1.0]], [0, [0.9577880290886552, 1.0]], [0, [1297.198337657805, 1.0]], [0, [101.04477223471072, 1.0]], [0, [17.632152699632663, 1.0]], [1, [13.278196760386646, 1.0]], [1, [0.5988955079691409, 1.0]], [1, [2.764259275545451, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.422056]
bas 1, expnt(s) = [0.95778803]
bas 2, expnt(s) = [1297.19833766]
bas 3, expnt(s) = [101.04477223]
bas 4, expnt(s) = [17.6321527]
bas 5, expnt(s) = [13.27819676]
bas 6, expnt(s) = [0.59889551]
bas 7, expnt(s) = [2.76425928]
CPU time:       169.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94742206e+03 7.40644987e+02 9.57788029e-01 2.44605984e+00
 1.29719834e+03 5.46097027e+02 1.01044772e+02 8.05193780e+01
 1.76321527e+01 2.17392235e+01 1.32781968e+01 7.39449071e+01
 5.98895508e-01 1.53699768e+00 2.76425928e+00 1.03981927e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.933158601283976
cond(S) = 91.11165883839648
E1 = -181.4933423534627  E_coul = 54.92410085013897
init E= -126.569241503324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74926821059465  LUMO = 2.64019181593615
  mo_energy =
[-3.20648332e+01 -1.79264337e+00 -7.49268211e-01 -7.49268211e-01
 -7.49268211e-01  2.64019182e+00  2.64019182e+00  2.64019182e+00
  1.98369129e+01  1.98369129e+01  1.98369129e+01  8.23620979e+01
  1.36005325e+03  6.12246563e+03]
E1 = -181.4844209300971  E_coul = 54.3511266844021
cycle= 1 E= -127.133294245695  delta_E= -0.564  |g|= 0.125  |ddm|= 0.176
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194485
diis-c [-0.03782439  1.        ]
  HOMO = -0.767407738932454  LUMO = 2.63058022916054
  mo_energy =
[-3.22606878e+01 -1.82845639e+00 -7.67407739e-01 -7.67407739e-01
 -7.67407739e-01  2.63058023e+00  2.63058023e+00  2.63058023e+00
  1.97247691e+01  1.97247691e+01  1.97247691e+01  8.21926845e+01
  1.35978054e+03  6.12213601e+03]
E1 = -181.67855576644928  E_coul = 54.5448669740922
cycle= 2 E= -127.133688792357  delta_E= -0.000395  |g|= 0.0223  |ddm|= 0.0256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0371717
diis-c [-7.31002449e-04  1.16959073e-01  8.83040927e-01]
  HOMO = -0.756054011675532  LUMO = 2.64091624921112
  mo_energy =
[-3.22223728e+01 -1.81523676e+00 -7.56054012e-01 -7.56054012e-01
 -7.56054012e-01  2.64091625e+00  2.64091625e+00  2.64091625e+00
  1.97533747e+01  1.97533747e+01  1.97533747e+01  8.22309367e+01
  1.35982287e+03  6.12217863e+03]
E1 = -181.6258676755253  E_coul = 54.492139168599095
cycle= 3 E= -127.133728506926  delta_E= -3.97e-05  |g|= 0.00345  |ddm|= 0.00703
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00575947
diis-c [-4.99792072e-09 -1.31440719e-03  1.30777958e-01  8.70536450e-01]
  HOMO = -0.757588181799977  LUMO = 2.63952626735333
  mo_energy =
[-3.22274755e+01 -1.81701530e+00 -7.57588182e-01 -7.57588182e-01
 -7.57588182e-01  2.63952627e+00  2.63952627e+00  2.63952627e+00
  1.97495444e+01  1.97495444e+01  1.97495444e+01  8.22258719e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293619643153  E_coul = 54.49920671294155
cycle= 4 E= -127.13372948349  delta_E= -9.77e-07  |g|= 1.58e-06  |ddm|= 0.000942
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.72997e-06
diis-c [-1.81426074e-13  2.08447814e-05 -1.96929707e-03 -1.35653433e-02
  1.01551380e+00]
  HOMO = -0.757588956555288  LUMO = 2.63952585606315
  mo_energy =
[-3.22274771e+01 -1.81701600e+00 -7.57588957e-01 -7.57588957e-01
 -7.57588957e-01  2.63952586e+00  2.63952586e+00  2.63952586e+00
  1.97495431e+01  1.97495431e+01  1.97495431e+01  8.22258706e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293873149755  E_coul = 54.49920924800738
cycle= 5 E= -127.13372948349  delta_E= -1.71e-13  |g|= 4.22e-08  |ddm|= 3.15e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.63293873149755  E_coul = 54.49920924800738
  HOMO = -0.7575889812274  LUMO = 2.63952582984385
  mo_energy =
[-3.22274771e+01 -1.81701603e+00 -7.57588981e-01 -7.57588981e-01
 -7.57588981e-01  2.63952583e+00  2.63952583e+00  2.63952583e+00
  1.97495430e+01  1.97495430e+01  1.97495430e+01  8.22258705e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293883958792  E_coul = 54.49920935609775
Extra cycle  E= -127.13372948349  delta_E= -1.42e-14  |g|= 1.25e-08  |ddm|= 1.4e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.11165883839648
E1 = -181.63293883958792  E_coul = 54.49920935609775
init E= -127.13372948349
    CPU time for initialize scf      0.06 sec, wall time      0.07 sec
  HOMO = -0.757588974078127  LUMO = 2.63952583634926
  mo_energy =
[-3.22274771e+01 -1.81701602e+00 -7.57588974e-01 -7.57588974e-01
 -7.57588974e-01  2.63952584e+00  2.63952584e+00  2.63952584e+00
  1.97495431e+01  1.97495431e+01  1.97495431e+01  8.22258705e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293880616686  E_coul = 54.499209322676634
cycle= 1 E= -127.13372948349  delta_E= -5.68e-14  |g|= 3.84e-09  |ddm|= 4.47e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.63293880616686  E_coul = 54.499209322676634
  HOMO = -0.757588976303416  LUMO = 2.63952583432666
  mo_energy =
[-3.22274771e+01 -1.81701602e+00 -7.57588976e-01 -7.57588976e-01
 -7.57588976e-01  2.63952583e+00  2.63952583e+00  2.63952583e+00
  1.97495430e+01  1.97495430e+01  1.97495430e+01  8.22258705e+01
  1.35981730e+03  6.12217298e+03]
E1 = -181.63293881645149  E_coul = 54.4992093329612
Extra cycle  E= -127.13372948349  delta_E= -5.68e-14  |g|= 1.18e-09  |ddm|= 1.37e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94742206e+03 9.57788029e-01 1.29719834e+03 1.01044772e+02
 1.76321527e+01 1.32781968e+01 5.98895508e-01 2.76425928e+00]
grad_E = [ 9.05055799e-05  1.13148950e-03  4.08051371e-04  1.35769756e-05
 -2.62734662e-04 -6.11997393e-05  1.11372516e-03  7.69757489e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.41550276        1
[INPUT] 0    0    [1    /1   ]  0.957888040676       1
[INPUT] 0    0    [1    /1   ]  1297.1688277         1
[INPUT] 0    0    [1    /1   ]  101.040831009        1
[INPUT] 0    0    [1    /1   ]  17.6299958407        1
[INPUT] 1    0    [1    /1   ]  13.297042954         1
[INPUT] 1    0    [1    /1   ]  0.599728086405       1
[INPUT] 1    0    [1    /1   ]  2.76869068705        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4155027612196, 1.0]], [0, [0.9578880406761662, 1.0]], [0, [1297.1688277036421, 1.0]], [0, [101.04083100855507, 1.0]], [0, [17.62999584067846, 1.0]], [1, [13.297042954011173, 1.0]], [1, [0.599728086405311, 1.0]], [1, [2.7686906870512287, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.41550276]
bas 1, expnt(s) = [0.95788804]
bas 2, expnt(s) = [1297.1688277]
bas 3, expnt(s) = [101.04083101]
bas 4, expnt(s) = [17.62999584]
bas 5, expnt(s) = [13.29704295]
bas 6, expnt(s) = [0.59972809]
bas 7, expnt(s) = [2.76869069]
CPU time:       173.25
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94741550e+03 7.40643117e+02 9.57888041e-01 2.44625140e+00
 1.29716883e+03 5.46087709e+02 1.01040831e+02 8.05170225e+01
 1.76299958e+01 2.17372290e+01 1.32970430e+01 7.40761210e+01
 5.99728086e-01 1.53966904e+00 2.76869069e+00 1.04190337e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.932984550761336
cond(S) = 91.10178454692884
E1 = -181.4942646173402  E_coul = 54.924565210790206
init E= -126.56969940655
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749230929161204  LUMO = 2.64516162152828
  mo_energy =
[-3.20647594e+01 -1.79259412e+00 -7.49230929e-01 -7.49230929e-01
 -7.49230929e-01  2.64516162e+00  2.64516162e+00  2.64516162e+00
  1.98729915e+01  1.98729915e+01  1.98729915e+01  8.23531219e+01
  1.36001581e+03  6.12237004e+03]
E1 = -181.48973051745665  E_coul = 54.35642302076364
cycle= 1 E= -127.133307496693  delta_E= -0.564  |g|= 0.125  |ddm|= 0.175
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193937
diis-c [-0.03761156  1.        ]
  HOMO = -0.767008677053104  LUMO = 2.635831370384
  mo_energy =
[-3.22597047e+01 -1.82799110e+00 -7.67008677e-01 -7.67008677e-01
 -7.67008677e-01  2.63583137e+00  2.63583137e+00  2.63583137e+00
  1.97614854e+01  1.97614854e+01  1.97614854e+01  8.21845838e+01
  1.35974383e+03  6.12204113e+03]
E1 = -181.68234301135814  E_coul = 54.54864644271366
cycle= 2 E= -127.133696568644  delta_E= -0.000389  |g|= 0.0221  |ddm|= 0.0254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0368781
diis-c [-7.24108356e-04  1.16057732e-01  8.83942268e-01]
  HOMO = -0.755734710515741  LUMO = 2.6461103368406
  mo_energy =
[-3.22216414e+01 -1.81486439e+00 -7.55734711e-01 -7.55734711e-01
 -7.55734711e-01  2.64611034e+00  2.64611034e+00  2.64611034e+00
  1.97899130e+01  1.97899130e+01  1.97899130e+01  8.22225855e+01
  1.35978589e+03  6.12208347e+03]
E1 = -181.6300615004489  E_coul = 54.49632586802668
cycle= 3 E= -127.133735632422  delta_E= -3.91e-05  |g|= 0.00345  |ddm|= 0.00698
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0057486
diis-c [-4.96055267e-09 -1.31502033e-03  1.31480167e-01  8.69834853e-01]
  HOMO = -0.757266129021485  LUMO = 2.64472068936187
  mo_energy =
[-3.22267364e+01 -1.81663972e+00 -7.57266129e-01 -7.57266129e-01
 -7.57266129e-01  2.64472069e+00  2.64472069e+00  2.64472069e+00
  1.97860869e+01  1.97860869e+01  1.97860869e+01  8.22175282e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711166943838  E_coul = 54.50337506462065
cycle= 4 E= -127.133736604818  delta_E= -9.72e-07  |g|= 1.62e-06  |ddm|= 0.00094
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.81806e-06
diis-c [-1.91991044e-13  2.08144757e-05 -1.97932463e-03 -1.35682812e-02
  1.01552679e+00]
  HOMO = -0.757266929424039  LUMO = 2.64472025149757
  mo_energy =
[-3.22267380e+01 -1.81664045e+00 -7.57266929e-01 -7.57266929e-01
 -7.57266929e-01  2.64472025e+00  2.64472025e+00  2.64472025e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175268e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711430917863  E_coul = 54.50337770436079
cycle= 5 E= -127.133736604818  delta_E= -1.14e-13  |g|= 4.3e-08  |ddm|= 3.28e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.63711430917863  E_coul = 54.50337770436079
  HOMO = -0.757266954581168  LUMO = 2.644720224847
  mo_energy =
[-3.22267381e+01 -1.81664048e+00 -7.57266955e-01 -7.57266955e-01
 -7.57266955e-01  2.64472022e+00  2.64472022e+00  2.64472022e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175267e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711441907262  E_coul = 54.503377814254634
Extra cycle  E= -127.133736604818  delta_E= -1.42e-13  |g|= 1.27e-08  |ddm|= 1.43e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94741550e+03 9.57888041e-01 1.29716883e+03 1.01040831e+02
 1.76299958e+01 1.32970430e+01 5.99728086e-01 2.76869069e+00]
E = -127.13373660481798
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.41550276        1
[INPUT] 0    0    [1    /1   ]  0.957888040676       1
[INPUT] 0    0    [1    /1   ]  1297.1688277         1
[INPUT] 0    0    [1    /1   ]  101.040831009        1
[INPUT] 0    0    [1    /1   ]  17.6299958407        1
[INPUT] 1    0    [1    /1   ]  13.297042954         1
[INPUT] 1    0    [1    /1   ]  0.599728086405       1
[INPUT] 1    0    [1    /1   ]  2.76869068705        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.4155027612196, 1.0]], [0, [0.9578880406761662, 1.0]], [0, [1297.1688277036421, 1.0]], [0, [101.04083100855507, 1.0]], [0, [17.62999584067846, 1.0]], [1, [13.297042954011173, 1.0]], [1, [0.599728086405311, 1.0]], [1, [2.7686906870512287, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.41550276]
bas 1, expnt(s) = [0.95788804]
bas 2, expnt(s) = [1297.1688277]
bas 3, expnt(s) = [101.04083101]
bas 4, expnt(s) = [17.62999584]
bas 5, expnt(s) = [13.29704295]
bas 6, expnt(s) = [0.59972809]
bas 7, expnt(s) = [2.76869069]
CPU time:       174.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94741550e+03 7.40643117e+02 9.57888041e-01 2.44625140e+00
 1.29716883e+03 5.46087709e+02 1.01040831e+02 8.05170225e+01
 1.76299958e+01 2.17372290e+01 1.32970430e+01 7.40761210e+01
 5.99728086e-01 1.53966904e+00 2.76869069e+00 1.04190337e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.932984550761336
cond(S) = 91.10178454692884
E1 = -181.4942646173402  E_coul = 54.924565210790206
init E= -126.56969940655
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749230929161204  LUMO = 2.64516162152828
  mo_energy =
[-3.20647594e+01 -1.79259412e+00 -7.49230929e-01 -7.49230929e-01
 -7.49230929e-01  2.64516162e+00  2.64516162e+00  2.64516162e+00
  1.98729915e+01  1.98729915e+01  1.98729915e+01  8.23531219e+01
  1.36001581e+03  6.12237004e+03]
E1 = -181.48973051745665  E_coul = 54.35642302076364
cycle= 1 E= -127.133307496693  delta_E= -0.564  |g|= 0.125  |ddm|= 0.175
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193937
diis-c [-0.03761156  1.        ]
  HOMO = -0.767008677053104  LUMO = 2.635831370384
  mo_energy =
[-3.22597047e+01 -1.82799110e+00 -7.67008677e-01 -7.67008677e-01
 -7.67008677e-01  2.63583137e+00  2.63583137e+00  2.63583137e+00
  1.97614854e+01  1.97614854e+01  1.97614854e+01  8.21845838e+01
  1.35974383e+03  6.12204113e+03]
E1 = -181.68234301135814  E_coul = 54.54864644271366
cycle= 2 E= -127.133696568644  delta_E= -0.000389  |g|= 0.0221  |ddm|= 0.0254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0368781
diis-c [-7.24108356e-04  1.16057732e-01  8.83942268e-01]
  HOMO = -0.755734710515741  LUMO = 2.6461103368406
  mo_energy =
[-3.22216414e+01 -1.81486439e+00 -7.55734711e-01 -7.55734711e-01
 -7.55734711e-01  2.64611034e+00  2.64611034e+00  2.64611034e+00
  1.97899130e+01  1.97899130e+01  1.97899130e+01  8.22225855e+01
  1.35978589e+03  6.12208347e+03]
E1 = -181.6300615004489  E_coul = 54.49632586802668
cycle= 3 E= -127.133735632422  delta_E= -3.91e-05  |g|= 0.00345  |ddm|= 0.00698
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0057486
diis-c [-4.96055267e-09 -1.31502033e-03  1.31480167e-01  8.69834853e-01]
  HOMO = -0.757266129021485  LUMO = 2.64472068936187
  mo_energy =
[-3.22267364e+01 -1.81663972e+00 -7.57266129e-01 -7.57266129e-01
 -7.57266129e-01  2.64472069e+00  2.64472069e+00  2.64472069e+00
  1.97860869e+01  1.97860869e+01  1.97860869e+01  8.22175282e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711166943838  E_coul = 54.50337506462065
cycle= 4 E= -127.133736604818  delta_E= -9.72e-07  |g|= 1.62e-06  |ddm|= 0.00094
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.81806e-06
diis-c [-1.91991044e-13  2.08144757e-05 -1.97932463e-03 -1.35682812e-02
  1.01552679e+00]
  HOMO = -0.757266929424039  LUMO = 2.64472025149757
  mo_energy =
[-3.22267380e+01 -1.81664045e+00 -7.57266929e-01 -7.57266929e-01
 -7.57266929e-01  2.64472025e+00  2.64472025e+00  2.64472025e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175268e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711430917863  E_coul = 54.50337770436079
cycle= 5 E= -127.133736604818  delta_E= -1.14e-13  |g|= 4.3e-08  |ddm|= 3.28e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63711430917863  E_coul = 54.50337770436079
  HOMO = -0.757266954581168  LUMO = 2.644720224847
  mo_energy =
[-3.22267381e+01 -1.81664048e+00 -7.57266955e-01 -7.57266955e-01
 -7.57266955e-01  2.64472022e+00  2.64472022e+00  2.64472022e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175267e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711441907262  E_coul = 54.503377814254634
Extra cycle  E= -127.133736604818  delta_E= -1.42e-13  |g|= 1.27e-08  |ddm|= 1.43e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.10178454692884
E1 = -181.63711441907262  E_coul = 54.503377814254634
init E= -127.133736604818
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.757266947314367  LUMO = 2.64472023146946
  mo_energy =
[-3.22267381e+01 -1.81664047e+00 -7.57266947e-01 -7.57266947e-01
 -7.57266947e-01  2.64472023e+00  2.64472023e+00  2.64472023e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175268e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711438512306  E_coul = 54.50337778030509
cycle= 1 E= -127.133736604818  delta_E= 1.42e-14  |g|= 3.9e-09  |ddm|= 4.54e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.63711438512306  E_coul = 54.50337778030509
  HOMO = -0.757266949574539  LUMO = 2.64472022941207
  mo_energy =
[-3.22267381e+01 -1.81664047e+00 -7.57266950e-01 -7.57266950e-01
 -7.57266950e-01  2.64472023e+00  2.64472023e+00  2.64472023e+00
  1.97860855e+01  1.97860855e+01  1.97860855e+01  8.22175267e+01
  1.35978033e+03  6.12207783e+03]
E1 = -181.63711439556056  E_coul = 54.503377790742626
Extra cycle  E= -127.133736604818  delta_E= 4.26e-14  |g|= 1.2e-09  |ddm|= 1.39e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94741550e+03 9.57888041e-01 1.29716883e+03 1.01040831e+02
 1.76299958e+01 1.32970430e+01 5.99728086e-01 2.76869069e+00]
grad_E = [ 9.04943485e-05  1.95975308e-03  4.08041275e-04  2.91700079e-05
 -4.52588659e-04 -9.20396759e-05  2.07351645e-03  1.39114349e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.3978029         1
[INPUT] 0    0    [1    /1   ]  0.958045806033       1
[INPUT] 0    0    [1    /1   ]  1297.08908094        1
[INPUT] 0    0    [1    /1   ]  101.034093072        1
[INPUT] 0    0    [1    /1   ]  17.6265404208        1
[INPUT] 1    0    [1    /1   ]  13.3271131605        1
[INPUT] 1    0    [1    /1   ]  0.601054314017       1
[INPUT] 1    0    [1    /1   ]  2.77575946143        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.3978028973568, 1.0]], [0, [0.9580458060325758, 1.0]], [0, [1297.0890809432465, 1.0]], [0, [101.03409307172026, 1.0]], [0, [17.626540420764027, 1.0]], [1, [13.327113160545032, 1.0]], [1, [0.6010543140167935, 1.0]], [1, [2.7757594614255647, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.3978029]
bas 1, expnt(s) = [0.95804581]
bas 2, expnt(s) = [1297.08908094]
bas 3, expnt(s) = [101.03409307]
bas 4, expnt(s) = [17.62654042]
bas 5, expnt(s) = [13.32711316]
bas 6, expnt(s) = [0.60105431]
bas 7, expnt(s) = [2.77575946]
CPU time:       177.58
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94739780e+03 7.40638069e+02 9.58045806e-01 2.44655357e+00
 1.29708908e+03 5.46062530e+02 1.01034093e+02 8.05129955e+01
 1.76265404e+01 2.17340337e+01 1.33271132e+01 7.42855767e+01
 6.01054314e-01 1.54392621e+00 2.77575946e+00 1.04522955e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93270608191064
cond(S) = 91.07708302153593
E1 = -181.49573303843084  E_coul = 54.925295355937074
init E= -126.570437682494
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749171327196885  LUMO = 2.65308683767433
  mo_energy =
[-3.20646497e+01 -1.79251685e+00 -7.49171327e-01 -7.49171327e-01
 -7.49171327e-01  2.65308684e+00  2.65308684e+00  2.65308684e+00
  1.99305674e+01  1.99305674e+01  1.99305674e+01  8.23384413e+01
  1.35993449e+03  6.12213153e+03]
E1 = -181.49818984768083  E_coul = 54.364854345301666
cycle= 1 E= -127.133335502379  delta_E= -0.563  |g|= 0.124  |ddm|= 0.175
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193067
diis-c [-0.03727474  1.        ]
  HOMO = -0.766372434199542  LUMO = 2.64420670505112
  mo_energy =
[-3.22581459e+01 -1.82725057e+00 -7.66372434e-01 -7.66372434e-01
 -7.66372434e-01  2.64420671e+00  2.64420671e+00  2.64420671e+00
  1.98200788e+01  1.98200788e+01  1.98200788e+01  8.21712987e+01
  1.35966368e+03  6.12180375e+03]
E1 = -181.68838329260583  E_coul = 54.554667352414384
cycle= 2 E= -127.133715940191  delta_E= -0.00038  |g|= 0.0219  |ddm|= 0.0251
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0364116
diis-c [-7.13114094e-04  1.14614370e-01  8.85385630e-01]
  HOMO = -0.75522540931724  LUMO = 2.65439444993526
  mo_energy =
[-3.22204834e+01 -1.81427176e+00 -7.55225409e-01 -7.55225409e-01
 -7.55225409e-01  2.65439445e+00  2.65439445e+00  2.65439445e+00
  1.98482228e+01  1.98482228e+01  1.98482228e+01  8.22089013e+01
  1.35970531e+03  6.12184565e+03]
E1 = -181.63674784006741  E_coul = 54.50299385864569
cycle= 3 E= -127.133753981422  delta_E= -3.8e-05  |g|= 0.00344  |ddm|= 0.0069
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00573066
diis-c [-4.90502669e-09 -1.31602499e-03  1.32602955e-01  8.68713070e-01]
  HOMO = -0.756752275479567  LUMO = 2.65300550569183
  mo_energy =
[-3.22255657e+01 -1.81604177e+00 -7.56752275e-01 -7.56752275e-01
 -7.56752275e-01  2.65300551e+00  2.65300551e+00  2.65300551e+00
  1.98444037e+01  1.98444037e+01  1.98444037e+01  8.22038565e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64376803873768  E_coul = 54.51001309175212
cycle= 4 E= -127.133754946986  delta_E= -9.66e-07  |g|= 1.7e-06  |ddm|= 0.000936
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.959e-06
diis-c [-2.09881327e-13  2.07832988e-05 -1.99708615e-03 -1.35842707e-02
  1.01556057e+00]
  HOMO = -0.756753116383714  LUMO = 2.65300502566624
  mo_energy =
[-3.22255674e+01 -1.81604255e+00 -7.56753116e-01 -7.56753116e-01
 -7.56753116e-01  2.65300503e+00  2.65300503e+00  2.65300503e+00
  1.98444022e+01  1.98444022e+01  1.98444022e+01  8.22038550e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64377084357847  E_coul = 54.51001589659275
cycle= 5 E= -127.133754946986  delta_E= -1.56e-13  |g|= 4.43e-08  |ddm|= 3.49e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.64377084357847  E_coul = 54.51001589659275
  HOMO = -0.756753142289549  LUMO = 2.65300499834419
  mo_energy =
[-3.22255675e+01 -1.81604258e+00 -7.56753142e-01 -7.56753142e-01
 -7.56753142e-01  2.65300500e+00  2.65300500e+00  2.65300500e+00
  1.98444021e+01  1.98444021e+01  1.98444021e+01  8.22038549e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64377095625085  E_coul = 54.51001600926516
Extra cycle  E= -127.133754946986  delta_E= 2.84e-14  |g|= 1.3e-08  |ddm|= 1.46e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94739780e+03 9.58045806e-01 1.29708908e+03 1.01034093e+02
 1.76265404e+01 1.33271132e+01 6.01054314e-01 2.77575946e+00]
E = -127.13375494698569
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.3978029         1
[INPUT] 0    0    [1    /1   ]  0.958045806033       1
[INPUT] 0    0    [1    /1   ]  1297.08908094        1
[INPUT] 0    0    [1    /1   ]  101.034093072        1
[INPUT] 0    0    [1    /1   ]  17.6265404208        1
[INPUT] 1    0    [1    /1   ]  13.3271131605        1
[INPUT] 1    0    [1    /1   ]  0.601054314017       1
[INPUT] 1    0    [1    /1   ]  2.77575946143        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.3978028973568, 1.0]], [0, [0.9580458060325758, 1.0]], [0, [1297.0890809432465, 1.0]], [0, [101.03409307172026, 1.0]], [0, [17.626540420764027, 1.0]], [1, [13.327113160545032, 1.0]], [1, [0.6010543140167935, 1.0]], [1, [2.7757594614255647, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.3978029]
bas 1, expnt(s) = [0.95804581]
bas 2, expnt(s) = [1297.08908094]
bas 3, expnt(s) = [101.03409307]
bas 4, expnt(s) = [17.62654042]
bas 5, expnt(s) = [13.32711316]
bas 6, expnt(s) = [0.60105431]
bas 7, expnt(s) = [2.77575946]
CPU time:       178.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94739780e+03 7.40638069e+02 9.58045806e-01 2.44655357e+00
 1.29708908e+03 5.46062530e+02 1.01034093e+02 8.05129955e+01
 1.76265404e+01 2.17340337e+01 1.33271132e+01 7.42855767e+01
 6.01054314e-01 1.54392621e+00 2.77575946e+00 1.04522955e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93270608191064
cond(S) = 91.07708302153593
E1 = -181.49573303843084  E_coul = 54.925295355937074
init E= -126.570437682494
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749171327196885  LUMO = 2.65308683767433
  mo_energy =
[-3.20646497e+01 -1.79251685e+00 -7.49171327e-01 -7.49171327e-01
 -7.49171327e-01  2.65308684e+00  2.65308684e+00  2.65308684e+00
  1.99305674e+01  1.99305674e+01  1.99305674e+01  8.23384413e+01
  1.35993449e+03  6.12213153e+03]
E1 = -181.49818984768083  E_coul = 54.364854345301666
cycle= 1 E= -127.133335502379  delta_E= -0.563  |g|= 0.124  |ddm|= 0.175
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193067
diis-c [-0.03727474  1.        ]
  HOMO = -0.766372434199542  LUMO = 2.64420670505112
  mo_energy =
[-3.22581459e+01 -1.82725057e+00 -7.66372434e-01 -7.66372434e-01
 -7.66372434e-01  2.64420671e+00  2.64420671e+00  2.64420671e+00
  1.98200788e+01  1.98200788e+01  1.98200788e+01  8.21712987e+01
  1.35966368e+03  6.12180375e+03]
E1 = -181.68838329260583  E_coul = 54.554667352414384
cycle= 2 E= -127.133715940191  delta_E= -0.00038  |g|= 0.0219  |ddm|= 0.0251
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0364116
diis-c [-7.13114094e-04  1.14614370e-01  8.85385630e-01]
  HOMO = -0.75522540931724  LUMO = 2.65439444993526
  mo_energy =
[-3.22204834e+01 -1.81427176e+00 -7.55225409e-01 -7.55225409e-01
 -7.55225409e-01  2.65439445e+00  2.65439445e+00  2.65439445e+00
  1.98482228e+01  1.98482228e+01  1.98482228e+01  8.22089013e+01
  1.35970531e+03  6.12184565e+03]
E1 = -181.63674784006741  E_coul = 54.50299385864569
cycle= 3 E= -127.133753981422  delta_E= -3.8e-05  |g|= 0.00344  |ddm|= 0.0069
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00573066
diis-c [-4.90502669e-09 -1.31602499e-03  1.32602955e-01  8.68713070e-01]
  HOMO = -0.756752275479567  LUMO = 2.65300550569183
  mo_energy =
[-3.22255657e+01 -1.81604177e+00 -7.56752275e-01 -7.56752275e-01
 -7.56752275e-01  2.65300551e+00  2.65300551e+00  2.65300551e+00
  1.98444037e+01  1.98444037e+01  1.98444037e+01  8.22038565e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64376803873768  E_coul = 54.51001309175212
cycle= 4 E= -127.133754946986  delta_E= -9.66e-07  |g|= 1.7e-06  |ddm|= 0.000936
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.959e-06
diis-c [-2.09881327e-13  2.07832988e-05 -1.99708615e-03 -1.35842707e-02
  1.01556057e+00]
  HOMO = -0.756753116383714  LUMO = 2.65300502566624
  mo_energy =
[-3.22255674e+01 -1.81604255e+00 -7.56753116e-01 -7.56753116e-01
 -7.56753116e-01  2.65300503e+00  2.65300503e+00  2.65300503e+00
  1.98444022e+01  1.98444022e+01  1.98444022e+01  8.22038550e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64377084357847  E_coul = 54.51001589659275
cycle= 5 E= -127.133754946986  delta_E= -1.56e-13  |g|= 4.43e-08  |ddm|= 3.49e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.64377084357847  E_coul = 54.51001589659275
  HOMO = -0.756753142289549  LUMO = 2.65300499834419
  mo_energy =
[-3.22255675e+01 -1.81604258e+00 -7.56753142e-01 -7.56753142e-01
 -7.56753142e-01  2.65300500e+00  2.65300500e+00  2.65300500e+00
  1.98444021e+01  1.98444021e+01  1.98444021e+01  8.22038549e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64377095625085  E_coul = 54.51001600926516
Extra cycle  E= -127.133754946986  delta_E= 2.84e-14  |g|= 1.3e-08  |ddm|= 1.46e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.07708302153593
E1 = -181.64377095625085  E_coul = 54.51001600926516
init E= -127.133754946986
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.756753134841798  LUMO = 2.65300500514806
  mo_energy =
[-3.22255675e+01 -1.81604257e+00 -7.56753135e-01 -7.56753135e-01
 -7.56753135e-01  2.65300501e+00  2.65300501e+00  2.65300501e+00
  1.98444021e+01  1.98444021e+01  1.98444021e+01  8.22038549e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.64377092149098  E_coul = 54.510015974505286
cycle= 1 E= -127.133754946986  delta_E= -1.42e-14  |g|= 3.99e-09  |ddm|= 4.65e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.64377092149098  E_coul = 54.510015974505286
  HOMO = -0.756753137155426  LUMO = 2.65300500303696
  mo_energy =
[-3.22255675e+01 -1.81604257e+00 -7.56753137e-01 -7.56753137e-01
 -7.56753137e-01  2.65300500e+00  2.65300500e+00  2.65300500e+00
  1.98444021e+01  1.98444021e+01  1.98444021e+01  8.22038549e+01
  1.35969975e+03  6.12184002e+03]
E1 = -181.6437709321617  E_coul = 54.51001598517607
Extra cycle  E= -127.133754946986  delta_E= 8.53e-14  |g|= 1.23e-09  |ddm|= 1.42e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94739780e+03 9.58045806e-01 1.29708908e+03 1.01034093e+02
 1.76265404e+01 1.33271132e+01 6.01054314e-01 2.77575946e+00]
grad_E = [ 9.04709530e-05  3.27170973e-03  4.08040783e-04  5.39292503e-05
 -7.53683480e-04 -1.40842136e-04  3.59971829e-03  2.37733738e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.34988627        1
[INPUT] 0    0    [1    /1   ]  0.958300891975       1
[INPUT] 0    0    [1    /1   ]  1296.87312659        1
[INPUT] 0    0    [1    /1   ]  101.021801108        1
[INPUT] 0    0    [1    /1   ]  17.6208351657        1
[INPUT] 1    0    [1    /1   ]  13.3762256888        1
[INPUT] 1    0    [1    /1   ]  0.603216051299       1
[INPUT] 1    0    [1    /1   ]  2.78730750333        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.3498862659612, 1.0]], [0, [0.9583008919747369, 1.0]], [0, [1296.8731265872138, 1.0]], [0, [101.0218011083226, 1.0]], [0, [17.620835165726238, 1.0]], [1, [13.376225688831292, 1.0]], [1, [0.6032160512987071, 1.0]], [1, [2.787307503328401, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.34988627]
bas 1, expnt(s) = [0.95830089]
bas 2, expnt(s) = [1296.87312659]
bas 3, expnt(s) = [101.02180111]
bas 4, expnt(s) = [17.62083517]
bas 5, expnt(s) = [13.37622569]
bas 6, expnt(s) = [0.60321605]
bas 7, expnt(s) = [2.7873075]
CPU time:       181.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94734989e+03 7.40624401e+02 9.58300892e-01 2.44704211e+00
 1.29687313e+03 5.45994342e+02 1.01021801e+02 8.05056489e+01
 1.76208352e+01 2.17287574e+01 1.33762257e+01 7.46279269e+01
 6.03216051e-01 1.55087039e+00 2.78730750e+00 1.05066798e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.932248777029386
cond(S) = 91.01325629674278
E1 = -181.49813480728892  E_coul = 54.92646711686586
init E= -126.571667690423
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749073025646958  LUMO = 2.66602872206558
  mo_energy =
[-3.20644909e+01 -1.79239328e+00 -7.49073026e-01 -7.49073026e-01
 -7.49073026e-01  2.66602872e+00  2.66602872e+00  2.66602872e+00
  2.00246611e+01  2.00246611e+01  2.00246611e+01  8.23133805e+01
  1.35974458e+03  6.12151590e+03]
E1 = -181.51198660379214  E_coul = 54.378587357808414
cycle= 1 E= -127.133399245984  delta_E= -0.562  |g|= 0.123  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.191655
diis-c [-0.03673174  1.        ]
  HOMO = -0.765333429438204  LUMO = 2.65788733757822
  mo_energy =
[-3.22556237e+01 -1.82604483e+00 -7.65333429e-01 -7.65333429e-01
 -7.65333429e-01  2.65788734e+00  2.65788734e+00  2.65788734e+00
  1.99158349e+01  1.99158349e+01  1.99158349e+01  8.21485144e+01
  1.35947568e+03  6.12118996e+03]
E1 = -181.69825345576723  E_coul = 54.56448761484006
cycle= 2 E= -127.133765840927  delta_E= -0.000367  |g|= 0.0214  |ddm|= 0.0246
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0356543
diis-c [-6.95166559e-04  1.12242503e-01  8.87757497e-01]
  HOMO = -0.75439299647753  LUMO = 2.66792553124402
  mo_energy =
[-3.22186145e+01 -1.81330672e+00 -7.54392996e-01 -7.54392996e-01
 -7.54392996e-01  2.66792553e+00  2.66792553e+00  2.66792553e+00
  1.99435157e+01  1.99435157e+01  1.99435157e+01  8.21854666e+01
  1.35951660e+03  6.12123114e+03]
E1 = -181.6476666849449  E_coul = 54.5138644323208
cycle= 3 E= -127.133802252624  delta_E= -3.64e-05  |g|= 0.00342  |ddm|= 0.00676
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00569972
diis-c [-4.82458889e-09 -1.31774478e-03  1.34443442e-01  8.66874303e-01]
  HOMO = -0.75591198950517  LUMO = 2.66653819167775
  mo_energy =
[-3.22236744e+01 -1.81506754e+00 -7.55911990e-01 -7.55911990e-01
 -7.55911990e-01  2.66653819e+00  2.66653819e+00  2.66653819e+00
  1.99397092e+01  1.99397092e+01  1.99397092e+01  8.21804437e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.6546360693708  E_coul = 54.520832862824506
cycle= 4 E= -127.133803206546  delta_E= -9.54e-07  |g|= 1.82e-06  |ddm|= 0.00093
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.19014e-06
diis-c [-2.41851871e-13  2.07783904e-05 -2.03094525e-03 -1.36406641e-02
  1.01565083e+00]
  HOMO = -0.755912895658703  LUMO = 2.6665376432395
  mo_energy =
[-3.22236764e+01 -1.81506838e+00 -7.55912896e-01 -7.55912896e-01
 -7.55912896e-01  2.66653764e+00  2.66653764e+00  2.66653764e+00
  1.99397075e+01  1.99397075e+01  1.99397075e+01  8.21804420e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.65463913963123  E_coul = 54.52083593308463
cycle= 5 E= -127.133803206547  delta_E= -2.84e-13  |g|= 4.63e-08  |ddm|= 3.83e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.65463913963123  E_coul = 54.52083593308463
  HOMO = -0.755912922719815  LUMO = 2.66653761486637
  mo_energy =
[-3.22236765e+01 -1.81506842e+00 -7.55912923e-01 -7.55912923e-01
 -7.55912923e-01  2.66653761e+00  2.66653761e+00  2.66653761e+00
  1.99397074e+01  1.99397074e+01  1.99397074e+01  8.21804419e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.65463925657488  E_coul = 54.52083605002841
Extra cycle  E= -127.133803206546  delta_E= 1.14e-13  |g|= 1.35e-08  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94734989e+03 9.58300892e-01 1.29687313e+03 1.01021801e+02
 1.76208352e+01 1.33762257e+01 6.03216051e-01 2.78730750e+00]
E = -127.13380320654647
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.34988627        1
[INPUT] 0    0    [1    /1   ]  0.958300891975       1
[INPUT] 0    0    [1    /1   ]  1296.87312659        1
[INPUT] 0    0    [1    /1   ]  101.021801108        1
[INPUT] 0    0    [1    /1   ]  17.6208351657        1
[INPUT] 1    0    [1    /1   ]  13.3762256888        1
[INPUT] 1    0    [1    /1   ]  0.603216051299       1
[INPUT] 1    0    [1    /1   ]  2.78730750333        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.3498862659612, 1.0]], [0, [0.9583008919747369, 1.0]], [0, [1296.8731265872138, 1.0]], [0, [101.0218011083226, 1.0]], [0, [17.620835165726238, 1.0]], [1, [13.376225688831292, 1.0]], [1, [0.6032160512987071, 1.0]], [1, [2.787307503328401, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.34988627]
bas 1, expnt(s) = [0.95830089]
bas 2, expnt(s) = [1296.87312659]
bas 3, expnt(s) = [101.02180111]
bas 4, expnt(s) = [17.62083517]
bas 5, expnt(s) = [13.37622569]
bas 6, expnt(s) = [0.60321605]
bas 7, expnt(s) = [2.7873075]
CPU time:       182.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94734989e+03 7.40624401e+02 9.58300892e-01 2.44704211e+00
 1.29687313e+03 5.45994342e+02 1.01021801e+02 8.05056489e+01
 1.76208352e+01 2.17287574e+01 1.33762257e+01 7.46279269e+01
 6.03216051e-01 1.55087039e+00 2.78730750e+00 1.05066798e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.932248777029386
cond(S) = 91.01325629674278
E1 = -181.49813480728892  E_coul = 54.92646711686586
init E= -126.571667690423
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.749073025646958  LUMO = 2.66602872206558
  mo_energy =
[-3.20644909e+01 -1.79239328e+00 -7.49073026e-01 -7.49073026e-01
 -7.49073026e-01  2.66602872e+00  2.66602872e+00  2.66602872e+00
  2.00246611e+01  2.00246611e+01  2.00246611e+01  8.23133805e+01
  1.35974458e+03  6.12151590e+03]
E1 = -181.51198660379214  E_coul = 54.378587357808414
cycle= 1 E= -127.133399245984  delta_E= -0.562  |g|= 0.123  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.191655
diis-c [-0.03673174  1.        ]
  HOMO = -0.765333429438204  LUMO = 2.65788733757822
  mo_energy =
[-3.22556237e+01 -1.82604483e+00 -7.65333429e-01 -7.65333429e-01
 -7.65333429e-01  2.65788734e+00  2.65788734e+00  2.65788734e+00
  1.99158349e+01  1.99158349e+01  1.99158349e+01  8.21485144e+01
  1.35947568e+03  6.12118996e+03]
E1 = -181.69825345576723  E_coul = 54.56448761484006
cycle= 2 E= -127.133765840927  delta_E= -0.000367  |g|= 0.0214  |ddm|= 0.0246
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0356543
diis-c [-6.95166559e-04  1.12242503e-01  8.87757497e-01]
  HOMO = -0.75439299647753  LUMO = 2.66792553124402
  mo_energy =
[-3.22186145e+01 -1.81330672e+00 -7.54392996e-01 -7.54392996e-01
 -7.54392996e-01  2.66792553e+00  2.66792553e+00  2.66792553e+00
  1.99435157e+01  1.99435157e+01  1.99435157e+01  8.21854666e+01
  1.35951660e+03  6.12123114e+03]
E1 = -181.6476666849449  E_coul = 54.5138644323208
cycle= 3 E= -127.133802252624  delta_E= -3.64e-05  |g|= 0.00342  |ddm|= 0.00676
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00569972
diis-c [-4.82458889e-09 -1.31774478e-03  1.34443442e-01  8.66874303e-01]
  HOMO = -0.75591198950517  LUMO = 2.66653819167775
  mo_energy =
[-3.22236744e+01 -1.81506754e+00 -7.55911990e-01 -7.55911990e-01
 -7.55911990e-01  2.66653819e+00  2.66653819e+00  2.66653819e+00
  1.99397092e+01  1.99397092e+01  1.99397092e+01  8.21804437e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.6546360693708  E_coul = 54.520832862824506
cycle= 4 E= -127.133803206546  delta_E= -9.54e-07  |g|= 1.82e-06  |ddm|= 0.00093
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.19014e-06
diis-c [-2.41851871e-13  2.07783904e-05 -2.03094525e-03 -1.36406641e-02
  1.01565083e+00]
  HOMO = -0.755912895658703  LUMO = 2.6665376432395
  mo_energy =
[-3.22236764e+01 -1.81506838e+00 -7.55912896e-01 -7.55912896e-01
 -7.55912896e-01  2.66653764e+00  2.66653764e+00  2.66653764e+00
  1.99397075e+01  1.99397075e+01  1.99397075e+01  8.21804420e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.65463913963123  E_coul = 54.52083593308463
cycle= 5 E= -127.133803206547  delta_E= -2.84e-13  |g|= 4.63e-08  |ddm|= 3.83e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.65463913963123  E_coul = 54.52083593308463
  HOMO = -0.755912922719815  LUMO = 2.66653761486637
  mo_energy =
[-3.22236765e+01 -1.81506842e+00 -7.55912923e-01 -7.55912923e-01
 -7.55912923e-01  2.66653761e+00  2.66653761e+00  2.66653761e+00
  1.99397074e+01  1.99397074e+01  1.99397074e+01  8.21804419e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.65463925657488  E_coul = 54.52083605002841
Extra cycle  E= -127.133803206546  delta_E= 1.14e-13  |g|= 1.35e-08  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 91.01325629674278
E1 = -181.65463925657488  E_coul = 54.52083605002841
init E= -127.133803206546
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.755912914994188  LUMO = 2.66653762195198
  mo_energy =
[-3.22236764e+01 -1.81506841e+00 -7.55912915e-01 -7.55912915e-01
 -7.55912915e-01  2.66653762e+00  2.66653762e+00  2.66653762e+00
  1.99397075e+01  1.99397075e+01  1.99397075e+01  8.21804419e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.65463922057907  E_coul = 54.52083601403254
cycle= 1 E= -127.133803206547  delta_E= -5.68e-14  |g|= 4.14e-09  |ddm|= 4.82e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.65463922057907  E_coul = 54.52083601403254
  HOMO = -0.75591291738925  LUMO = 2.66653761975805
  mo_energy =
[-3.22236764e+01 -1.81506841e+00 -7.55912917e-01 -7.55912917e-01
 -7.55912917e-01  2.66653762e+00  2.66653762e+00  2.66653762e+00
  1.99397075e+01  1.99397075e+01  1.99397075e+01  8.21804419e+01
  1.35951107e+03  6.12122554e+03]
E1 = -181.6546392316027  E_coul = 54.520836025056134
Extra cycle  E= -127.133803206547  delta_E= -2.84e-14  |g|= 1.27e-09  |ddm|= 1.47e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94734989e+03 9.58300892e-01 1.29687313e+03 1.01021801e+02
 1.76208352e+01 1.33762257e+01 6.03216051e-01 2.78730750e+00]
grad_E = [ 9.04186163e-05  5.39996703e-03  4.08081705e-04  9.41210738e-05
 -1.24229447e-03 -2.19985952e-04  6.07834242e-03  3.97792831e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.22266818        1
[INPUT] 0    0    [1    /1   ]  0.958708882091       1
[INPUT] 0    0    [1    /1   ]  1296.29966645        1
[INPUT] 0    0    [1    /1   ]  100.998462791        1
[INPUT] 0    0    [1    /1   ]  17.6114095207        1
[INPUT] 1    0    [1    /1   ]  13.4558904875        1
[INPUT] 1    0    [1    /1   ]  0.606711873941       1
[INPUT] 1    0    [1    /1   ]  2.80605035212        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.2226681769753, 1.0]], [0, [0.9587088820908003, 1.0]], [0, [1296.2996664523146, 1.0]], [0, [100.99846279113271, 1.0]], [0, [17.611409520659493, 1.0]], [1, [13.455890487451075, 1.0]], [1, [0.6067118739407656, 1.0]], [1, [2.8060503521227194, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.22266818]
bas 1, expnt(s) = [0.95870888]
bas 2, expnt(s) = [1296.29966645]
bas 3, expnt(s) = [100.99846279]
bas 4, expnt(s) = [17.61140952]
bas 5, expnt(s) = [13.45589049]
bas 6, expnt(s) = [0.60671187]
bas 7, expnt(s) = [2.80605035]
CPU time:       185.97
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94722267e+03 7.40588113e+02 9.58708882e-01 2.44782343e+00
 1.29629967e+03 5.45813259e+02 1.00998463e+02 8.04916995e+01
 1.76114095e+01 2.17200395e+01 1.34558905e+01 7.51839169e+01
 6.06711874e-01 1.56211323e+00 2.80605035e+00 1.05950672e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.931500251120564
cond(S) = 90.8487626177969
E1 = -181.5020443842252  E_coul = 54.9283169947711
init E= -126.573727389454
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748910783992981  LUMO = 2.68702058212024
  mo_energy =
[-3.20642854e+01 -1.79219936e+00 -7.48910784e-01 -7.48910784e-01
 -7.48910784e-01  2.68702058e+00  2.68702058e+00  2.68702058e+00
  2.01774527e+01  2.01774527e+01  2.01774527e+01  8.22698466e+01
  1.35928763e+03  6.11992830e+03]
E1 = -181.53432064548036  E_coul = 54.40077118189217
cycle= 1 E= -127.133549463588  delta_E= -0.56  |g|= 0.122  |ddm|= 0.173
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.189392
diis-c [-0.03586935  1.        ]
  HOMO = -0.763647948758367  LUMO = 2.68008704397913
  mo_energy =
[-3.22515938e+01 -1.82409831e+00 -7.63647949e-01 -7.63647949e-01
 -7.63647949e-01  2.68008704e+00  2.68008704e+00  2.68008704e+00
  2.00713247e+01  2.00713247e+01  2.00713247e+01  8.21086662e+01
  1.35902186e+03  6.11960537e+03]
E1 = -181.71428120470577  E_coul = 54.580386927883175
cycle= 2 E= -127.133894276823  delta_E= -0.000345  |g|= 0.0207  |ddm|= 0.0237
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0344382
diis-c [-6.66090358e-04  1.08357540e-01  8.91642460e-01]
  HOMO = -0.753040767907889  LUMO = 2.68988113423232
  mo_energy =
[-3.22156404e+01 -1.81174843e+00 -7.53040768e-01 -7.53040768e-01
 -7.53040768e-01  2.68988113e+00  2.68988113e+00  2.68988113e+00
  2.00982545e+01  2.00982545e+01  2.00982545e+01  8.21445671e+01
  1.35906162e+03  6.11964540e+03]
E1 = -181.66537879630053  E_coul = 54.531450646622645
cycle= 3 E= -127.133928149678  delta_E= -3.39e-05  |g|= 0.00339  |ddm|= 0.00654
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00564515
diis-c [-4.72033561e-09 -1.32074496e-03  1.37445513e-01  8.63875232e-01]
  HOMO = -0.754545812016732  LUMO = 2.68849763224246
  mo_energy =
[-3.22206601e+01 -1.81349296e+00 -7.54545812e-01 -7.54545812e-01
 -7.54545812e-01  2.68849763e+00  2.68849763e+00  2.68849763e+00
  2.00944715e+01  2.00944715e+01  2.00944715e+01  8.21395836e+01
  1.35905613e+03  6.11963984e+03]
E1 = -181.67226076392774  E_coul = 54.53833168048305
cycle= 4 E= -127.133929083445  delta_E= -9.34e-07  |g|= 2.02e-06  |ddm|= 0.000919
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.5652e-06
diis-c [-3.00573392e-13  2.08938632e-05 -2.09935419e-03 -1.38126048e-02
  1.01589107e+00]
  HOMO = -0.754546821718724  LUMO = 2.68849697397297
  mo_energy =
[-3.22206624e+01 -1.81349393e+00 -7.54546822e-01 -7.54546822e-01
 -7.54546822e-01  2.68849697e+00  2.68849697e+00  2.68849697e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395816e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.67226425388682  E_coul = 54.53833517044197
cycle= 5 E= -127.133929083445  delta_E= -1.71e-13  |g|= 4.93e-08  |ddm|= 4.37e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67226425388682  E_coul = 54.53833517044197
  HOMO = -0.754546850453783  LUMO = 2.68849694403866
  mo_energy =
[-3.22206624e+01 -1.81349396e+00 -7.54546850e-01 -7.54546850e-01
 -7.54546850e-01  2.68849694e+00  2.68849694e+00  2.68849694e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395815e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.6722643769665  E_coul = 54.5383352935216
Extra cycle  E= -127.133929083445  delta_E= -4.26e-14  |g|= 1.42e-08  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94722267e+03 9.58708882e-01 1.29629967e+03 1.00998463e+02
 1.76114095e+01 1.34558905e+01 6.06711874e-01 2.80605035e+00]
E = -127.1339290834449
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.22266818        1
[INPUT] 0    0    [1    /1   ]  0.958708882091       1
[INPUT] 0    0    [1    /1   ]  1296.29966645        1
[INPUT] 0    0    [1    /1   ]  100.998462791        1
[INPUT] 0    0    [1    /1   ]  17.6114095207        1
[INPUT] 1    0    [1    /1   ]  13.4558904875        1
[INPUT] 1    0    [1    /1   ]  0.606711873941       1
[INPUT] 1    0    [1    /1   ]  2.80605035212        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1947.2226681769753, 1.0]], [0, [0.9587088820908003, 1.0]], [0, [1296.2996664523146, 1.0]], [0, [100.99846279113271, 1.0]], [0, [17.611409520659493, 1.0]], [1, [13.455890487451075, 1.0]], [1, [0.6067118739407656, 1.0]], [1, [2.8060503521227194, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.22266818]
bas 1, expnt(s) = [0.95870888]
bas 2, expnt(s) = [1296.29966645]
bas 3, expnt(s) = [100.99846279]
bas 4, expnt(s) = [17.61140952]
bas 5, expnt(s) = [13.45589049]
bas 6, expnt(s) = [0.60671187]
bas 7, expnt(s) = [2.80605035]
CPU time:       186.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94722267e+03 7.40588113e+02 9.58708882e-01 2.44782343e+00
 1.29629967e+03 5.45813259e+02 1.00998463e+02 8.04916995e+01
 1.76114095e+01 2.17200395e+01 1.34558905e+01 7.51839169e+01
 6.06711874e-01 1.56211323e+00 2.80605035e+00 1.05950672e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.931500251120564
cond(S) = 90.8487626177969
E1 = -181.5020443842252  E_coul = 54.9283169947711
init E= -126.573727389454
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748910783992981  LUMO = 2.68702058212024
  mo_energy =
[-3.20642854e+01 -1.79219936e+00 -7.48910784e-01 -7.48910784e-01
 -7.48910784e-01  2.68702058e+00  2.68702058e+00  2.68702058e+00
  2.01774527e+01  2.01774527e+01  2.01774527e+01  8.22698466e+01
  1.35928763e+03  6.11992830e+03]
E1 = -181.53432064548036  E_coul = 54.40077118189217
cycle= 1 E= -127.133549463588  delta_E= -0.56  |g|= 0.122  |ddm|= 0.173
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.189392
diis-c [-0.03586935  1.        ]
  HOMO = -0.763647948758367  LUMO = 2.68008704397913
  mo_energy =
[-3.22515938e+01 -1.82409831e+00 -7.63647949e-01 -7.63647949e-01
 -7.63647949e-01  2.68008704e+00  2.68008704e+00  2.68008704e+00
  2.00713247e+01  2.00713247e+01  2.00713247e+01  8.21086662e+01
  1.35902186e+03  6.11960537e+03]
E1 = -181.71428120470577  E_coul = 54.580386927883175
cycle= 2 E= -127.133894276823  delta_E= -0.000345  |g|= 0.0207  |ddm|= 0.0237
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0344382
diis-c [-6.66090358e-04  1.08357540e-01  8.91642460e-01]
  HOMO = -0.753040767907889  LUMO = 2.68988113423232
  mo_energy =
[-3.22156404e+01 -1.81174843e+00 -7.53040768e-01 -7.53040768e-01
 -7.53040768e-01  2.68988113e+00  2.68988113e+00  2.68988113e+00
  2.00982545e+01  2.00982545e+01  2.00982545e+01  8.21445671e+01
  1.35906162e+03  6.11964540e+03]
E1 = -181.66537879630053  E_coul = 54.531450646622645
cycle= 3 E= -127.133928149678  delta_E= -3.39e-05  |g|= 0.00339  |ddm|= 0.00654
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00564515
diis-c [-4.72033561e-09 -1.32074496e-03  1.37445513e-01  8.63875232e-01]
  HOMO = -0.754545812016732  LUMO = 2.68849763224246
  mo_energy =
[-3.22206601e+01 -1.81349296e+00 -7.54545812e-01 -7.54545812e-01
 -7.54545812e-01  2.68849763e+00  2.68849763e+00  2.68849763e+00
  2.00944715e+01  2.00944715e+01  2.00944715e+01  8.21395836e+01
  1.35905613e+03  6.11963984e+03]
E1 = -181.67226076392774  E_coul = 54.53833168048305
cycle= 4 E= -127.133929083445  delta_E= -9.34e-07  |g|= 2.02e-06  |ddm|= 0.000919
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.5652e-06
diis-c [-3.00573392e-13  2.08938632e-05 -2.09935419e-03 -1.38126048e-02
  1.01589107e+00]
  HOMO = -0.754546821718724  LUMO = 2.68849697397297
  mo_energy =
[-3.22206624e+01 -1.81349393e+00 -7.54546822e-01 -7.54546822e-01
 -7.54546822e-01  2.68849697e+00  2.68849697e+00  2.68849697e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395816e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.67226425388682  E_coul = 54.53833517044197
cycle= 5 E= -127.133929083445  delta_E= -1.71e-13  |g|= 4.93e-08  |ddm|= 4.37e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67226425388682  E_coul = 54.53833517044197
  HOMO = -0.754546850453783  LUMO = 2.68849694403866
  mo_energy =
[-3.22206624e+01 -1.81349396e+00 -7.54546850e-01 -7.54546850e-01
 -7.54546850e-01  2.68849694e+00  2.68849694e+00  2.68849694e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395815e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.6722643769665  E_coul = 54.5383352935216
Extra cycle  E= -127.133929083445  delta_E= -4.26e-14  |g|= 1.42e-08  |ddm|= 1.6e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 90.8487626177969
E1 = -181.6722643769665  E_coul = 54.5383352935216
init E= -127.133929083445
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.754546842329902  LUMO = 2.68849695153694
  mo_energy =
[-3.22206624e+01 -1.81349395e+00 -7.54546842e-01 -7.54546842e-01
 -7.54546842e-01  2.68849695e+00  2.68849695e+00  2.68849695e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395816e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.67226433922292  E_coul = 54.53833525577785
cycle= 1 E= -127.133929083445  delta_E= -1.71e-13  |g|= 4.34e-09  |ddm|= 5.06e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67226433922292  E_coul = 54.53833525577785
  HOMO = -0.75454684483983  LUMO = 2.68849694922333
  mo_energy =
[-3.22206624e+01 -1.81349395e+00 -7.54546845e-01 -7.54546845e-01
 -7.54546845e-01  2.68849695e+00  2.68849695e+00  2.68849695e+00
  2.00944696e+01  2.00944696e+01  2.00944696e+01  8.21395816e+01
  1.35905613e+03  6.11963983e+03]
E1 = -181.67226435073636  E_coul = 54.5383352672914
Extra cycle  E= -127.133929083445  delta_E= 1.14e-13  |g|= 1.32e-09  |ddm|= 1.54e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94722267e+03 9.58708882e-01 1.29629967e+03 1.00998463e+02
 1.76114095e+01 1.34558905e+01 6.06711874e-01 2.80605035e+00]
grad_E = [ 9.02970221e-05  8.81901488e-03  4.08257115e-04  1.58705014e-04
 -2.02731788e-03 -3.47087329e-04  1.00626239e-02  6.54923810e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1946.88605369        1
[INPUT] 0    0    [1    /1   ]  0.959360805979       1
[INPUT] 0    0    [1    /1   ]  1294.78214563        1
[INPUT] 0    0    [1    /1   ]  100.951448783        1
[INPUT] 0    0    [1    /1   ]  17.5955586137        1
[INPUT] 1    0    [1    /1   ]  13.5860366335        1
[INPUT] 1    0    [1    /1   ]  0.612395310967       1
[INPUT] 1    0    [1    /1   ]  2.8367010442         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1946.88605368593, 1.0]], [0, [0.9593608059788455, 1.0]], [0, [1294.7821456259267, 1.0]], [0, [100.9514487830154, 1.0]], [0, [17.59555861368484, 1.0]], [1, [13.586036633490187, 1.0]], [1, [0.6123953109668525, 1.0]], [1, [2.8367010441961455, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1946.88605369]
bas 1, expnt(s) = [0.95936081]
bas 2, expnt(s) = [1294.78214563]
bas 3, expnt(s) = [100.95144878]
bas 4, expnt(s) = [17.59555861]
bas 5, expnt(s) = [13.58603663]
bas 6, expnt(s) = [0.61239531]
bas 7, expnt(s) = [2.83670104]
CPU time:       190.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94688605e+03 7.40492092e+02 9.59360806e-01 2.44907172e+00
 1.29478215e+03 5.45333969e+02 1.00951449e+02 8.04635967e+01
 1.75955586e+01 2.17053763e+01 1.35860366e+01 7.60939921e+01
 6.12395311e-01 1.58042617e+00 2.83670104e+00 1.07399276e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.930259576028327
cond(S) = 90.42275486532931
E1 = -181.5084677125778  E_coul = 54.93120788051732
init E= -126.57725983206
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748638264930231  LUMO = 2.72131568258097
  mo_energy =
[-3.20640858e+01 -1.79189947e+00 -7.48638265e-01 -7.48638265e-01
 -7.48638265e-01  2.72131568e+00  2.72131568e+00  2.72131568e+00
  2.04275053e+01  2.04275053e+01  2.04275053e+01  8.21911809e+01
  1.35815327e+03  6.11580147e+03]
E1 = -181.57069036955804  E_coul = 54.43677390525511
cycle= 1 E= -127.133916464303  delta_E= -0.557  |g|= 0.119  |ddm|= 0.171
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.185765
diis-c [-0.0345086  1.       ]
  HOMO = -0.760893737314571  LUMO = 2.71638050684646
  mo_energy =
[-3.22451695e+01 -1.82094239e+00 -7.60893737e-01 -7.60893737e-01
 -7.60893737e-01  2.71638051e+00  2.71638051e+00  2.71638051e+00
  2.03257899e+01  2.03257899e+01  2.03257899e+01  8.20360039e+01
  1.35789260e+03  6.11548349e+03]
E1 = -181.74051361557665  E_coul = 54.606286166672966
cycle= 2 E= -127.134227448904  delta_E= -0.000311  |g|= 0.0196  |ddm|= 0.0224
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0324837
diis-c [-6.18758635e-04  1.01915513e-01  8.98084487e-01]
  HOMO = -0.750826248242819  LUMO = 2.72577171067433
  mo_energy =
[-3.22109317e+01 -1.80922115e+00 -7.50826248e-01 -7.50826248e-01
 -7.50826248e-01  2.72577171e+00  2.72577171e+00  2.72577171e+00
  2.03514935e+01  2.03514935e+01  2.03514935e+01  8.20701963e+01
  1.35793050e+03  6.11552163e+03]
E1 = -181.69431969878295  E_coul = 54.560062256569886
cycle= 3 E= -127.134257442213  delta_E= -3e-05  |g|= 0.00333  |ddm|= 0.00619
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.005544
diis-c [-4.61702729e-09 -1.32620193e-03  1.42388282e-01  8.58937920e-01]
  HOMO = -0.752305278427611  LUMO = 2.72439790231697
  mo_energy =
[-3.22158748e+01 -1.81093531e+00 -7.52305278e-01 -7.52305278e-01
 -7.52305278e-01  2.72439790e+00  2.72439790e+00  2.72439790e+00
  2.03477576e+01  2.03477576e+01  2.03477576e+01  8.20652882e+01
  1.35792509e+03  6.11551615e+03]
E1 = -181.70104530778988  E_coul = 54.56678696807788
cycle= 4 E= -127.134258339712  delta_E= -8.97e-07  |g|= 2.35e-06  |ddm|= 0.000899
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.17076e-06
diis-c [-4.12146901e-13  2.14088099e-05 -2.24881778e-03 -1.43024592e-02
  1.01652987e+00]
  HOMO = -0.752306451203146  LUMO = 2.72439706779687
  mo_energy =
[-3.22158776e+01 -1.81093647e+00 -7.52306451e-01 -7.52306451e-01
 -7.52306451e-01  2.72439707e+00  2.72439707e+00  2.72439707e+00
  2.03477553e+01  2.03477553e+01  2.03477553e+01  8.20652857e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.70104945463137  E_coul = 54.5667911149189
cycle= 5 E= -127.134258339712  delta_E= -4.69e-13  |g|= 5.32e-08  |ddm|= 5.21e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.70104945463137  E_coul = 54.5667911149189
  HOMO = -0.752306482053713  LUMO = 2.72439703579333
  mo_energy =
[-3.22158777e+01 -1.81093651e+00 -7.52306482e-01 -7.52306482e-01
 -7.52306482e-01  2.72439704e+00  2.72439704e+00  2.72439704e+00
  2.03477552e+01  2.03477552e+01  2.03477552e+01  8.20652856e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.70104958527085  E_coul = 54.56679124555838
Extra cycle  E= -127.134258339712  delta_E=    0  |g|= 1.51e-08  |ddm|= 1.69e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94688605e+03 9.59360806e-01 1.29478215e+03 1.00951449e+02
 1.75955586e+01 1.35860366e+01 6.12395311e-01 2.83670104e+00]
E = -127.13425833971247
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1946.88605369        1
[INPUT] 0    0    [1    /1   ]  0.959360805979       1
[INPUT] 0    0    [1    /1   ]  1294.78214563        1
[INPUT] 0    0    [1    /1   ]  100.951448783        1
[INPUT] 0    0    [1    /1   ]  17.5955586137        1
[INPUT] 1    0    [1    /1   ]  13.5860366335        1
[INPUT] 1    0    [1    /1   ]  0.612395310967       1
[INPUT] 1    0    [1    /1   ]  2.8367010442         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1946.88605368593, 1.0]], [0, [0.9593608059788455, 1.0]], [0, [1294.7821456259267, 1.0]], [0, [100.9514487830154, 1.0]], [0, [17.59555861368484, 1.0]], [1, [13.586036633490187, 1.0]], [1, [0.6123953109668525, 1.0]], [1, [2.8367010441961455, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1946.88605369]
bas 1, expnt(s) = [0.95936081]
bas 2, expnt(s) = [1294.78214563]
bas 3, expnt(s) = [100.95144878]
bas 4, expnt(s) = [17.59555861]
bas 5, expnt(s) = [13.58603663]
bas 6, expnt(s) = [0.61239531]
bas 7, expnt(s) = [2.83670104]
CPU time:       190.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94688605e+03 7.40492092e+02 9.59360806e-01 2.44907172e+00
 1.29478215e+03 5.45333969e+02 1.00951449e+02 8.04635967e+01
 1.75955586e+01 2.17053763e+01 1.35860366e+01 7.60939921e+01
 6.12395311e-01 1.58042617e+00 2.83670104e+00 1.07399276e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.930259576028327
cond(S) = 90.42275486532931
E1 = -181.5084677125778  E_coul = 54.93120788051732
init E= -126.57725983206
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748638264930231  LUMO = 2.72131568258097
  mo_energy =
[-3.20640858e+01 -1.79189947e+00 -7.48638265e-01 -7.48638265e-01
 -7.48638265e-01  2.72131568e+00  2.72131568e+00  2.72131568e+00
  2.04275053e+01  2.04275053e+01  2.04275053e+01  8.21911809e+01
  1.35815327e+03  6.11580147e+03]
E1 = -181.57069036955804  E_coul = 54.43677390525511
cycle= 1 E= -127.133916464303  delta_E= -0.557  |g|= 0.119  |ddm|= 0.171
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.185765
diis-c [-0.0345086  1.       ]
  HOMO = -0.760893737314571  LUMO = 2.71638050684646
  mo_energy =
[-3.22451695e+01 -1.82094239e+00 -7.60893737e-01 -7.60893737e-01
 -7.60893737e-01  2.71638051e+00  2.71638051e+00  2.71638051e+00
  2.03257899e+01  2.03257899e+01  2.03257899e+01  8.20360039e+01
  1.35789260e+03  6.11548349e+03]
E1 = -181.74051361557665  E_coul = 54.606286166672966
cycle= 2 E= -127.134227448904  delta_E= -0.000311  |g|= 0.0196  |ddm|= 0.0224
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0324837
diis-c [-6.18758635e-04  1.01915513e-01  8.98084487e-01]
  HOMO = -0.750826248242819  LUMO = 2.72577171067433
  mo_energy =
[-3.22109317e+01 -1.80922115e+00 -7.50826248e-01 -7.50826248e-01
 -7.50826248e-01  2.72577171e+00  2.72577171e+00  2.72577171e+00
  2.03514935e+01  2.03514935e+01  2.03514935e+01  8.20701963e+01
  1.35793050e+03  6.11552163e+03]
E1 = -181.69431969878295  E_coul = 54.560062256569886
cycle= 3 E= -127.134257442213  delta_E= -3e-05  |g|= 0.00333  |ddm|= 0.00619
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.005544
diis-c [-4.61702729e-09 -1.32620193e-03  1.42388282e-01  8.58937920e-01]
  HOMO = -0.752305278427611  LUMO = 2.72439790231697
  mo_energy =
[-3.22158748e+01 -1.81093531e+00 -7.52305278e-01 -7.52305278e-01
 -7.52305278e-01  2.72439790e+00  2.72439790e+00  2.72439790e+00
  2.03477576e+01  2.03477576e+01  2.03477576e+01  8.20652882e+01
  1.35792509e+03  6.11551615e+03]
E1 = -181.70104530778988  E_coul = 54.56678696807788
cycle= 4 E= -127.134258339712  delta_E= -8.97e-07  |g|= 2.35e-06  |ddm|= 0.000899
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.17076e-06
diis-c [-4.12146901e-13  2.14088099e-05 -2.24881778e-03 -1.43024592e-02
  1.01652987e+00]
  HOMO = -0.752306451203146  LUMO = 2.72439706779687
  mo_energy =
[-3.22158776e+01 -1.81093647e+00 -7.52306451e-01 -7.52306451e-01
 -7.52306451e-01  2.72439707e+00  2.72439707e+00  2.72439707e+00
  2.03477553e+01  2.03477553e+01  2.03477553e+01  8.20652857e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.70104945463137  E_coul = 54.5667911149189
cycle= 5 E= -127.134258339712  delta_E= -4.69e-13  |g|= 5.32e-08  |ddm|= 5.21e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.70104945463137  E_coul = 54.5667911149189
  HOMO = -0.752306482053713  LUMO = 2.72439703579333
  mo_energy =
[-3.22158777e+01 -1.81093651e+00 -7.52306482e-01 -7.52306482e-01
 -7.52306482e-01  2.72439704e+00  2.72439704e+00  2.72439704e+00
  2.03477552e+01  2.03477552e+01  2.03477552e+01  8.20652856e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.70104958527085  E_coul = 54.56679124555838
Extra cycle  E= -127.134258339712  delta_E=    0  |g|= 1.51e-08  |ddm|= 1.69e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 90.42275486532931
E1 = -181.70104958527085  E_coul = 54.56679124555838
init E= -127.134258339712
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.752306473441976  LUMO = 2.72439704382358
  mo_energy =
[-3.22158776e+01 -1.81093650e+00 -7.52306473e-01 -7.52306473e-01
 -7.52306473e-01  2.72439704e+00  2.72439704e+00  2.72439704e+00
  2.03477553e+01  2.03477553e+01  2.03477553e+01  8.20652856e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.70104954545482  E_coul = 54.56679120574237
cycle= 1 E= -127.134258339712  delta_E= 1.42e-14  |g|= 4.58e-09  |ddm|= 5.35e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.70104954545482  E_coul = 54.56679120574237
  HOMO = -0.752306476087234  LUMO = 2.72439704136042
  mo_energy =
[-3.22158776e+01 -1.81093650e+00 -7.52306476e-01 -7.52306476e-01
 -7.52306476e-01  2.72439704e+00  2.72439704e+00  2.72439704e+00
  2.03477553e+01  2.03477553e+01  2.03477553e+01  8.20652856e+01
  1.35792509e+03  6.11551614e+03]
E1 = -181.7010495575227  E_coul = 54.566791217810284
Extra cycle  E= -127.134258339712  delta_E= 2.84e-14  |g|= 1.39e-09  |ddm|= 1.61e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94688605e+03 9.59360806e-01 1.29478215e+03 1.00951449e+02
 1.75955586e+01 1.35860366e+01 6.12395311e-01 2.83670104e+00]
grad_E = [ 9.00027365e-05  1.43202816e-02  4.08828194e-04  2.62654532e-04
 -3.29042637e-03 -5.51412676e-04  1.64798285e-02  1.06846330e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1945.9991569         1
[INPUT] 0    0    [1    /1   ]  0.960395060086       1
[INPUT] 0    0    [1    /1   ]  1290.78358234        1
[INPUT] 0    0    [1    /1   ]  100.851015761        1
[INPUT] 0    0    [1    /1   ]  17.5683128408        1
[INPUT] 1    0    [1    /1   ]  13.8000005323        1
[INPUT] 1    0    [1    /1   ]  0.621667637428       1
[INPUT] 1    0    [1    /1   ]  2.88717820199        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1945.9991569026981, 1.0]], [0, [0.9603950600862907, 1.0]], [0, [1290.783582341101, 1.0]], [0, [100.85101576085573, 1.0]], [0, [17.568312840793986, 1.0]], [1, [13.800000532262427, 1.0]], [1, [0.6216676374283642, 1.0]], [1, [2.8871782019877057, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1945.9991569]
bas 1, expnt(s) = [0.96039506]
bas 2, expnt(s) = [1290.78358234]
bas 3, expnt(s) = [100.85101576]
bas 4, expnt(s) = [17.56831284]
bas 5, expnt(s) = [13.80000053]
bas 6, expnt(s) = [0.62166764]
bas 7, expnt(s) = [2.8871782]
CPU time:       194.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94599916e+03 7.40239081e+02 9.60395060e-01 2.45105165e+00
 1.29078358e+03 5.44070400e+02 1.00851016e+02 8.04035514e+01
 1.75683128e+01 2.16801642e+01 1.38000005e+01 7.75949167e+01
 6.21667637e-01 1.61039427e+00 2.88717820e+00 1.09793437e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.928172531944382
cond(S) = 89.32424725109064
E1 = -181.51911606840127  E_coul = 54.93561873724766
init E= -126.583497331154
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748170334113568  LUMO = 2.77771206297205
  mo_energy =
[-3.20641119e+01 -1.79145083e+00 -7.48170334e-01 -7.48170334e-01
 -7.48170334e-01  2.77771206e+00  2.77771206e+00  2.77771206e+00
  2.08397964e+01  2.08397964e+01  2.08397964e+01  8.20422009e+01
  1.35528125e+03  6.10504215e+03]
E1 = -181.6301789317048  E_coul = 54.49534508777072
cycle= 1 E= -127.134833843934  delta_E= -0.551  |g|= 0.116  |ddm|= 0.168
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.179992
diis-c [-0.03239723  1.        ]
  HOMO = -0.756362939277092  LUMO = 2.7761289686799
  mo_energy =
[-3.22350233e+01 -1.81581661e+00 -7.56362939e-01 -7.56362939e-01
 -7.56362939e-01  2.77612897e+00  2.77612897e+00  2.77612897e+00
  2.07453474e+01  2.07453474e+01  2.07453474e+01  8.18968462e+01
  1.35502905e+03  6.10473238e+03]
E1 = -181.78377093312378  E_coul = 54.6486771337689
cycle= 2 E= -127.135093799355  delta_E= -0.00026  |g|= 0.0177  |ddm|= 0.0202
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0293553
diis-c [-5.41746077e-04  9.10947379e-02  9.08905262e-01]
  HOMO = -0.747170841630173  LUMO = 2.78484647524957
  mo_energy =
[-3.22035834e+01 -1.80511474e+00 -7.47170842e-01 -7.47170842e-01
 -7.47170842e-01  2.78484648e+00  2.78484648e+00  2.78484648e+00
  2.07690353e+01  2.07690353e+01  2.07690353e+01  8.19282519e+01
  1.35506390e+03  6.10476744e+03]
E1 = -181.74191844915276  E_coul = 54.60680035306051
cycle= 3 E= -127.135118096092  delta_E= -2.43e-05  |g|= 0.00321  |ddm|= 0.00562
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00534396
diis-c [-4.61599742e-09 -1.33664651e-03  1.50587434e-01  8.50749212e-01]
  HOMO = -0.748598013351019  LUMO = 2.78349845493988
  mo_energy =
[-3.22083698e+01 -1.80676840e+00 -7.48598013e-01 -7.48598013e-01
 -7.48598013e-01  2.78349845e+00  2.78349845e+00  2.78349845e+00
  2.07654015e+01  2.07654015e+01  2.07654015e+01  8.19234985e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.74834937579524  E_coul = 54.613230450523794
cycle= 4 E= -127.135118925271  delta_E= -8.29e-07  |g|= 2.88e-06  |ddm|= 0.000861
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.12758e-06
diis-c [-6.22674748e-13  2.30417820e-05 -2.59429832e-03 -1.55941892e-02
  1.01816545e+00]
  HOMO = -0.748599437569566  LUMO = 2.78349734010025
  mo_energy =
[-3.22083733e+01 -1.80676985e+00 -7.48599438e-01 -7.48599438e-01
 -7.48599438e-01  2.78349734e+00  2.78349734e+00  2.78349734e+00
  2.07653986e+01  2.07653986e+01  2.07653986e+01  8.19234952e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.7483545243257  E_coul = 54.61323559905355
cycle= 5 E= -127.135118925272  delta_E= -6.82e-13  |g|= 5.66e-08  |ddm|= 6.51e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.7483545243257  E_coul = 54.61323559905355
  HOMO = -0.748599470005643  LUMO = 2.78349730630184
  mo_energy =
[-3.22083734e+01 -1.80676989e+00 -7.48599470e-01 -7.48599470e-01
 -7.48599470e-01  2.78349731e+00  2.78349731e+00  2.78349731e+00
  2.07653985e+01  2.07653985e+01  2.07653985e+01  8.19234951e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.7483546598408  E_coul = 54.61323573456875
Extra cycle  E= -127.135118925272  delta_E= 8.53e-14  |g|= 1.57e-08  |ddm|= 1.76e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94599916e+03 9.60395060e-01 1.29078358e+03 1.00851016e+02
 1.75683128e+01 1.38000005e+01 6.21667637e-01 2.88717820e+00]
E = -127.13511892527205
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1945.9991569         1
[INPUT] 0    0    [1    /1   ]  0.960395060086       1
[INPUT] 0    0    [1    /1   ]  1290.78358234        1
[INPUT] 0    0    [1    /1   ]  100.851015761        1
[INPUT] 0    0    [1    /1   ]  17.5683128408        1
[INPUT] 1    0    [1    /1   ]  13.8000005323        1
[INPUT] 1    0    [1    /1   ]  0.621667637428       1
[INPUT] 1    0    [1    /1   ]  2.88717820199        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1945.9991569026981, 1.0]], [0, [0.9603950600862907, 1.0]], [0, [1290.783582341101, 1.0]], [0, [100.85101576085573, 1.0]], [0, [17.568312840793986, 1.0]], [1, [13.800000532262427, 1.0]], [1, [0.6216676374283642, 1.0]], [1, [2.8871782019877057, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1945.9991569]
bas 1, expnt(s) = [0.96039506]
bas 2, expnt(s) = [1290.78358234]
bas 3, expnt(s) = [100.85101576]
bas 4, expnt(s) = [17.56831284]
bas 5, expnt(s) = [13.80000053]
bas 6, expnt(s) = [0.62166764]
bas 7, expnt(s) = [2.8871782]
CPU time:       195.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94599916e+03 7.40239081e+02 9.60395060e-01 2.45105165e+00
 1.29078358e+03 5.44070400e+02 1.00851016e+02 8.04035514e+01
 1.75683128e+01 2.16801642e+01 1.38000005e+01 7.75949167e+01
 6.21667637e-01 1.61039427e+00 2.88717820e+00 1.09793437e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.928172531944382
cond(S) = 89.32424725109064
E1 = -181.51911606840127  E_coul = 54.93561873724766
init E= -126.583497331154
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748170334113568  LUMO = 2.77771206297205
  mo_energy =
[-3.20641119e+01 -1.79145083e+00 -7.48170334e-01 -7.48170334e-01
 -7.48170334e-01  2.77771206e+00  2.77771206e+00  2.77771206e+00
  2.08397964e+01  2.08397964e+01  2.08397964e+01  8.20422009e+01
  1.35528125e+03  6.10504215e+03]
E1 = -181.6301789317048  E_coul = 54.49534508777072
cycle= 1 E= -127.134833843934  delta_E= -0.551  |g|= 0.116  |ddm|= 0.168
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.179992
diis-c [-0.03239723  1.        ]
  HOMO = -0.756362939277092  LUMO = 2.7761289686799
  mo_energy =
[-3.22350233e+01 -1.81581661e+00 -7.56362939e-01 -7.56362939e-01
 -7.56362939e-01  2.77612897e+00  2.77612897e+00  2.77612897e+00
  2.07453474e+01  2.07453474e+01  2.07453474e+01  8.18968462e+01
  1.35502905e+03  6.10473238e+03]
E1 = -181.78377093312378  E_coul = 54.6486771337689
cycle= 2 E= -127.135093799355  delta_E= -0.00026  |g|= 0.0177  |ddm|= 0.0202
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0293553
diis-c [-5.41746077e-04  9.10947379e-02  9.08905262e-01]
  HOMO = -0.747170841630173  LUMO = 2.78484647524957
  mo_energy =
[-3.22035834e+01 -1.80511474e+00 -7.47170842e-01 -7.47170842e-01
 -7.47170842e-01  2.78484648e+00  2.78484648e+00  2.78484648e+00
  2.07690353e+01  2.07690353e+01  2.07690353e+01  8.19282519e+01
  1.35506390e+03  6.10476744e+03]
E1 = -181.74191844915276  E_coul = 54.60680035306051
cycle= 3 E= -127.135118096092  delta_E= -2.43e-05  |g|= 0.00321  |ddm|= 0.00562
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00534396
diis-c [-4.61599742e-09 -1.33664651e-03  1.50587434e-01  8.50749212e-01]
  HOMO = -0.748598013351019  LUMO = 2.78349845493988
  mo_energy =
[-3.22083698e+01 -1.80676840e+00 -7.48598013e-01 -7.48598013e-01
 -7.48598013e-01  2.78349845e+00  2.78349845e+00  2.78349845e+00
  2.07654015e+01  2.07654015e+01  2.07654015e+01  8.19234985e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.74834937579524  E_coul = 54.613230450523794
cycle= 4 E= -127.135118925271  delta_E= -8.29e-07  |g|= 2.88e-06  |ddm|= 0.000861
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.12758e-06
diis-c [-6.22674748e-13  2.30417820e-05 -2.59429832e-03 -1.55941892e-02
  1.01816545e+00]
  HOMO = -0.748599437569566  LUMO = 2.78349734010025
  mo_energy =
[-3.22083733e+01 -1.80676985e+00 -7.48599438e-01 -7.48599438e-01
 -7.48599438e-01  2.78349734e+00  2.78349734e+00  2.78349734e+00
  2.07653986e+01  2.07653986e+01  2.07653986e+01  8.19234952e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.7483545243257  E_coul = 54.61323559905355
cycle= 5 E= -127.135118925272  delta_E= -6.82e-13  |g|= 5.66e-08  |ddm|= 6.51e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.7483545243257  E_coul = 54.61323559905355
  HOMO = -0.748599470005643  LUMO = 2.78349730630184
  mo_energy =
[-3.22083734e+01 -1.80676989e+00 -7.48599470e-01 -7.48599470e-01
 -7.48599470e-01  2.78349731e+00  2.78349731e+00  2.78349731e+00
  2.07653985e+01  2.07653985e+01  2.07653985e+01  8.19234951e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.7483546598408  E_coul = 54.61323573456875
Extra cycle  E= -127.135118925272  delta_E= 8.53e-14  |g|= 1.57e-08  |ddm|= 1.76e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 89.32424725109064
E1 = -181.7483546598408  E_coul = 54.61323573456875
init E= -127.135118925272
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.748599461089377  LUMO = 2.78349731475415
  mo_energy =
[-3.22083733e+01 -1.80676988e+00 -7.48599461e-01 -7.48599461e-01
 -7.48599461e-01  2.78349731e+00  2.78349731e+00  2.78349731e+00
  2.07653985e+01  2.07653985e+01  2.07653985e+01  8.19234951e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.74835461896075  E_coul = 54.613235693688665
cycle= 1 E= -127.135118925272  delta_E= -2.84e-14  |g|= 4.71e-09  |ddm|= 5.5e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.74835461896075  E_coul = 54.613235693688665
  HOMO = -0.748599463801071  LUMO = 2.78349731218748
  mo_energy =
[-3.22083733e+01 -1.80676988e+00 -7.48599464e-01 -7.48599464e-01
 -7.48599464e-01  2.78349731e+00  2.78349731e+00  2.78349731e+00
  2.07653985e+01  2.07653985e+01  2.07653985e+01  8.19234951e+01
  1.35505865e+03  6.10476212e+03]
E1 = -181.74835463122054  E_coul = 54.613235705948476
Extra cycle  E= -127.135118925272  delta_E= 2.84e-14  |g|= 1.41e-09  |ddm|= 1.64e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94599916e+03 9.60395060e-01 1.29078358e+03 1.00851016e+02
 1.75683128e+01 1.38000005e+01 6.21667637e-01 2.88717820e+00]
grad_E = [ 8.92697021e-05  2.31465357e-02  4.10509096e-04  4.29625137e-04
 -5.31695782e-03 -8.78366280e-04  2.68050564e-02  1.73094453e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1943.65813864        1
[INPUT] 0    0    [1    /1   ]  0.962027186921       1
[INPUT] 0    0    [1    /1   ]  1280.22869453        1
[INPUT] 0    0    [1    /1   ]  100.622896114        1
[INPUT] 0    0    [1    /1   ]  17.5196570329        1
[INPUT] 1    0    [1    /1   ]  14.1576116584        1
[INPUT] 1    0    [1    /1   ]  0.636980186234       1
[INPUT] 1    0    [1    /1   ]  2.97179184898        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1943.6581386408413, 1.0]], [0, [0.9620271869208762, 1.0]], [0, [1280.2286945347678, 1.0]], [0, [100.62289611399515, 1.0]], [0, [17.519657032926602, 1.0]], [1, [14.157611658400523, 1.0]], [1, [0.6369801862339842, 1.0]], [1, [2.971791848977204, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1943.65813864]
bas 1, expnt(s) = [0.96202719]
bas 2, expnt(s) = [1280.22869453]
bas 3, expnt(s) = [100.62289611]
bas 4, expnt(s) = [17.51965703]
bas 5, expnt(s) = [14.15761166]
bas 6, expnt(s) = [0.63698019]
bas 7, expnt(s) = [2.97179185]
CPU time:       198.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94365814e+03 7.39571105e+02 9.62027187e-01 2.45417503e+00
 1.28022869e+03 5.40730283e+02 1.00622896e+02 8.02671114e+01
 1.75196570e+01 2.16351158e+01 1.41576117e+01 8.01164850e+01
 6.36980186e-01 1.66012885e+00 2.97179185e+00 1.13830168e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.924555854110977
cond(S) = 86.52452065194436
E1 = -181.53710644942953  E_coul = 54.94209286198647
init E= -126.595013587443
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.74733404726128  LUMO = 2.8720562330153
  mo_energy =
[-3.20650822e+01 -1.79081880e+00 -7.47334047e-01 -7.47334047e-01
 -7.47334047e-01  2.87205623e+00  2.87205623e+00  2.87205623e+00
  2.15322250e+01  2.15322250e+01  2.15322250e+01  8.17420493e+01
  1.34787034e+03  6.07679616e+03]
E1 = -181.7288140329058  E_coul = 54.591640963877275
cycle= 1 E= -127.137173069029  delta_E= -0.542  |g|= 0.11  |ddm|= 0.163
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.170879
diis-c [-0.02919965  1.        ]
  HOMO = -0.748777399360349  LUMO = 2.87625743310735
  mo_energy =
[-3.22191525e+01 -1.80741242e+00 -7.48777399e-01 -7.48777399e-01
 -7.48777399e-01  2.87625743e+00  2.87625743e+00  2.87625743e+00
  2.14499560e+01  2.14499560e+01  2.14499560e+01  8.16129867e+01
  1.34763245e+03  6.07650035e+03]
E1 = -181.8564351224338  E_coul = 54.719075312828004
cycle= 2 E= -127.137359809606  delta_E= -0.000187  |g|= 0.0148  |ddm|= 0.0168
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0243536
diis-c [-4.17006559e-04  7.25432671e-02  9.27456733e-01]
  HOMO = -0.741019485410928  LUMO = 2.8838158613209
  mo_energy =
[-3.21923388e+01 -1.79837958e+00 -7.41019485e-01 -7.41019485e-01
 -7.41019485e-01  2.88381586e+00  2.88381586e+00  2.88381586e+00
  2.14702680e+01  2.14702680e+01  2.14702680e+01  8.16397836e+01
  1.34766226e+03  6.07653032e+03]
E1 = -181.82155241819999  E_coul = 54.684176120286246
cycle= 3 E= -127.137376297914  delta_E= -1.65e-05  |g|= 0.00296  |ddm|= 0.0047
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00490999
diis-c [-5.02972032e-09 -1.35809947e-03  1.64322832e-01  8.37035268e-01]
  HOMO = -0.74233303919679  LUMO = 2.88254113309812
  mo_energy =
[-3.21967706e+01 -1.79990084e+00 -7.42333039e-01 -7.42333039e-01
 -7.42333039e-01  2.88254113e+00  2.88254113e+00  2.88254113e+00
  2.14668790e+01  2.14668790e+01  2.14668790e+01  8.16353813e+01
  1.34765738e+03  6.07652538e+03]
E1 = -181.82738198581424  E_coul = 54.69000499455187
cycle= 4 E= -127.137376991262  delta_E= -6.93e-07  |g|= 3.71e-06  |ddm|= 0.000783
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.57486e-06
diis-c [-9.74654366e-13  2.71056877e-05 -3.37705127e-03 -1.85039729e-02
  1.02185392e+00]
  HOMO = -0.742334835160941  LUMO = 2.88253958117032
  mo_energy =
[-3.21967753e+01 -1.79990272e+00 -7.42334835e-01 -7.42334835e-01
 -7.42334835e-01  2.88253958e+00  2.88253958e+00  2.88253958e+00
  2.14668751e+01  2.14668751e+01  2.14668751e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.82738858397744  E_coul = 54.690011592713965
cycle= 5 E= -127.137376991263  delta_E= -1.09e-12  |g|= 5.44e-08  |ddm|= 8.39e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.82738858397744  E_coul = 54.690011592713965
  HOMO = -0.742334865326371  LUMO = 2.88253954900935
  mo_energy =
[-3.21967753e+01 -1.79990276e+00 -7.42334865e-01 -7.42334865e-01
 -7.42334865e-01  2.88253955e+00  2.88253955e+00  2.88253955e+00
  2.14668750e+01  2.14668750e+01  2.14668750e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.82738870804076  E_coul = 54.690011716777306
Extra cycle  E= -127.137376991263  delta_E= 1.42e-14  |g|= 1.44e-08  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94365814e+03 9.62027187e-01 1.28022869e+03 1.00622896e+02
 1.75196570e+01 1.41576117e+01 6.36980186e-01 2.97179185e+00]
E = -127.13737699126345
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1943.65813864        1
[INPUT] 0    0    [1    /1   ]  0.962027186921       1
[INPUT] 0    0    [1    /1   ]  1280.22869453        1
[INPUT] 0    0    [1    /1   ]  100.622896114        1
[INPUT] 0    0    [1    /1   ]  17.5196570329        1
[INPUT] 1    0    [1    /1   ]  14.1576116584        1
[INPUT] 1    0    [1    /1   ]  0.636980186234       1
[INPUT] 1    0    [1    /1   ]  2.97179184898        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1943.6581386408413, 1.0]], [0, [0.9620271869208762, 1.0]], [0, [1280.2286945347678, 1.0]], [0, [100.62289611399515, 1.0]], [0, [17.519657032926602, 1.0]], [1, [14.157611658400523, 1.0]], [1, [0.6369801862339842, 1.0]], [1, [2.971791848977204, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1943.65813864]
bas 1, expnt(s) = [0.96202719]
bas 2, expnt(s) = [1280.22869453]
bas 3, expnt(s) = [100.62289611]
bas 4, expnt(s) = [17.51965703]
bas 5, expnt(s) = [14.15761166]
bas 6, expnt(s) = [0.63698019]
bas 7, expnt(s) = [2.97179185]
CPU time:       199.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94365814e+03 7.39571105e+02 9.62027187e-01 2.45417503e+00
 1.28022869e+03 5.40730283e+02 1.00622896e+02 8.02671114e+01
 1.75196570e+01 2.16351158e+01 1.41576117e+01 8.01164850e+01
 6.36980186e-01 1.66012885e+00 2.97179185e+00 1.13830168e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.924555854110977
cond(S) = 86.52452065194436
E1 = -181.53710644942953  E_coul = 54.94209286198647
init E= -126.595013587443
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74733404726128  LUMO = 2.8720562330153
  mo_energy =
[-3.20650822e+01 -1.79081880e+00 -7.47334047e-01 -7.47334047e-01
 -7.47334047e-01  2.87205623e+00  2.87205623e+00  2.87205623e+00
  2.15322250e+01  2.15322250e+01  2.15322250e+01  8.17420493e+01
  1.34787034e+03  6.07679616e+03]
E1 = -181.7288140329058  E_coul = 54.591640963877275
cycle= 1 E= -127.137173069029  delta_E= -0.542  |g|= 0.11  |ddm|= 0.163
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.170879
diis-c [-0.02919965  1.        ]
  HOMO = -0.748777399360349  LUMO = 2.87625743310735
  mo_energy =
[-3.22191525e+01 -1.80741242e+00 -7.48777399e-01 -7.48777399e-01
 -7.48777399e-01  2.87625743e+00  2.87625743e+00  2.87625743e+00
  2.14499560e+01  2.14499560e+01  2.14499560e+01  8.16129867e+01
  1.34763245e+03  6.07650035e+03]
E1 = -181.8564351224338  E_coul = 54.719075312828004
cycle= 2 E= -127.137359809606  delta_E= -0.000187  |g|= 0.0148  |ddm|= 0.0168
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0243536
diis-c [-4.17006559e-04  7.25432671e-02  9.27456733e-01]
  HOMO = -0.741019485410928  LUMO = 2.8838158613209
  mo_energy =
[-3.21923388e+01 -1.79837958e+00 -7.41019485e-01 -7.41019485e-01
 -7.41019485e-01  2.88381586e+00  2.88381586e+00  2.88381586e+00
  2.14702680e+01  2.14702680e+01  2.14702680e+01  8.16397836e+01
  1.34766226e+03  6.07653032e+03]
E1 = -181.82155241819999  E_coul = 54.684176120286246
cycle= 3 E= -127.137376297914  delta_E= -1.65e-05  |g|= 0.00296  |ddm|= 0.0047
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00490999
diis-c [-5.02972032e-09 -1.35809947e-03  1.64322832e-01  8.37035268e-01]
  HOMO = -0.74233303919679  LUMO = 2.88254113309812
  mo_energy =
[-3.21967706e+01 -1.79990084e+00 -7.42333039e-01 -7.42333039e-01
 -7.42333039e-01  2.88254113e+00  2.88254113e+00  2.88254113e+00
  2.14668790e+01  2.14668790e+01  2.14668790e+01  8.16353813e+01
  1.34765738e+03  6.07652538e+03]
E1 = -181.82738198581424  E_coul = 54.69000499455187
cycle= 4 E= -127.137376991262  delta_E= -6.93e-07  |g|= 3.71e-06  |ddm|= 0.000783
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.57486e-06
diis-c [-9.74654366e-13  2.71056877e-05 -3.37705127e-03 -1.85039729e-02
  1.02185392e+00]
  HOMO = -0.742334835160941  LUMO = 2.88253958117032
  mo_energy =
[-3.21967753e+01 -1.79990272e+00 -7.42334835e-01 -7.42334835e-01
 -7.42334835e-01  2.88253958e+00  2.88253958e+00  2.88253958e+00
  2.14668751e+01  2.14668751e+01  2.14668751e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.82738858397744  E_coul = 54.690011592713965
cycle= 5 E= -127.137376991263  delta_E= -1.09e-12  |g|= 5.44e-08  |ddm|= 8.39e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.82738858397744  E_coul = 54.690011592713965
  HOMO = -0.742334865326371  LUMO = 2.88253954900935
  mo_energy =
[-3.21967753e+01 -1.79990276e+00 -7.42334865e-01 -7.42334865e-01
 -7.42334865e-01  2.88253955e+00  2.88253955e+00  2.88253955e+00
  2.14668750e+01  2.14668750e+01  2.14668750e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.82738870804076  E_coul = 54.690011716777306
Extra cycle  E= -127.137376991263  delta_E= 1.42e-14  |g|= 1.44e-08  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 86.52452065194436
E1 = -181.82738870804076  E_coul = 54.690011716777306
init E= -127.137376991263
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.742334857186758  LUMO = 2.88253955693418
  mo_energy =
[-3.21967753e+01 -1.79990275e+00 -7.42334857e-01 -7.42334857e-01
 -7.42334857e-01  2.88253956e+00  2.88253956e+00  2.88253956e+00
  2.14668751e+01  2.14668751e+01  2.14668751e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.8273886712577  E_coul = 54.690011679994264
cycle= 1 E= -127.137376991263  delta_E= 1.42e-14  |g|= 4.25e-09  |ddm|= 4.97e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.8273886712577  E_coul = 54.690011679994264
  HOMO = -0.742334859620288  LUMO = 2.88253955456879
  mo_energy =
[-3.21967753e+01 -1.79990275e+00 -7.42334860e-01 -7.42334860e-01
 -7.42334860e-01  2.88253955e+00  2.88253955e+00  2.88253955e+00
  2.14668751e+01  2.14668751e+01  2.14668751e+01  8.16353768e+01
  1.34765738e+03  6.07652537e+03]
E1 = -181.82738868209455  E_coul = 54.69001169083115
Extra cycle  E= -127.137376991263  delta_E= 2.84e-14  |g|= 1.25e-09  |ddm|= 1.46e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94365814e+03 9.62027187e-01 1.28022869e+03 1.00622896e+02
 1.75196570e+01 1.41576117e+01 6.36980186e-01 2.97179185e+00]
grad_E = [ 8.73907652e-05  3.73329617e-02  4.15267086e-04  6.99286341e-04
 -8.57501380e-03 -1.39953859e-03  4.35516650e-02  2.79037210e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1937.4088002         1
[INPUT] 0    0    [1    /1   ]  0.964607355303       1
[INPUT] 0    0    [1    /1   ]  1252.05174189        1
[INPUT] 0    0    [1    /1   ]  100.069611985        1
[INPUT] 0    0    [1    /1   ]  17.4270425617        1
[INPUT] 1    0    [1    /1   ]  14.7773719545        1
[INPUT] 1    0    [1    /1   ]  0.663035469743       1
[INPUT] 1    0    [1    /1   ]  3.11917842539        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1937.4088001955095, 1.0]], [0, [0.9646073553032701, 1.0]], [0, [1252.0517418855281, 1.0]], [0, [100.06961198542696, 1.0]], [0, [17.427042561725557, 1.0]], [1, [14.77737195453267, 1.0]], [1, [0.6630354697430347, 1.0]], [1, [3.1191784253942147, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1937.4088002]
bas 1, expnt(s) = [0.96460736]
bas 2, expnt(s) = [1252.05174189]
bas 3, expnt(s) = [100.06961199]
bas 4, expnt(s) = [17.42704256]
bas 5, expnt(s) = [14.77737195]
bas 6, expnt(s) = [0.66303547]
bas 7, expnt(s) = [3.11917843]
CPU time:       202.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.93740880e+03 7.37786960e+02 9.64607355e-01 2.45910997e+00
 1.25205174e+03 5.31779672e+02 1.00069612e+02 7.99358663e+01
 1.74270426e+01 2.15492814e+01 1.47773720e+01 8.45241669e+01
 6.63035470e-01 1.74544169e+00 3.11917843e+00 1.20930171e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917917958758563
cond(S) = 79.6146182113343
E1 = -181.5685919207181  E_coul = 54.95089427955207
init E= -126.617697641166
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.745727763306151  LUMO = 3.03602660526772
  mo_energy =
[-3.20692347e+01 -1.79004571e+00 -7.45727763e-01 -7.45727763e-01
 -7.45727763e-01  3.03602661e+00  3.03602661e+00  3.03602661e+00
  2.27421396e+01  2.27421396e+01  2.27421396e+01  8.10880706e+01
  1.32823719e+03  6.00143503e+03]
E1 = -181.8977335787016  E_coul = 54.75444971323235
cycle= 1 E= -127.143283865469  delta_E= -0.526  |g|=  0.1  |ddm|= 0.154
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.156704
diis-c [-0.02455613  1.        ]
  HOMO = -0.735559735768208  LUMO = 3.05078421126452
  mo_energy =
[-3.21945329e+01 -1.79326835e+00 -7.35559736e-01 -7.35559736e-01
 -7.35559736e-01  3.05078421e+00  3.05078421e+00  3.05078421e+00
  2.26811067e+01  2.26811067e+01  2.26811067e+01  8.09869218e+01
  1.32802458e+03  6.00116405e+03]
E1 = -181.9835165446702  E_coul = 54.84014013254168
cycle= 2 E= -127.143376412129  delta_E= -9.25e-05  |g|= 0.00998  |ddm|= 0.0111
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0163122
diis-c [-2.22944353e-04  4.04063927e-02  9.59593607e-01]
  HOMO = -0.730220307224938  LUMO = 3.05622712435183
  mo_energy =
[-3.21756476e+01 -1.78704602e+00 -7.30220307e-01 -7.30220307e-01
 -7.30220307e-01  3.05622712e+00  3.05622712e+00  3.05622712e+00
  2.26955123e+01  2.26955123e+01  2.26955123e+01  8.10058203e+01
  1.32804571e+03  6.00118526e+03]
E1 = -181.95996780985712  E_coul = 54.816584181452235
cycle= 3 E= -127.143383628405  delta_E= -7.22e-06  |g|= 0.00233  |ddm|= 0.00319
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00384122
diis-c [-6.72160094e-09 -1.40700425e-03  1.87054196e-01  8.14352808e-01]
  HOMO = -0.731250798243503  LUMO = 3.05518162239543
  mo_energy =
[-3.21791627e+01 -1.78823817e+00 -7.31250798e-01 -7.31250798e-01
 -7.31250798e-01  3.05518162e+00  3.05518162e+00  3.05518162e+00
  2.26927933e+01  2.26927933e+01  2.26927933e+01  8.10023280e+01
  1.32804183e+03  6.00118132e+03]
E1 = -181.9644220032427  E_coul = 54.821037957512644
cycle= 4 E= -127.14338404573  delta_E= -4.17e-07  |g|= 4.82e-06  |ddm|= 0.000601
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.51891e-06
diis-c [-1.37150554e-12  3.39807317e-05 -4.83719946e-03 -2.31984412e-02
  1.02800166e+00]
  HOMO = -0.731253075651771  LUMO = 3.05517944174423
  mo_energy =
[-3.21791689e+01 -1.78824062e+00 -7.31253076e-01 -7.31253076e-01
 -7.31253076e-01  3.05517944e+00  3.05517944e+00  3.05517944e+00
  2.26927881e+01  2.26927881e+01  2.26927881e+01  8.10023220e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.9644303839979  E_coul = 54.821046338266214
cycle= 5 E= -127.143384045732  delta_E= -1.62e-12  |g|= 3.85e-08  |ddm|= 1.07e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9644303839979  E_coul = 54.821046338266214
  HOMO = -0.731253095007944  LUMO = 3.05517942014712
  mo_energy =
[-3.21791689e+01 -1.78824064e+00 -7.31253095e-01 -7.31253095e-01
 -7.31253095e-01  3.05517942e+00  3.05517942e+00  3.05517942e+00
  2.26927880e+01  2.26927880e+01  2.26927880e+01  8.10023219e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.96443046158058  E_coul = 54.82104641584896
Extra cycle  E= -127.143384045732  delta_E= 7.11e-14  |g|= 9.06e-09  |ddm|= 1.01e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.93740880e+03 9.64607355e-01 1.25205174e+03 1.00069612e+02
 1.74270426e+01 1.47773720e+01 6.63035470e-01 3.11917843e+00]
E = -127.14338404573161
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1937.4088002         1
[INPUT] 0    0    [1    /1   ]  0.964607355303       1
[INPUT] 0    0    [1    /1   ]  1252.05174189        1
[INPUT] 0    0    [1    /1   ]  100.069611985        1
[INPUT] 0    0    [1    /1   ]  17.4270425617        1
[INPUT] 1    0    [1    /1   ]  14.7773719545        1
[INPUT] 1    0    [1    /1   ]  0.663035469743       1
[INPUT] 1    0    [1    /1   ]  3.11917842539        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1937.4088001955095, 1.0]], [0, [0.9646073553032701, 1.0]], [0, [1252.0517418855281, 1.0]], [0, [100.06961198542696, 1.0]], [0, [17.427042561725557, 1.0]], [1, [14.77737195453267, 1.0]], [1, [0.6630354697430347, 1.0]], [1, [3.1191784253942147, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1937.4088002]
bas 1, expnt(s) = [0.96460736]
bas 2, expnt(s) = [1252.05174189]
bas 3, expnt(s) = [100.06961199]
bas 4, expnt(s) = [17.42704256]
bas 5, expnt(s) = [14.77737195]
bas 6, expnt(s) = [0.66303547]
bas 7, expnt(s) = [3.11917843]
CPU time:       203.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.93740880e+03 7.37786960e+02 9.64607355e-01 2.45910997e+00
 1.25205174e+03 5.31779672e+02 1.00069612e+02 7.99358663e+01
 1.74270426e+01 2.15492814e+01 1.47773720e+01 8.45241669e+01
 6.63035470e-01 1.74544169e+00 3.11917843e+00 1.20930171e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.917917958758563
cond(S) = 79.6146182113343
E1 = -181.5685919207181  E_coul = 54.95089427955207
init E= -126.617697641166
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.745727763306151  LUMO = 3.03602660526772
  mo_energy =
[-3.20692347e+01 -1.79004571e+00 -7.45727763e-01 -7.45727763e-01
 -7.45727763e-01  3.03602661e+00  3.03602661e+00  3.03602661e+00
  2.27421396e+01  2.27421396e+01  2.27421396e+01  8.10880706e+01
  1.32823719e+03  6.00143503e+03]
E1 = -181.8977335787016  E_coul = 54.75444971323235
cycle= 1 E= -127.143283865469  delta_E= -0.526  |g|=  0.1  |ddm|= 0.154
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.156704
diis-c [-0.02455613  1.        ]
  HOMO = -0.735559735768208  LUMO = 3.05078421126452
  mo_energy =
[-3.21945329e+01 -1.79326835e+00 -7.35559736e-01 -7.35559736e-01
 -7.35559736e-01  3.05078421e+00  3.05078421e+00  3.05078421e+00
  2.26811067e+01  2.26811067e+01  2.26811067e+01  8.09869218e+01
  1.32802458e+03  6.00116405e+03]
E1 = -181.9835165446702  E_coul = 54.84014013254168
cycle= 2 E= -127.143376412129  delta_E= -9.25e-05  |g|= 0.00998  |ddm|= 0.0111
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0163122
diis-c [-2.22944353e-04  4.04063927e-02  9.59593607e-01]
  HOMO = -0.730220307224938  LUMO = 3.05622712435183
  mo_energy =
[-3.21756476e+01 -1.78704602e+00 -7.30220307e-01 -7.30220307e-01
 -7.30220307e-01  3.05622712e+00  3.05622712e+00  3.05622712e+00
  2.26955123e+01  2.26955123e+01  2.26955123e+01  8.10058203e+01
  1.32804571e+03  6.00118526e+03]
E1 = -181.95996780985712  E_coul = 54.816584181452235
cycle= 3 E= -127.143383628405  delta_E= -7.22e-06  |g|= 0.00233  |ddm|= 0.00319
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00384122
diis-c [-6.72160094e-09 -1.40700425e-03  1.87054196e-01  8.14352808e-01]
  HOMO = -0.731250798243503  LUMO = 3.05518162239543
  mo_energy =
[-3.21791627e+01 -1.78823817e+00 -7.31250798e-01 -7.31250798e-01
 -7.31250798e-01  3.05518162e+00  3.05518162e+00  3.05518162e+00
  2.26927933e+01  2.26927933e+01  2.26927933e+01  8.10023280e+01
  1.32804183e+03  6.00118132e+03]
E1 = -181.9644220032427  E_coul = 54.821037957512644
cycle= 4 E= -127.14338404573  delta_E= -4.17e-07  |g|= 4.82e-06  |ddm|= 0.000601
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.51891e-06
diis-c [-1.37150554e-12  3.39807317e-05 -4.83719946e-03 -2.31984412e-02
  1.02800166e+00]
  HOMO = -0.731253075651771  LUMO = 3.05517944174423
  mo_energy =
[-3.21791689e+01 -1.78824062e+00 -7.31253076e-01 -7.31253076e-01
 -7.31253076e-01  3.05517944e+00  3.05517944e+00  3.05517944e+00
  2.26927881e+01  2.26927881e+01  2.26927881e+01  8.10023220e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.9644303839979  E_coul = 54.821046338266214
cycle= 5 E= -127.143384045732  delta_E= -1.62e-12  |g|= 3.85e-08  |ddm|= 1.07e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.9644303839979  E_coul = 54.821046338266214
  HOMO = -0.731253095007944  LUMO = 3.05517942014712
  mo_energy =
[-3.21791689e+01 -1.78824064e+00 -7.31253095e-01 -7.31253095e-01
 -7.31253095e-01  3.05517942e+00  3.05517942e+00  3.05517942e+00
  2.26927880e+01  2.26927880e+01  2.26927880e+01  8.10023219e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.96443046158058  E_coul = 54.82104641584896
Extra cycle  E= -127.143384045732  delta_E= 7.11e-14  |g|= 9.06e-09  |ddm|= 1.01e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 79.6146182113343
E1 = -181.96443046158058  E_coul = 54.82104641584896
init E= -127.143384045732
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.731253089942055  LUMO = 3.05517942530182
  mo_energy =
[-3.21791689e+01 -1.78824063e+00 -7.31253090e-01 -7.31253090e-01
 -7.31253090e-01  3.05517943e+00  3.05517943e+00  3.05517943e+00
  2.26927881e+01  2.26927881e+01  2.26927881e+01  8.10023220e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.96443043925586  E_coul = 54.82104639352416
cycle= 1 E= -127.143384045732  delta_E= -8.53e-14  |g|= 2.59e-09  |ddm|= 3.03e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.96443043925586  E_coul = 54.82104639352416
  HOMO = -0.731253091412382  LUMO = 3.05517942380851
  mo_energy =
[-3.21791689e+01 -1.78824064e+00 -7.31253091e-01 -7.31253091e-01
 -7.31253091e-01  3.05517942e+00  3.05517942e+00  3.05517942e+00
  2.26927880e+01  2.26927880e+01  2.26927880e+01  8.10023220e+01
  1.32804182e+03  6.00118131e+03]
E1 = -181.96443044563114  E_coul = 54.82104639989954
Extra cycle  E= -127.143384045732  delta_E= 8.53e-14  |g|= 7.39e-10  |ddm|= 8.61e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
exp = [1.93740880e+03 9.64607355e-01 1.25205174e+03 1.00069612e+02
 1.74270426e+01 1.47773720e+01 6.63035470e-01 3.11917843e+00]
grad_E = [ 8.23728155e-05  6.04371884e-02  4.28768612e-04  1.14765119e-03
 -1.38913334e-02 -2.22514481e-03  7.16760741e-02  4.48474176e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1919.98055001        1
[INPUT] 0    0    [1    /1   ]  0.968856368549       1
[INPUT] 0    0    [1    /1   ]  1173.47015761        1
[INPUT] 0    0    [1    /1   ]  98.5899431725        1
[INPUT] 0    0    [1    /1   ]  17.2280033713        1
[INPUT] 1    0    [1    /1   ]  15.9552810194        1
[INPUT] 1    0    [1    /1   ]  0.711244055224       1
[INPUT] 1    0    [1    /1   ]  3.40173490916        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1919.980550012676, 1.0]], [0, [0.9688563685491821, 1.0]], [0, [1173.4701576143293, 1.0]], [0, [98.58994317249145, 1.0]], [0, [17.228003371261526, 1.0]], [1, [15.955281019449032, 1.0]], [1, [0.7112440552237137, 1.0]], [1, [3.4017349091641567, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1919.98055001]
bas 1, expnt(s) = [0.96885637]
bas 2, expnt(s) = [1173.47015761]
bas 3, expnt(s) = [98.58994317]
bas 4, expnt(s) = [17.22800337]
bas 5, expnt(s) = [15.95528102]
bas 6, expnt(s) = [0.71124406]
bas 7, expnt(s) = [3.40173491]
CPU time:       206.86
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.91998055e+03 7.32803688e+02 9.68856369e-01 2.46722964e+00
 1.17347016e+03 5.06546200e+02 9.85899432e+01 7.90477452e+01
 1.72280034e+01 2.13644263e+01 1.59552810e+01 9.30282743e+01
 7.11244055e-01 1.90549452e+00 3.40173491e+00 1.34775197e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.904044661145555
cond(S) = 63.811263554972065
E1 = -181.62808446843238  E_coul = 54.96052539403932
init E= -126.667559074393
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742141441871499  LUMO = 3.35039331263865
  mo_energy =
[-3.20842653e+01 -1.78954721e+00 -7.42141442e-01 -7.42141442e-01
 -7.42141442e-01  3.35039331e+00  3.35039331e+00  3.35039331e+00
  2.50754368e+01  2.50754368e+01  2.50754368e+01  7.94853067e+01
  1.27273474e+03  5.78964720e+03]
E1 = -182.21424096947024  E_coul = 55.05398506737756
cycle= 1 E= -127.160255902093  delta_E= -0.493  |g|= 0.0866  |ddm|= 0.14
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135793
diis-c [-0.01843987  1.        ]
  HOMO = -0.70994668737534  LUMO = 3.38711111086231
  mo_energy =
[-3.21558517e+01 -1.76744997e+00 -7.09946687e-01 -7.09946687e-01
 -7.09946687e-01  3.38711111e+00  3.38711111e+00  3.38711111e+00
  2.50554615e+01  2.50554615e+01  2.50554615e+01  7.94364805e+01
  1.27257186e+03  5.78942564e+03]
E1 = -182.23001121483972  E_coul = 55.06974383189216
cycle= 2 E= -127.160267382948  delta_E= -1.15e-05  |g|= 0.00197  |ddm|= 0.0018
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00304561
diis-c [-8.96671546e-06 -4.11136627e-03  1.00411137e+00]
  HOMO = -0.709012709706426  LUMO = 3.38816302386418
  mo_energy =
[-3.21518623e+01 -1.76632911e+00 -7.09012710e-01 -7.09012710e-01
 -7.09012710e-01  3.38816302e+00  3.38816302e+00  3.38816302e+00
  2.50583920e+01  2.50583920e+01  2.50583920e+01  7.94405545e+01
  1.27257659e+03  5.78943028e+03]
E1 = -182.22569721399336  E_coul = 55.065429593857836
cycle= 3 E= -127.160267620136  delta_E= -2.37e-07  |g|= 0.000509  |ddm|= 0.000604
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000836729
diis-c [-1.22359410e-08 -1.55973487e-03  2.16894820e-01  7.84664915e-01]
  HOMO = -0.709237218790131  LUMO = 3.3879169720919
  mo_energy =
[-3.21526428e+01 -1.76658780e+00 -7.09237219e-01 -7.09237219e-01
 -7.09237219e-01  3.38791697e+00  3.38791697e+00  3.38791697e+00
  2.50577759e+01  2.50577759e+01  2.50577759e+01  7.94397794e+01
  1.27257571e+03  5.78942938e+03]
E1 = -182.22661737961087  E_coul = 55.066349740444416
cycle= 4 E= -127.160267639166  delta_E= -1.9e-08  |g|= 4.69e-06  |ddm|= 0.000125
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.06827e-06
diis-c [-1.49385496e-12  4.04079012e-05 -6.45008784e-03 -3.17517305e-02
  1.03816141e+00]
  HOMO = -0.709239208025675  LUMO = 3.38791485801969
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239208e-01 -7.09239208e-01
 -7.09239208e-01  3.38791486e+00  3.38791486e+00  3.38791486e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662411342372  E_coul = 55.0663564742561
cycle= 5 E= -127.160267639168  delta_E= -1.18e-12  |g|= 1.86e-08  |ddm|= 8.53e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.22662411342372  E_coul = 55.0663564742561
  HOMO = -0.70923921382135  LUMO = 3.38791485153399
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239214e-01 -7.09239214e-01
 -7.09239214e-01  3.38791485e+00  3.38791485e+00  3.38791485e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662413481902  E_coul = 55.06635649565137
Extra cycle  E= -127.160267639168  delta_E= -1.42e-14  |g|= 2.53e-09  |ddm|= 2.8e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.91998055e+03 9.68856369e-01 1.17347016e+03 9.85899432e+01
 1.72280034e+01 1.59552810e+01 7.11244055e-01 3.40173491e+00]
E = -127.16026763916764
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1919.98055001        1
[INPUT] 0    0    [1    /1   ]  0.968856368549       1
[INPUT] 0    0    [1    /1   ]  1173.47015761        1
[INPUT] 0    0    [1    /1   ]  98.5899431725        1
[INPUT] 0    0    [1    /1   ]  17.2280033713        1
[INPUT] 1    0    [1    /1   ]  15.9552810194        1
[INPUT] 1    0    [1    /1   ]  0.711244055224       1
[INPUT] 1    0    [1    /1   ]  3.40173490916        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1919.980550012676, 1.0]], [0, [0.9688563685491821, 1.0]], [0, [1173.4701576143293, 1.0]], [0, [98.58994317249145, 1.0]], [0, [17.228003371261526, 1.0]], [1, [15.955281019449032, 1.0]], [1, [0.7112440552237137, 1.0]], [1, [3.4017349091641567, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1919.98055001]
bas 1, expnt(s) = [0.96885637]
bas 2, expnt(s) = [1173.47015761]
bas 3, expnt(s) = [98.58994317]
bas 4, expnt(s) = [17.22800337]
bas 5, expnt(s) = [15.95528102]
bas 6, expnt(s) = [0.71124406]
bas 7, expnt(s) = [3.40173491]
CPU time:       207.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.91998055e+03 7.32803688e+02 9.68856369e-01 2.46722964e+00
 1.17347016e+03 5.06546200e+02 9.85899432e+01 7.90477452e+01
 1.72280034e+01 2.13644263e+01 1.59552810e+01 9.30282743e+01
 7.11244055e-01 1.90549452e+00 3.40173491e+00 1.34775197e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.904044661145555
cond(S) = 63.811263554972065
E1 = -181.62808446843238  E_coul = 54.96052539403932
init E= -126.667559074393
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742141441871499  LUMO = 3.35039331263865
  mo_energy =
[-3.20842653e+01 -1.78954721e+00 -7.42141442e-01 -7.42141442e-01
 -7.42141442e-01  3.35039331e+00  3.35039331e+00  3.35039331e+00
  2.50754368e+01  2.50754368e+01  2.50754368e+01  7.94853067e+01
  1.27273474e+03  5.78964720e+03]
E1 = -182.21424096947024  E_coul = 55.05398506737756
cycle= 1 E= -127.160255902093  delta_E= -0.493  |g|= 0.0866  |ddm|= 0.14
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135793
diis-c [-0.01843987  1.        ]
  HOMO = -0.70994668737534  LUMO = 3.38711111086231
  mo_energy =
[-3.21558517e+01 -1.76744997e+00 -7.09946687e-01 -7.09946687e-01
 -7.09946687e-01  3.38711111e+00  3.38711111e+00  3.38711111e+00
  2.50554615e+01  2.50554615e+01  2.50554615e+01  7.94364805e+01
  1.27257186e+03  5.78942564e+03]
E1 = -182.23001121483972  E_coul = 55.06974383189216
cycle= 2 E= -127.160267382948  delta_E= -1.15e-05  |g|= 0.00197  |ddm|= 0.0018
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00304561
diis-c [-8.96671546e-06 -4.11136627e-03  1.00411137e+00]
  HOMO = -0.709012709706426  LUMO = 3.38816302386418
  mo_energy =
[-3.21518623e+01 -1.76632911e+00 -7.09012710e-01 -7.09012710e-01
 -7.09012710e-01  3.38816302e+00  3.38816302e+00  3.38816302e+00
  2.50583920e+01  2.50583920e+01  2.50583920e+01  7.94405545e+01
  1.27257659e+03  5.78943028e+03]
E1 = -182.22569721399336  E_coul = 55.065429593857836
cycle= 3 E= -127.160267620136  delta_E= -2.37e-07  |g|= 0.000509  |ddm|= 0.000604
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000836729
diis-c [-1.22359410e-08 -1.55973487e-03  2.16894820e-01  7.84664915e-01]
  HOMO = -0.709237218790131  LUMO = 3.3879169720919
  mo_energy =
[-3.21526428e+01 -1.76658780e+00 -7.09237219e-01 -7.09237219e-01
 -7.09237219e-01  3.38791697e+00  3.38791697e+00  3.38791697e+00
  2.50577759e+01  2.50577759e+01  2.50577759e+01  7.94397794e+01
  1.27257571e+03  5.78942938e+03]
E1 = -182.22661737961087  E_coul = 55.066349740444416
cycle= 4 E= -127.160267639166  delta_E= -1.9e-08  |g|= 4.69e-06  |ddm|= 0.000125
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.06827e-06
diis-c [-1.49385496e-12  4.04079012e-05 -6.45008784e-03 -3.17517305e-02
  1.03816141e+00]
  HOMO = -0.709239208025675  LUMO = 3.38791485801969
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239208e-01 -7.09239208e-01
 -7.09239208e-01  3.38791486e+00  3.38791486e+00  3.38791486e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662411342372  E_coul = 55.0663564742561
cycle= 5 E= -127.160267639168  delta_E= -1.18e-12  |g|= 1.86e-08  |ddm|= 8.53e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.22662411342372  E_coul = 55.0663564742561
  HOMO = -0.70923921382135  LUMO = 3.38791485153399
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239214e-01 -7.09239214e-01
 -7.09239214e-01  3.38791485e+00  3.38791485e+00  3.38791485e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662413481902  E_coul = 55.06635649565137
Extra cycle  E= -127.160267639168  delta_E= -1.42e-14  |g|= 2.53e-09  |ddm|= 2.8e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 63.811263554972065
E1 = -182.22662413481902  E_coul = 55.06635649565137
init E= -127.160267639168
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.709239212436367  LUMO = 3.38791485305665
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239212e-01 -7.09239212e-01
 -7.09239212e-01  3.38791485e+00  3.38791485e+00  3.38791485e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662412898734  E_coul = 55.06635648981955
cycle= 1 E= -127.160267639168  delta_E= -1.42e-13  |g|= 6.8e-10  |ddm|= 8.02e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.22662412898734  E_coul = 55.06635648981955
  HOMO = -0.709239212817239  LUMO = 3.38791485263886
  mo_energy =
[-3.21526480e+01 -1.76658991e+00 -7.09239213e-01 -7.09239213e-01
 -7.09239213e-01  3.38791485e+00  3.38791485e+00  3.38791485e+00
  2.50577713e+01  2.50577713e+01  2.50577713e+01  7.94397742e+01
  1.27257570e+03  5.78942937e+03]
E1 = -182.22662413055426  E_coul = 55.06635649138667
Extra cycle  E= -127.160267639168  delta_E= 1.99e-13  |g|= 1.83e-10  |ddm|= 2.14e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.91998055e+03 9.68856369e-01 1.17347016e+03 9.85899432e+01
 1.72280034e+01 1.59552810e+01 7.11244055e-01 3.40173491e+00]
grad_E = [ 6.75905196e-05  1.00278148e-01  4.70004029e-04  1.99912288e-03
 -2.31692995e-02 -3.50958672e-03  1.25821219e-01  7.20317922e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1861.11894289        1
[INPUT] 0    0    [1    /1   ]  0.97772484426        1
[INPUT] 0    0    [1    /1   ]  908.068500985        1
[INPUT] 0    0    [1    /1   ]  93.4423017258        1
[INPUT] 0    0    [1    /1   ]  16.6426903586        1
[INPUT] 1    0    [1    /1   ]  18.9607886714        1
[INPUT] 1    0    [1    /1   ]  0.829916110866       1
[INPUT] 1    0    [1    /1   ]  4.13212565521        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1861.118942891709, 1.0]], [0, [0.9777248442596954, 1.0]], [0, [908.0685009845251, 1.0]], [0, [93.44230172580293, 1.0]], [0, [16.642690358613294, 1.0]], [1, [18.96078867143761, 1.0]], [1, [0.8299161108663519, 1.0]], [1, [4.132125655212899, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1861.11894289]
bas 1, expnt(s) = [0.97772484]
bas 2, expnt(s) = [908.06850098]
bas 3, expnt(s) = [93.44230173]
bas 4, expnt(s) = [16.64269036]
bas 5, expnt(s) = [18.96078867]
bas 6, expnt(s) = [0.82991611]
bas 7, expnt(s) = [4.13212566]
CPU time:       210.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.86111894e+03 7.15888888e+02 9.77724844e-01 2.48414826e+00
 9.08068501e+02 4.17930419e+02 9.34423017e+01 7.59316208e+01
 1.66426904e+01 2.08176966e+01 1.89607887e+01 1.15426331e+02
 8.29916111e-01 2.31087863e+00 4.13212566e+00 1.71870481e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.861324528717606
cond(S) = 33.27360349469348
E1 = -181.7693481409876  E_coul = 54.955300448027934
init E= -126.81404769296
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.730110308646348  LUMO = 4.17639260350774
  mo_energy =
[-3.21535754e+01 -1.79263304e+00 -7.30110309e-01 -7.30110309e-01
 -7.30110309e-01  4.17639260e+00  4.17639260e+00  4.17639260e+00
  3.12066931e+01  3.12066931e+01  3.12066931e+01  7.42904294e+01
  1.07121719e+03  5.04887961e+03]
E1 = -183.0305563148253  E_coul = 55.80680597358775
cycle= 1 E= -127.223750341238  delta_E= -0.41  |g|= 0.0842  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.12725
diis-c [-0.01619245  1.        ]
  HOMO = -0.63909343644499  LUMO = 4.28151933645514
  mo_energy =
[-3.20877299e+01 -1.70362331e+00 -6.39093436e-01 -6.39093436e-01
 -6.39093436e-01  4.28151934e+00  4.28151934e+00  4.28151934e+00
  3.12991880e+01  3.12991880e+01  3.12991880e+01  7.43760289e+01
  1.07119393e+03  5.04880060e+03]
E1 = -182.90841157115145  E_coul = 55.6844091281326
cycle= 2 E= -127.224002443019  delta_E= -0.000252  |g|= 0.0144  |ddm|= 0.0181
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0231743
diis-c [-2.49739396e-04  1.18354733e-01  8.81645267e-01]
  HOMO = -0.646105635859582  LUMO = 4.27249324730688
  mo_energy =
[-3.21126513e+01 -1.71159583e+00 -6.46105636e-01 -6.46105636e-01
 -6.46105636e-01  4.27249325e+00  4.27249325e+00  4.27249325e+00
  3.12785057e+01  3.12785057e+01  3.12785057e+01  7.43515099e+01
  1.07116636e+03  5.04877250e+03]
E1 = -182.93305171005676  E_coul = 55.70903617580124
cycle= 3 E= -127.224015534256  delta_E= -1.31e-05  |g|= 0.00121  |ddm|= 0.00343
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00187565
diis-c [-2.05144974e-08 -2.01489330e-03  6.78187504e-02  9.34196143e-01]
  HOMO = -0.64559599555838  LUMO = 4.2731629123644
  mo_energy =
[-3.21106303e+01 -1.71100505e+00 -6.45595996e-01 -6.45595996e-01
 -6.45595996e-01  4.27316291e+00  4.27316291e+00  4.27316291e+00
  3.12801273e+01  3.12801273e+01  3.12801273e+01  7.43535203e+01
  1.07116871e+03  5.04877489e+03]
E1 = -182.9311504571491  E_coul = 55.707134831339665
cycle= 4 E= -127.224015625809  delta_E= -9.16e-08  |g|= 5.02e-06  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.50084e-06
diis-c [-1.10748980e-12  4.58982654e-05 -2.20485276e-03 -2.53835724e-02
  1.02754253e+00]
  HOMO = -0.645597845747005  LUMO = 4.27316055586546
  mo_energy =
[-3.21106367e+01 -1.71100698e+00 -6.45597846e-01 -6.45597846e-01
 -6.45597846e-01  4.27316056e+00  4.27316056e+00  4.27316056e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115664111735  E_coul = 55.7071410153068
cycle= 5 E= -127.224015625811  delta_E= -1.11e-12  |g|= 3.05e-08  |ddm|= 8.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.93115664111735  E_coul = 55.7071410153068
  HOMO = -0.645597861750564  LUMO = 4.27316053458483
  mo_energy =
[-3.21106367e+01 -1.71100700e+00 -6.45597862e-01 -6.45597862e-01
 -6.45597862e-01  4.27316053e+00  4.27316053e+00  4.27316053e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115669330507  E_coul = 55.7071410674945
Extra cycle  E= -127.224015625811  delta_E= -2.84e-14  |g|= 6.17e-09  |ddm|= 7.19e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.86111894e+03 9.77724844e-01 9.08068501e+02 9.34423017e+01
 1.66426904e+01 1.89607887e+01 8.29916111e-01 4.13212566e+00]
E = -127.22401562581058
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1861.11894289        1
[INPUT] 0    0    [1    /1   ]  0.97772484426        1
[INPUT] 0    0    [1    /1   ]  908.068500985        1
[INPUT] 0    0    [1    /1   ]  93.4423017258        1
[INPUT] 0    0    [1    /1   ]  16.6426903586        1
[INPUT] 1    0    [1    /1   ]  18.9607886714        1
[INPUT] 1    0    [1    /1   ]  0.829916110866       1
[INPUT] 1    0    [1    /1   ]  4.13212565521        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1861.118942891709, 1.0]], [0, [0.9777248442596954, 1.0]], [0, [908.0685009845251, 1.0]], [0, [93.44230172580293, 1.0]], [0, [16.642690358613294, 1.0]], [1, [18.96078867143761, 1.0]], [1, [0.8299161108663519, 1.0]], [1, [4.132125655212899, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1861.11894289]
bas 1, expnt(s) = [0.97772484]
bas 2, expnt(s) = [908.06850098]
bas 3, expnt(s) = [93.44230173]
bas 4, expnt(s) = [16.64269036]
bas 5, expnt(s) = [18.96078867]
bas 6, expnt(s) = [0.82991611]
bas 7, expnt(s) = [4.13212566]
CPU time:       211.74
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.86111894e+03 7.15888888e+02 9.77724844e-01 2.48414826e+00
 9.08068501e+02 4.17930419e+02 9.34423017e+01 7.59316208e+01
 1.66426904e+01 2.08176966e+01 1.89607887e+01 1.15426331e+02
 8.29916111e-01 2.31087863e+00 4.13212566e+00 1.71870481e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.861324528717606
cond(S) = 33.27360349469348
E1 = -181.7693481409876  E_coul = 54.955300448027934
init E= -126.81404769296
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.730110308646348  LUMO = 4.17639260350774
  mo_energy =
[-3.21535754e+01 -1.79263304e+00 -7.30110309e-01 -7.30110309e-01
 -7.30110309e-01  4.17639260e+00  4.17639260e+00  4.17639260e+00
  3.12066931e+01  3.12066931e+01  3.12066931e+01  7.42904294e+01
  1.07121719e+03  5.04887961e+03]
E1 = -183.0305563148253  E_coul = 55.80680597358775
cycle= 1 E= -127.223750341238  delta_E= -0.41  |g|= 0.0842  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.12725
diis-c [-0.01619245  1.        ]
  HOMO = -0.63909343644499  LUMO = 4.28151933645514
  mo_energy =
[-3.20877299e+01 -1.70362331e+00 -6.39093436e-01 -6.39093436e-01
 -6.39093436e-01  4.28151934e+00  4.28151934e+00  4.28151934e+00
  3.12991880e+01  3.12991880e+01  3.12991880e+01  7.43760289e+01
  1.07119393e+03  5.04880060e+03]
E1 = -182.90841157115145  E_coul = 55.6844091281326
cycle= 2 E= -127.224002443019  delta_E= -0.000252  |g|= 0.0144  |ddm|= 0.0181
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0231743
diis-c [-2.49739396e-04  1.18354733e-01  8.81645267e-01]
  HOMO = -0.646105635859582  LUMO = 4.27249324730688
  mo_energy =
[-3.21126513e+01 -1.71159583e+00 -6.46105636e-01 -6.46105636e-01
 -6.46105636e-01  4.27249325e+00  4.27249325e+00  4.27249325e+00
  3.12785057e+01  3.12785057e+01  3.12785057e+01  7.43515099e+01
  1.07116636e+03  5.04877250e+03]
E1 = -182.93305171005676  E_coul = 55.70903617580124
cycle= 3 E= -127.224015534256  delta_E= -1.31e-05  |g|= 0.00121  |ddm|= 0.00343
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00187565
diis-c [-2.05144974e-08 -2.01489330e-03  6.78187504e-02  9.34196143e-01]
  HOMO = -0.64559599555838  LUMO = 4.2731629123644
  mo_energy =
[-3.21106303e+01 -1.71100505e+00 -6.45595996e-01 -6.45595996e-01
 -6.45595996e-01  4.27316291e+00  4.27316291e+00  4.27316291e+00
  3.12801273e+01  3.12801273e+01  3.12801273e+01  7.43535203e+01
  1.07116871e+03  5.04877489e+03]
E1 = -182.9311504571491  E_coul = 55.707134831339665
cycle= 4 E= -127.224015625809  delta_E= -9.16e-08  |g|= 5.02e-06  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.50084e-06
diis-c [-1.10748980e-12  4.58982654e-05 -2.20485276e-03 -2.53835724e-02
  1.02754253e+00]
  HOMO = -0.645597845747005  LUMO = 4.27316055586546
  mo_energy =
[-3.21106367e+01 -1.71100698e+00 -6.45597846e-01 -6.45597846e-01
 -6.45597846e-01  4.27316056e+00  4.27316056e+00  4.27316056e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115664111735  E_coul = 55.7071410153068
cycle= 5 E= -127.224015625811  delta_E= -1.11e-12  |g|= 3.05e-08  |ddm|= 8.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.93115664111735  E_coul = 55.7071410153068
  HOMO = -0.645597861750564  LUMO = 4.27316053458483
  mo_energy =
[-3.21106367e+01 -1.71100700e+00 -6.45597862e-01 -6.45597862e-01
 -6.45597862e-01  4.27316053e+00  4.27316053e+00  4.27316053e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115669330507  E_coul = 55.7071410674945
Extra cycle  E= -127.224015625811  delta_E= -2.84e-14  |g|= 6.17e-09  |ddm|= 7.19e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 33.27360349469348
E1 = -182.93115669330507  E_coul = 55.7071410674945
init E= -127.224015625811
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.645597858430465  LUMO = 4.27316053889034
  mo_energy =
[-3.21106367e+01 -1.71100699e+00 -6.45597858e-01 -6.45597858e-01
 -6.45597858e-01  4.27316054e+00  4.27316054e+00  4.27316054e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115668132165  E_coul = 55.70714105551121
cycle= 1 E= -127.22401562581  delta_E= 1.42e-13  |g|= 1.41e-09  |ddm|= 1.68e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.93115668132165  E_coul = 55.70714105551121
  HOMO = -0.645597859195752  LUMO = 4.27316053789909
  mo_energy =
[-3.21106367e+01 -1.71100699e+00 -6.45597859e-01 -6.45597859e-01
 -6.45597859e-01  4.27316054e+00  4.27316054e+00  4.27316054e+00
  3.12801219e+01  3.12801219e+01  3.12801219e+01  7.43535139e+01
  1.07116870e+03  5.04877487e+03]
E1 = -182.93115668406293  E_coul = 55.70714105825238
Extra cycle  E= -127.224015625811  delta_E= -1.14e-13  |g|= 3.24e-10  |ddm|= 3.84e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.86111894e+03 9.77724844e-01 9.08068501e+02 9.34423017e+01
 1.66426904e+01 1.89607887e+01 8.29916111e-01 4.13212566e+00]
grad_E = [ 6.31827501e-06  1.87878422e-01  6.36398508e-04  5.19678756e-03
 -4.57456307e-02 -5.21258257e-03  3.02117505e-01  1.13275376e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.72671847        1
[INPUT] 0    0    [1    /1   ]  0.997862064135       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  72.0465821517        1
[INPUT] 0    0    [1    /1   ]  14.5048166933        1
[INPUT] 1    0    [1    /1   ]  27.9688024442        1
[INPUT] 1    0    [1    /1   ]  1.16739813414        1
[INPUT] 1    0    [1    /1   ]  6.35126423127        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.726718473551, 1.0]], [0, [0.9978620641351825, 1.0]], [0, [1e-09, 1.0]], [0, [72.04658215172851, 1.0]], [0, [14.504816693320945, 1.0]], [1, [27.968802444163657, 1.0]], [1, [1.1673981341366928, 1.0]], [1, [6.351264231269377, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.72671847]
bas 1, expnt(s) = [0.99786206]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [72.04658215]
bas 4, expnt(s) = [14.50481669]
bas 5, expnt(s) = [27.96880244]
bas 6, expnt(s) = [1.16739813]
bas 7, expnt(s) = [6.35126423]
CPU time:       215.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972672e+03 6.56965348e+02 9.97862064e-01 2.52242295e+00
 1.00000000e-09 4.49277867e-07 7.20465822e+01 6.24777040e+01
 1.45048167e+01 1.87779945e+01 2.79688024e+01 1.87640565e+02
 1.16739813e+00 3.54003973e+00 6.35126423e+00 2.94143746e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.681511732650932
cond(S) = 6.267397676029546
E1 = -177.95413859880878  E_coul = 54.6997373930139
init E= -123.254401205795
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.683368247522048  LUMO = -1.60702616930697e-05
  mo_energy =
[-3.15423939e+01 -1.78331245e+00 -6.83368248e-01 -6.83368248e-01
 -6.83368248e-01 -1.60702617e-05  6.85415129e+00  6.85415129e+00
  6.85415129e+00  5.06816452e+01  5.06816452e+01  5.06816452e+01
  5.48892225e+01  2.06248487e+03]
E1 = -183.5278135881621  E_coul = 58.12249229543604
cycle= 1 E= -125.405321292726  delta_E= -2.15  |g|= 0.389  |ddm|= 0.168
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.6342
diis-c [-0.40220915  1.        ]
  HOMO = -0.379527992206964  LUMO = 1.50036900233893e-09
  mo_energy =
[-3.10412871e+01 -1.46342749e+00 -3.79527992e-01 -3.79527992e-01
 -3.79527992e-01  1.50036900e-09  7.26210281e+00  7.26210281e+00
  7.26210281e+00  5.11818939e+01  5.11818939e+01  5.11818939e+01
  5.54064571e+01  2.06268912e+03]
E1 = -183.19476470552053  E_coul = 57.78619822955723
cycle= 2 E= -125.408566475963  delta_E= -0.00325  |g|= 0.0399  |ddm|= 0.0511
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0579011
diis-c [-0.00194988  0.05588922  0.94411078]
  HOMO = -0.39898866121073  LUMO = 1.50036468566531e-09
  mo_energy =
[-3.11202735e+01 -1.48459431e+00 -3.98988661e-01 -3.98988661e-01
 -3.98988661e-01  1.50036469e-09  7.22725861e+00  7.22725861e+00
  7.22725861e+00  5.11109761e+01  5.11109761e+01  5.11109761e+01
  5.53322717e+01  2.06259492e+03]
E1 = -183.23913628014267  E_coul = 57.83050591196009
cycle= 3 E= -125.408630368183  delta_E= -6.39e-05  |g|= 0.00302  |ddm|= 0.00657
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00439797
diis-c [-1.96625217e-09 -4.81386373e-04  6.76048269e-02  9.32876560e-01]
  HOMO = -0.397651640175054  LUMO = 1.50036518084824e-09
  mo_energy =
[-3.11145424e+01 -1.48313323e+00 -3.97651640e-01 -3.97651640e-01
 -3.97651640e-01  1.50036518e-09  7.22970691e+00  7.22970691e+00
  7.22970691e+00  5.11160986e+01  5.11160986e+01  5.11160986e+01
  5.53376498e+01  2.06260241e+03]
E1 = -183.23598146631954  E_coul = 57.8273507218039
cycle= 4 E= -125.408630744516  delta_E= -3.76e-07  |g|= 2.35e-06  |ddm|= 0.000469
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.51869e-06
diis-c [-4.89220337e-14  5.73406242e-06 -8.47584240e-04 -1.08695017e-02
  1.01171135e+00]
  HOMO = -0.397652774097399  LUMO = 1.50036519456387e-09
  mo_energy =
[-3.11145462e+01 -1.48313439e+00 -3.97652774e-01 -3.97652774e-01
 -3.97652774e-01  1.50036519e-09  7.22970511e+00  7.22970511e+00
  7.22970511e+00  5.11160953e+01  5.11160953e+01  5.11160953e+01
  5.53376464e+01  2.06260241e+03]
E1 = -183.23598384632686  E_coul = 57.82735310181096
cycle= 5 E= -125.408630744516  delta_E= -2.56e-13  |g|= 1.42e-08  |ddm|= 3.5e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.23598384632686  E_coul = 57.82735310181096
  HOMO = -0.397652767273642  LUMO = 1.50036518068762e-09
  mo_energy =
[-3.11145461e+01 -1.48313438e+00 -3.97652767e-01 -3.97652767e-01
 -3.97652767e-01  1.50036518e-09  7.22970512e+00  7.22970512e+00
  7.22970512e+00  5.11160953e+01  5.11160953e+01  5.11160953e+01
  5.53376464e+01  2.06260241e+03]
E1 = -183.23598383265337  E_coul = 57.82735308813739
Extra cycle  E= -125.408630744516  delta_E= -8.53e-14  |g|= 1.61e-09  |ddm|= 2.01e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65972672e+03 9.97862064e-01 1.00000000e-09 7.20465822e+01
 1.45048167e+01 2.79688024e+01 1.16739813e+00 6.35126423e+00]
E = -125.40863074451599
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1840.97972045        1
[INPUT] 0    0    [1    /1   ]  0.979738566247       1
[INPUT] 0    0    [1    /1   ]  817.261650886        1
[INPUT] 0    0    [1    /1   ]  91.3027297684        1
[INPUT] 0    0    [1    /1   ]  16.4289029921        1
[INPUT] 1    0    [1    /1   ]  19.8615900487        1
[INPUT] 1    0    [1    /1   ]  0.863664313193       1
[INPUT] 1    0    [1    /1   ]  4.35403951282        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1840.9797204498932, 1.0]], [0, [0.9797385662472441, 1.0]], [0, [817.2616508861727, 1.0]], [0, [91.3027297683955, 1.0]], [0, [16.42890299208406, 1.0]], [1, [19.861590048710212, 1.0]], [1, [0.863664313193386, 1.0]], [1, [4.354039512818547, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1840.97972045]
bas 1, expnt(s) = [0.97973857]
bas 2, expnt(s) = [817.26165089]
bas 3, expnt(s) = [91.30272977]
bas 4, expnt(s) = [16.42890299]
bas 5, expnt(s) = [19.86159005]
bas 6, expnt(s) = [0.86366431]
bas 7, expnt(s) = [4.35403951]
CPU time:       216.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.84097972e+03 7.10071003e+02 9.79738566e-01 2.48798454e+00
 8.17261651e+02 3.86176520e+02 9.13027298e+01 7.46238834e+01
 1.64289030e+01 2.06168090e+01 1.98615900e+01 1.22321250e+02
 8.63664313e-01 2.42893342e+00 4.35403951e+00 1.83484697e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847143657599764
cond(S) = 27.47750163084277
E1 = -181.8108778414983  E_coul = 54.94570725647999
init E= -126.865170585018
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.726013037091937  LUMO = 4.42826966996028
  mo_energy =
[-3.21844463e+01 -1.79476736e+00 -7.26013037e-01 -7.26013037e-01
 -7.26013037e-01  4.42826967e+00  4.42826967e+00  4.42826967e+00
  3.30888288e+01  3.30888288e+01  3.30888288e+01  7.22499015e+01
  9.95419589e+02  4.78343588e+03]
E1 = -183.27239853242207  E_coul = 56.0188409746898
cycle= 1 E= -127.253557557732  delta_E= -0.388  |g|= 0.0928  |ddm|= 0.118
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136894
diis-c [-0.01873993  1.        ]
  HOMO = -0.617505208622531  LUMO = 4.55584120050882
  mo_energy =
[-3.20790714e+01 -1.68602997e+00 -6.17505209e-01 -6.17505209e-01
 -6.17505209e-01  4.55584120e+00  4.55584120e+00  4.55584120e+00
  3.32149610e+01  3.32149610e+01  3.32149610e+01  7.23742503e+01
  9.95440255e+02  4.78340285e+03]
E1 = -183.1207407588402  E_coul = 55.86677516114653
cycle= 2 E= -127.253965597694  delta_E= -0.000408  |g|= 0.0179  |ddm|= 0.0225
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0286126
diis-c [-2.18862115e-04  1.52514243e-01  8.47485757e-01]
  HOMO = -0.625808893759362  LUMO = 4.54467880828789
  mo_energy =
[-3.21091465e+01 -1.69544284e+00 -6.25808894e-01 -6.25808894e-01
 -6.25808894e-01  4.54467881e+00  4.54467881e+00  4.54467881e+00
  3.31897838e+01  3.31897838e+01  3.31897838e+01  7.23447287e+01
  9.95406828e+02  4.78336877e+03]
E1 = -183.14878672599042  E_coul = 55.89480155241792
cycle= 3 E= -127.253985173573  delta_E= -1.96e-05  |g|= 0.000605  |ddm|= 0.00394
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000885433
diis-c [-2.17855145e-08 -2.29124187e-03  2.04944187e-02  9.81796823e-01]
  HOMO = -0.625581867266782  LUMO = 4.5450010097501
  mo_energy =
[-3.21081019e+01 -1.69517356e+00 -6.25581867e-01 -6.25581867e-01
 -6.25581867e-01  4.54500101e+00  4.54500101e+00  4.54500101e+00
  3.31906028e+01  3.31906028e+01  3.31906028e+01  7.23457753e+01
  9.95408133e+02  4.78337010e+03]
E1 = -183.14791047947836  E_coul = 55.893925285481444
cycle= 4 E= -127.253985193997  delta_E= -2.04e-08  |g|= 3.82e-06  |ddm|= 0.000127
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.86922e-06
diis-c [-1.11387169e-12  4.80006593e-05 -7.29850457e-04 -2.55168556e-02
  1.02619871e+00]
  HOMO = -0.625582758351241  LUMO = 4.54499974990783
  mo_energy =
[-3.21081055e+01 -1.69517443e+00 -6.25582758e-01 -6.25582758e-01
 -6.25582758e-01  4.54499975e+00  4.54499975e+00  4.54499975e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457716e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.14791353771966  E_coul = 55.89392834372247
cycle= 5 E= -127.253985193997  delta_E= -2.7e-13  |g|= 4.81e-08  |ddm|= 3.97e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.14791353771966  E_coul = 55.89392834372247
  HOMO = -0.625582785074806  LUMO = 4.54499971485073
  mo_energy =
[-3.21081056e+01 -1.69517446e+00 -6.25582785e-01 -6.25582785e-01
 -6.25582785e-01  4.54499971e+00  4.54499971e+00  4.54499971e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457715e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.1479136211997  E_coul = 55.89392842720243
Extra cycle  E= -127.253985193997  delta_E= -8.53e-14  |g|= 9.92e-09  |ddm|= 1.16e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.84097972e+03 9.79738566e-01 8.17261651e+02 9.13027298e+01
 1.64289030e+01 1.98615900e+01 8.63664313e-01 4.35403951e+00]
E = -127.25398519399727
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1840.97972045        1
[INPUT] 0    0    [1    /1   ]  0.979738566247       1
[INPUT] 0    0    [1    /1   ]  817.261650886        1
[INPUT] 0    0    [1    /1   ]  91.3027297684        1
[INPUT] 0    0    [1    /1   ]  16.4289029921        1
[INPUT] 1    0    [1    /1   ]  19.8615900487        1
[INPUT] 1    0    [1    /1   ]  0.863664313193       1
[INPUT] 1    0    [1    /1   ]  4.35403951282        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1840.9797204498932, 1.0]], [0, [0.9797385662472441, 1.0]], [0, [817.2616508861727, 1.0]], [0, [91.3027297683955, 1.0]], [0, [16.42890299208406, 1.0]], [1, [19.861590048710212, 1.0]], [1, [0.863664313193386, 1.0]], [1, [4.354039512818547, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1840.97972045]
bas 1, expnt(s) = [0.97973857]
bas 2, expnt(s) = [817.26165089]
bas 3, expnt(s) = [91.30272977]
bas 4, expnt(s) = [16.42890299]
bas 5, expnt(s) = [19.86159005]
bas 6, expnt(s) = [0.86366431]
bas 7, expnt(s) = [4.35403951]
CPU time:       216.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.84097972e+03 7.10071003e+02 9.79738566e-01 2.48798454e+00
 8.17261651e+02 3.86176520e+02 9.13027298e+01 7.46238834e+01
 1.64289030e+01 2.06168090e+01 1.98615900e+01 1.22321250e+02
 8.63664313e-01 2.42893342e+00 4.35403951e+00 1.83484697e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847143657599764
cond(S) = 27.47750163084277
E1 = -181.8108778414983  E_coul = 54.94570725647999
init E= -126.865170585018
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.726013037091937  LUMO = 4.42826966996028
  mo_energy =
[-3.21844463e+01 -1.79476736e+00 -7.26013037e-01 -7.26013037e-01
 -7.26013037e-01  4.42826967e+00  4.42826967e+00  4.42826967e+00
  3.30888288e+01  3.30888288e+01  3.30888288e+01  7.22499015e+01
  9.95419589e+02  4.78343588e+03]
E1 = -183.27239853242207  E_coul = 56.0188409746898
cycle= 1 E= -127.253557557732  delta_E= -0.388  |g|= 0.0928  |ddm|= 0.118
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136894
diis-c [-0.01873993  1.        ]
  HOMO = -0.617505208622531  LUMO = 4.55584120050882
  mo_energy =
[-3.20790714e+01 -1.68602997e+00 -6.17505209e-01 -6.17505209e-01
 -6.17505209e-01  4.55584120e+00  4.55584120e+00  4.55584120e+00
  3.32149610e+01  3.32149610e+01  3.32149610e+01  7.23742503e+01
  9.95440255e+02  4.78340285e+03]
E1 = -183.1207407588402  E_coul = 55.86677516114653
cycle= 2 E= -127.253965597694  delta_E= -0.000408  |g|= 0.0179  |ddm|= 0.0225
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0286126
diis-c [-2.18862115e-04  1.52514243e-01  8.47485757e-01]
  HOMO = -0.625808893759362  LUMO = 4.54467880828789
  mo_energy =
[-3.21091465e+01 -1.69544284e+00 -6.25808894e-01 -6.25808894e-01
 -6.25808894e-01  4.54467881e+00  4.54467881e+00  4.54467881e+00
  3.31897838e+01  3.31897838e+01  3.31897838e+01  7.23447287e+01
  9.95406828e+02  4.78336877e+03]
E1 = -183.14878672599042  E_coul = 55.89480155241792
cycle= 3 E= -127.253985173573  delta_E= -1.96e-05  |g|= 0.000605  |ddm|= 0.00394
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000885433
diis-c [-2.17855145e-08 -2.29124187e-03  2.04944187e-02  9.81796823e-01]
  HOMO = -0.625581867266782  LUMO = 4.5450010097501
  mo_energy =
[-3.21081019e+01 -1.69517356e+00 -6.25581867e-01 -6.25581867e-01
 -6.25581867e-01  4.54500101e+00  4.54500101e+00  4.54500101e+00
  3.31906028e+01  3.31906028e+01  3.31906028e+01  7.23457753e+01
  9.95408133e+02  4.78337010e+03]
E1 = -183.14791047947836  E_coul = 55.893925285481444
cycle= 4 E= -127.253985193997  delta_E= -2.04e-08  |g|= 3.82e-06  |ddm|= 0.000127
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.86922e-06
diis-c [-1.11387169e-12  4.80006593e-05 -7.29850457e-04 -2.55168556e-02
  1.02619871e+00]
  HOMO = -0.625582758351241  LUMO = 4.54499974990783
  mo_energy =
[-3.21081055e+01 -1.69517443e+00 -6.25582758e-01 -6.25582758e-01
 -6.25582758e-01  4.54499975e+00  4.54499975e+00  4.54499975e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457716e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.14791353771966  E_coul = 55.89392834372247
cycle= 5 E= -127.253985193997  delta_E= -2.7e-13  |g|= 4.81e-08  |ddm|= 3.97e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.14791353771966  E_coul = 55.89392834372247
  HOMO = -0.625582785074806  LUMO = 4.54499971485073
  mo_energy =
[-3.21081056e+01 -1.69517446e+00 -6.25582785e-01 -6.25582785e-01
 -6.25582785e-01  4.54499971e+00  4.54499971e+00  4.54499971e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457715e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.1479136211997  E_coul = 55.89392842720243
Extra cycle  E= -127.253985193997  delta_E= -8.53e-14  |g|= 9.92e-09  |ddm|= 1.16e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 27.47750163084277
E1 = -183.1479136211997  E_coul = 55.89392842720243
init E= -127.253985193997
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.625582779797963  LUMO = 4.54499972199618
  mo_energy =
[-3.21081056e+01 -1.69517445e+00 -6.25582780e-01 -6.25582780e-01
 -6.25582780e-01  4.54499972e+00  4.54499972e+00  4.54499972e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457715e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.147913602958  E_coul = 55.89392840896072
cycle= 1 E= -127.253985193997  delta_E= -1.42e-14  |g|= 2.16e-09  |ddm|= 2.58e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.147913602958  E_coul = 55.89392840896072
  HOMO = -0.625582780955707  LUMO = 4.54499972043038
  mo_energy =
[-3.21081056e+01 -1.69517446e+00 -6.25582781e-01 -6.25582781e-01
 -6.25582781e-01  4.54499972e+00  4.54499972e+00  4.54499972e+00
  3.31905997e+01  3.31905997e+01  3.31905997e+01  7.23457715e+01
  9.95408122e+02  4.78337009e+03]
E1 = -183.14791360693462  E_coul = 55.893928412937214
Extra cycle  E= -127.253985193997  delta_E= -1.28e-13  |g|= 4.71e-10  |ddm|= 5.6e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.84097972e+03 9.79738566e-01 8.17261651e+02 9.13027298e+01
 1.64289030e+01 1.98615900e+01 8.63664313e-01 4.35403951e+00]
grad_E = [-1.75409472e-05  2.09392921e-01  7.02278463e-04  6.49996419e-03
 -5.19392555e-02 -5.47718615e-03  3.54302606e-01  1.21568839e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.72794501        1
[INPUT] 0    0    [1    /1   ]  0.993970136237       1
[INPUT] 0    0    [1    /1   ]  1.00726538221e-09      1
[INPUT] 0    0    [1    /1   ]  69.0755476334        1
[INPUT] 0    0    [1    /1   ]  14.3154825118        1
[INPUT] 1    0    [1    /1   ]  27.5473003543        1
[INPUT] 1    0    [1    /1   ]  1.1438622404         1
[INPUT] 1    0    [1    /1   ]  6.26007464097        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7279450131352, 1.0]], [0, [0.9939701362365532, 1.0]], [0, [1.007265382213518e-09, 1.0]], [0, [69.07554763344368, 1.0]], [0, [14.315482511784381, 1.0]], [1, [27.54730035431647, 1.0]], [1, [1.1438622404034051, 1.0]], [1, [6.26007464097202, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.72794501]
bas 1, expnt(s) = [0.99397014]
bas 2, expnt(s) = [1.00726538e-09]
bas 3, expnt(s) = [69.07554763]
bas 4, expnt(s) = [14.31548251]
bas 5, expnt(s) = [27.54730035]
bas 6, expnt(s) = [1.14386224]
bas 7, expnt(s) = [6.26007464]
CPU time:       220.47
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972795e+03 6.56965712e+02 9.93970136e-01 2.51504075e+00
 1.00726538e-09 4.51723782e-07 6.90755476e+01 6.05352411e+01
 1.43154825e+01 1.85938583e+01 2.75473004e+01 1.84112467e+02
 1.14386224e+00 3.45105235e+00 6.26007464e+00 2.88874217e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.696680353928205
cond(S) = 6.4458052810758835
E1 = -177.46045704404182  E_coul = 54.702045313017194
init E= -122.758411731025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.687024756899993  LUMO = -1.53603044400982e-05
  mo_energy =
[-3.14552044e+01 -1.77726524e+00 -6.87024757e-01 -6.87024757e-01
 -6.87024757e-01 -1.53603044e-05  6.70497565e+00  6.70497565e+00
  6.70497565e+00  4.97577093e+01  4.97577093e+01  4.97577093e+01
  5.26627721e+01  2.05319503e+03]
E1 = -183.11938597303228  E_coul = 57.8683148649175
cycle= 1 E= -125.251071108115  delta_E= -2.49  |g|= 0.398  |ddm|= 0.164
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.658197
diis-c [-0.43322343  1.        ]
  HOMO = -0.40424137593949  LUMO = 1.511267719613e-09
  mo_energy =
[-3.10010424e+01 -1.47925451e+00 -4.04241376e-01 -4.04241376e-01
 -4.04241376e-01  1.51126772e-09  7.08181273e+00  7.08181273e+00
  7.08181273e+00  5.02145318e+01  5.02145318e+01  5.02145318e+01
  5.31362643e+01  2.05334139e+03]
E1 = -182.80517524287262  E_coul = 57.55128735955613
cycle= 2 E= -125.253887883316  delta_E= -0.00282  |g|= 0.0379  |ddm|= 0.048
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0552058
diis-c [-0.00202715  0.0463922   0.9536078 ]
  HOMO = -0.422793227607805  LUMO = 1.51126338041477e-09
  mo_energy =
[-3.10761146e+01 -1.49949398e+00 -4.22793228e-01 -4.22793228e-01
 -4.22793228e-01  1.51126338e-09  7.04884108e+00  7.04884108e+00
  7.04884108e+00  5.01473079e+01  5.01473079e+01  5.01473079e+01
  5.30663326e+01  2.05325207e+03]
E1 = -182.84884729588933  E_coul = 57.59490057206512
cycle= 3 E= -125.253946723824  delta_E= -5.88e-05  |g|= 0.00346  |ddm|= 0.00643
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00503333
diis-c [-2.52981729e-09 -4.94405431e-04  8.06376985e-02  9.19856707e-01]
  HOMO = -0.421278275203343  LUMO = 1.51126422031554e-09
  mo_energy =
[-3.10696810e+01 -1.49783381e+00 -4.21278275e-01 -4.21278275e-01
 -4.21278275e-01  1.51126422e-09  7.05158488e+00  7.05158488e+00
  7.05158488e+00  5.01530434e+01  5.01530434e+01  5.01530434e+01
  5.30723182e+01  2.05326034e+03]
E1 = -182.8451719620185  E_coul = 57.591224737367995
cycle= 4 E= -125.253947224651  delta_E= -5.01e-07  |g|= 2.84e-06  |ddm|= 0.000543
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.57595e-06
diis-c [-1.60338046e-13  6.77912591e-06 -1.17305863e-03 -1.24437181e-02
  1.01361000e+00]
  HOMO = -0.421279650570133  LUMO = 1.51126388706708e-09
  mo_energy =
[-3.10696856e+01 -1.49783519e+00 -4.21279651e-01 -4.21279651e-01
 -4.21279651e-01  1.51126389e-09  7.05158269e+00  7.05158269e+00
  7.05158269e+00  5.01530392e+01  5.01530392e+01  5.01530392e+01
  5.30723141e+01  2.05326034e+03]
E1 = -182.84517504538434  E_coul = 57.59122782073348
cycle= 5 E= -125.253947224651  delta_E= -3.55e-13  |g|= 1.91e-08  |ddm|= 4.49e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.02 sec
E1 = -182.84517504538434  E_coul = 57.59122782073348
  HOMO = -0.421279643751364  LUMO = 1.51126388707134e-09
  mo_energy =
[-3.10696856e+01 -1.49783519e+00 -4.21279644e-01 -4.21279644e-01
 -4.21279644e-01  1.51126389e-09  7.05158270e+00  7.05158270e+00
  7.05158270e+00  5.01530392e+01  5.01530392e+01  5.01530392e+01
  5.30723141e+01  2.05326034e+03]
E1 = -182.8451750332683  E_coul = 57.59122780861738
Extra cycle  E= -125.253947224651  delta_E= -5.68e-14  |g|= 1.4e-09  |ddm|= 1.9e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65972795e+03 9.93970136e-01 1.00726538e-09 6.90755476e+01
 1.43154825e+01 2.75473004e+01 1.14386224e+00 6.26007464e+00]
E = -125.25394722465091
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1822.85454291        1
[INPUT] 0    0    [1    /1   ]  0.981161723246       1
[INPUT] 0    0    [1    /1   ]  735.535485798        1
[INPUT] 0    0    [1    /1   ]  89.0800115549        1
[INPUT] 0    0    [1    /1   ]  16.2175609441        1
[INPUT] 1    0    [1    /1   ]  20.6301610793        1
[INPUT] 1    0    [1    /1   ]  0.891684105914       1
[INPUT] 1    0    [1    /1   ]  4.54464302563        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1822.8545429062174, 1.0]], [0, [0.981161723246175, 1.0]], [0, [735.5354857976561, 1.0]], [0, [89.08001155490031, 1.0]], [0, [16.217560944054092, 1.0]], [1, [20.630161079270838, 1.0]], [1, [0.891684105914388, 1.0]], [1, [4.544643025633894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1822.85454291]
bas 1, expnt(s) = [0.98116172]
bas 2, expnt(s) = [735.5354858]
bas 3, expnt(s) = [89.08001155]
bas 4, expnt(s) = [16.21756094]
bas 5, expnt(s) = [20.63016108]
bas 6, expnt(s) = [0.89168411]
bas 7, expnt(s) = [4.54464303]
CPU time:       221.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.82285454e+03 7.04821325e+02 9.81161723e-01 2.49069456e+00
 7.35535486e+02 3.56835248e+02 8.90800116e+01 7.32571844e+01
 1.62175609e+01 2.04175759e+01 2.06301611e+01 1.28266329e+02
 8.91684106e-01 2.52783181e+00 4.54464303e+00 1.93579388e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.834774140490133
cond(S) = 23.503993817156417
E1 = -181.84932149682126  E_coul = 54.93471877944543
init E= -126.914602717376
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.72241859116874  LUMO = 4.6443385914212
  mo_energy =
[-3.22160519e+01 -1.79703519e+00 -7.22418591e-01 -7.22418591e-01
 -7.22418591e-01  4.64433859e+00  4.64433859e+00  4.64433859e+00
  3.47098049e+01  3.47098049e+01  3.47098049e+01  7.01820332e+01
  9.23450711e+02  4.53790142e+03]
E1 = -183.47872552480487  E_coul = 56.191955632640436
cycle= 1 E= -127.286769892164  delta_E= -0.372  |g|= 0.102  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.147451
diis-c [-0.02174176  1.        ]
  HOMO = -0.599284334877948  LUMO = 4.79127198549464
  mo_energy =
[-3.20780617e+01 -1.67184076e+00 -5.99284335e-01 -5.99284335e-01
 -5.99284335e-01  4.79127199e+00  4.79127199e+00  4.79127199e+00
  3.48639616e+01  3.48639616e+01  3.48639616e+01  7.03383538e+01
  9.23509322e+02  4.53790869e+03]
E1 = -183.30601754129955  E_coul = 56.01869316322707
cycle= 2 E= -127.287324378072  delta_E= -0.000554  |g|= 0.0205  |ddm|= 0.0256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0324662
diis-c [-1.67304171e-04  1.68562219e-01  8.31437781e-01]
  HOMO = -0.608508730031536  LUMO = 4.77843121550307
  mo_energy =
[-3.21119449e+01 -1.68226400e+00 -6.08508730e-01 -6.08508730e-01
 -6.08508730e-01  4.77843122e+00  4.77843122e+00  4.77843122e+00
  3.48353795e+01  3.48353795e+01  3.48353795e+01  7.03051974e+01
  9.23471552e+02  4.53787014e+03]
E1 = -183.3361243955517  E_coul = 56.04877538517082
cycle= 3 E= -127.287349010381  delta_E= -2.46e-05  |g|= 0.000201  |ddm|= 0.00425
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000258375
diis-c [-2.28530253e-08 -2.57737451e-03 -6.93457122e-03  1.00951195e+00]
  HOMO = -0.608492907139178  LUMO = 4.77847322101976
  mo_energy =
[-3.21116544e+01 -1.68223379e+00 -6.08492907e-01 -6.08492907e-01
 -6.08492907e-01  4.77847322e+00  4.77847322e+00  4.77847322e+00
  3.48355696e+01  3.48355696e+01  3.48355696e+01  7.03055020e+01
  9.23472045e+02  4.53787066e+03]
E1 = -183.3359647047454  E_coul = 56.048615693397444
cycle= 4 E= -127.287349011348  delta_E= -9.67e-10  |g|= 3.35e-06  |ddm|= 2.65e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -183.3359647047454  E_coul = 56.048615693397444
  HOMO = -0.608492755793047  LUMO = 4.77847327222475
  mo_energy =
[-3.21116549e+01 -1.68223351e+00 -6.08492756e-01 -6.08492756e-01
 -6.08492756e-01  4.77847327e+00  4.77847327e+00  4.77847327e+00
  3.48355693e+01  3.48355693e+01  3.48355693e+01  7.03055013e+01
  9.23472038e+02  4.53787065e+03]
E1 = -183.33596460809656  E_coul = 56.048615596748554
Extra cycle  E= -127.287349011348  delta_E= -2.84e-14  |g|= 1.01e-07  |ddm|= 1.1e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.82285454e+03 9.81161723e-01 7.35535486e+02 8.90800116e+01
 1.62175609e+01 2.06301611e+01 8.91684106e-01 4.54464303e+00]
E = -127.287349011348
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1822.85454291        1
[INPUT] 0    0    [1    /1   ]  0.981161723246       1
[INPUT] 0    0    [1    /1   ]  735.535485798        1
[INPUT] 0    0    [1    /1   ]  89.0800115549        1
[INPUT] 0    0    [1    /1   ]  16.2175609441        1
[INPUT] 1    0    [1    /1   ]  20.6301610793        1
[INPUT] 1    0    [1    /1   ]  0.891684105914       1
[INPUT] 1    0    [1    /1   ]  4.54464302563        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1822.8545429062174, 1.0]], [0, [0.981161723246175, 1.0]], [0, [735.5354857976561, 1.0]], [0, [89.08001155490031, 1.0]], [0, [16.217560944054092, 1.0]], [1, [20.630161079270838, 1.0]], [1, [0.891684105914388, 1.0]], [1, [4.544643025633894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1822.85454291]
bas 1, expnt(s) = [0.98116172]
bas 2, expnt(s) = [735.5354858]
bas 3, expnt(s) = [89.08001155]
bas 4, expnt(s) = [16.21756094]
bas 5, expnt(s) = [20.63016108]
bas 6, expnt(s) = [0.89168411]
bas 7, expnt(s) = [4.54464303]
CPU time:       222.15
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.82285454e+03 7.04821325e+02 9.81161723e-01 2.49069456e+00
 7.35535486e+02 3.56835248e+02 8.90800116e+01 7.32571844e+01
 1.62175609e+01 2.04175759e+01 2.06301611e+01 1.28266329e+02
 8.91684106e-01 2.52783181e+00 4.54464303e+00 1.93579388e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.834774140490133
cond(S) = 23.503993817156417
E1 = -181.84932149682126  E_coul = 54.93471877944543
init E= -126.914602717376
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.72241859116874  LUMO = 4.6443385914212
  mo_energy =
[-3.22160519e+01 -1.79703519e+00 -7.22418591e-01 -7.22418591e-01
 -7.22418591e-01  4.64433859e+00  4.64433859e+00  4.64433859e+00
  3.47098049e+01  3.47098049e+01  3.47098049e+01  7.01820332e+01
  9.23450711e+02  4.53790142e+03]
E1 = -183.47872552480487  E_coul = 56.191955632640436
cycle= 1 E= -127.286769892164  delta_E= -0.372  |g|= 0.102  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.147451
diis-c [-0.02174176  1.        ]
  HOMO = -0.599284334877948  LUMO = 4.79127198549464
  mo_energy =
[-3.20780617e+01 -1.67184076e+00 -5.99284335e-01 -5.99284335e-01
 -5.99284335e-01  4.79127199e+00  4.79127199e+00  4.79127199e+00
  3.48639616e+01  3.48639616e+01  3.48639616e+01  7.03383538e+01
  9.23509322e+02  4.53790869e+03]
E1 = -183.30601754129955  E_coul = 56.01869316322707
cycle= 2 E= -127.287324378072  delta_E= -0.000554  |g|= 0.0205  |ddm|= 0.0256
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0324662
diis-c [-1.67304171e-04  1.68562219e-01  8.31437781e-01]
  HOMO = -0.608508730031536  LUMO = 4.77843121550307
  mo_energy =
[-3.21119449e+01 -1.68226400e+00 -6.08508730e-01 -6.08508730e-01
 -6.08508730e-01  4.77843122e+00  4.77843122e+00  4.77843122e+00
  3.48353795e+01  3.48353795e+01  3.48353795e+01  7.03051974e+01
  9.23471552e+02  4.53787014e+03]
E1 = -183.3361243955517  E_coul = 56.04877538517082
cycle= 3 E= -127.287349010381  delta_E= -2.46e-05  |g|= 0.000201  |ddm|= 0.00425
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000258375
diis-c [-2.28530253e-08 -2.57737451e-03 -6.93457122e-03  1.00951195e+00]
  HOMO = -0.608492907139178  LUMO = 4.77847322101976
  mo_energy =
[-3.21116544e+01 -1.68223379e+00 -6.08492907e-01 -6.08492907e-01
 -6.08492907e-01  4.77847322e+00  4.77847322e+00  4.77847322e+00
  3.48355696e+01  3.48355696e+01  3.48355696e+01  7.03055020e+01
  9.23472045e+02  4.53787066e+03]
E1 = -183.3359647047454  E_coul = 56.048615693397444
cycle= 4 E= -127.287349011348  delta_E= -9.67e-10  |g|= 3.35e-06  |ddm|= 2.65e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -183.3359647047454  E_coul = 56.048615693397444
  HOMO = -0.608492755793047  LUMO = 4.77847327222475
  mo_energy =
[-3.21116549e+01 -1.68223351e+00 -6.08492756e-01 -6.08492756e-01
 -6.08492756e-01  4.77847327e+00  4.77847327e+00  4.77847327e+00
  3.48355693e+01  3.48355693e+01  3.48355693e+01  7.03055013e+01
  9.23472038e+02  4.53787065e+03]
E1 = -183.33596460809656  E_coul = 56.048615596748554
Extra cycle  E= -127.287349011348  delta_E= -2.84e-14  |g|= 1.01e-07  |ddm|= 1.1e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.503993817156417
E1 = -183.33596460809656  E_coul = 56.048615596748554
init E= -127.287349011348
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.608492764040583  LUMO = 4.77847326108574
  mo_energy =
[-3.21116549e+01 -1.68223351e+00 -6.08492764e-01 -6.08492764e-01
 -6.08492764e-01  4.77847326e+00  4.77847326e+00  4.77847326e+00
  3.48355692e+01  3.48355692e+01  3.48355692e+01  7.03055013e+01
  9.23472037e+02  4.53787065e+03]
E1 = -183.33596462606292  E_coul = 56.04861561471492
cycle= 1 E= -127.287349011348  delta_E=    0  |g|= 4.18e-09  |ddm|= 3.32e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.33596462606292  E_coul = 56.04861561471492
  HOMO = -0.608492763008813  LUMO = 4.77847326256143
  mo_energy =
[-3.21116549e+01 -1.68223351e+00 -6.08492763e-01 -6.08492763e-01
 -6.08492763e-01  4.77847326e+00  4.77847326e+00  4.77847326e+00
  3.48355692e+01  3.48355692e+01  3.48355692e+01  7.03055013e+01
  9.23472037e+02  4.53787065e+03]
E1 = -183.33596462220441  E_coul = 56.0486156108563
Extra cycle  E= -127.287349011348  delta_E= -1.14e-13  |g|= 4.55e-10  |ddm|= 6.02e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.82285454e+03 9.81161723e-01 7.35535486e+02 8.90800116e+01
 1.62175609e+01 2.06301611e+01 8.91684106e-01 4.54464303e+00]
grad_E = [-3.92859045e-05  2.25691466e-01  7.61277073e-04  7.80822788e-03
 -5.69607325e-02 -5.64967964e-03  3.96321662e-01  1.27860338e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.7286749         1
[INPUT] 0    0    [1    /1   ]  0.992743190825       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  67.0084604363        1
[INPUT] 0    0    [1    /1   ]  14.1530232565        1
[INPUT] 1    0    [1    /1   ]  27.4775672352        1
[INPUT] 1    0    [1    /1   ]  1.13883231358        1
[INPUT] 1    0    [1    /1   ]  6.24650993583        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7286749037412, 1.0]], [0, [0.9927431908248869, 1.0]], [0, [1e-09, 1.0]], [0, [67.00846043628015, 1.0]], [0, [14.153023256527863, 1.0]], [1, [27.47756723523167, 1.0]], [1, [1.1388323135826057, 1.0]], [1, [6.246509935831843, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.7286749]
bas 1, expnt(s) = [0.99274319]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [67.00846044]
bas 4, expnt(s) = [14.15302326]
bas 5, expnt(s) = [27.47756724]
bas 6, expnt(s) = [1.13883231]
bas 7, expnt(s) = [6.24650994]
CPU time:       225.59
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972867e+03 6.56965929e+02 9.92743191e-01 2.51271199e+00
 1.00000000e-09 4.49277867e-07 6.70084604e+01 5.91714558e+01
 1.41530233e+01 1.84353734e+01 2.74775672e+01 1.83530075e+02
 1.13883231e+00 3.43209357e+00 6.24650994e+00 2.88091992e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.699800403749144
cond(S) = 6.574210400533073
E1 = -177.04924901262987  E_coul = 54.69372820363647
init E= -122.355520808993
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.688070302577152  LUMO = -1.51473668801718e-05
  mo_energy =
[-3.13881598e+01 -1.77362572e+00 -6.88070303e-01 -6.88070303e-01
 -6.88070303e-01 -1.51473669e-05  6.67723183e+00  6.67723183e+00
  6.67723183e+00  4.96046855e+01  4.96046855e+01  4.96046855e+01
  5.10565559e+01  2.04669536e+03]
E1 = -182.90919055900005  E_coul = 57.799169874470536
cycle= 1 E= -125.11002068453  delta_E= -2.75  |g|= 0.411  |ddm|= 0.165
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.683848
diis-c [-0.46764782  1.        ]
  HOMO = -0.410051237682267  LUMO = 1.5003651781194e-09
  mo_energy =
[-3.09463286e+01 -1.48052797e+00 -4.10051238e-01 -4.10051238e-01
 -4.10051238e-01  1.50036518e-09  7.04695900e+00  7.04695900e+00
  7.04695900e+00  5.00507434e+01  5.00507434e+01  5.00507434e+01
  5.15193920e+01  2.04681847e+03]
E1 = -182.60009520205975  E_coul = 57.48735989881778
cycle= 2 E= -125.112735303242  delta_E= -0.00271  |g|= 0.0375  |ddm|= 0.0472
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0545004
diis-c [-0.00208419  0.04180302  0.95819698]
  HOMO = -0.428388860284506  LUMO = 1.50036170655797e-09
  mo_energy =
[-3.10205108e+01 -1.50053306e+00 -4.28388860e-01 -4.28388860e-01
 -4.28388860e-01  1.50036171e-09  7.01438868e+00  7.01438868e+00
  7.01438868e+00  4.99843329e+01  4.99843329e+01  4.99843329e+01
  5.14507311e+01  2.04673017e+03]
E1 = -182.64362603490207  E_coul = 57.53083324798422
cycle= 3 E= -125.112792786918  delta_E= -5.75e-05  |g|= 0.00366  |ddm|= 0.0064
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00531913
diis-c [-3.02512150e-09 -4.96879384e-04  8.60304499e-02  9.14466429e-01]
  HOMO = -0.426793447717111  LUMO = 1.50036213959551e-09
  mo_energy =
[-3.10137517e+01 -1.49878498e+00 -4.26793448e-01 -4.26793448e-01
 -4.26793448e-01  1.50036214e-09  7.01727342e+00  7.01727342e+00
  7.01727342e+00  4.99903582e+01  4.99903582e+01  4.99903582e+01
  5.14569772e+01  2.04673882e+03]
E1 = -182.63972751818764  E_coul = 57.5269341699109
cycle= 4 E= -125.112793348277  delta_E= -5.61e-07  |g|= 3.09e-06  |ddm|= 0.000575
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.00317e-06
diis-c [-2.04637814e-13  7.35035098e-06 -1.34289844e-03 -1.33088423e-02
  1.01464439e+00]
  HOMO = -0.426794930062866  LUMO = 1.50036187573226e-09
  mo_energy =
[-3.10137567e+01 -1.49878646e+00 -4.26794930e-01 -4.26794930e-01
 -4.26794930e-01  1.50036188e-09  7.01727105e+00  7.01727105e+00
  7.01727105e+00  4.99903536e+01  4.99903536e+01  4.99903536e+01
  5.14569727e+01  2.04673881e+03]
E1 = -182.639730890498  E_coul = 57.526937542221035
cycle= 5 E= -125.112793348277  delta_E= -2.13e-13  |g|= 2.27e-08  |ddm|= 4.91e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.639730890498  E_coul = 57.526937542221035
  HOMO = -0.426794921710652  LUMO = 1.50036200063229e-09
  mo_energy =
[-3.10137567e+01 -1.49878645e+00 -4.26794922e-01 -4.26794922e-01
 -4.26794922e-01  1.50036200e-09  7.01727106e+00  7.01727106e+00
  7.01727106e+00  4.99903537e+01  4.99903537e+01  4.99903537e+01
  5.14569728e+01  2.04673881e+03]
E1 = -182.6397308754594  E_coul = 57.52693752718241
Extra cycle  E= -125.112793348277  delta_E= -4.26e-14  |g|= 1.74e-09  |ddm|= 2.35e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65972867e+03 9.92743191e-01 1.00000000e-09 6.70084604e+01
 1.41530233e+01 2.74775672e+01 1.13883231e+00 6.24650994e+00]
E = -125.112793348277
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1806.54195611        1
[INPUT] 0    0    [1    /1   ]  0.982319870004       1
[INPUT] 0    0    [1    /1   ]  661.981937218        1
[INPUT] 0    0    [1    /1   ]  86.872856443         1
[INPUT] 0    0    [1    /1   ]  16.0111071753        1
[INPUT] 1    0    [1    /1   ]  21.3149016949        1
[INPUT] 1    0    [1    /1   ]  0.916398926681       1
[INPUT] 1    0    [1    /1   ]  4.71482971665        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1806.5419561059698, 1.0]], [0, [0.9823198700040462, 1.0]], [0, [661.9819372179904, 1.0]], [0, [86.87285644303829, 1.0]], [0, [16.01110717530147, 1.0]], [1, [21.314901694866922, 1.0]], [1, [0.9163989266812097, 1.0]], [1, [4.714829716653689, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1806.54195611]
bas 1, expnt(s) = [0.98231987]
bas 2, expnt(s) = [661.98193722]
bas 3, expnt(s) = [86.87285644]
bas 4, expnt(s) = [16.01110718]
bas 5, expnt(s) = [21.31490169]
bas 6, expnt(s) = [0.91639893]
bas 7, expnt(s) = [4.71482972]
CPU time:       226.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.80654196e+03 7.00085469e+02 9.82319870e-01 2.49289922e+00
 6.61981937e+02 3.29723293e+02 8.68728564e+01 7.18915919e+01
 1.60111072e+01 2.02223232e+01 2.13149017e+01 1.33609876e+02
 9.16398927e-01 2.61571310e+00 4.71482972e+00 2.02682806e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82340830231486
cond(S) = 20.774442815078615
E1 = -181.8842749220307  E_coul = 54.92337063126597
init E= -126.960904290765
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.719108925853658  LUMO = 4.8385422451441
  mo_energy =
[-3.22475954e+01 -1.79932124e+00 -7.19108926e-01 -7.19108926e-01
 -7.19108926e-01  4.83854225e+00  4.83854225e+00  4.83854225e+00
  3.61643844e+01  3.61643844e+01  3.61643844e+01  6.81611748e+01
  8.55632704e+02  4.31116990e+03]
E1 = -183.66670470183738  E_coul = 56.34547284474624
cycle= 1 E= -127.321231857091  delta_E= -0.36  |g|= 0.112  |ddm|= 0.122
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158708
diis-c [-0.02518807  1.        ]
  HOMO = -0.58279413128093  LUMO = 5.00329708368993
  mo_energy =
[-3.20805828e+01 -1.65934792e+00 -5.82794131e-01 -5.82794131e-01
 -5.82794131e-01  5.00329708e+00  5.00329708e+00  5.00329708e+00
  3.63437185e+01  3.63437185e+01  3.63437185e+01  6.83458795e+01
  8.55726063e+02  4.31121465e+03]
E1 = -183.47731244021335  E_coul = 56.155384638176024
cycle= 2 E= -127.321927802037  delta_E= -0.000696  |g|= 0.0225  |ddm|= 0.0281
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0355058
diis-c [-1.23099304e-04  1.75622631e-01  8.24377369e-01]
  HOMO = -0.592777047574784  LUMO = 4.98898317113384
  mo_energy =
[-3.21176838e+01 -1.67059151e+00 -5.92777048e-01 -5.92777048e-01
 -5.92777048e-01  4.98898317e+00  4.98898317e+00  4.98898317e+00
  3.63122122e+01  3.63122122e+01  3.63122122e+01  6.83097022e+01
  8.55684617e+02  4.31117229e+03]
E1 = -183.50890472244538  E_coul = 56.186948127074416
cycle= 3 E= -127.321956595371  delta_E= -2.88e-05  |g|= 0.000256  |ddm|= 0.00448
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000455247
diis-c [-2.47764113e-08 -2.77719237e-03 -2.29049546e-02  1.02568215e+00]
  HOMO = -0.592905769258012  LUMO = 4.98882124281212
  mo_energy =
[-3.21179215e+01 -1.67072387e+00 -5.92905769e-01 -5.92905769e-01
 -5.92905769e-01  4.98882124e+00  4.98882124e+00  4.98882124e+00
  3.63119560e+01  3.63119560e+01  3.63119560e+01  6.83094893e+01
  8.55684544e+02  4.31117225e+03]
E1 = -183.50920566339812  E_coul = 56.18724906521205
cycle= 4 E= -127.321956598186  delta_E= -2.82e-09  |g|= 4.13e-06  |ddm|= 4e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.53249e-06
diis-c [-1.55203689e-12  4.67953175e-05  5.19658334e-04 -2.25252621e-02
  1.02195881e+00]
  HOMO = -0.592904586851786  LUMO = 4.98882268376285
  mo_energy =
[-3.21179187e+01 -1.67072246e+00 -5.92904587e-01 -5.92904587e-01
 -5.92904587e-01  4.98882268e+00  4.98882268e+00  4.98882268e+00
  3.63119586e+01  3.63119586e+01  3.63119586e+01  6.83094919e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.50920259475916  E_coul = 56.187245996572784
cycle= 5 E= -127.321956598186  delta_E= -3.13e-13  |g|= 8.27e-08  |ddm|= 4.77e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.50920259475916  E_coul = 56.187245996572784
  HOMO = -0.592904633192832  LUMO = 4.98882262079147
  mo_energy =
[-3.21179189e+01 -1.67072251e+00 -5.92904633e-01 -5.92904633e-01
 -5.92904633e-01  4.98882262e+00  4.98882262e+00  4.98882262e+00
  3.63119584e+01  3.63119584e+01  3.63119584e+01  6.83094917e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.50920273170473  E_coul = 56.18724613351843
Extra cycle  E= -127.321956598186  delta_E= 7.11e-14  |g|= 1.64e-08  |ddm|= 1.91e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.80654196e+03 9.82319870e-01 6.61981937e+02 8.68728564e+01
 1.60111072e+01 2.13149017e+01 9.16398927e-01 4.71482972e+00]
E = -127.3219565981863
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:44:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1806.54195611        1
[INPUT] 0    0    [1    /1   ]  0.982319870004       1
[INPUT] 0    0    [1    /1   ]  661.981937218        1
[INPUT] 0    0    [1    /1   ]  86.872856443         1
[INPUT] 0    0    [1    /1   ]  16.0111071753        1
[INPUT] 1    0    [1    /1   ]  21.3149016949        1
[INPUT] 1    0    [1    /1   ]  0.916398926681       1
[INPUT] 1    0    [1    /1   ]  4.71482971665        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1806.5419561059698, 1.0]], [0, [0.9823198700040462, 1.0]], [0, [661.9819372179904, 1.0]], [0, [86.87285644303829, 1.0]], [0, [16.01110717530147, 1.0]], [1, [21.314901694866922, 1.0]], [1, [0.9163989266812097, 1.0]], [1, [4.714829716653689, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1806.54195611]
bas 1, expnt(s) = [0.98231987]
bas 2, expnt(s) = [661.98193722]
bas 3, expnt(s) = [86.87285644]
bas 4, expnt(s) = [16.01110718]
bas 5, expnt(s) = [21.31490169]
bas 6, expnt(s) = [0.91639893]
bas 7, expnt(s) = [4.71482972]
CPU time:       227.24
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.80654196e+03 7.00085469e+02 9.82319870e-01 2.49289922e+00
 6.61981937e+02 3.29723293e+02 8.68728564e+01 7.18915919e+01
 1.60111072e+01 2.02223232e+01 2.13149017e+01 1.33609876e+02
 9.16398927e-01 2.61571310e+00 4.71482972e+00 2.02682806e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82340830231486
cond(S) = 20.774442815078615
E1 = -181.8842749220307  E_coul = 54.92337063126597
init E= -126.960904290765
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.719108925853658  LUMO = 4.8385422451441
  mo_energy =
[-3.22475954e+01 -1.79932124e+00 -7.19108926e-01 -7.19108926e-01
 -7.19108926e-01  4.83854225e+00  4.83854225e+00  4.83854225e+00
  3.61643844e+01  3.61643844e+01  3.61643844e+01  6.81611748e+01
  8.55632704e+02  4.31116990e+03]
E1 = -183.66670470183738  E_coul = 56.34547284474624
cycle= 1 E= -127.321231857091  delta_E= -0.36  |g|= 0.112  |ddm|= 0.122
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158708
diis-c [-0.02518807  1.        ]
  HOMO = -0.58279413128093  LUMO = 5.00329708368993
  mo_energy =
[-3.20805828e+01 -1.65934792e+00 -5.82794131e-01 -5.82794131e-01
 -5.82794131e-01  5.00329708e+00  5.00329708e+00  5.00329708e+00
  3.63437185e+01  3.63437185e+01  3.63437185e+01  6.83458795e+01
  8.55726063e+02  4.31121465e+03]
E1 = -183.47731244021335  E_coul = 56.155384638176024
cycle= 2 E= -127.321927802037  delta_E= -0.000696  |g|= 0.0225  |ddm|= 0.0281
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0355058
diis-c [-1.23099304e-04  1.75622631e-01  8.24377369e-01]
  HOMO = -0.592777047574784  LUMO = 4.98898317113384
  mo_energy =
[-3.21176838e+01 -1.67059151e+00 -5.92777048e-01 -5.92777048e-01
 -5.92777048e-01  4.98898317e+00  4.98898317e+00  4.98898317e+00
  3.63122122e+01  3.63122122e+01  3.63122122e+01  6.83097022e+01
  8.55684617e+02  4.31117229e+03]
E1 = -183.50890472244538  E_coul = 56.186948127074416
cycle= 3 E= -127.321956595371  delta_E= -2.88e-05  |g|= 0.000256  |ddm|= 0.00448
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000455247
diis-c [-2.47764113e-08 -2.77719237e-03 -2.29049546e-02  1.02568215e+00]
  HOMO = -0.592905769258012  LUMO = 4.98882124281212
  mo_energy =
[-3.21179215e+01 -1.67072387e+00 -5.92905769e-01 -5.92905769e-01
 -5.92905769e-01  4.98882124e+00  4.98882124e+00  4.98882124e+00
  3.63119560e+01  3.63119560e+01  3.63119560e+01  6.83094893e+01
  8.55684544e+02  4.31117225e+03]
E1 = -183.50920566339812  E_coul = 56.18724906521205
cycle= 4 E= -127.321956598186  delta_E= -2.82e-09  |g|= 4.13e-06  |ddm|= 4e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.53249e-06
diis-c [-1.55203689e-12  4.67953175e-05  5.19658334e-04 -2.25252621e-02
  1.02195881e+00]
  HOMO = -0.592904586851786  LUMO = 4.98882268376285
  mo_energy =
[-3.21179187e+01 -1.67072246e+00 -5.92904587e-01 -5.92904587e-01
 -5.92904587e-01  4.98882268e+00  4.98882268e+00  4.98882268e+00
  3.63119586e+01  3.63119586e+01  3.63119586e+01  6.83094919e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.50920259475916  E_coul = 56.187245996572784
cycle= 5 E= -127.321956598186  delta_E= -3.13e-13  |g|= 8.27e-08  |ddm|= 4.77e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.50920259475916  E_coul = 56.187245996572784
  HOMO = -0.592904633192832  LUMO = 4.98882262079147
  mo_energy =
[-3.21179189e+01 -1.67072251e+00 -5.92904633e-01 -5.92904633e-01
 -5.92904633e-01  4.98882262e+00  4.98882262e+00  4.98882262e+00
  3.63119584e+01  3.63119584e+01  3.63119584e+01  6.83094917e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.50920273170473  E_coul = 56.18724613351843
Extra cycle  E= -127.321956598186  delta_E= 7.11e-14  |g|= 1.64e-08  |ddm|= 1.91e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.774442815078615
E1 = -183.50920273170473  E_coul = 56.18724613351843
init E= -127.321956598186
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.592904624620918  LUMO = 4.98882263317424
  mo_energy =
[-3.21179189e+01 -1.67072250e+00 -5.92904625e-01 -5.92904625e-01
 -5.92904625e-01  4.98882263e+00  4.98882263e+00  4.98882263e+00
  3.63119585e+01  3.63119585e+01  3.63119585e+01  6.83094918e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.509202704013  E_coul = 56.187246105826624
cycle= 1 E= -127.321956598186  delta_E= -7.11e-14  |g|= 3.3e-09  |ddm|= 3.95e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.509202704013  E_coul = 56.187246105826624
  HOMO = -0.592904626361239  LUMO = 4.98882263066297
  mo_energy =
[-3.21179189e+01 -1.67072250e+00 -5.92904626e-01 -5.92904626e-01
 -5.92904626e-01  4.98882263e+00  4.98882263e+00  4.98882263e+00
  3.63119585e+01  3.63119585e+01  3.63119585e+01  6.83094918e+01
  8.55684539e+02  4.31117224e+03]
E1 = -183.50920270960515  E_coul = 56.18724611141872
Extra cycle  E= -127.321956598186  delta_E= -5.68e-14  |g|= 6.67e-10  |ddm|= 7.95e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.80654196e+03 9.82319870e-01 6.61981937e+02 8.68728564e+01
 1.60111072e+01 2.13149017e+01 9.16398927e-01 4.71482972e+00]
grad_E = [-5.81228421e-05  2.39359505e-01  8.02000328e-04  9.30314599e-03
 -6.17094257e-02 -5.74478188e-03  4.35981604e-01  1.32314577e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.72918488        1
[INPUT] 0    0    [1    /1   ]  0.992315889688       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  65.3703305792        1
[INPUT] 0    0    [1    /1   ]  14.0137922234        1
[INPUT] 1    0    [1    /1   ]  27.5256076841        1
[INPUT] 1    0    [1    /1   ]  1.13977744137        1
[INPUT] 1    0    [1    /1   ]  6.25782652182        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7291848753525, 1.0]], [0, [0.992315889688008, 1.0]], [0, [1e-09, 1.0]], [0, [65.37033057916125, 1.0]], [0, [14.013792223396006, 1.0]], [1, [27.525607684069044, 1.0]], [1, [1.1397774413703878, 1.0]], [1, [6.257826521815484, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.72918488]
bas 1, expnt(s) = [0.99231589]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [65.37033058]
bas 4, expnt(s) = [14.01379222]
bas 5, expnt(s) = [27.52560768]
bas 6, expnt(s) = [1.13977744]
bas 7, expnt(s) = [6.25782652]
CPU time:       230.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972918e+03 6.56966081e+02 9.92315890e-01 2.51190080e+00
 1.00000000e-09 4.49277867e-07 6.53703306e+01 5.80832000e+01
 1.40137922e+01 1.82991864e+01 2.75256077e+01 1.83931256e+02
 1.13977744e+00 3.43565435e+00 6.25782652e+00 2.88744547e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.699105520650438
cond(S) = 6.680987922345422
E1 = -176.68348817440918  E_coul = 54.6828461167709
init E= -122.000642057638
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.688270129049055  LUMO = -1.51824325226432e-05
  mo_energy =
[-3.13307546e+01 -1.77092717e+00 -6.88270129e-01 -6.88270129e-01
 -6.88270129e-01 -1.51824325e-05  6.68850364e+00  6.68850364e+00
  6.68850364e+00  4.97052799e+01  4.97052799e+01  4.97052799e+01
  4.97719240e+01  2.04154376e+03]
E1 = -182.7717393736937  E_coul = 57.79100206449479
cycle= 1 E= -124.980737309199  delta_E= -2.98  |g|= 0.423  |ddm|= 0.167
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.708095
diis-c [-0.50139922  1.        ]
  HOMO = -0.409779423013093  LUMO = 1.50036658292854e-09
  mo_energy =
[-3.08898388e+01 -1.47727610e+00 -4.09779423e-01 -4.09779423e-01
 -4.09779423e-01  1.50036658e-09  7.05883999e+00  7.05883999e+00
  7.05883999e+00  5.01512757e+01  5.01512757e+01  5.01512757e+01
  5.02349219e+01  2.04165612e+03]
E1 = -182.46294295195509  E_coul = 57.47948955753174
cycle= 2 E= -124.983453394423  delta_E= -0.00272  |g|= 0.0375  |ddm|= 0.0472
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0545052
diis-c [-0.00214304  0.03912563  0.96087437]
  HOMO = -0.42814728950214  LUMO = 1.50036252541368e-09
  mo_energy =
[-3.09641907e+01 -1.49729487e+00 -4.28147290e-01 -4.28147290e-01
 -4.28147290e-01  1.50036253e-09  7.02616415e+00  7.02616415e+00
  7.02616415e+00  5.00846773e+01  5.00846773e+01  5.00846773e+01
  5.01664820e+01  2.04156750e+03]
E1 = -182.50657189769794  E_coul = 57.52306104686834
cycle= 3 E= -124.98351085083  delta_E= -5.75e-05  |g|= 0.00378  |ddm|= 0.00641
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0054908
diis-c [-3.40943865e-09 -4.95669332e-04  8.86438389e-02  9.11851830e-01]
  HOMO = -0.426501999961555  LUMO = 1.50036275928435e-09
  mo_energy =
[-3.09572230e+01 -1.49549406e+00 -4.26502000e-01 -4.26502000e-01
 -4.26502000e-01  1.50036276e-09  7.02914274e+00  7.02914274e+00
  7.02914274e+00  5.00908933e+01  5.00908933e+01  5.00908933e+01
  5.01728832e+01  2.04157641e+03]
E1 = -182.50255077685273  E_coul = 57.51903932797417
cycle= 4 E= -124.983511448879  delta_E= -5.98e-07  |g|= 3.23e-06  |ddm|= 0.000592
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.16439e-06
diis-c [-1.89813273e-13  7.49734532e-06 -1.40518417e-03 -1.34932240e-02
  1.01489091e+00]
  HOMO = -0.426503533987277  LUMO = 1.50036292562644e-09
  mo_energy =
[-3.09572282e+01 -1.49549559e+00 -4.26503534e-01 -4.26503534e-01
 -4.26503534e-01  1.50036293e-09  7.02914029e+00  7.02914029e+00
  7.02914029e+00  5.00908886e+01  5.00908886e+01  5.00908886e+01
  5.01728787e+01  2.04157641e+03]
E1 = -182.50255426347945  E_coul = 57.519042814600446
cycle= 5 E= -124.983511448879  delta_E= -4.41e-13  |g|= 2.45e-08  |ddm|= 5.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.50255426347945  E_coul = 57.519042814600446
  HOMO = -0.426503524378619  LUMO = 1.50036321706091e-09
  mo_energy =
[-3.09572282e+01 -1.49549558e+00 -4.26503524e-01 -4.26503524e-01
 -4.26503524e-01  1.50036322e-09  7.02914030e+00  7.02914030e+00
  7.02914030e+00  5.00908887e+01  5.00908887e+01  5.00908887e+01
  5.01728787e+01  2.04157641e+03]
E1 = -182.50255424573425  E_coul = 57.51904279685541
Extra cycle  E= -124.983511448879  delta_E= 1.71e-13  |g|= 2.07e-09  |ddm|= 2.73e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65972918e+03 9.92315890e-01 1.00000000e-09 6.53703306e+01
 1.40137922e+01 2.75256077e+01 1.13977744e+00 6.25782652e+00]
E = -124.98351144887883
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1791.86067898        1
[INPUT] 0    0    [1    /1   ]  0.983319471972       1
[INPUT] 0    0    [1    /1   ]  595.783743496        1
[INPUT] 0    0    [1    /1   ]  84.7226038567        1
[INPUT] 0    0    [1    /1   ]  15.8113756801        1
[INPUT] 1    0    [1    /1   ]  21.9359722938        1
[INPUT] 1    0    [1    /1   ]  0.93873677815        1
[INPUT] 1    0    [1    /1   ]  4.86912939717        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1791.860678982908, 1.0]], [0, [0.9833194719724424, 1.0]], [0, [595.7837434962914, 1.0]], [0, [84.72260385665058, 1.0]], [0, [15.811375680110922, 1.0]], [1, [21.935972293787135, 1.0]], [1, [0.9387367781501275, 1.0]], [1, [4.869129397169869, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1791.86067898]
bas 1, expnt(s) = [0.98331947]
bas 2, expnt(s) = [595.7837435]
bas 3, expnt(s) = [84.72260386]
bas 4, expnt(s) = [15.81137568]
bas 5, expnt(s) = [21.93597229]
bas 6, expnt(s) = [0.93873678]
bas 7, expnt(s) = [4.8691294]
CPU time:       231.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.79186068e+03 6.95814066e+02 9.83319472e-01 2.49480154e+00
 5.95783743e+02 3.04671276e+02 8.47226039e+01 7.05528392e+01
 1.58113757e+01 2.00328282e+01 2.19359723e+01 1.38493855e+02
 9.38736778e-01 2.69565423e+00 4.86912940e+00 2.11007814e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.812768670713794
cond(S) = 18.942382481333567
E1 = -181.91401748954266  E_coul = 54.91202082383984
init E= -127.001996665703
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716019815299717  LUMO = 5.01621731101326
  mo_energy =
[-3.22783128e+01 -1.80156463e+00 -7.16019815e-01 -7.16019815e-01
 -7.16019815e-01  5.01621731e+00  5.01621731e+00  5.01621731e+00
  3.74910886e+01  3.74910886e+01  3.74910886e+01  6.62196227e+01
  7.92076922e+02  4.10207640e+03]
E1 = -183.84130854133758  E_coul = 56.48604841019947
cycle= 1 E= -127.355260131138  delta_E= -0.353  |g|= 0.122  |ddm|= 0.125
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.170534
diis-c [-0.02908181  1.        ]
  HOMO = -0.567488261504897  LUMO = 5.19774595006039
  mo_energy =
[-3.20847154e+01 -1.64794113e+00 -5.67488262e-01 -5.67488262e-01
 -5.67488262e-01  5.19774595e+00  5.19774595e+00  5.19774595e+00
  3.76936792e+01  3.76936792e+01  3.76936792e+01  6.64302344e+01
  7.92202668e+02  4.10215664e+03]
E1 = -183.63807023550387  E_coul = 56.28197674055246
cycle= 2 E= -127.356093494951  delta_E= -0.000833  |g|= 0.0243  |ddm|= 0.0303
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0380232
diis-c [-9.60951213e-05  1.77486055e-01  8.22513945e-01]
  HOMO = -0.578134407969617  LUMO = 5.18208493443563
  mo_energy =
[-3.21246836e+01 -1.65989218e+00 -5.78134408e-01 -5.78134408e-01
 -5.78134408e-01  5.18208493e+00  5.18208493e+00  5.18208493e+00
  3.76595359e+01  3.76595359e+01  3.76595359e+01  6.63914087e+01
  7.92157945e+02  4.10211086e+03]
E1 = -183.6708236384021  E_coul = 56.31469784669211
cycle= 3 E= -127.35612579171  delta_E= -3.23e-05  |g|= 0.000428  |ddm|= 0.00466
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738688
diis-c [-2.84969166e-08 -2.66805429e-03 -3.05450849e-02  1.03321314e+00]
  HOMO = -0.578353245342683  LUMO = 5.1817880185942
  mo_energy =
[-3.21252578e+01 -1.66012505e+00 -5.78353245e-01 -5.78353245e-01
 -5.78353245e-01  5.18178802e+00  5.18178802e+00  5.18178802e+00
  3.76589919e+01  3.76589919e+01  3.76589919e+01  6.63908681e+01
  7.92157514e+02  4.10211047e+03]
E1 = -183.67139227864433  E_coul = 56.31526647734933
cycle= 4 E= -127.356125801295  delta_E= -9.59e-09  |g|= 4.85e-06  |ddm|= 7.82e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.61478e-06
diis-c [-1.87041784e-12  3.96978023e-05  6.80834766e-04 -2.15978063e-02
  1.02087727e+00]
  HOMO = -0.578351614544829  LUMO = 5.18179011305696
  mo_energy =
[-3.21252535e+01 -1.66012314e+00 -5.78351615e-01 -5.78351615e-01
 -5.78351615e-01  5.18179011e+00  5.18179011e+00  5.18179011e+00
  3.76589958e+01  3.76589958e+01  3.76589958e+01  6.63908722e+01
  7.92157512e+02  4.10211046e+03]
E1 = -183.67138801622374  E_coul = 56.315262214928204
cycle= 5 E= -127.356125801296  delta_E= -5.4e-13  |g|= 7.89e-08  |ddm|= 6.45e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.67138801622374  E_coul = 56.315262214928204
  HOMO = -0.578351658053326  LUMO = 5.18179005265155
  mo_energy =
[-3.21252536e+01 -1.66012318e+00 -5.78351658e-01 -5.78351658e-01
 -5.78351658e-01  5.18179005e+00  5.18179005e+00  5.18179005e+00
  3.76589957e+01  3.76589957e+01  3.76589957e+01  6.63908721e+01
  7.92157511e+02  4.10211046e+03]
E1 = -183.67138814242836  E_coul = 56.31526234113283
Extra cycle  E= -127.356125801296  delta_E= 2.84e-14  |g|= 1.52e-08  |ddm|= 1.77e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.79186068e+03 9.83319472e-01 5.95783743e+02 8.47226039e+01
 1.58113757e+01 2.19359723e+01 9.38736778e-01 4.86912940e+00]
E = -127.35612580129552
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1791.86067898        1
[INPUT] 0    0    [1    /1   ]  0.983319471972       1
[INPUT] 0    0    [1    /1   ]  595.783743496        1
[INPUT] 0    0    [1    /1   ]  84.7226038567        1
[INPUT] 0    0    [1    /1   ]  15.8113756801        1
[INPUT] 1    0    [1    /1   ]  21.9359722938        1
[INPUT] 1    0    [1    /1   ]  0.93873677815        1
[INPUT] 1    0    [1    /1   ]  4.86912939717        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1791.860678982908, 1.0]], [0, [0.9833194719724424, 1.0]], [0, [595.7837434962914, 1.0]], [0, [84.72260385665058, 1.0]], [0, [15.811375680110922, 1.0]], [1, [21.935972293787135, 1.0]], [1, [0.9387367781501275, 1.0]], [1, [4.869129397169869, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1791.86067898]
bas 1, expnt(s) = [0.98331947]
bas 2, expnt(s) = [595.7837435]
bas 3, expnt(s) = [84.72260386]
bas 4, expnt(s) = [15.81137568]
bas 5, expnt(s) = [21.93597229]
bas 6, expnt(s) = [0.93873678]
bas 7, expnt(s) = [4.8691294]
CPU time:       232.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.79186068e+03 6.95814066e+02 9.83319472e-01 2.49480154e+00
 5.95783743e+02 3.04671276e+02 8.47226039e+01 7.05528392e+01
 1.58113757e+01 2.00328282e+01 2.19359723e+01 1.38493855e+02
 9.38736778e-01 2.69565423e+00 4.86912940e+00 2.11007814e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.812768670713794
cond(S) = 18.942382481333567
E1 = -181.91401748954266  E_coul = 54.91202082383984
init E= -127.001996665703
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716019815299717  LUMO = 5.01621731101326
  mo_energy =
[-3.22783128e+01 -1.80156463e+00 -7.16019815e-01 -7.16019815e-01
 -7.16019815e-01  5.01621731e+00  5.01621731e+00  5.01621731e+00
  3.74910886e+01  3.74910886e+01  3.74910886e+01  6.62196227e+01
  7.92076922e+02  4.10207640e+03]
E1 = -183.84130854133758  E_coul = 56.48604841019947
cycle= 1 E= -127.355260131138  delta_E= -0.353  |g|= 0.122  |ddm|= 0.125
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.170534
diis-c [-0.02908181  1.        ]
  HOMO = -0.567488261504897  LUMO = 5.19774595006039
  mo_energy =
[-3.20847154e+01 -1.64794113e+00 -5.67488262e-01 -5.67488262e-01
 -5.67488262e-01  5.19774595e+00  5.19774595e+00  5.19774595e+00
  3.76936792e+01  3.76936792e+01  3.76936792e+01  6.64302344e+01
  7.92202668e+02  4.10215664e+03]
E1 = -183.63807023550387  E_coul = 56.28197674055246
cycle= 2 E= -127.356093494951  delta_E= -0.000833  |g|= 0.0243  |ddm|= 0.0303
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0380232
diis-c [-9.60951213e-05  1.77486055e-01  8.22513945e-01]
  HOMO = -0.578134407969617  LUMO = 5.18208493443563
  mo_energy =
[-3.21246836e+01 -1.65989218e+00 -5.78134408e-01 -5.78134408e-01
 -5.78134408e-01  5.18208493e+00  5.18208493e+00  5.18208493e+00
  3.76595359e+01  3.76595359e+01  3.76595359e+01  6.63914087e+01
  7.92157945e+02  4.10211086e+03]
E1 = -183.6708236384021  E_coul = 56.31469784669211
cycle= 3 E= -127.35612579171  delta_E= -3.23e-05  |g|= 0.000428  |ddm|= 0.00466
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738688
diis-c [-2.84969166e-08 -2.66805429e-03 -3.05450849e-02  1.03321314e+00]
  HOMO = -0.578353245342683  LUMO = 5.1817880185942
  mo_energy =
[-3.21252578e+01 -1.66012505e+00 -5.78353245e-01 -5.78353245e-01
 -5.78353245e-01  5.18178802e+00  5.18178802e+00  5.18178802e+00
  3.76589919e+01  3.76589919e+01  3.76589919e+01  6.63908681e+01
  7.92157514e+02  4.10211047e+03]
E1 = -183.67139227864433  E_coul = 56.31526647734933
cycle= 4 E= -127.356125801295  delta_E= -9.59e-09  |g|= 4.85e-06  |ddm|= 7.82e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.61478e-06
diis-c [-1.87041784e-12  3.96978023e-05  6.80834766e-04 -2.15978063e-02
  1.02087727e+00]
  HOMO = -0.578351614544829  LUMO = 5.18179011305696
  mo_energy =
[-3.21252535e+01 -1.66012314e+00 -5.78351615e-01 -5.78351615e-01
 -5.78351615e-01  5.18179011e+00  5.18179011e+00  5.18179011e+00
  3.76589958e+01  3.76589958e+01  3.76589958e+01  6.63908722e+01
  7.92157512e+02  4.10211046e+03]
E1 = -183.67138801622374  E_coul = 56.315262214928204
cycle= 5 E= -127.356125801296  delta_E= -5.4e-13  |g|= 7.89e-08  |ddm|= 6.45e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.67138801622374  E_coul = 56.315262214928204
  HOMO = -0.578351658053326  LUMO = 5.18179005265155
  mo_energy =
[-3.21252536e+01 -1.66012318e+00 -5.78351658e-01 -5.78351658e-01
 -5.78351658e-01  5.18179005e+00  5.18179005e+00  5.18179005e+00
  3.76589957e+01  3.76589957e+01  3.76589957e+01  6.63908721e+01
  7.92157511e+02  4.10211046e+03]
E1 = -183.67138814242836  E_coul = 56.31526234113283
Extra cycle  E= -127.356125801296  delta_E= 2.84e-14  |g|= 1.52e-08  |ddm|= 1.77e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.942382481333567
E1 = -183.67138814242836  E_coul = 56.31526234113283
init E= -127.356125801296
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.578351650185017  LUMO = 5.18179006431354
  mo_energy =
[-3.21252536e+01 -1.66012318e+00 -5.78351650e-01 -5.78351650e-01
 -5.78351650e-01  5.18179006e+00  5.18179006e+00  5.18179006e+00
  3.76589957e+01  3.76589957e+01  3.76589957e+01  6.63908721e+01
  7.92157511e+02  4.10211046e+03]
E1 = -183.67138811773094  E_coul = 56.31526231643533
cycle= 1 E= -127.356125801296  delta_E= -8.53e-14  |g|= 2.95e-09  |ddm|= 3.54e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.67138811773094  E_coul = 56.31526231643533
  HOMO = -0.578351651730846  LUMO = 5.18179006202449
  mo_energy =
[-3.21252536e+01 -1.66012318e+00 -5.78351652e-01 -5.78351652e-01
 -5.78351652e-01  5.18179006e+00  5.18179006e+00  5.18179006e+00
  3.76589957e+01  3.76589957e+01  3.76589957e+01  6.63908721e+01
  7.92157511e+02  4.10211046e+03]
E1 = -183.67138812255814  E_coul = 56.31526232126265
Extra cycle  E= -127.356125801295  delta_E= 1.14e-13  |g|= 5.77e-10  |ddm|= 6.89e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.79186068e+03 9.83319472e-01 5.95783743e+02 8.47226039e+01
 1.58113757e+01 2.19359723e+01 9.38736778e-01 4.86912940e+00]
grad_E = [-7.28713195e-05  2.51345510e-01  8.10902519e-04  1.10578522e-02
 -6.65327545e-02 -5.78260848e-03  4.75108934e-01  1.35313113e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.72935513        1
[INPUT] 0    0    [1    /1   ]  0.992109959497       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  63.8485633966        1
[INPUT] 0    0    [1    /1   ]  13.8815409994        1
[INPUT] 1    0    [1    /1   ]  27.6224871767        1
[INPUT] 1    0    [1    /1   ]  1.14310262316        1
[INPUT] 1    0    [1    /1   ]  6.27872029445        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7293551255937, 1.0]], [0, [0.9921099594972933, 1.0]], [0, [1e-09, 1.0]], [0, [63.84856339661198, 1.0]], [0, [13.88154099940996, 1.0]], [1, [27.62248717666661, 1.0]], [1, [1.1431026231576777, 1.0]], [1, [6.2787202944485, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.72935513]
bas 1, expnt(s) = [0.99210996]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [63.8485634]
bas 4, expnt(s) = [13.881541]
bas 5, expnt(s) = [27.62248718]
bas 6, expnt(s) = [1.14310262]
bas 7, expnt(s) = [6.27872029]
CPU time:       235.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972936e+03 6.56966131e+02 9.92109959e-01 2.51150982e+00
 1.00000000e-09 4.49277867e-07 6.38485634e+01 5.70661235e+01
 1.38815410e+01 1.81695129e+01 2.76224872e+01 1.84740821e+02
 1.14310262e+00 3.44818787e+00 6.27872029e+00 2.89950134e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.696878123318019
cond(S) = 6.786326922544566
E1 = -176.31072135817575  E_coul = 54.67008924637637
init E= -121.640632111799
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.688185266027235  LUMO = -1.52948328945881e-05
  mo_energy =
[-3.12735376e+01 -1.76847518e+00 -6.88185266e-01 -6.88185266e-01
 -6.88185266e-01 -1.52948329e-05  6.71499927e+00  6.71499927e+00
  6.71499927e+00  4.85840663e+01  4.99082694e+01  4.99082694e+01
  4.99082694e+01  2.03677151e+03]
E1 = -182.65493546304248  E_coul = 57.806856641675395
cycle= 1 E= -124.848078821367  delta_E= -3.21  |g|= 0.437  |ddm|= 0.17
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.733046
diis-c [-0.53735618  1.        ]
  HOMO = -0.40709101163548  LUMO = 1.50036784605911e-09
  mo_energy =
[-3.08289029e+01 -1.47204605e+00 -4.07091012e-01 -4.07091012e-01
 -4.07091012e-01  1.50036785e-09  7.08908937e+00  7.08908937e+00
  7.08908937e+00  4.90516650e+01  5.03586021e+01  5.03586021e+01
  5.03586021e+01  2.03687801e+03]
E1 = -182.34436381657693  E_coul = 57.49352388169078
cycle= 2 E= -124.850839934886  delta_E= -0.00276  |g|= 0.0378  |ddm|= 0.0474
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0548212
diis-c [-0.00220905  0.03714208  0.96285792]
  HOMO = -0.425598327462298  LUMO = 1.50036399424327e-09
  mo_energy =
[-3.09038953e+01 -1.49218855e+00 -4.25598327e-01 -4.25598327e-01
 -4.25598327e-01  1.50036399e-09  7.05608567e+00  7.05608567e+00
  7.05608567e+00  4.89830091e+01  5.02913719e+01  5.02913719e+01
  5.02913719e+01  2.03678848e+03]
E1 = -182.38822039748192  E_coul = 57.53732243309429
cycle= 3 E= -124.850897964388  delta_E= -5.8e-05  |g|= 0.00388  |ddm|= 0.00644
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00562833
diis-c [-3.83373563e-09 -4.92904146e-04  9.02402977e-02  9.10252606e-01]
  HOMO = -0.423911723063352  LUMO = 1.50036391741847e-09
  mo_energy =
[-3.08967505e+01 -1.49034531e+00 -4.23911723e-01 -4.23911723e-01
 -4.23911723e-01  1.50036392e-09  7.05914604e+00  7.05914604e+00
  7.05914604e+00  4.89895353e+01  5.02977530e+01  5.02977530e+01
  5.02977530e+01  2.03679762e+03]
E1 = -182.38410879477303  E_coul = 57.53321020299149
cycle= 4 E= -124.850898591782  delta_E= -6.27e-07  |g|= 3.33e-06  |ddm|= 0.000606
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.22033e-06
diis-c [-1.71471106e-13  7.66387816e-06 -1.45746404e-03 -1.37584789e-02
  1.01520828e+00]
  HOMO = -0.423913288161527  LUMO = 1.50036409763125e-09
  mo_energy =
[-3.08967558e+01 -1.49034687e+00 -4.23913288e-01 -4.23913288e-01
 -4.23913288e-01  1.50036410e-09  7.05914355e+00  7.05914355e+00
  7.05914355e+00  4.89895307e+01  5.02977483e+01  5.02977483e+01
  5.02977483e+01  2.03679762e+03]
E1 = -182.38411232452353  E_coul = 57.533213732741416
cycle= 5 E= -124.850898591782  delta_E= -5.68e-13  |g|= 2.68e-08  |ddm|= 5.16e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.38411232452353  E_coul = 57.533213732741416
  HOMO = -0.423913276656395  LUMO = 1.50036419477863e-09
  mo_energy =
[-3.08967557e+01 -1.49034686e+00 -4.23913277e-01 -4.23913277e-01
 -4.23913277e-01  1.50036419e-09  7.05914357e+00  7.05914357e+00
  7.05914357e+00  4.89895307e+01  5.02977483e+01  5.02977483e+01
  5.02977483e+01  2.03679762e+03]
E1 = -182.3841123023954  E_coul = 57.533213710613424
Extra cycle  E= -124.850898591782  delta_E= 1.28e-13  |g|= 2.61e-09  |ddm|= 3.33e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.65972936e+03 9.92109959e-01 1.00000000e-09 6.38485634e+01
 1.38815410e+01 2.76224872e+01 1.14310262e+00 6.27872029e+00]
E = -124.85089859178198
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1778.6475466         1
[INPUT] 0    0    [1    /1   ]  0.984198520725       1
[INPUT] 0    0    [1    /1   ]  536.205369147        1
[INPUT] 0    0    [1    /1   ]  82.6351998106        1
[INPUT] 0    0    [1    /1   ]  15.618392212         1
[INPUT] 1    0    [1    /1   ]  22.5046237821        1
[INPUT] 1    0    [1    /1   ]  0.959173362651       1
[INPUT] 1    0    [1    /1   ]  5.0100884869         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1778.6475465971766, 1.0]], [0, [0.9841985207249275, 1.0]], [0, [536.2053691467623, 1.0]], [0, [82.63519981064672, 1.0]], [0, [15.618392212040826, 1.0]], [1, [22.504623782075083, 1.0]], [1, [0.9591733626508825, 1.0]], [1, [5.010088486897732, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1778.6475466]
bas 1, expnt(s) = [0.98419852]
bas 2, expnt(s) = [536.20536915]
bas 3, expnt(s) = [82.63519981]
bas 4, expnt(s) = [15.61839221]
bas 5, expnt(s) = [22.50462378]
bas 6, expnt(s) = [0.95917336]
bas 7, expnt(s) = [5.01008849]
CPU time:       236.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.77864755e+03 6.91962322e+02 9.84198521e-01 2.49647404e+00
 5.36205369e+02 2.81522683e+02 8.26351998e+01 6.92450663e+01
 1.56183922e+01 1.98491662e+01 2.25046238e+01 1.42996066e+02
 9.59173363e-01 2.76920929e+00 5.01008849e+00 2.18670973e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.802734266706056
cond(S) = 17.788639841684866
E1 = -181.93628720957838  E_coul = 54.9008017152235
init E= -127.035485494355
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.713127832929182  LUMO = 5.1801163485983
  mo_energy =
[-3.23073892e+01 -1.80371148e+00 -7.13127833e-01 -7.13127833e-01
 -7.13127833e-01  5.18011635e+00  5.18011635e+00  5.18011635e+00
  3.87110501e+01  3.87110501e+01  3.87110501e+01  6.43603185e+01
  7.32747728e+02  3.90944392e+03]
E1 = -184.00365941847247  E_coul = 56.61653847275638
cycle= 1 E= -127.387120945716  delta_E= -0.352  |g|= 0.133  |ddm|= 0.13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.182744
diis-c [-0.03339527  1.        ]
  HOMO = -0.553137128446324  LUMO = 5.37755740158483
  mo_energy =
[-3.20891494e+01 -1.63732432e+00 -5.53137128e-01 -5.53137128e-01
 -5.53137128e-01  5.37755740e+00  5.37755740e+00  5.37755740e+00
  3.89353552e+01  3.89353552e+01  3.89353552e+01  6.45948437e+01
  7.32903711e+02  3.90955773e+03]
E1 = -183.7886730224757  E_coul = 56.40058562994717
cycle= 2 E= -127.388087392529  delta_E= -0.000966  |g|= 0.0257  |ddm|= 0.0321
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0401626
diis-c [-8.88749976e-05  1.76222352e-01  8.23777648e-01]
  HOMO = -0.564377240119172  LUMO = 5.36064697013508
  mo_energy =
[-3.21317249e+01 -1.64990011e+00 -5.64377240e-01 -5.64377240e-01
 -5.64377240e-01  5.36064697e+00  5.36064697e+00  5.36064697e+00
  3.88987902e+01  3.88987902e+01  3.88987902e+01  6.45536505e+01
  7.32856010e+02  3.90950879e+03]
E1 = -183.82236782500166  E_coul = 56.43424516069977
cycle= 3 E= -127.388122664302  delta_E= -3.53e-05  |g|= 0.000528  |ddm|= 0.00481
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000895848
diis-c [-3.29682862e-08 -2.11239488e-03 -3.16280492e-02  1.03374044e+00]
  HOMO = -0.564643780972112  LUMO = 5.36027303835673
  mo_energy =
[-3.21324820e+01 -1.65018544e+00 -5.64643781e-01 -5.64643781e-01
 -5.64643781e-01  5.36027304e+00  5.36027304e+00  5.36027304e+00
  3.88980876e+01  3.88980876e+01  3.88980876e+01  6.45529332e+01
  7.32855389e+02  3.90950823e+03]
E1 = -183.82306416202252  E_coul = 56.43494148304858
cycle= 4 E= -127.388122678974  delta_E= -1.47e-08  |g|= 4.37e-06  |ddm|= 9.68e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.89563e-06
diis-c [-1.97562412e-12  3.12624603e-05  7.01933655e-04 -2.34598292e-02
  1.02272663e+00]
  HOMO = -0.564642725414214  LUMO = 5.36027434736255
  mo_energy =
[-3.21324793e+01 -1.65018414e+00 -5.64642725e-01 -5.64642725e-01
 -5.64642725e-01  5.36027435e+00  5.36027435e+00  5.36027435e+00
  3.88980900e+01  3.88980900e+01  3.88980900e+01  6.45529358e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.82306156869078  E_coul = 56.4349388897166
cycle= 5 E= -127.388122678974  delta_E= -2.56e-13  |g|= 5.98e-08  |ddm|= 4.22e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.82306156869078  E_coul = 56.4349388897166
  HOMO = -0.564642757257138  LUMO = 5.36027430253901
  mo_energy =
[-3.21324794e+01 -1.65018418e+00 -5.64642757e-01 -5.64642757e-01
 -5.64642757e-01  5.36027430e+00  5.36027430e+00  5.36027430e+00
  3.88980899e+01  3.88980899e+01  3.88980899e+01  6.45529356e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.823061659971  E_coul = 56.434938980996705
Extra cycle  E= -127.388122678974  delta_E= -9.95e-14  |g|= 1.11e-08  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.77864755e+03 9.84198521e-01 5.36205369e+02 8.26351998e+01
 1.56183922e+01 2.25046238e+01 9.59173363e-01 5.01008849e+00]
E = -127.38812267897428
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1778.6475466         1
[INPUT] 0    0    [1    /1   ]  0.984198520725       1
[INPUT] 0    0    [1    /1   ]  536.205369147        1
[INPUT] 0    0    [1    /1   ]  82.6351998106        1
[INPUT] 0    0    [1    /1   ]  15.618392212         1
[INPUT] 1    0    [1    /1   ]  22.5046237821        1
[INPUT] 1    0    [1    /1   ]  0.959173362651       1
[INPUT] 1    0    [1    /1   ]  5.0100884869         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1778.6475465971766, 1.0]], [0, [0.9841985207249275, 1.0]], [0, [536.2053691467623, 1.0]], [0, [82.63519981064672, 1.0]], [0, [15.618392212040826, 1.0]], [1, [22.504623782075083, 1.0]], [1, [0.9591733626508825, 1.0]], [1, [5.010088486897732, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1778.6475466]
bas 1, expnt(s) = [0.98419852]
bas 2, expnt(s) = [536.20536915]
bas 3, expnt(s) = [82.63519981]
bas 4, expnt(s) = [15.61839221]
bas 5, expnt(s) = [22.50462378]
bas 6, expnt(s) = [0.95917336]
bas 7, expnt(s) = [5.01008849]
CPU time:       237.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.77864755e+03 6.91962322e+02 9.84198521e-01 2.49647404e+00
 5.36205369e+02 2.81522683e+02 8.26351998e+01 6.92450663e+01
 1.56183922e+01 1.98491662e+01 2.25046238e+01 1.42996066e+02
 9.59173363e-01 2.76920929e+00 5.01008849e+00 2.18670973e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.802734266706056
cond(S) = 17.788639841684866
E1 = -181.93628720957838  E_coul = 54.9008017152235
init E= -127.035485494355
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.713127832929182  LUMO = 5.1801163485983
  mo_energy =
[-3.23073892e+01 -1.80371148e+00 -7.13127833e-01 -7.13127833e-01
 -7.13127833e-01  5.18011635e+00  5.18011635e+00  5.18011635e+00
  3.87110501e+01  3.87110501e+01  3.87110501e+01  6.43603185e+01
  7.32747728e+02  3.90944392e+03]
E1 = -184.00365941847247  E_coul = 56.61653847275638
cycle= 1 E= -127.387120945716  delta_E= -0.352  |g|= 0.133  |ddm|= 0.13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.182744
diis-c [-0.03339527  1.        ]
  HOMO = -0.553137128446324  LUMO = 5.37755740158483
  mo_energy =
[-3.20891494e+01 -1.63732432e+00 -5.53137128e-01 -5.53137128e-01
 -5.53137128e-01  5.37755740e+00  5.37755740e+00  5.37755740e+00
  3.89353552e+01  3.89353552e+01  3.89353552e+01  6.45948437e+01
  7.32903711e+02  3.90955773e+03]
E1 = -183.7886730224757  E_coul = 56.40058562994717
cycle= 2 E= -127.388087392529  delta_E= -0.000966  |g|= 0.0257  |ddm|= 0.0321
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0401626
diis-c [-8.88749976e-05  1.76222352e-01  8.23777648e-01]
  HOMO = -0.564377240119172  LUMO = 5.36064697013508
  mo_energy =
[-3.21317249e+01 -1.64990011e+00 -5.64377240e-01 -5.64377240e-01
 -5.64377240e-01  5.36064697e+00  5.36064697e+00  5.36064697e+00
  3.88987902e+01  3.88987902e+01  3.88987902e+01  6.45536505e+01
  7.32856010e+02  3.90950879e+03]
E1 = -183.82236782500166  E_coul = 56.43424516069977
cycle= 3 E= -127.388122664302  delta_E= -3.53e-05  |g|= 0.000528  |ddm|= 0.00481
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000895848
diis-c [-3.29682862e-08 -2.11239488e-03 -3.16280492e-02  1.03374044e+00]
  HOMO = -0.564643780972112  LUMO = 5.36027303835673
  mo_energy =
[-3.21324820e+01 -1.65018544e+00 -5.64643781e-01 -5.64643781e-01
 -5.64643781e-01  5.36027304e+00  5.36027304e+00  5.36027304e+00
  3.88980876e+01  3.88980876e+01  3.88980876e+01  6.45529332e+01
  7.32855389e+02  3.90950823e+03]
E1 = -183.82306416202252  E_coul = 56.43494148304858
cycle= 4 E= -127.388122678974  delta_E= -1.47e-08  |g|= 4.37e-06  |ddm|= 9.68e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.89563e-06
diis-c [-1.97562412e-12  3.12624603e-05  7.01933655e-04 -2.34598292e-02
  1.02272663e+00]
  HOMO = -0.564642725414214  LUMO = 5.36027434736255
  mo_energy =
[-3.21324793e+01 -1.65018414e+00 -5.64642725e-01 -5.64642725e-01
 -5.64642725e-01  5.36027435e+00  5.36027435e+00  5.36027435e+00
  3.88980900e+01  3.88980900e+01  3.88980900e+01  6.45529358e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.82306156869078  E_coul = 56.4349388897166
cycle= 5 E= -127.388122678974  delta_E= -2.56e-13  |g|= 5.98e-08  |ddm|= 4.22e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.82306156869078  E_coul = 56.4349388897166
  HOMO = -0.564642757257138  LUMO = 5.36027430253901
  mo_energy =
[-3.21324794e+01 -1.65018418e+00 -5.64642757e-01 -5.64642757e-01
 -5.64642757e-01  5.36027430e+00  5.36027430e+00  5.36027430e+00
  3.88980899e+01  3.88980899e+01  3.88980899e+01  6.45529356e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.823061659971  E_coul = 56.434938980996705
Extra cycle  E= -127.388122678974  delta_E= -9.95e-14  |g|= 1.11e-08  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.788639841684866
E1 = -183.823061659971  E_coul = 56.434938980996705
init E= -127.388122678974
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.56464275158561  LUMO = 5.36027431113556
  mo_energy =
[-3.21324794e+01 -1.65018417e+00 -5.64642752e-01 -5.64642752e-01
 -5.64642752e-01  5.36027431e+00  5.36027431e+00  5.36027431e+00
  3.88980899e+01  3.88980899e+01  3.88980899e+01  6.45529357e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.8230616426302  E_coul = 56.43493896365611
cycle= 1 E= -127.388122678974  delta_E= 1.99e-13  |g|= 2.07e-09  |ddm|= 2.49e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.8230616426302  E_coul = 56.43493896365611
  HOMO = -0.564642752667063  LUMO = 5.36027430949741
  mo_energy =
[-3.21324794e+01 -1.65018417e+00 -5.64642753e-01 -5.64642753e-01
 -5.64642753e-01  5.36027431e+00  5.36027431e+00  5.36027431e+00
  3.88980899e+01  3.88980899e+01  3.88980899e+01  6.45529357e+01
  7.32855385e+02  3.90950822e+03]
E1 = -183.8230616459203  E_coul = 56.43493896694608
Extra cycle  E= -127.388122678974  delta_E= -1.28e-13  |g|= 3.94e-10  |ddm|= 4.71e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.77864755e+03 9.84198521e-01 5.36205369e+02 8.26351998e+01
 1.56183922e+01 2.25046238e+01 9.59173363e-01 5.01008849e+00]
grad_E = [-8.21933330e-05  2.62120917e-01  7.72272356e-04  1.30825587e-02
 -7.15607562e-02 -5.77941331e-03  5.14022954e-01  1.37196452e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.72962732        1
[INPUT] 0    0    [1    /1   ]  0.991508921149       1
[INPUT] 0    0    [1    /1   ]  6.24362917279e-05      1
[INPUT] 0    0    [1    /1   ]  62.0011123627        1
[INPUT] 0    0    [1    /1   ]  13.7260051761        1
[INPUT] 1    0    [1    /1   ]  27.6389347797        1
[INPUT] 1    0    [1    /1   ]  1.14233831571        1
[INPUT] 1    0    [1    /1   ]  6.28398341312        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7296273236925, 1.0]], [0, [0.9915089211493123, 1.0]], [0, [6.243629172786314e-05, 1.0]], [0, [62.00111236265254, 1.0]], [0, [13.726005176088016, 1.0]], [1, [27.638934779698957, 1.0]], [1, [1.142338315705802, 1.0]], [1, [6.28398341311794, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.72962732]
bas 1, expnt(s) = [0.99150892]
bas 2, expnt(s) = [6.24362917e-05]
bas 3, expnt(s) = [62.00111236]
bas 4, expnt(s) = [13.72600518]
bas 5, expnt(s) = [27.63893478]
bas 6, expnt(s) = [1.14233832]
bas 7, expnt(s) = [6.28398341]
CPU time:       240.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65972963e+03 6.56966212e+02 9.91508921e-01 2.51036860e+00
 6.24362917e-05 1.77456883e-03 6.20011124e+01 5.58231880e+01
 1.37260052e+01 1.80166127e+01 2.76389348e+01 1.84878334e+02
 1.14233832e+00 3.44530617e+00 6.28398341e+00 2.90253978e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.697132933966737
cond(S) = 6.925753756789626
E1 = -175.8261749014115  E_coul = 54.65652180225965
init E= -121.169653099152
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.688746673185453  LUMO = -0.00371894809199653
  mo_energy =
[-3.11978333e+01 -1.76481736e+00 -6.88746673e-01 -6.88746673e-01
 -6.88746673e-01 -3.71894809e-03  6.71579518e+00  6.71579518e+00
  6.71579518e+00  4.71714532e+01  4.99413280e+01  4.99413280e+01
  4.99413280e+01  2.03101805e+03]
E1 = -182.4588782306383  E_coul = 57.77844086794693
cycle= 1 E= -124.680437362691  delta_E= -3.51  |g|= 0.452  |ddm|= 0.172
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.762445
diis-c [-0.58132163  1.        ]
  HOMO = -0.40855711697688  LUMO = 9.93408040305753e-05
  mo_energy =
[-3.07576626e+01 -1.46926185e+00 -4.08557117e-01 -4.08557117e-01
 -4.08557117e-01  9.93408040e-05  7.08841296e+00  7.08841296e+00
  7.08841296e+00  4.76362342e+01  5.03885310e+01  5.03885310e+01
  5.03885310e+01  2.03110811e+03]
E1 = -182.14976701692473  E_coul = 57.466592015471626
cycle= 2 E= -124.683175001453  delta_E= -0.00274  |g|= 0.0378  |ddm|= 0.0472
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0546711
diis-c [-0.0022653  0.0341437  0.9658563]
  HOMO = -0.42703205539222  LUMO = 9.92752214265838e-05
  mo_energy =
[-3.08325557e+01 -1.48935486e+00 -4.27032055e-01 -4.27032055e-01
 -4.27032055e-01  9.92752214e-05  7.05542863e+00  7.05542863e+00
  7.05542863e+00  4.75681266e+01  5.03213639e+01  5.03213639e+01
  5.03213639e+01  2.03101856e+03]
E1 = -182.19368612953716  E_coul = 57.510453391912705
cycle= 3 E= -124.683232737624  delta_E= -5.77e-05  |g|= 0.00402  |ddm|= 0.00645
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00582353
diis-c [-4.40012114e-09 -4.93175191e-04  9.34133181e-02  9.07079857e-01]
  HOMO = -0.425290168263958  LUMO = 9.92814252161962e-05
  mo_energy =
[-3.08251820e+01 -1.48745253e+00 -4.25290168e-01 -4.25290168e-01
 -4.25290168e-01  9.92814252e-05  7.05859155e+00  7.05859155e+00
  7.05859155e+00  4.75748149e+01  5.03279532e+01  5.03279532e+01
  5.03279532e+01  2.03102798e+03]
E1 = -182.18942866519845  E_coul = 57.50619525493093
cycle= 4 E= -124.683233410268  delta_E= -6.73e-07  |g|= 3.57e-06  |ddm|= 0.000627
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.60033e-06
diis-c [-2.09251342e-13  8.04223639e-06 -1.57770913e-03 -1.43454189e-02
  1.01591509e+00]
  HOMO = -0.425291832644401  LUMO = 9.92814205682943e-05
  mo_energy =
[-3.08251876e+01 -1.48745418e+00 -4.25291833e-01 -4.25291833e-01
 -4.25291833e-01  9.92814206e-05  7.05858890e+00  7.05858890e+00
  7.05858890e+00  4.75748101e+01  5.03279482e+01  5.03279482e+01
  5.03279482e+01  2.03102798e+03]
E1 = -182.18943244411943  E_coul = 57.50619903385123
cycle= 5 E= -124.683233410268  delta_E= -6.82e-13  |g|= 3.04e-08  |ddm|= 5.53e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.18943244411943  E_coul = 57.50619903385123
  HOMO = -0.425291819607783  LUMO = 9.9281420610061e-05
  mo_energy =
[-3.08251876e+01 -1.48745417e+00 -4.25291820e-01 -4.25291820e-01
 -4.25291820e-01  9.92814206e-05  7.05858891e+00  7.05858891e+00
  7.05858891e+00  4.75748101e+01  5.03279482e+01  5.03279482e+01
  5.03279482e+01  2.03102798e+03]
E1 = -182.18943241905046  E_coul = 57.50619900878234
Extra cycle  E= -124.683233410268  delta_E= 8.53e-14  |g|= 2.96e-09  |ddm|= 3.78e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.65972963e+03 9.91508921e-01 6.24362917e-05 6.20011124e+01
 1.37260052e+01 2.76389348e+01 1.14233832e+00 6.28398341e+00]
E = -124.68323341026812
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1766.75575467        1
[INPUT] 0    0    [1    /1   ]  0.984929560767       1
[INPUT] 0    0    [1    /1   ]  482.584838476        1
[INPUT] 0    0    [1    /1   ]  80.5717910658        1
[INPUT] 0    0    [1    /1   ]  15.4291535084        1
[INPUT] 1    0    [1    /1   ]  23.0180548818        1
[INPUT] 1    0    [1    /1   ]  0.977489857956       1
[INPUT] 1    0    [1    /1   ]  5.13747797952        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1766.7557546698283, 1.0]], [0, [0.984929560767366, 1.0]], [0, [482.5848384757153, 1.0]], [0, [80.57179106584731, 1.0]], [0, [15.429153508445545, 1.0]], [1, [23.01805488183747, 1.0]], [1, [0.9774898579563744, 1.0]], [1, [5.137477979519752, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1766.75575467]
bas 1, expnt(s) = [0.98492956]
bas 2, expnt(s) = [482.58483848]
bas 3, expnt(s) = [80.57179107]
bas 4, expnt(s) = [15.42915351]
bas 5, expnt(s) = [23.01805488]
bas 6, expnt(s) = [0.97748986]
bas 7, expnt(s) = [5.13747798]
CPU time:       241.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.76675575e+03 6.88489641e+02 9.84929561e-01 2.49786466e+00
 4.82584838e+02 2.60132898e+02 8.05717911e+01 6.79441841e+01
 1.54291535e+01 1.96685163e+01 2.30180549e+01 1.47085604e+02
 9.77489858e-01 2.83546779e+00 5.13747798e+00 2.25642997e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.79351635478254
cond(S) = 17.163406526478703
E1 = -181.94985830881402  E_coul = 54.88984159187289
init E= -127.060016716941
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.710484915118441  LUMO = 5.32890710287909
  mo_energy =
[-3.23340924e+01 -1.80568929e+00 -7.10484915e-01 -7.10484915e-01
 -7.10484915e-01  5.32890710e+00  5.32890710e+00  5.32890710e+00
  3.98175223e+01  3.98175223e+01  3.98175223e+01  6.25488332e+01
  6.77429476e+02  3.73202607e+03]
E1 = -184.14900373891487  E_coul = 56.733261915905885
cycle= 1 E= -127.415741823009  delta_E= -0.356  |g|= 0.143  |ddm|= 0.135
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194396
diis-c [-0.0377899  1.       ]
  HOMO = -0.540105971274067  LUMO = 5.54090150129792
  mo_energy =
[-3.20938402e+01 -1.62774635e+00 -5.40105971e-01 -5.40105971e-01
 -5.40105971e-01  5.54090150e+00  5.54090150e+00  5.54090150e+00
  4.00613145e+01  4.00613145e+01  4.00613145e+01  6.28046271e+01
  6.77612623e+02  3.73217036e+03]
E1 = -183.9245677272808  E_coul = 56.50773816329621
cycle= 2 E= -127.416829563985  delta_E= -0.00109  |g|= 0.0269  |ddm|= 0.0336
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.041902
diis-c [-9.95975965e-05  1.73296133e-01  8.26703867e-01]
  HOMO = -0.551847084151177  LUMO = 5.52288747178449
  mo_energy =
[-3.21386601e+01 -1.64083933e+00 -5.51847084e-01 -5.51847084e-01
 -5.51847084e-01  5.52288747e+00  5.52288747e+00  5.52288747e+00
  4.00226381e+01  4.00226381e+01  4.00226381e+01  6.27614474e+01
  6.77562363e+02  3.73211868e+03]
E1 = -183.95895695864712  E_coul = 56.542089775163994
cycle= 3 E= -127.416867183483  delta_E= -3.76e-05  |g|= 0.000566  |ddm|= 0.00493
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000954395
diis-c [-3.57805794e-08 -1.44220864e-03 -2.93399003e-02  1.03078211e+00]
  HOMO = -0.552130919415156  LUMO = 5.52248081148178
  mo_energy =
[-3.21394868e+01 -1.64114286e+00 -5.52130919e-01 -5.52130919e-01
 -5.52130919e-01  5.52248081e+00  5.52248081e+00  5.52248081e+00
  4.00218733e+01  4.00218733e+01  4.00218733e+01  6.27606638e+01
  6.77561674e+02  3.73211806e+03]
E1 = -183.95968745332198  E_coul = 56.54282025323705
cycle= 4 E= -127.416867200085  delta_E= -1.66e-08  |g|= 4.02e-06  |ddm|= 0.000102
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.24552e-06
diis-c [-1.84377918e-12  2.59127764e-05  6.81537023e-04 -2.69570149e-02
  1.02624957e+00]
  HOMO = -0.55213094529504  LUMO = 5.52248055727844
  mo_energy =
[-3.21394876e+01 -1.64114273e+00 -5.52130945e-01 -5.52130945e-01
 -5.52130945e-01  5.52248056e+00  5.52248056e+00  5.52248056e+00
  4.00218726e+01  4.00218726e+01  4.00218726e+01  6.27606632e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.95968783837213  E_coul = 56.54282063828709
cycle= 5 E= -127.416867200085  delta_E= -1.28e-13  |g|= 4.21e-08  |ddm|= 1.3e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.95968783837213  E_coul = 56.54282063828709
  HOMO = -0.55213096634238  LUMO = 5.5224805276186
  mo_energy =
[-3.21394876e+01 -1.64114275e+00 -5.52130966e-01 -5.52130966e-01
 -5.52130966e-01  5.52248053e+00  5.52248053e+00  5.52248053e+00
  4.00218725e+01  4.00218725e+01  4.00218725e+01  6.27606631e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.9596878983642  E_coul = 56.54282069827909
Extra cycle  E= -127.416867200085  delta_E= -5.68e-14  |g|= 7.32e-09  |ddm|= 8.43e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.76675575e+03 9.84929561e-01 4.82584838e+02 8.05717911e+01
 1.54291535e+01 2.30180549e+01 9.77489858e-01 5.13747798e+00]
E = -127.41686720008511
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1766.75575467        1
[INPUT] 0    0    [1    /1   ]  0.984929560767       1
[INPUT] 0    0    [1    /1   ]  482.584838476        1
[INPUT] 0    0    [1    /1   ]  80.5717910658        1
[INPUT] 0    0    [1    /1   ]  15.4291535084        1
[INPUT] 1    0    [1    /1   ]  23.0180548818        1
[INPUT] 1    0    [1    /1   ]  0.977489857956       1
[INPUT] 1    0    [1    /1   ]  5.13747797952        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1766.7557546698283, 1.0]], [0, [0.984929560767366, 1.0]], [0, [482.5848384757153, 1.0]], [0, [80.57179106584731, 1.0]], [0, [15.429153508445545, 1.0]], [1, [23.01805488183747, 1.0]], [1, [0.9774898579563744, 1.0]], [1, [5.137477979519752, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1766.75575467]
bas 1, expnt(s) = [0.98492956]
bas 2, expnt(s) = [482.58483848]
bas 3, expnt(s) = [80.57179107]
bas 4, expnt(s) = [15.42915351]
bas 5, expnt(s) = [23.01805488]
bas 6, expnt(s) = [0.97748986]
bas 7, expnt(s) = [5.13747798]
CPU time:       242.54
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.76675575e+03 6.88489641e+02 9.84929561e-01 2.49786466e+00
 4.82584838e+02 2.60132898e+02 8.05717911e+01 6.79441841e+01
 1.54291535e+01 1.96685163e+01 2.30180549e+01 1.47085604e+02
 9.77489858e-01 2.83546779e+00 5.13747798e+00 2.25642997e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.79351635478254
cond(S) = 17.163406526478703
E1 = -181.94985830881402  E_coul = 54.88984159187289
init E= -127.060016716941
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.710484915118441  LUMO = 5.32890710287909
  mo_energy =
[-3.23340924e+01 -1.80568929e+00 -7.10484915e-01 -7.10484915e-01
 -7.10484915e-01  5.32890710e+00  5.32890710e+00  5.32890710e+00
  3.98175223e+01  3.98175223e+01  3.98175223e+01  6.25488332e+01
  6.77429476e+02  3.73202607e+03]
E1 = -184.14900373891487  E_coul = 56.733261915905885
cycle= 1 E= -127.415741823009  delta_E= -0.356  |g|= 0.143  |ddm|= 0.135
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194396
diis-c [-0.0377899  1.       ]
  HOMO = -0.540105971274067  LUMO = 5.54090150129792
  mo_energy =
[-3.20938402e+01 -1.62774635e+00 -5.40105971e-01 -5.40105971e-01
 -5.40105971e-01  5.54090150e+00  5.54090150e+00  5.54090150e+00
  4.00613145e+01  4.00613145e+01  4.00613145e+01  6.28046271e+01
  6.77612623e+02  3.73217036e+03]
E1 = -183.9245677272808  E_coul = 56.50773816329621
cycle= 2 E= -127.416829563985  delta_E= -0.00109  |g|= 0.0269  |ddm|= 0.0336
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.041902
diis-c [-9.95975965e-05  1.73296133e-01  8.26703867e-01]
  HOMO = -0.551847084151177  LUMO = 5.52288747178449
  mo_energy =
[-3.21386601e+01 -1.64083933e+00 -5.51847084e-01 -5.51847084e-01
 -5.51847084e-01  5.52288747e+00  5.52288747e+00  5.52288747e+00
  4.00226381e+01  4.00226381e+01  4.00226381e+01  6.27614474e+01
  6.77562363e+02  3.73211868e+03]
E1 = -183.95895695864712  E_coul = 56.542089775163994
cycle= 3 E= -127.416867183483  delta_E= -3.76e-05  |g|= 0.000566  |ddm|= 0.00493
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000954395
diis-c [-3.57805794e-08 -1.44220864e-03 -2.93399003e-02  1.03078211e+00]
  HOMO = -0.552130919415156  LUMO = 5.52248081148178
  mo_energy =
[-3.21394868e+01 -1.64114286e+00 -5.52130919e-01 -5.52130919e-01
 -5.52130919e-01  5.52248081e+00  5.52248081e+00  5.52248081e+00
  4.00218733e+01  4.00218733e+01  4.00218733e+01  6.27606638e+01
  6.77561674e+02  3.73211806e+03]
E1 = -183.95968745332198  E_coul = 56.54282025323705
cycle= 4 E= -127.416867200085  delta_E= -1.66e-08  |g|= 4.02e-06  |ddm|= 0.000102
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.24552e-06
diis-c [-1.84377918e-12  2.59127764e-05  6.81537023e-04 -2.69570149e-02
  1.02624957e+00]
  HOMO = -0.55213094529504  LUMO = 5.52248055727844
  mo_energy =
[-3.21394876e+01 -1.64114273e+00 -5.52130945e-01 -5.52130945e-01
 -5.52130945e-01  5.52248056e+00  5.52248056e+00  5.52248056e+00
  4.00218726e+01  4.00218726e+01  4.00218726e+01  6.27606632e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.95968783837213  E_coul = 56.54282063828709
cycle= 5 E= -127.416867200085  delta_E= -1.28e-13  |g|= 4.21e-08  |ddm|= 1.3e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.95968783837213  E_coul = 56.54282063828709
  HOMO = -0.55213096634238  LUMO = 5.5224805276186
  mo_energy =
[-3.21394876e+01 -1.64114275e+00 -5.52130966e-01 -5.52130966e-01
 -5.52130966e-01  5.52248053e+00  5.52248053e+00  5.52248053e+00
  4.00218725e+01  4.00218725e+01  4.00218725e+01  6.27606631e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.9596878983642  E_coul = 56.54282069827909
Extra cycle  E= -127.416867200085  delta_E= -5.68e-14  |g|= 7.32e-09  |ddm|= 8.43e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.163406526478703
E1 = -183.9596878983642  E_coul = 56.54282069827909
init E= -127.416867200085
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.552130962625309  LUMO = 5.52248053336324
  mo_energy =
[-3.21394876e+01 -1.64114275e+00 -5.52130963e-01 -5.52130963e-01
 -5.52130963e-01  5.52248053e+00  5.52248053e+00  5.52248053e+00
  4.00218726e+01  4.00218726e+01  4.00218726e+01  6.27606631e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.95968788726154  E_coul = 56.5428206871765
cycle= 1 E= -127.416867200085  delta_E= 7.11e-14  |g|= 1.33e-09  |ddm|= 1.6e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.95968788726154  E_coul = 56.5428206871765
  HOMO = -0.552130963315491  LUMO = 5.52248053229677
  mo_energy =
[-3.21394876e+01 -1.64114275e+00 -5.52130963e-01 -5.52130963e-01
 -5.52130963e-01  5.52248053e+00  5.52248053e+00  5.52248053e+00
  4.00218726e+01  4.00218726e+01  4.00218726e+01  6.27606631e+01
  6.77561667e+02  3.73211805e+03]
E1 = -183.95968788931293  E_coul = 56.54282068922789
Extra cycle  E= -127.416867200085  delta_E= -1.42e-14  |g|= 2.47e-10  |ddm|= 2.94e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.76675575e+03 9.84929561e-01 4.82584838e+02 8.05717911e+01
 1.54291535e+01 2.30180549e+01 9.77489858e-01 5.13747798e+00]
grad_E = [-8.48224389e-05  2.71552827e-01  6.70252584e-04  1.53114381e-02
 -7.66745288e-02 -5.76003822e-03  5.49769104e-01  1.38523001e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.73071128        1
[INPUT] 0    0    [1    /1   ]  0.976779652124       1
[INPUT] 0    0    [1    /1   ]  1.63700519806e-08      1
[INPUT] 0    0    [1    /1   ]  41.1496978132        1
[INPUT] 0    0    [1    /1   ]  12.0613547552        1
[INPUT] 1    0    [1    /1   ]  24.9982875401        1
[INPUT] 1    0    [1    /1   ]  0.998245853957       1
[INPUT] 1    0    [1    /1   ]  5.79885701424        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.730711283933, 1.0]], [0, [0.9767796521242487, 1.0]], [0, [1.6370051980629796e-08, 1.0]], [0, [41.14969781319346, 1.0]], [0, [12.061354755232284, 1.0]], [1, [24.99828754012594, 1.0]], [1, [0.9982458539567571, 1.0]], [1, [5.798857014238071, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.73071128]
bas 1, expnt(s) = [0.97677965]
bas 2, expnt(s) = [1.6370052e-08]
bas 3, expnt(s) = [41.14969781]
bas 4, expnt(s) = [12.06135476]
bas 5, expnt(s) = [24.99828754]
bas 6, expnt(s) = [0.99824585]
bas 7, expnt(s) = [5.79885701]
CPU time:       245.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973071e+03 6.56966534e+02 9.76779652e-01 2.48234693e+00
 1.63700520e-08 3.65639047e-06 4.11496978e+01 4.10478119e+01
 1.20613548e+01 1.63516692e+01 2.49982875e+01 1.63069304e+02
 9.98245854e-01 2.91092681e+00 5.79885701e+00 2.62519998e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.767934171538979
cond(S) = 10.015109794830165
E1 = -165.6388331073809  E_coul = 54.31258435697737
init E= -111.326248750404
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.722589759406235  LUMO = -4.73566432182095e-05
  mo_energy =
[-2.97082978e+01 -1.69077901e+00 -7.22589759e-01 -7.22589759e-01
 -7.22589759e-01 -4.73566432e-05  5.84125850e+00  5.84125850e+00
  5.84125850e+00  3.26960151e+01  4.43917646e+01  4.43917646e+01
  4.43917646e+01  1.96878043e+03]
E1 = -177.45846850631722  E_coul = 55.996878425253854
cycle= 1 E= -121.461590081063  delta_E= -10.1  |g|= 0.662  |ddm|= 0.24
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.2038
diis-c [-1.44913617  1.        ]
  HOMO = -0.55256460376424  LUMO = 2.45788495676163e-08
  mo_energy =
[-2.95637036e+01 -1.51153297e+00 -5.52564604e-01 -5.52564604e-01
 -5.52564604e-01  2.45788496e-08  6.04835680e+00  6.04835680e+00
  6.04835680e+00  3.29263106e+01  4.45884095e+01  4.45884095e+01
  4.45884095e+01  1.96839790e+03]
E1 = -177.27358219071002  E_coul = 55.811016519397874
cycle= 2 E= -121.462565671312  delta_E= -0.000976  |g|= 0.0237  |ddm|= 0.0286
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0364219
diis-c [-0.00131995  0.00213199  0.99786801]
  HOMO = -0.56405455928519  LUMO = 2.4578674930413e-08
  mo_energy =
[-2.96092006e+01 -1.52422832e+00 -5.64054559e-01 -5.64054559e-01
 -5.64054559e-01  2.45786749e-08  6.02855653e+00  6.02855653e+00
  6.02855653e+00  3.28886417e+01  4.45479871e+01  4.45479871e+01
  4.45479871e+01  1.96834117e+03]
E1 = -177.30753078296073  E_coul = 55.84493878467563
cycle= 3 E= -121.462591998285  delta_E= -2.63e-05  |g|= 0.00437  |ddm|= 0.00479
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0062791
diis-c [-1.71872734e-07 -6.25306832e-04  1.44918689e-01  8.55706618e-01]
  HOMO = -0.56232365843467  LUMO = 2.45787024720256e-08
  mo_energy =
[-2.96020859e+01 -1.52227600e+00 -5.62323658e-01 -5.62323658e-01
 -5.62323658e-01  2.45787025e-08  6.03156205e+00  6.03156205e+00
  6.03156205e+00  3.28945650e+01  4.45542524e+01  4.45542524e+01
  4.45542524e+01  1.96834978e+03]
E1 = -177.30233679140122  E_coul = 55.83974391359703
cycle= 4 E= -121.462592877804  delta_E= -8.8e-07  |g|= 2.74e-05  |ddm|= 0.00074
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.77343e-05
diis-c [-7.07891891e-12  2.60777996e-05 -6.91248385e-03 -3.32674347e-02
  1.04015384e+00]
  HOMO = -0.562333116231258  LUMO = 2.45787018834057e-08
  mo_energy =
[-2.96021253e+01 -1.52228485e+00 -5.62333116e-01 -5.62333116e-01
 -5.62333116e-01  2.45787019e-08  6.03154513e+00  6.03154513e+00
  6.03154513e+00  3.28945365e+01  4.45542166e+01  4.45542166e+01
  4.45542166e+01  1.96834971e+03]
E1 = -177.3023681558164  E_coul = 55.83977527797693
cycle= 5 E= -121.462592877839  delta_E= -3.53e-11  |g|= 2.14e-07  |ddm|= 4.43e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -177.3023681558164  E_coul = 55.83977527797693
  HOMO = -0.562333014511097  LUMO = 2.45787022731321e-08
  mo_energy =
[-2.96021250e+01 -1.52228473e+00 -5.62333015e-01 -5.62333015e-01
 -5.62333015e-01  2.45787023e-08  6.03154529e+00  6.03154529e+00
  6.03154529e+00  3.28945367e+01  4.45542168e+01  4.45542168e+01
  4.45542168e+01  1.96834971e+03]
E1 = -177.30236789846762  E_coul = 55.83977502062815
Extra cycle  E= -121.462592877839  delta_E= -1.42e-14  |g|= 3.29e-08  |ddm|= 3.67e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.65973071e+03 9.76779652e-01 1.63700520e-08 4.11496978e+01
 1.20613548e+01 2.49982875e+01 9.98245854e-01 5.79885701e+00]
E = -121.46259287783947
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1756.05325033        1
[INPUT] 0    0    [1    /1   ]  0.984114569903       1
[INPUT] 0    0    [1    /1   ]  434.32635463         1
[INPUT] 0    0    [1    /1   ]  76.6295817406        1
[INPUT] 0    0    [1    /1   ]  15.0923736331        1
[INPUT] 1    0    [1    /1   ]  23.2160781477        1
[INPUT] 1    0    [1    /1   ]  0.979565457556       1
[INPUT] 1    0    [1    /1   ]  5.20361588299        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1756.0532503312388, 1.0]], [0, [0.9841145699030543, 1.0]], [0, [434.3263546297808, 1.0]], [0, [76.62958174058193, 1.0]], [0, [15.092373633124218, 1.0]], [1, [23.21607814766632, 1.0]], [1, [0.9795654575564127, 1.0]], [1, [5.203615882991584, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1756.05325033]
bas 1, expnt(s) = [0.98411457]
bas 2, expnt(s) = [434.32635463]
bas 3, expnt(s) = [76.62958174]
bas 4, expnt(s) = [15.09237363]
bas 5, expnt(s) = [23.21607815]
bas 6, expnt(s) = [0.97956546]
bas 7, expnt(s) = [5.20361588]
CPU time:       246.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.75605325e+03 6.85359260e+02 9.84114570e-01 2.49631433e+00
 4.34326355e+02 2.40368283e+02 7.66295817e+01 6.54353403e+01
 1.50923736e+01 1.93456437e+01 2.32160781e+01 1.48669015e+02
 9.79565458e-01 2.84299581e+00 5.20361588e+00 2.29279872e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.793000755457598
cond(S) = 16.7261599177881
E1 = -182.00815730086956  E_coul = 54.88092404559989
init E= -127.12723325527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709814214998943  LUMO = 5.38140709293489
  mo_energy =
[-3.23674147e+01 -1.80706184e+00 -7.09814215e-01 -7.09814215e-01
 -7.09814215e-01  5.38140709e+00  5.38140709e+00  5.38140709e+00
  4.02852107e+01  4.02852107e+01  4.02852107e+01  5.91812552e+01
  6.19581003e+02  3.56171646e+03]
E1 = -184.1609752750613  E_coul = 56.68824836193008
cycle= 1 E= -127.472726913131  delta_E= -0.345  |g|= 0.14  |ddm|= 0.141
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.185017
diis-c [-0.03423111  1.        ]
  HOMO = -0.542290105458445  LUMO = 5.58980824153028
  mo_energy =
[-3.21341687e+01 -1.63180900e+00 -5.42290105e-01 -5.42290105e-01
 -5.42290105e-01  5.58980824e+00  5.58980824e+00  5.58980824e+00
  4.05215269e+01  4.05215269e+01  4.05215269e+01  5.94303807e+01
  6.19763332e+02  3.56186105e+03]
E1 = -183.9473798620721  E_coul = 56.47365521633971
cycle= 2 E= -127.473724645732  delta_E= -0.000998  |g|= 0.0259  |ddm|= 0.032
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.040172
diis-c [-1.14358521e-04  1.73309371e-01  8.26690629e-01]
  HOMO = -0.553448376194324  LUMO = 5.57249338785028
  mo_energy =
[-3.21768957e+01 -1.64423121e+00 -5.53448376e-01 -5.53448376e-01
 -5.53448376e-01  5.57249339e+00  5.57249339e+00  5.57249339e+00
  4.04845609e+01  4.04845609e+01  4.04845609e+01  5.93895832e+01
  6.19715496e+02  3.56181172e+03]
E1 = -183.98003337182402  E_coul = 56.506274540197495
cycle= 3 E= -127.473758831627  delta_E= -3.42e-05  |g|= 0.000552  |ddm|= 0.00466
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000936448
diis-c [-4.00764922e-08 -1.44530199e-03 -2.96870280e-02  1.03113233e+00]
  HOMO = -0.553724409783501  LUMO = 5.57209370341086
  mo_energy =
[-3.21776909e+01 -1.64452513e+00 -5.53724410e-01 -5.53724410e-01
 -5.53724410e-01  5.57209370e+00  5.57209370e+00  5.57209370e+00
  4.04838207e+01  4.04838207e+01  4.04838207e+01  5.93888341e+01
  6.19714841e+02  3.56181115e+03]
E1 = -183.9807391732586  E_coul = 56.506980325990554
cycle= 4 E= -127.473758847268  delta_E= -1.56e-08  |g|= 4.36e-06  |ddm|= 9.83e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.50128e-06
diis-c [-2.22820629e-12  2.49935527e-05  6.94721334e-04 -2.70306971e-02
  1.02631098e+00]
  HOMO = -0.553724302838149  LUMO = 5.57209364450711
  mo_energy =
[-3.21776913e+01 -1.64452482e+00 -5.53724303e-01 -5.53724303e-01
 -5.53724303e-01  5.57209364e+00  5.57209364e+00  5.57209364e+00
  4.04838203e+01  4.04838203e+01  4.04838203e+01  5.93888340e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073928346872  E_coul = 56.50698043620042
cycle= 5 E= -127.473758847268  delta_E= -2.56e-13  |g|= 4.51e-08  |ddm|= 1.47e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.98073928346872  E_coul = 56.50698043620042
  HOMO = -0.553724324671639  LUMO = 5.57209361284333
  mo_energy =
[-3.21776914e+01 -1.64452485e+00 -5.53724325e-01 -5.53724325e-01
 -5.53724325e-01  5.57209361e+00  5.57209361e+00  5.57209361e+00
  4.04838202e+01  4.04838202e+01  4.04838202e+01  5.93888339e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073934636147  E_coul = 56.506980499093196
Extra cycle  E= -127.473758847268  delta_E= 2.84e-14  |g|= 7.77e-09  |ddm|= 8.81e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.75605325e+03 9.84114570e-01 4.34326355e+02 7.66295817e+01
 1.50923736e+01 2.32160781e+01 9.79565458e-01 5.20361588e+00]
E = -127.47375884726827
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1756.05325033        1
[INPUT] 0    0    [1    /1   ]  0.984114569903       1
[INPUT] 0    0    [1    /1   ]  434.32635463         1
[INPUT] 0    0    [1    /1   ]  76.6295817406        1
[INPUT] 0    0    [1    /1   ]  15.0923736331        1
[INPUT] 1    0    [1    /1   ]  23.2160781477        1
[INPUT] 1    0    [1    /1   ]  0.979565457556       1
[INPUT] 1    0    [1    /1   ]  5.20361588299        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1756.0532503312388, 1.0]], [0, [0.9841145699030543, 1.0]], [0, [434.3263546297808, 1.0]], [0, [76.62958174058193, 1.0]], [0, [15.092373633124218, 1.0]], [1, [23.21607814766632, 1.0]], [1, [0.9795654575564127, 1.0]], [1, [5.203615882991584, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1756.05325033]
bas 1, expnt(s) = [0.98411457]
bas 2, expnt(s) = [434.32635463]
bas 3, expnt(s) = [76.62958174]
bas 4, expnt(s) = [15.09237363]
bas 5, expnt(s) = [23.21607815]
bas 6, expnt(s) = [0.97956546]
bas 7, expnt(s) = [5.20361588]
CPU time:       247.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.75605325e+03 6.85359260e+02 9.84114570e-01 2.49631433e+00
 4.34326355e+02 2.40368283e+02 7.66295817e+01 6.54353403e+01
 1.50923736e+01 1.93456437e+01 2.32160781e+01 1.48669015e+02
 9.79565458e-01 2.84299581e+00 5.20361588e+00 2.29279872e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.793000755457598
cond(S) = 16.7261599177881
E1 = -182.00815730086956  E_coul = 54.88092404559989
init E= -127.12723325527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.709814214998943  LUMO = 5.38140709293489
  mo_energy =
[-3.23674147e+01 -1.80706184e+00 -7.09814215e-01 -7.09814215e-01
 -7.09814215e-01  5.38140709e+00  5.38140709e+00  5.38140709e+00
  4.02852107e+01  4.02852107e+01  4.02852107e+01  5.91812552e+01
  6.19581003e+02  3.56171646e+03]
E1 = -184.1609752750613  E_coul = 56.68824836193008
cycle= 1 E= -127.472726913131  delta_E= -0.345  |g|= 0.14  |ddm|= 0.141
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.185017
diis-c [-0.03423111  1.        ]
  HOMO = -0.542290105458445  LUMO = 5.58980824153028
  mo_energy =
[-3.21341687e+01 -1.63180900e+00 -5.42290105e-01 -5.42290105e-01
 -5.42290105e-01  5.58980824e+00  5.58980824e+00  5.58980824e+00
  4.05215269e+01  4.05215269e+01  4.05215269e+01  5.94303807e+01
  6.19763332e+02  3.56186105e+03]
E1 = -183.9473798620721  E_coul = 56.47365521633971
cycle= 2 E= -127.473724645732  delta_E= -0.000998  |g|= 0.0259  |ddm|= 0.032
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.040172
diis-c [-1.14358521e-04  1.73309371e-01  8.26690629e-01]
  HOMO = -0.553448376194324  LUMO = 5.57249338785028
  mo_energy =
[-3.21768957e+01 -1.64423121e+00 -5.53448376e-01 -5.53448376e-01
 -5.53448376e-01  5.57249339e+00  5.57249339e+00  5.57249339e+00
  4.04845609e+01  4.04845609e+01  4.04845609e+01  5.93895832e+01
  6.19715496e+02  3.56181172e+03]
E1 = -183.98003337182402  E_coul = 56.506274540197495
cycle= 3 E= -127.473758831627  delta_E= -3.42e-05  |g|= 0.000552  |ddm|= 0.00466
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000936448
diis-c [-4.00764922e-08 -1.44530199e-03 -2.96870280e-02  1.03113233e+00]
  HOMO = -0.553724409783501  LUMO = 5.57209370341086
  mo_energy =
[-3.21776909e+01 -1.64452513e+00 -5.53724410e-01 -5.53724410e-01
 -5.53724410e-01  5.57209370e+00  5.57209370e+00  5.57209370e+00
  4.04838207e+01  4.04838207e+01  4.04838207e+01  5.93888341e+01
  6.19714841e+02  3.56181115e+03]
E1 = -183.9807391732586  E_coul = 56.506980325990554
cycle= 4 E= -127.473758847268  delta_E= -1.56e-08  |g|= 4.36e-06  |ddm|= 9.83e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.50128e-06
diis-c [-2.22820629e-12  2.49935527e-05  6.94721334e-04 -2.70306971e-02
  1.02631098e+00]
  HOMO = -0.553724302838149  LUMO = 5.57209364450711
  mo_energy =
[-3.21776913e+01 -1.64452482e+00 -5.53724303e-01 -5.53724303e-01
 -5.53724303e-01  5.57209364e+00  5.57209364e+00  5.57209364e+00
  4.04838203e+01  4.04838203e+01  4.04838203e+01  5.93888340e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073928346872  E_coul = 56.50698043620042
cycle= 5 E= -127.473758847268  delta_E= -2.56e-13  |g|= 4.51e-08  |ddm|= 1.47e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.98073928346872  E_coul = 56.50698043620042
  HOMO = -0.553724324671639  LUMO = 5.57209361284333
  mo_energy =
[-3.21776914e+01 -1.64452485e+00 -5.53724325e-01 -5.53724325e-01
 -5.53724325e-01  5.57209361e+00  5.57209361e+00  5.57209361e+00
  4.04838202e+01  4.04838202e+01  4.04838202e+01  5.93888339e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073934636147  E_coul = 56.506980499093196
Extra cycle  E= -127.473758847268  delta_E= 2.84e-14  |g|= 7.77e-09  |ddm|= 8.81e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.7261599177881
E1 = -183.98073934636147  E_coul = 56.506980499093196
init E= -127.473758847268
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.553724320782961  LUMO = 5.5720936189217
  mo_energy =
[-3.21776914e+01 -1.64452484e+00 -5.53724321e-01 -5.53724321e-01
 -5.53724321e-01  5.57209362e+00  5.57209362e+00  5.57209362e+00
  4.04838202e+01  4.04838202e+01  4.04838202e+01  5.93888339e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073933475172  E_coul = 56.50698048748335
cycle= 1 E= -127.473758847268  delta_E= -9.95e-14  |g|= 1.41e-09  |ddm|= 1.67e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.98073933475172  E_coul = 56.50698048748335
  HOMO = -0.553724321502945  LUMO = 5.57209361779605
  mo_energy =
[-3.21776914e+01 -1.64452484e+00 -5.53724322e-01 -5.53724322e-01
 -5.53724322e-01  5.57209362e+00  5.57209362e+00  5.57209362e+00
  4.04838202e+01  4.04838202e+01  4.04838202e+01  5.93888339e+01
  6.19714834e+02  3.56181114e+03]
E1 = -183.98073933689227  E_coul = 56.506980489623906
Extra cycle  E= -127.473758847268  delta_E= 1.42e-14  |g|= 2.6e-10  |ddm|= 3.06e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.75605325e+03 9.84114570e-01 4.34326355e+02 7.66295817e+01
 1.50923736e+01 2.32160781e+01 9.79565458e-01 5.20361588e+00]
grad_E = [-8.45598166e-05  2.66369869e-01  6.44828833e-04  1.52912204e-02
 -7.31777797e-02 -6.10452386e-03  4.96063868e-01  1.48529474e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1777.64437965        1
[INPUT] 0    0    [1    /1   ]  0.931442676546       1
[INPUT] 0    0    [1    /1   ]  531.667404898        1
[INPUT] 0    0    [1    /1   ]  1.0530243344e-09      1
[INPUT] 0    0    [1    /1   ]  9.31914738469        1
[INPUT] 1    0    [1    /1   ]  11.1271729054        1
[INPUT] 1    0    [1    /1   ]  0.308020847479       1
[INPUT] 1    0    [1    /1   ]  2.96609265991        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1777.644379650983, 1.0]], [0, [0.9314426765462618, 1.0]], [0, [531.6674048980286, 1.0]], [0, [1.0530243343964685e-09, 1.0]], [0, [9.319147384688968, 1.0]], [1, [11.127172905365516, 1.0]], [1, [0.3080208474790541, 1.0]], [1, [2.966092659912985, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1777.64437965]
bas 1, expnt(s) = [0.93144268]
bas 2, expnt(s) = [531.6674049]
bas 3, expnt(s) = [1.05302433e-09]
bas 4, expnt(s) = [9.31914738]
bas 5, expnt(s) = [11.12717291]
bas 6, expnt(s) = [0.30802085]
bas 7, expnt(s) = [2.96609266]
CPU time:       251.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.77764438e+03 6.91669599e+02 9.31442677e-01 2.39542249e+00
 5.31667405e+02 2.79733868e+02 1.05302433e-09 4.67028980e-07
 9.31914738e+00 1.34755705e+01 1.11271729e+01 5.92878141e+01
 3.08020847e-01 6.69436722e-01 2.96609266e+00 1.13557359e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.347409462182505
cond(S) = 8.1312569186539
E1 = -38.07593550634863  E_coul = 45.14190103551521
init E= 7.06596552916658
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -1.3225462314863  LUMO = -3.37916755364736e-05
  mo_energy =
[-2.24529506e+01 -1.60005415e+00 -1.32254623e+00 -1.32254623e+00
 -1.32254623e+00 -3.37916755e-05  9.34524666e-01  9.34524666e-01
  9.34524666e-01  1.57799994e+01  1.57799994e+01  1.57799994e+01
  4.39307987e+02  3.62151110e+03]
E1 = -153.03115212462367  E_coul = 51.74814497634199
cycle= 1 E= -101.283007148282  delta_E= -108  |g|= 1.68  |ddm|= 1.59
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.3641
diis-c [-5.58899109  1.        ]
  HOMO = -0.694125106352086  LUMO = 1.5800402021177e-09
  mo_energy =
[-2.17802867e+01 -1.01128869e+00 -6.94125106e-01 -6.94125106e-01
 -6.94125106e-01  1.58004020e-09  1.49942613e+00  1.49942613e+00
  1.49942613e+00  1.67876956e+01  1.67876956e+01  1.67876956e+01
  4.39347259e+02  3.61905572e+03]
E1 = -147.83591648179512  E_coul = 46.494288960638485
cycle= 2 E= -101.341627521157  delta_E= -0.0586  |g|= 0.767  |ddm|= 0.568
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.36632
diis-c [-0.37890709  0.34827988  0.65172012]
  HOMO = -0.94263317403145  LUMO = 1.57987109855247e-09
  mo_energy =
[-2.24491825e+01 -1.28332352e+00 -9.42633174e-01 -9.42633174e-01
 -9.42633174e-01  1.57987110e-09  1.29393776e+00  1.29393776e+00
  1.29393776e+00  1.62338251e+01  1.62338251e+01  1.62338251e+01
  4.38564898e+02  3.61826241e+03]
E1 = -150.39914628029518  E_coul = 48.99224537984787
cycle= 3 E= -101.406900900447  delta_E= -0.0653  |g|= 0.107  |ddm|= 0.267
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.190195
diis-c [-1.67462132e-05 -5.04541125e-03  1.16957792e-01  8.88087619e-01]
  HOMO = -0.914572240118398  LUMO = 1.57988926298838e-09
  mo_energy =
[-2.23672145e+01 -1.25184059e+00 -9.14572240e-01 -9.14572240e-01
 -9.14572240e-01  1.57988926e-09  1.31942092e+00  1.31942092e+00
  1.31942092e+00  1.63004296e+01  1.63004296e+01  1.63004296e+01
  4.38661121e+02  3.61835611e+03]
E1 = -150.0935384188323  E_coul = 48.68535828245678
cycle= 4 E= -101.408180136376  delta_E= -0.00128  |g|= 0.000616  |ddm|= 0.0323
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00109745
diis-c [-1.55114219e-09  2.18867147e-06  1.96995932e-03  8.45614600e-03
  9.89571706e-01]
  HOMO = -0.914576851211213  LUMO = 1.57988978333873e-09
  mo_energy =
[-2.23669010e+01 -1.25166700e+00 -9.14576851e-01 -9.14576851e-01
 -9.14576851e-01  1.57988978e-09  1.31976451e+00  1.31976451e+00
  1.31976451e+00  1.63007644e+01  1.63007644e+01  1.63007644e+01
  4.38661354e+02  3.61835634e+03]
E1 = -150.09168591903423  E_coul = 48.683505737382525
cycle= 5 E= -101.408180181652  delta_E= -4.53e-08  |g|= 8.14e-06  |ddm|= 0.000198
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.38824e-05
diis-c [-1.16400396e-12 -3.38056581e-06 -1.94953001e-05  2.03562695e-04
 -4.14069132e-02  1.04122623e+00]
  HOMO = -0.914582974039135  LUMO = 1.57988978334007e-09
  mo_energy =
[-2.23669082e+01 -1.25167052e+00 -9.14582974e-01 -9.14582974e-01
 -9.14582974e-01  1.57988978e-09  1.31976582e+00  1.31976582e+00
  1.31976582e+00  1.63007586e+01  1.63007586e+01  1.63007586e+01
  4.38661346e+02  3.61835633e+03]
E1 = -150.09170492139702  E_coul = 48.68352473973994
cycle= 6 E= -101.408180181657  delta_E= -5.37e-12  |g|= 5.23e-08  |ddm|= 1.87e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -150.09170492139702  E_coul = 48.68352473973994
  HOMO = -0.914582964651337  LUMO = 1.57988978332825e-09
  mo_energy =
[-2.23669083e+01 -1.25167055e+00 -9.14582965e-01 -9.14582965e-01
 -9.14582965e-01  1.57988978e-09  1.31976576e+00  1.31976576e+00
  1.31976576e+00  1.63007586e+01  1.63007586e+01  1.63007586e+01
  4.38661346e+02  3.61835633e+03]
E1 = -150.09170519882338  E_coul = 48.68352501716626
Extra cycle  E= -101.408180181657  delta_E= -2.84e-14  |g|= 4.11e-08  |ddm|= 3e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.77764438e+03 9.31442677e-01 5.31667405e+02 1.05302433e-09
 9.31914738e+00 1.11271729e+01 3.08020847e-01 2.96609266e+00]
E = -101.40818018165712
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1758.21236326        1
[INPUT] 0    0    [1    /1   ]  0.978847380567       1
[INPUT] 0    0    [1    /1   ]  444.060459657        1
[INPUT] 0    0    [1    /1   ]  68.9666235666        1
[INPUT] 0    0    [1    /1   ]  14.5150510083        1
[INPUT] 1    0    [1    /1   ]  22.0071876234        1
[INPUT] 1    0    [1    /1   ]  0.912410996549       1
[INPUT] 1    0    [1    /1   ]  4.97986356068        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1758.2123632632133, 1.0]], [0, [0.9788473805673751, 1.0]], [0, [444.0604596566056, 1.0]], [0, [68.96662356662904, 1.0]], [0, [14.515051008280693, 1.0]], [1, [22.007187623436238, 1.0]], [1, [0.9124109965486769, 1.0]], [1, [4.979863560683724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1758.21236326]
bas 1, expnt(s) = [0.97884738]
bas 2, expnt(s) = [444.06045966]
bas 3, expnt(s) = [68.96662357]
bas 4, expnt(s) = [14.51505101]
bas 5, expnt(s) = [22.00718762]
bas 6, expnt(s) = [0.912411]
bas 7, expnt(s) = [4.97986356]
CPU time:       251.88
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.75821236e+03 6.85991163e+02 9.78847381e-01 2.48628701e+00
 4.44060460e+02 2.44397412e+02 6.89666236e+01 6.04636343e+01
 1.45150510e+01 1.87879307e+01 2.20071876e+01 1.39056110e+02
 9.12410997e-01 2.60149222e+00 4.97986356e+00 2.17023217e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826988395133892
cond(S) = 15.867080579845602
E1 = -182.09972823836432  E_coul = 54.87458981509078
init E= -127.225138423274
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.71743404058252  LUMO = 4.99987536352924
  mo_energy =
[-3.23809115e+01 -1.80638869e+00 -7.17434041e-01 -7.17434041e-01
 -7.17434041e-01  4.99987536e+00  4.99987536e+00  4.99987536e+00
  3.78549678e+01  3.78549678e+01  3.78549678e+01  5.29146160e+01
  6.02449313e+02  3.56503791e+03]
E1 = -183.5373032701742  E_coul = 55.990901308107354
cycle= 1 E= -127.546401962067  delta_E= -0.321  |g|= 0.0909  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110414
diis-c [-0.01219124  1.        ]
  HOMO = -0.605442328056467  LUMO = 5.13316180168846
  mo_energy =
[-3.22700682e+01 -1.69154063e+00 -6.05442328e-01 -6.05442328e-01
 -6.05442328e-01  5.13316180e+00  5.13316180e+00  5.13316180e+00
  3.79781618e+01  3.79781618e+01  3.79781618e+01  5.30469694e+01
  6.02515902e+02  3.56505188e+03]
E1 = -183.41845830369775  E_coul = 55.87175429359326
cycle= 2 E= -127.546704010104  delta_E= -0.000302  |g|= 0.0147  |ddm|= 0.0181
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0231544
diis-c [-1.98562147e-04  1.43669017e-01  8.56330983e-01]
  HOMO = -0.61195007757124  LUMO = 5.12336532679087
  mo_energy =
[-3.22942348e+01 -1.69884107e+00 -6.11950078e-01 -6.11950078e-01
 -6.11950078e-01  5.12336533e+00  5.12336533e+00  5.12336533e+00
  3.79573495e+01  3.79573495e+01  3.79573495e+01  5.30243410e+01
  6.02489339e+02  3.56502442e+03]
E1 = -183.43924245877494  E_coul = 55.89252670970028
cycle= 3 E= -127.546715749075  delta_E= -1.17e-05  |g|= 0.000521  |ddm|= 0.0029
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000714397
diis-c [-3.62356154e-08 -3.25630736e-03  1.62211477e-02  9.87035160e-01]
  HOMO = -0.611794482873825  LUMO = 5.12362154616086
  mo_energy =
[-3.22933877e+01 -1.69865193e+00 -6.11794483e-01 -6.11794483e-01
 -6.11794483e-01  5.12362155e+00  5.12362155e+00  5.12362155e+00
  3.79580188e+01  3.79580188e+01  3.79580188e+01  5.30251446e+01
  6.02490467e+02  3.56502561e+03]
E1 = -183.4386288482232  E_coul = 55.89191308760885
cycle= 4 E= -127.546715760614  delta_E= -1.15e-08  |g|= 7.36e-06  |ddm|= 8.91e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.48337e-06
diis-c [-6.93102053e-12  4.77557336e-05 -2.39585252e-05 -1.82691013e-02
  1.01824530e+00]
  HOMO = -0.611791747281014  LUMO = 5.12362536506366
  mo_energy =
[-3.22933804e+01 -1.69864865e+00 -6.11791747e-01 -6.11791747e-01
 -6.11791747e-01  5.12362537e+00  5.12362537e+00  5.12362537e+00
  3.79580255e+01  3.79580255e+01  3.79580255e+01  5.30251519e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.43862158725355  E_coul = 55.89190582663762
cycle= 5 E= -127.546715760616  delta_E= -1.59e-12  |g|= 1.57e-07  |ddm|= 1.05e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.43862158725355  E_coul = 55.89190582663762
  HOMO = -0.611791829985909  LUMO = 5.12362524189527
  mo_energy =
[-3.22933807e+01 -1.69864874e+00 -6.11791830e-01 -6.11791830e-01
 -6.11791830e-01  5.12362524e+00  5.12362524e+00  5.12362524e+00
  3.79580252e+01  3.79580252e+01  3.79580252e+01  5.30251517e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.43862184363937  E_coul = 55.89190608302344
Extra cycle  E= -127.546715760616  delta_E= 1.42e-14  |g|= 3.24e-08  |ddm|= 3.52e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.75821236e+03 9.78847381e-01 4.44060460e+02 6.89666236e+01
 1.45150510e+01 2.20071876e+01 9.12410997e-01 4.97986356e+00]
E = -127.54671576061592
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1758.21236326        1
[INPUT] 0    0    [1    /1   ]  0.978847380567       1
[INPUT] 0    0    [1    /1   ]  444.060459657        1
[INPUT] 0    0    [1    /1   ]  68.9666235666        1
[INPUT] 0    0    [1    /1   ]  14.5150510083        1
[INPUT] 1    0    [1    /1   ]  22.0071876234        1
[INPUT] 1    0    [1    /1   ]  0.912410996549       1
[INPUT] 1    0    [1    /1   ]  4.97986356068        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1758.2123632632133, 1.0]], [0, [0.9788473805673751, 1.0]], [0, [444.0604596566056, 1.0]], [0, [68.96662356662904, 1.0]], [0, [14.515051008280693, 1.0]], [1, [22.007187623436238, 1.0]], [1, [0.9124109965486769, 1.0]], [1, [4.979863560683724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1758.21236326]
bas 1, expnt(s) = [0.97884738]
bas 2, expnt(s) = [444.06045966]
bas 3, expnt(s) = [68.96662357]
bas 4, expnt(s) = [14.51505101]
bas 5, expnt(s) = [22.00718762]
bas 6, expnt(s) = [0.912411]
bas 7, expnt(s) = [4.97986356]
CPU time:       252.74
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.75821236e+03 6.85991163e+02 9.78847381e-01 2.48628701e+00
 4.44060460e+02 2.44397412e+02 6.89666236e+01 6.04636343e+01
 1.45150510e+01 1.87879307e+01 2.20071876e+01 1.39056110e+02
 9.12410997e-01 2.60149222e+00 4.97986356e+00 2.17023217e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826988395133892
cond(S) = 15.867080579845602
E1 = -182.09972823836432  E_coul = 54.87458981509078
init E= -127.225138423274
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.71743404058252  LUMO = 4.99987536352924
  mo_energy =
[-3.23809115e+01 -1.80638869e+00 -7.17434041e-01 -7.17434041e-01
 -7.17434041e-01  4.99987536e+00  4.99987536e+00  4.99987536e+00
  3.78549678e+01  3.78549678e+01  3.78549678e+01  5.29146160e+01
  6.02449313e+02  3.56503791e+03]
E1 = -183.5373032701742  E_coul = 55.990901308107354
cycle= 1 E= -127.546401962067  delta_E= -0.321  |g|= 0.0909  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110414
diis-c [-0.01219124  1.        ]
  HOMO = -0.605442328056467  LUMO = 5.13316180168846
  mo_energy =
[-3.22700682e+01 -1.69154063e+00 -6.05442328e-01 -6.05442328e-01
 -6.05442328e-01  5.13316180e+00  5.13316180e+00  5.13316180e+00
  3.79781618e+01  3.79781618e+01  3.79781618e+01  5.30469694e+01
  6.02515902e+02  3.56505188e+03]
E1 = -183.41845830369775  E_coul = 55.87175429359326
cycle= 2 E= -127.546704010104  delta_E= -0.000302  |g|= 0.0147  |ddm|= 0.0181
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0231544
diis-c [-1.98562147e-04  1.43669017e-01  8.56330983e-01]
  HOMO = -0.61195007757124  LUMO = 5.12336532679087
  mo_energy =
[-3.22942348e+01 -1.69884107e+00 -6.11950078e-01 -6.11950078e-01
 -6.11950078e-01  5.12336533e+00  5.12336533e+00  5.12336533e+00
  3.79573495e+01  3.79573495e+01  3.79573495e+01  5.30243410e+01
  6.02489339e+02  3.56502442e+03]
E1 = -183.43924245877494  E_coul = 55.89252670970028
cycle= 3 E= -127.546715749075  delta_E= -1.17e-05  |g|= 0.000521  |ddm|= 0.0029
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000714397
diis-c [-3.62356154e-08 -3.25630736e-03  1.62211477e-02  9.87035160e-01]
  HOMO = -0.611794482873825  LUMO = 5.12362154616086
  mo_energy =
[-3.22933877e+01 -1.69865193e+00 -6.11794483e-01 -6.11794483e-01
 -6.11794483e-01  5.12362155e+00  5.12362155e+00  5.12362155e+00
  3.79580188e+01  3.79580188e+01  3.79580188e+01  5.30251446e+01
  6.02490467e+02  3.56502561e+03]
E1 = -183.4386288482232  E_coul = 55.89191308760885
cycle= 4 E= -127.546715760614  delta_E= -1.15e-08  |g|= 7.36e-06  |ddm|= 8.91e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.48337e-06
diis-c [-6.93102053e-12  4.77557336e-05 -2.39585252e-05 -1.82691013e-02
  1.01824530e+00]
  HOMO = -0.611791747281014  LUMO = 5.12362536506366
  mo_energy =
[-3.22933804e+01 -1.69864865e+00 -6.11791747e-01 -6.11791747e-01
 -6.11791747e-01  5.12362537e+00  5.12362537e+00  5.12362537e+00
  3.79580255e+01  3.79580255e+01  3.79580255e+01  5.30251519e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.43862158725355  E_coul = 55.89190582663762
cycle= 5 E= -127.546715760616  delta_E= -1.59e-12  |g|= 1.57e-07  |ddm|= 1.05e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.43862158725355  E_coul = 55.89190582663762
  HOMO = -0.611791829985909  LUMO = 5.12362524189527
  mo_energy =
[-3.22933807e+01 -1.69864874e+00 -6.11791830e-01 -6.11791830e-01
 -6.11791830e-01  5.12362524e+00  5.12362524e+00  5.12362524e+00
  3.79580252e+01  3.79580252e+01  3.79580252e+01  5.30251517e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.43862184363937  E_coul = 55.89190608302344
Extra cycle  E= -127.546715760616  delta_E= 1.42e-14  |g|= 3.24e-08  |ddm|= 3.52e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 15.867080579845602
E1 = -183.43862184363937  E_coul = 55.89190608302344
init E= -127.546715760616
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.61179181410467  LUMO = 5.1236252660602
  mo_energy =
[-3.22933807e+01 -1.69864872e+00 -6.11791814e-01 -6.11791814e-01
 -6.11791814e-01  5.12362527e+00  5.12362527e+00  5.12362527e+00
  3.79580253e+01  3.79580253e+01  3.79580253e+01  5.30251517e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.4386217913677  E_coul = 55.89190603075168
cycle= 1 E= -127.546715760616  delta_E= -9.95e-14  |g|= 6.5e-09  |ddm|= 7.34e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.4386217913677  E_coul = 55.89190603075168
  HOMO = -0.611791817352971  LUMO = 5.1236252611179
  mo_energy =
[-3.22933807e+01 -1.69864873e+00 -6.11791817e-01 -6.11791817e-01
 -6.11791817e-01  5.12362526e+00  5.12362526e+00  5.12362526e+00
  3.79580253e+01  3.79580253e+01  3.79580253e+01  5.30251517e+01
  6.02490466e+02  3.56502560e+03]
E1 = -183.43862180203124  E_coul = 55.8919060414153
Extra cycle  E= -127.546715760616  delta_E= 8.53e-14  |g|= 1.33e-09  |ddm|= 1.49e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.75821236e+03 9.78847381e-01 4.44060460e+02 6.89666236e+01
 1.45150510e+01 2.20071876e+01 9.12410997e-01 4.97986356e+00]
grad_E = [-1.02620337e-04  2.08476008e-01  1.55824701e-03 -5.85929389e-04
 -2.37117936e-02 -8.07629559e-03  6.28328263e-02  1.96186713e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.7318348         1
[INPUT] 0    0    [1    /1   ]  0.964543325673       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  32.0788968696        1
[INPUT] 0    0    [1    /1   ]  11.0250638356        1
[INPUT] 1    0    [1    /1   ]  22.985702945         1
[INPUT] 1    0    [1    /1   ]  0.939392281351       1
[INPUT] 1    0    [1    /1   ]  5.40117304051        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7318347990617, 1.0]], [0, [0.9645433256726162, 1.0]], [0, [1e-09, 1.0]], [0, [32.07889686956286, 1.0]], [0, [11.025063835639244, 1.0]], [1, [22.98570294501843, 1.0]], [1, [0.9393922813509189, 1.0]], [1, [5.401173040506828, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.7318348]
bas 1, expnt(s) = [0.96454333]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [32.07889687]
bas 4, expnt(s) = [11.02506384]
bas 5, expnt(s) = [22.98570295]
bas 6, expnt(s) = [0.93939228]
bas 7, expnt(s) = [5.40117304]
CPU time:       256.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973183e+03 6.56966867e+02 9.64543326e-01 2.45898755e+00
 1.00000000e-09 4.49277867e-07 3.20788969e+01 3.40548987e+01
 1.10250638e+01 1.52862465e+01 2.29857029e+01 1.46827238e+02
 9.39392281e-01 2.69800734e+00 5.40117304e+00 2.40211893e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.782172563079577
cond(S) = 13.140843270911436
E1 = -156.52914001772305  E_coul = 53.882412677408006
init E= -102.646727340315
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.755749240925554  LUMO = -1.09906493946018e-05
  mo_energy =
[-2.85450755e+01 -1.63587100e+00 -7.55749241e-01 -7.55749241e-01
 -7.55749241e-01 -1.09906494e-05  5.32185207e+00  5.32185207e+00
  5.32185207e+00  2.64159962e+01  4.02444153e+01  4.02444153e+01
  4.02444153e+01  1.94277925e+03]
E1 = -174.1414319964123  E_coul = 55.324447498203696
cycle= 1 E= -118.816984498209  delta_E= -16.2  |g|= 0.802  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.48418
diis-c [-2.20278133  1.        ]
  HOMO = -0.601313189272572  LUMO = 1.50037357917898e-09
  mo_energy =
[-2.84700051e+01 -1.47297703e+00 -6.01313189e-01 -6.01313189e-01
 -6.01313189e-01  1.50037358e-09  5.50285526e+00  5.50285526e+00
  5.50285526e+00  2.66273194e+01  4.04044270e+01  4.04044270e+01
  4.04044270e+01  1.94221997e+03]
E1 = -173.94727831860723  E_coul = 55.12918283240452
cycle= 2 E= -118.818095486203  delta_E= -0.00111  |g|= 0.0255  |ddm|= 0.0315
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0411334
diis-c [-1.69167123e-03  3.58575885e-04  9.99641424e-01]
  HOMO = -0.613555377261934  LUMO = 1.5003711704152e-09
  mo_energy =
[-2.85175249e+01 -1.48625135e+00 -6.13555377e-01 -6.13555377e-01
 -6.13555377e-01  1.50037117e-09  5.48276595e+00  5.48276595e+00
  5.48276595e+00  2.65906999e+01  4.03626173e+01  4.03626173e+01
  4.03626173e+01  1.94215726e+03]
E1 = -173.98800307736104  E_coul = 55.16987408800061
cycle= 3 E= -118.81812898936  delta_E= -3.35e-05  |g|= 0.00547  |ddm|= 0.00566
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00781046
diis-c [-7.11285372e-07 -7.15593485e-04  1.57484424e-01  8.43231170e-01]
  HOMO = -0.611452330256597  LUMO = 1.50037142219178e-09
  mo_energy =
[-2.85091597e+01 -1.48387144e+00 -6.11452330e-01 -6.11452330e-01
 -6.11452330e-01  1.50037142e-09  5.48621057e+00  5.48621057e+00
  5.48621057e+00  2.65973085e+01  4.03698888e+01  4.03698888e+01
  4.03698888e+01  1.94216715e+03]
E1 = -173.98103187844214  E_coul = 55.16290143270117
cycle= 4 E= -118.818130445741  delta_E= -1.46e-06  |g|= 7.11e-05  |ddm|= 0.000992
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000123097
diis-c [-1.18224375e-11  3.29769456e-05 -9.06924856e-03 -3.25281022e-02
  1.04156437e+00]
  HOMO = -0.611475241682048  LUMO = 1.50037022721338e-09
  mo_energy =
[-2.85092546e+01 -1.48389199e+00 -6.11475242e-01 -6.11475242e-01
 -6.11475242e-01  1.50037023e-09  5.48617110e+00  5.48617110e+00
  5.48617110e+00  2.65972460e+01  4.03698037e+01  4.03698037e+01
  4.03698037e+01  1.94216697e+03]
E1 = -173.9811183345393  E_coul = 55.16298788854379
cycle= 5 E= -118.818130445996  delta_E= -2.55e-10  |g|= 3.37e-07  |ddm|= 1.22e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -173.9811183345393  E_coul = 55.16298788854379
  HOMO = -0.611475095413995  LUMO = 1.50037071296668e-09
  mo_energy =
[-2.85092542e+01 -1.48389182e+00 -6.11475095e-01 -6.11475095e-01
 -6.11475095e-01  1.50037071e-09  5.48617130e+00  5.48617130e+00
  5.48617130e+00  2.65972465e+01  4.03698041e+01  4.03698041e+01
  4.03698041e+01  1.94216697e+03]
E1 = -173.98111795338852  E_coul = 55.16298750739304
Extra cycle  E= -118.818130445995  delta_E= 2.84e-14  |g|= 4.96e-08  |ddm|= 5.89e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65973183e+03 9.64543326e-01 1.00000000e-09 3.20788969e+01
 1.10250638e+01 2.29857029e+01 9.39392281e-01 5.40117304e+00]
E = -118.81813044599548
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1748.36431042        1
[INPUT] 0    0    [1    /1   ]  0.977416975078       1
[INPUT] 0    0    [1    /1   ]  399.654413691        1
[INPUT] 0    0    [1    /1   ]  65.2778508969        1
[INPUT] 0    0    [1    /1   ]  14.166052291         1
[INPUT] 1    0    [1    /1   ]  22.1050391556        1
[INPUT] 1    0    [1    /1   ]  0.915109125029       1
[INPUT] 1    0    [1    /1   ]  5.02199450867        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1748.3643104167982, 1.0]], [0, [0.9774169750778992, 1.0]], [0, [399.654413691045, 1.0]], [0, [65.27785089692242, 1.0]], [0, [14.166052291016548, 1.0]], [1, [22.105039155594458, 1.0]], [1, [0.9151091250289011, 1.0]], [1, [5.021994508666035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1748.36431042]
bas 1, expnt(s) = [0.97741698]
bas 2, expnt(s) = [399.65441369]
bas 3, expnt(s) = [65.2778509]
bas 4, expnt(s) = [14.16605229]
bas 5, expnt(s) = [22.10503916]
bas 6, expnt(s) = [0.91510913]
bas 7, expnt(s) = [5.02199451]
CPU time:       257.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.74836431e+03 6.83107374e+02 9.77416975e-01 2.48356158e+00
 3.99654414e+02 2.25828362e+02 6.52778509e+01 5.80215612e+01
 1.41660523e+01 1.84481004e+01 2.21050392e+01 1.39829403e+02
 9.15109125e-01 2.61111200e+00 5.02199451e+00 2.19320731e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826131924871454
cond(S) = 15.716722322922086
E1 = -182.15431775791387  E_coul = 54.866082786978836
init E= -127.288234970935
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716989635506862  LUMO = 5.03738956780835
  mo_energy =
[-3.24110462e+01 -1.80781314e+00 -7.16989636e-01 -7.16989636e-01
 -7.16989636e-01  5.03738957e+00  5.03738957e+00  5.03738957e+00
  3.81180647e+01  3.81180647e+01  3.81180647e+01  4.98438798e+01
  5.48531742e+02  3.40610469e+03]
E1 = -183.57072569536842  E_coul = 55.97230808054108
cycle= 1 E= -127.598417614827  delta_E= -0.31  |g|= 0.0895  |ddm|= 0.163
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10553
diis-c [-0.01113651  1.        ]
  HOMO = -0.605847502080832  LUMO = 5.16948779763311
  mo_energy =
[-3.23021653e+01 -1.69351952e+00 -6.05847502e-01 -6.05847502e-01
 -6.05847502e-01  5.16948780e+00  5.16948780e+00  5.16948780e+00
  3.82386613e+01  3.82386613e+01  3.82386613e+01  4.99747501e+01
  5.48602281e+02  3.40612327e+03]
E1 = -183.4571619235978  E_coul = 55.85846231914452
cycle= 2 E= -127.598699604453  delta_E= -0.000282  |g|= 0.0142  |ddm|= 0.0173
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222535
diis-c [-1.94240123e-04  1.42256561e-01  8.57743439e-01]
  HOMO = -0.612077601932375  LUMO = 5.16004334518754
  mo_energy =
[-3.23253098e+01 -1.70048767e+00 -6.12077602e-01 -6.12077602e-01
 -6.12077602e-01  5.16004335e+00  5.16004335e+00  5.16004335e+00
  3.82186979e+01  3.82186979e+01  3.82186979e+01  4.99533124e+01
  5.48576954e+02  3.40609701e+03]
E1 = -183.4770255183762  E_coul = 55.87831516611229
cycle= 3 E= -127.598710352264  delta_E= -1.07e-05  |g|= 0.000527  |ddm|= 0.00276
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000721137
diis-c [-3.83224853e-08 -3.35526080e-03  1.75292504e-02  9.85826010e-01]
  HOMO = -0.611922835050218  LUMO = 5.16030042669936
  mo_energy =
[-3.23244613e+01 -1.70029940e+00 -6.11922835e-01 -6.11922835e-01
 -6.11922835e-01  5.16030043e+00  5.16030043e+00  5.16030043e+00
  3.82193693e+01  3.82193693e+01  3.82193693e+01  4.99541063e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.47641444324864  E_coul = 55.87770407939764
cycle= 4 E= -127.598710363851  delta_E= -1.16e-08  |g|= 8.4e-06  |ddm|= 8.87e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.93998e-06
diis-c [-8.32451639e-12  4.43801131e-05  5.91252582e-05 -1.70100084e-02
  1.01690650e+00]
  HOMO = -0.611919603264829  LUMO = 5.16030499653335
  mo_energy =
[-3.23244525e+01 -1.70029555e+00 -6.11919603e-01 -6.11919603e-01
 -6.11919603e-01  5.16030500e+00  5.16030500e+00  5.16030500e+00
  3.82193774e+01  3.82193774e+01  3.82193774e+01  4.99541153e+01
  5.48578088e+02  3.40609822e+03]
E1 = -183.47640581327175  E_coul = 55.87769544941852
cycle= 5 E= -127.598710363853  delta_E= -2.22e-12  |g|= 1.63e-07  |ddm|= 1.24e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.47640581327175  E_coul = 55.87769544941852
  HOMO = -0.611919687671128  LUMO = 5.16030486927427
  mo_energy =
[-3.23244528e+01 -1.70029564e+00 -6.11919688e-01 -6.11919688e-01
 -6.11919688e-01  5.16030487e+00  5.16030487e+00  5.16030487e+00
  3.82193772e+01  3.82193772e+01  3.82193772e+01  4.99541150e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.47640607809245  E_coul = 55.877695714239266
Extra cycle  E= -127.598710363853  delta_E= 4.26e-14  |g|= 3.38e-08  |ddm|= 3.63e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.74836431e+03 9.77416975e-01 3.99654414e+02 6.52778509e+01
 1.41660523e+01 2.21050392e+01 9.15109125e-01 5.02199451e+00]
E = -127.59871036385319
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1748.36431042        1
[INPUT] 0    0    [1    /1   ]  0.977416975078       1
[INPUT] 0    0    [1    /1   ]  399.654413691        1
[INPUT] 0    0    [1    /1   ]  65.2778508969        1
[INPUT] 0    0    [1    /1   ]  14.166052291         1
[INPUT] 1    0    [1    /1   ]  22.1050391556        1
[INPUT] 1    0    [1    /1   ]  0.915109125029       1
[INPUT] 1    0    [1    /1   ]  5.02199450867        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1748.3643104167982, 1.0]], [0, [0.9774169750778992, 1.0]], [0, [399.654413691045, 1.0]], [0, [65.27785089692242, 1.0]], [0, [14.166052291016548, 1.0]], [1, [22.105039155594458, 1.0]], [1, [0.9151091250289011, 1.0]], [1, [5.021994508666035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1748.36431042]
bas 1, expnt(s) = [0.97741698]
bas 2, expnt(s) = [399.65441369]
bas 3, expnt(s) = [65.2778509]
bas 4, expnt(s) = [14.16605229]
bas 5, expnt(s) = [22.10503916]
bas 6, expnt(s) = [0.91510913]
bas 7, expnt(s) = [5.02199451]
CPU time:       257.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.74836431e+03 6.83107374e+02 9.77416975e-01 2.48356158e+00
 3.99654414e+02 2.25828362e+02 6.52778509e+01 5.80215612e+01
 1.41660523e+01 1.84481004e+01 2.21050392e+01 1.39829403e+02
 9.15109125e-01 2.61111200e+00 5.02199451e+00 2.19320731e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826131924871454
cond(S) = 15.716722322922086
E1 = -182.15431775791387  E_coul = 54.866082786978836
init E= -127.288234970935
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716989635506862  LUMO = 5.03738956780835
  mo_energy =
[-3.24110462e+01 -1.80781314e+00 -7.16989636e-01 -7.16989636e-01
 -7.16989636e-01  5.03738957e+00  5.03738957e+00  5.03738957e+00
  3.81180647e+01  3.81180647e+01  3.81180647e+01  4.98438798e+01
  5.48531742e+02  3.40610469e+03]
E1 = -183.57072569536842  E_coul = 55.97230808054108
cycle= 1 E= -127.598417614827  delta_E= -0.31  |g|= 0.0895  |ddm|= 0.163
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10553
diis-c [-0.01113651  1.        ]
  HOMO = -0.605847502080832  LUMO = 5.16948779763311
  mo_energy =
[-3.23021653e+01 -1.69351952e+00 -6.05847502e-01 -6.05847502e-01
 -6.05847502e-01  5.16948780e+00  5.16948780e+00  5.16948780e+00
  3.82386613e+01  3.82386613e+01  3.82386613e+01  4.99747501e+01
  5.48602281e+02  3.40612327e+03]
E1 = -183.4571619235978  E_coul = 55.85846231914452
cycle= 2 E= -127.598699604453  delta_E= -0.000282  |g|= 0.0142  |ddm|= 0.0173
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222535
diis-c [-1.94240123e-04  1.42256561e-01  8.57743439e-01]
  HOMO = -0.612077601932375  LUMO = 5.16004334518754
  mo_energy =
[-3.23253098e+01 -1.70048767e+00 -6.12077602e-01 -6.12077602e-01
 -6.12077602e-01  5.16004335e+00  5.16004335e+00  5.16004335e+00
  3.82186979e+01  3.82186979e+01  3.82186979e+01  4.99533124e+01
  5.48576954e+02  3.40609701e+03]
E1 = -183.4770255183762  E_coul = 55.87831516611229
cycle= 3 E= -127.598710352264  delta_E= -1.07e-05  |g|= 0.000527  |ddm|= 0.00276
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000721137
diis-c [-3.83224853e-08 -3.35526080e-03  1.75292504e-02  9.85826010e-01]
  HOMO = -0.611922835050218  LUMO = 5.16030042669936
  mo_energy =
[-3.23244613e+01 -1.70029940e+00 -6.11922835e-01 -6.11922835e-01
 -6.11922835e-01  5.16030043e+00  5.16030043e+00  5.16030043e+00
  3.82193693e+01  3.82193693e+01  3.82193693e+01  4.99541063e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.47641444324864  E_coul = 55.87770407939764
cycle= 4 E= -127.598710363851  delta_E= -1.16e-08  |g|= 8.4e-06  |ddm|= 8.87e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.93998e-06
diis-c [-8.32451639e-12  4.43801131e-05  5.91252582e-05 -1.70100084e-02
  1.01690650e+00]
  HOMO = -0.611919603264829  LUMO = 5.16030499653335
  mo_energy =
[-3.23244525e+01 -1.70029555e+00 -6.11919603e-01 -6.11919603e-01
 -6.11919603e-01  5.16030500e+00  5.16030500e+00  5.16030500e+00
  3.82193774e+01  3.82193774e+01  3.82193774e+01  4.99541153e+01
  5.48578088e+02  3.40609822e+03]
E1 = -183.47640581327175  E_coul = 55.87769544941852
cycle= 5 E= -127.598710363853  delta_E= -2.22e-12  |g|= 1.63e-07  |ddm|= 1.24e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.47640581327175  E_coul = 55.87769544941852
  HOMO = -0.611919687671128  LUMO = 5.16030486927427
  mo_energy =
[-3.23244528e+01 -1.70029564e+00 -6.11919688e-01 -6.11919688e-01
 -6.11919688e-01  5.16030487e+00  5.16030487e+00  5.16030487e+00
  3.82193772e+01  3.82193772e+01  3.82193772e+01  4.99541150e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.47640607809245  E_coul = 55.877695714239266
Extra cycle  E= -127.598710363853  delta_E= 4.26e-14  |g|= 3.38e-08  |ddm|= 3.63e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 15.716722322922086
E1 = -183.47640607809245  E_coul = 55.877695714239266
init E= -127.598710363853
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.611919671288817  LUMO = 5.1603048943855
  mo_energy =
[-3.23244527e+01 -1.70029562e+00 -6.11919671e-01 -6.11919671e-01
 -6.11919671e-01  5.16030489e+00  5.16030489e+00  5.16030489e+00
  3.82193772e+01  3.82193772e+01  3.82193772e+01  4.99541151e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.47640602423016  E_coul = 55.87769566037699
cycle= 1 E= -127.598710363853  delta_E= 1.42e-14  |g|= 6.75e-09  |ddm|= 7.56e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.47640602423016  E_coul = 55.87769566037699
  HOMO = -0.611919674630446  LUMO = 5.16030488926103
  mo_energy =
[-3.23244527e+01 -1.70029563e+00 -6.11919675e-01 -6.11919675e-01
 -6.11919675e-01  5.16030489e+00  5.16030489e+00  5.16030489e+00
  3.82193772e+01  3.82193772e+01  3.82193772e+01  4.99541150e+01
  5.48578087e+02  3.40609822e+03]
E1 = -183.4764060352033  E_coul = 55.87769567135
Extra cycle  E= -127.598710363853  delta_E= -1.28e-13  |g|= 1.38e-09  |ddm|= 1.53e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.74836431e+03 9.77416975e-01 3.99654414e+02 6.52778509e+01
 1.41660523e+01 2.21050392e+01 9.15109125e-01 5.02199451e+00]
grad_E = [-1.04571776e-04  2.02168237e-01  1.67646345e-03 -1.63760580e-03
 -1.84208453e-02 -8.31314790e-03  3.71546053e-02  2.01392639e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.73189267        1
[INPUT] 0    0    [1    /1   ]  0.965597921238       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  32.5805659422        1
[INPUT] 0    0    [1    /1   ]  11.0024966422        1
[INPUT] 1    0    [1    /1   ]  22.9499817431        1
[INPUT] 1    0    [1    /1   ]  0.940395137829       1
[INPUT] 1    0    [1    /1   ]  5.38830718414        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7318926688617, 1.0]], [0, [0.9655979212377169, 1.0]], [0, [1e-09, 1.0]], [0, [32.58056594220026, 1.0]], [0, [11.002496642210044, 1.0]], [1, [22.949981743124074, 1.0]], [1, [0.9403951378287719, 1.0]], [1, [5.388307184138884, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.73189267]
bas 1, expnt(s) = [0.96559792]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [32.58056594]
bas 4, expnt(s) = [11.00249664]
bas 5, expnt(s) = [22.94998174]
bas 6, expnt(s) = [0.94039514]
bas 7, expnt(s) = [5.38830718]
CPU time:       261.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973189e+03 6.56966884e+02 9.65597921e-01 2.46100370e+00
 1.00000000e-09 4.49277867e-07 3.25805659e+01 3.44535512e+01
 1.10024966e+01 1.52627734e+01 2.29499817e+01 1.46542070e+02
 9.40395138e-01 2.70160817e+00 5.38830718e+00 2.39496861e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.783193500320053
cond(S) = 12.76291171610157
E1 = -157.22770233967123  E_coul = 53.923758903319374
init E= -103.303943436352
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.753658191988122  LUMO = -1.09391301978564e-05
  mo_energy =
[-2.86315693e+01 -1.63881169e+00 -7.53658192e-01 -7.53658192e-01
 -7.53658192e-01 -1.09391302e-05  5.31986680e+00  5.31986680e+00
  5.31986680e+00  2.65902696e+01  4.01725873e+01  4.01725873e+01
  4.01725873e+01  1.94400448e+03]
E1 = -174.38421051738996  E_coul = 55.36090954799338
cycle= 1 E= -119.023300969397  delta_E= -15.7  |g|= 0.793  |ddm|= 0.313
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.46463
diis-c [-2.14513783  1.        ]
  HOMO = -0.599838192718932  LUMO = 1.5003716011535e-09
  mo_energy =
[-2.85558261e+01 -1.47648806e+00 -5.99838193e-01 -5.99838193e-01
 -5.99838193e-01  1.50037160e-09  5.50009435e+00  5.50009435e+00
  5.50009435e+00  2.67997660e+01  4.03312134e+01  4.03312134e+01
  4.03312134e+01  1.94344586e+03]
E1 = -174.1931902177428  E_coul = 55.16881185915689
cycle= 2 E= -119.024378358586  delta_E= -0.00108  |g|= 0.025  |ddm|= 0.0309
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0404181
diis-c [-1.63339847e-03  3.20889650e-04  9.99679110e-01]
  HOMO = -0.611890574334791  LUMO = 1.50036871154076e-09
  mo_energy =
[-2.86025535e+01 -1.48954745e+00 -6.11890574e-01 -6.11890574e-01
 -6.11890574e-01  1.50036871e-09  5.48037160e+00  5.48037160e+00
  5.48037160e+00  2.67636591e+01  4.02901287e+01  4.02901287e+01
  4.02901287e+01  1.94338423e+03]
E1 = -174.23319816739894  E_coul = 55.20878748536946
cycle= 3 E= -119.024410682029  delta_E= -3.23e-05  |g|= 0.00537  |ddm|= 0.00556
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00766935
diis-c [-6.93563663e-07 -7.14707069e-04  1.57398336e-01  8.43316371e-01]
  HOMO = -0.609823180551947  LUMO = 1.50037002235292e-09
  mo_energy =
[-2.85943334e+01 -1.48721024e+00 -6.09823181e-01 -6.09823181e-01
 -6.09823181e-01  1.50037002e-09  5.48374935e+00  5.48374935e+00
  5.48374935e+00  2.67701682e+01  4.02972682e+01  4.02972682e+01
  4.02972682e+01  1.94339394e+03]
E1 = -174.22635492182962  E_coul = 55.201942837391236
cycle= 4 E= -119.024412084438  delta_E= -1.4e-06  |g|= 6.93e-05  |ddm|= 0.000973
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000120161
diis-c [-1.14225869e-11  3.28504104e-05 -9.01992481e-03 -3.24023041e-02
  1.04138938e+00]
  HOMO = -0.609845607780648  LUMO = 1.5003700347827e-09
  mo_energy =
[-2.85944263e+01 -1.48723038e+00 -6.09845608e-01 -6.09845608e-01
 -6.09845608e-01  1.50037003e-09  5.48371083e+00  5.48371083e+00
  5.48371083e+00  2.67701069e+01  4.02971851e+01  4.02971851e+01
  4.02971851e+01  1.94339377e+03]
E1 = -174.22643932453462  E_coul = 55.20202723985416
cycle= 5 E= -119.02441208468  delta_E= -2.42e-10  |g|= 3.31e-07  |ddm|= 1.19e-05
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -174.22643932453462  E_coul = 55.20202723985416
  HOMO = -0.609845462211873  LUMO = 1.50036934092387e-09
  mo_energy =
[-2.85944258e+01 -1.48723021e+00 -6.09845462e-01 -6.09845462e-01
 -6.09845462e-01  1.50036934e-09  5.48371103e+00  5.48371103e+00
  5.48371103e+00  2.67701073e+01  4.02971855e+01  4.02971855e+01
  4.02971855e+01  1.94339377e+03]
E1 = -174.2264389433081  E_coul = 55.202026858627775
Extra cycle  E= -119.02441208468  delta_E= 1.42e-13  |g|= 4.96e-08  |ddm|= 5.82e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.65973189e+03 9.65597921e-01 1.00000000e-09 3.25805659e+01
 1.10024966e+01 2.29499817e+01 9.40395138e-01 5.38830718e+00]
E = -119.02441208468032
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1739.50106864        1
[INPUT] 0    0    [1    /1   ]  0.976235069694       1
[INPUT] 0    0    [1    /1   ]  359.688972322        1
[INPUT] 0    0    [1    /1   ]  62.0081224015        1
[INPUT] 0    0    [1    /1   ]  13.8496967261        1
[INPUT] 1    0    [1    /1   ]  22.1895334143        1
[INPUT] 1    0    [1    /1   ]  0.917637726309       1
[INPUT] 1    0    [1    /1   ]  5.05862577621        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1739.5010686420046, 1.0]], [0, [0.976235069693881, 1.0]], [0, [359.6889723220405, 1.0]], [0, [62.0081224014502, 1.0]], [0, [13.849696726135898, 1.0]], [1, [22.18953341434742, 1.0]], [1, [0.9176377263088882, 1.0]], [1, [5.0586257762133195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1739.50106864]
bas 1, expnt(s) = [0.97623507]
bas 2, expnt(s) = [359.68897232]
bas 3, expnt(s) = [62.0081224]
bas 4, expnt(s) = [13.84969673]
bas 5, expnt(s) = [22.18953341]
bas 6, expnt(s) = [0.91763773]
bas 7, expnt(s) = [5.05862578]
CPU time:       262.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.73950107e+03 6.80508492e+02 9.76235070e-01 2.48130887e+00
 3.59688972e+02 2.08670168e+02 6.20081224e+01 5.58279216e+01
 1.38496967e+01 1.81382433e+01 2.21895334e+01 1.40497826e+02
 9.17637726e-01 2.62013379e+00 5.05862578e+00 2.21322253e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825278671230548
cond(S) = 15.881943466686096
E1 = -182.20908457022028  E_coul = 54.859662686668
init E= -127.349421883552
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716523324259235  LUMO = 5.07085916932832
  mo_energy =
[-3.24389209e+01 -1.80909426e+00 -7.16523324e-01 -7.16523324e-01
 -7.16523324e-01  5.07085917e+00  5.07085917e+00  5.07085917e+00
  3.83468415e+01  3.83468415e+01  3.83468415e+01  4.71712346e+01
  4.99751874e+02  3.26119114e+03]
E1 = -183.60651442008415  E_coul = 55.958980383371035
cycle= 1 E= -127.647534036713  delta_E= -0.298  |g|= 0.0873  |ddm|= 0.168
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100422
diis-c [-0.01008455  1.        ]
  HOMO = -0.605968934209444  LUMO = 5.2020682765259
  mo_energy =
[-3.23314474e+01 -1.69508479e+00 -6.05968934e-01 -6.05968934e-01
 -6.05968934e-01  5.20206828e+00  5.20206828e+00  5.20206828e+00
  3.84653563e+01  3.84653563e+01  3.84653563e+01  4.73010012e+01
  4.99826634e+02  3.26121568e+03]
E1 = -183.49736861773354  E_coul = 55.84956866777156
cycle= 2 E= -127.647799949962  delta_E= -0.000266  |g|= 0.0137  |ddm|= 0.0167
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0215106
diis-c [-1.87814087e-04  1.42853393e-01  8.57146607e-01]
  HOMO = -0.611953667455926  LUMO = 5.19294045155117
  mo_energy =
[-3.23536892e+01 -1.70175911e+00 -6.11953667e-01 -6.11953667e-01
 -6.11953667e-01  5.19294045e+00  5.19294045e+00  5.19294045e+00
  3.84461452e+01  3.84461452e+01  3.84461452e+01  4.72806157e+01
  4.99802392e+02  3.26119047e+03]
E1 = -183.51642549550786  E_coul = 55.86861558862682
cycle= 3 E= -127.647809906881  delta_E= -9.96e-06  |g|= 0.000507  |ddm|= 0.00265
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683919
diis-c [-4.09379099e-08 -3.47585965e-03  1.65117837e-02  9.86964076e-01]
  HOMO = -0.611812489634825  LUMO = 5.19317856997987
  mo_energy =
[-3.23528882e+01 -1.70158575e+00 -6.11812490e-01 -6.11812490e-01
 -6.11812490e-01  5.19317857e+00  5.19317857e+00  5.19317857e+00
  3.84467763e+01  3.84467763e+01  3.84467763e+01  4.72813556e+01
  4.99803470e+02  3.26119164e+03]
E1 = -183.5158580100231  E_coul = 55.86804809293293
cycle= 4 E= -127.64780991709  delta_E= -1.02e-08  |g|= 9.5e-06  |ddm|= 8.26e-05
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=1.15074e-05
diis-c [-9.35077404e-12  4.18581104e-05  1.75056536e-04 -1.63641701e-02
  1.01614726e+00]
  HOMO = -0.611808753361473  LUMO = 5.19318390642559
  mo_energy =
[-3.23528777e+01 -1.70158131e+00 -6.11808753e-01 -6.11808753e-01
 -6.11808753e-01  5.19318391e+00  5.19318391e+00  5.19318391e+00
  3.84467859e+01  3.84467859e+01  3.84467859e+01  4.72813663e+01
  4.99803473e+02  3.26119163e+03]
E1 = -183.51584798521478  E_coul = 55.86803806812172
cycle= 5 E= -127.647809917093  delta_E= -2.88e-12  |g|= 1.67e-07  |ddm|= 1.43e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.51584798521478  E_coul = 55.86803806812172
  HOMO = -0.611808838050267  LUMO = 5.19318377734045
  mo_energy =
[-3.23528780e+01 -1.70158140e+00 -6.11808838e-01 -6.11808838e-01
 -6.11808838e-01  5.19318378e+00  5.19318378e+00  5.19318378e+00
  3.84467857e+01  3.84467857e+01  3.84467857e+01  4.72813660e+01
  4.99803472e+02  3.26119163e+03]
E1 = -183.5158482542057  E_coul = 55.86803833711269
Extra cycle  E= -127.647809917093  delta_E= 4.26e-14  |g|= 3.47e-08  |ddm|= 3.68e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.73950107e+03 9.76235070e-01 3.59688972e+02 6.20081224e+01
 1.38496967e+01 2.21895334e+01 9.17637726e-01 5.05862578e+00]
E = -127.64780991709301
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1739.50106864        1
[INPUT] 0    0    [1    /1   ]  0.976235069694       1
[INPUT] 0    0    [1    /1   ]  359.688972322        1
[INPUT] 0    0    [1    /1   ]  62.0081224015        1
[INPUT] 0    0    [1    /1   ]  13.8496967261        1
[INPUT] 1    0    [1    /1   ]  22.1895334143        1
[INPUT] 1    0    [1    /1   ]  0.917637726309       1
[INPUT] 1    0    [1    /1   ]  5.05862577621        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1739.5010686420046, 1.0]], [0, [0.976235069693881, 1.0]], [0, [359.6889723220405, 1.0]], [0, [62.0081224014502, 1.0]], [0, [13.849696726135898, 1.0]], [1, [22.18953341434742, 1.0]], [1, [0.9176377263088882, 1.0]], [1, [5.0586257762133195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1739.50106864]
bas 1, expnt(s) = [0.97623507]
bas 2, expnt(s) = [359.68897232]
bas 3, expnt(s) = [62.0081224]
bas 4, expnt(s) = [13.84969673]
bas 5, expnt(s) = [22.18953341]
bas 6, expnt(s) = [0.91763773]
bas 7, expnt(s) = [5.05862578]
CPU time:       263.24
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.73950107e+03 6.80508492e+02 9.76235070e-01 2.48130887e+00
 3.59688972e+02 2.08670168e+02 6.20081224e+01 5.58279216e+01
 1.38496967e+01 1.81382433e+01 2.21895334e+01 1.40497826e+02
 9.17637726e-01 2.62013379e+00 5.05862578e+00 2.21322253e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825278671230548
cond(S) = 15.881943466686096
E1 = -182.20908457022028  E_coul = 54.859662686668
init E= -127.349421883552
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716523324259235  LUMO = 5.07085916932832
  mo_energy =
[-3.24389209e+01 -1.80909426e+00 -7.16523324e-01 -7.16523324e-01
 -7.16523324e-01  5.07085917e+00  5.07085917e+00  5.07085917e+00
  3.83468415e+01  3.83468415e+01  3.83468415e+01  4.71712346e+01
  4.99751874e+02  3.26119114e+03]
E1 = -183.60651442008415  E_coul = 55.958980383371035
cycle= 1 E= -127.647534036713  delta_E= -0.298  |g|= 0.0873  |ddm|= 0.168
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100422
diis-c [-0.01008455  1.        ]
  HOMO = -0.605968934209444  LUMO = 5.2020682765259
  mo_energy =
[-3.23314474e+01 -1.69508479e+00 -6.05968934e-01 -6.05968934e-01
 -6.05968934e-01  5.20206828e+00  5.20206828e+00  5.20206828e+00
  3.84653563e+01  3.84653563e+01  3.84653563e+01  4.73010012e+01
  4.99826634e+02  3.26121568e+03]
E1 = -183.49736861773354  E_coul = 55.84956866777156
cycle= 2 E= -127.647799949962  delta_E= -0.000266  |g|= 0.0137  |ddm|= 0.0167
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0215106
diis-c [-1.87814087e-04  1.42853393e-01  8.57146607e-01]
  HOMO = -0.611953667455926  LUMO = 5.19294045155117
  mo_energy =
[-3.23536892e+01 -1.70175911e+00 -6.11953667e-01 -6.11953667e-01
 -6.11953667e-01  5.19294045e+00  5.19294045e+00  5.19294045e+00
  3.84461452e+01  3.84461452e+01  3.84461452e+01  4.72806157e+01
  4.99802392e+02  3.26119047e+03]
E1 = -183.51642549550786  E_coul = 55.86861558862682
cycle= 3 E= -127.647809906881  delta_E= -9.96e-06  |g|= 0.000507  |ddm|= 0.00265
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683919
diis-c [-4.09379099e-08 -3.47585965e-03  1.65117837e-02  9.86964076e-01]
  HOMO = -0.611812489634825  LUMO = 5.19317856997987
  mo_energy =
[-3.23528882e+01 -1.70158575e+00 -6.11812490e-01 -6.11812490e-01
 -6.11812490e-01  5.19317857e+00  5.19317857e+00  5.19317857e+00
  3.84467763e+01  3.84467763e+01  3.84467763e+01  4.72813556e+01
  4.99803470e+02  3.26119164e+03]
E1 = -183.5158580100231  E_coul = 55.86804809293293
cycle= 4 E= -127.64780991709  delta_E= -1.02e-08  |g|= 9.5e-06  |ddm|= 8.26e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.15074e-05
diis-c [-9.35077404e-12  4.18581104e-05  1.75056536e-04 -1.63641701e-02
  1.01614726e+00]
  HOMO = -0.611808753361473  LUMO = 5.19318390642559
  mo_energy =
[-3.23528777e+01 -1.70158131e+00 -6.11808753e-01 -6.11808753e-01
 -6.11808753e-01  5.19318391e+00  5.19318391e+00  5.19318391e+00
  3.84467859e+01  3.84467859e+01  3.84467859e+01  4.72813663e+01
  4.99803473e+02  3.26119163e+03]
E1 = -183.51584798521478  E_coul = 55.86803806812172
cycle= 5 E= -127.647809917093  delta_E= -2.88e-12  |g|= 1.67e-07  |ddm|= 1.43e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.51584798521478  E_coul = 55.86803806812172
  HOMO = -0.611808838050267  LUMO = 5.19318377734045
  mo_energy =
[-3.23528780e+01 -1.70158140e+00 -6.11808838e-01 -6.11808838e-01
 -6.11808838e-01  5.19318378e+00  5.19318378e+00  5.19318378e+00
  3.84467857e+01  3.84467857e+01  3.84467857e+01  4.72813660e+01
  4.99803472e+02  3.26119163e+03]
E1 = -183.5158482542057  E_coul = 55.86803833711269
Extra cycle  E= -127.647809917093  delta_E= 4.26e-14  |g|= 3.47e-08  |ddm|= 3.68e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 15.881943466686096
E1 = -183.5158482542057  E_coul = 55.86803833711269
init E= -127.647809917093
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.611808821427124  LUMO = 5.19318380298103
  mo_energy =
[-3.23528779e+01 -1.70158138e+00 -6.11808821e-01 -6.11808821e-01
 -6.11808821e-01  5.19318380e+00  5.19318380e+00  5.19318380e+00
  3.84467857e+01  3.84467857e+01  3.84467857e+01  4.72813660e+01
  4.99803472e+02  3.26119163e+03]
E1 = -183.51584819961326  E_coul = 55.86803828252033
cycle= 1 E= -127.647809917093  delta_E= 8.53e-14  |g|= 6.89e-09  |ddm|= 7.66e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.51584819961326  E_coul = 55.86803828252033
  HOMO = -0.611808824809095  LUMO = 5.1931837977591
  mo_energy =
[-3.23528780e+01 -1.70158138e+00 -6.11808825e-01 -6.11808825e-01
 -6.11808825e-01  5.19318380e+00  5.19318380e+00  5.19318380e+00
  3.84467857e+01  3.84467857e+01  3.84467857e+01  4.72813660e+01
  4.99803472e+02  3.26119163e+03]
E1 = -183.51584821072382  E_coul = 55.86803829363082
Extra cycle  E= -127.647809917093  delta_E= -7.11e-14  |g|= 1.41e-09  |ddm|= 1.55e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.73950107e+03 9.76235070e-01 3.59688972e+02 6.20081224e+01
 1.38496967e+01 2.21895334e+01 9.17637726e-01 5.05862578e+00]
grad_E = [-9.84772956e-05  1.97031240e-01  1.67703121e-03 -1.63280073e-03
 -1.51483919e-02 -8.50407496e-03  1.71513523e-02  2.05526811e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.73193859        1
[INPUT] 0    0    [1    /1   ]  0.966040625099       1
[INPUT] 0    0    [1    /1   ]  2.63047240878e-07      1
[INPUT] 0    0    [1    /1   ]  32.3481302915        1
[INPUT] 0    0    [1    /1   ]  10.9486844635        1
[INPUT] 1    0    [1    /1   ]  22.9149499585        1
[INPUT] 1    0    [1    /1   ]  0.938623960411       1
[INPUT] 1    0    [1    /1   ]  5.37642516813        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7319385912513, 1.0]], [0, [0.9660406250985183, 1.0]], [0, [2.630472408782225e-07, 1.0]], [0, [32.34813029154982, 1.0]], [0, [10.948684463537356, 1.0]], [1, [22.91494995848086, 1.0]], [1, [0.9386239604107153, 1.0]], [1, [5.376425168129887, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.73193859]
bas 1, expnt(s) = [0.96604063]
bas 2, expnt(s) = [2.63047241e-07]
bas 3, expnt(s) = [32.34813029]
bas 4, expnt(s) = [10.94868446]
bas 5, expnt(s) = [22.91494996]
bas 6, expnt(s) = [0.93862396]
bas 7, expnt(s) = [5.37642517]
CPU time:       266.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973194e+03 6.56966898e+02 9.66040625e-01 2.46184988e+00
 2.63047241e-07 2.93454205e-05 3.23481303e+01 3.42690379e+01
 1.09486845e+01 1.52067526e+01 2.29149500e+01 1.46262514e+02
 9.38623960e-01 2.69524928e+00 5.37642517e+00 2.38836886e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.783457917070493
cond(S) = 12.831983543003831
E1 = -156.95335926850458  E_coul = 53.911449010568866
init E= -103.041910257936
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.754596753254032  LUMO = -0.000176830436494483
  mo_energy =
[-2.85991067e+01 -1.63683485e+00 -7.54596753e-01 -7.54596753e-01
 -7.54596753e-01 -1.76830436e-04  5.30425440e+00  5.30425440e+00
  5.30425440e+00  2.63846836e+01  4.00819618e+01  4.00819618e+01
  4.00819618e+01  1.94329551e+03]
E1 = -174.2917348619806  E_coul = 55.34330941201986
cycle= 1 E= -118.948425449961  delta_E= -15.9  |g|= 0.796  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.47163
diis-c [-2.16570954  1.        ]
  HOMO = -0.601047362600172  LUMO = 3.96146258832194e-07
  mo_energy =
[-2.85252466e+01 -1.47480657e+00 -6.01047363e-01 -6.01047363e-01
 -6.01047363e-01  3.96146259e-07  5.48391389e+00  5.48391389e+00
  5.48391389e+00  2.65938985e+01  4.02396557e+01  4.02396557e+01
  4.02396557e+01  1.94273119e+03]
E1 = -174.10023624141547  E_coul = 55.15072609365961
cycle= 2 E= -118.949510147756  delta_E= -0.00108  |g|= 0.0251  |ddm|= 0.0311
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0406206
diis-c [-1.64985140e-03  2.89497292e-04  9.99710503e-01]
  HOMO = -0.613135352777628  LUMO = 3.96134081077352e-07
  mo_energy =
[-2.85720813e+01 -1.48789735e+00 -6.13135353e-01 -6.13135353e-01
 -6.13135353e-01  3.96134081e-07  5.46416291e+00  5.46416291e+00
  5.46416291e+00  2.65578082e+01  4.01984742e+01  4.01984742e+01
  4.01984742e+01  1.94266927e+03]
E1 = -174.14051825011816  E_coul = 55.19097546078768
cycle= 3 E= -118.94954278933  delta_E= -3.26e-05  |g|= 0.00541  |ddm|= 0.00559
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00772874
diis-c [-7.24760854e-07 -7.18486800e-04  1.57753194e-01  8.42965292e-01]
  HOMO = -0.611053258539561  LUMO = 3.96136307921583e-07
  mo_energy =
[-2.85638118e+01 -1.48554279e+00 -6.11053259e-01 -6.11053259e-01
 -6.11053259e-01  3.96136308e-07  5.46755826e+00  5.46755826e+00
  5.46755826e+00  2.65643433e+01  4.02056562e+01  4.02056562e+01
  4.02056562e+01  1.94267904e+03]
E1 = -174.13360440876914  E_coul = 55.1840601919175
cycle= 4 E= -118.949544216852  delta_E= -1.43e-06  |g|= 7.14e-05  |ddm|= 0.000983
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000123696
diis-c [-1.16651323e-11  3.30898602e-05 -9.09207654e-03 -3.23048762e-02
  1.04136386e+00]
  HOMO = -0.611076307416883  LUMO = 3.96136290459913e-07
  mo_energy =
[-2.85639071e+01 -1.48556347e+00 -6.11076307e-01 -6.11076307e-01
 -6.11076307e-01  3.96136290e-07  5.46751873e+00  5.46751873e+00
  5.46751873e+00  2.65642805e+01  4.02055708e+01  4.02055708e+01
  4.02055708e+01  1.94267886e+03]
E1 = -174.13369149451233  E_coul = 55.18414727740363
cycle= 5 E= -118.949544217109  delta_E= -2.57e-10  |g|= 3.37e-07  |ddm|= 1.22e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -174.13369149451233  E_coul = 55.18414727740363
  HOMO = -0.611076160858792  LUMO = 3.96136291112782e-07
  mo_energy =
[-2.85639067e+01 -1.48556330e+00 -6.11076161e-01 -6.11076161e-01
 -6.11076161e-01  3.96136291e-07  5.46751893e+00  5.46751893e+00
  5.46751893e+00  2.65642809e+01  4.02055712e+01  4.02055712e+01
  4.02055712e+01  1.94267886e+03]
E1 = -174.13369111166278  E_coul = 55.18414689455416
Extra cycle  E= -118.949544217109  delta_E= 7.11e-14  |g|= 4.98e-08  |ddm|= 5.89e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.65973194e+03 9.66040625e-01 2.63047241e-07 3.23481303e+01
 1.09486845e+01 2.29149500e+01 9.38623960e-01 5.37642517e+00]
E = -118.94954421710862
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1731.52415564        1
[INPUT] 0    0    [1    /1   ]  0.975215625234       1
[INPUT] 0    0    [1    /1   ]  323.720075116        1
[INPUT] 0    0    [1    /1   ]  59.0421231905        1
[INPUT] 0    0    [1    /1   ]  13.5595954999        1
[INPUT] 1    0    [1    /1   ]  22.2620750688        1
[INPUT] 1    0    [1    /1   ]  0.919736349719       1
[INPUT] 1    0    [1    /1   ]  5.0904057154         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1731.5241556369292, 1.0]], [0, [0.9752156252343447, 1.0]], [0, [323.7200751161412, 1.0]], [0, [59.04212319046016, 1.0]], [0, [13.559595499876044, 1.0]], [1, [22.262075068760762, 1.0]], [1, [0.9197363497190709, 1.0]], [1, [5.090405715404977, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1731.52415564]
bas 1, expnt(s) = [0.97521563]
bas 2, expnt(s) = [323.72007512]
bas 3, expnt(s) = [59.04212319]
bas 4, expnt(s) = [13.5595955]
bas 5, expnt(s) = [22.26207507]
bas 6, expnt(s) = [0.91973635]
bas 7, expnt(s) = [5.09040572]
CPU time:       267.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.73152416e+03 6.78166668e+02 9.75215625e-01 2.47936526e+00
 3.23720075e+02 1.92815636e+02 5.90421232e+01 5.38129127e+01
 1.35595955e+01 1.78525425e+01 2.22620751e+01 1.41072202e+02
 9.19736350e-01 2.62762619e+00 5.09040572e+00 2.23061639e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.824568801656625
cond(S) = 16.310616378499027
E1 = -182.25873752661815  E_coul = 54.854751762197274
init E= -127.403985764421
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716068965174884  LUMO = 5.09972926821009
  mo_energy =
[-3.24634853e+01 -1.81020230e+00 -7.16068965e-01 -7.16068965e-01
 -7.16068965e-01  5.09972927e+00  5.09972927e+00  5.09972927e+00
  3.85443027e+01  3.85443027e+01  3.85443027e+01  4.47988952e+01
  4.55545386e+02  3.12902801e+03]
E1 = -183.63734008990835  E_coul = 55.946075910364556
cycle= 1 E= -127.691264179544  delta_E= -0.287  |g|= 0.0846  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0955401
diis-c [-0.00912792  1.        ]
  HOMO = -0.606171425477896  LUMO = 5.22990268699168
  mo_energy =
[-3.23576740e+01 -1.69655791e+00 -6.06171425e-01 -6.06171425e-01
 -6.06171425e-01  5.22990269e+00  5.22990269e+00  5.22990269e+00
  3.86605147e+01  3.86605147e+01  3.86605147e+01  4.49272066e+01
  4.55623578e+02  3.12905829e+03]
E1 = -183.53255607021828  E_coul = 55.84104164491719
cycle= 2 E= -127.691514425301  delta_E= -0.00025  |g|= 0.0132  |ddm|= 0.0162
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0207774
diis-c [-1.83230878e-04  1.42858495e-01  8.57141505e-01]
  HOMO = -0.611918838569813  LUMO = 5.22109027932307
  mo_energy =
[-3.23790363e+01 -1.70294902e+00 -6.11918839e-01 -6.11918839e-01
 -6.11918839e-01  5.22109028e+00  5.22109028e+00  5.22109028e+00
  3.86420386e+01  3.86420386e+01  3.86420386e+01  4.49078302e+01
  4.55600379e+02  3.12903409e+03]
E1 = -183.5508464953666  E_coul = 55.859322860356286
cycle= 3 E= -127.69152363501  delta_E= -9.21e-06  |g|= 0.000499  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000663106
diis-c [-4.41648073e-08 -3.58486971e-03  1.63306354e-02  9.87254234e-01]
  HOMO = -0.611785739407884  LUMO = 5.22131726852885
  mo_energy =
[-3.23782637e+01 -1.70278415e+00 -6.11785739e-01 -6.11785739e-01
 -6.11785739e-01  5.22131727e+00  5.22131727e+00  5.22131727e+00
  3.86426457e+01  3.86426457e+01  3.86426457e+01  4.49085348e+01
  4.55601418e+02  3.12903523e+03]
E1 = -183.550305393832  E_coul = 55.858781749353184
cycle= 4 E= -127.691523644479  delta_E= -9.47e-09  |g|= 1.05e-05  |ddm|= 7.9e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.28648e-05
diis-c [-1.00180386e-11  4.13716951e-05  2.50774274e-04 -1.66304665e-02
  1.01633832e+00]
  HOMO = -0.611781580105193  LUMO = 5.22132325279705
  mo_energy =
[-3.23782519e+01 -1.70277921e+00 -6.11781580e-01 -6.11781580e-01
 -6.11781580e-01  5.22132325e+00  5.22132325e+00  5.22132325e+00
  3.86426566e+01  3.86426566e+01  3.86426566e+01  4.49085468e+01
  4.55601422e+02  3.12903523e+03]
E1 = -183.55029421928143  E_coul = 55.85877057479908
cycle= 5 E= -127.691523644482  delta_E= -3.54e-12  |g|= 1.72e-07  |ddm|= 1.59e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.55029421928143  E_coul = 55.85877057479908
  HOMO = -0.611781666234717  LUMO = 5.22132312031693
  mo_energy =
[-3.23782522e+01 -1.70277930e+00 -6.11781666e-01 -6.11781666e-01
 -6.11781666e-01  5.22132312e+00  5.22132312e+00  5.22132312e+00
  3.86426563e+01  3.86426563e+01  3.86426563e+01  4.49085465e+01
  4.55601421e+02  3.12903523e+03]
E1 = -183.55029449565413  E_coul = 55.85877085117167
Extra cycle  E= -127.691523644482  delta_E= -1.14e-13  |g|= 3.59e-08  |ddm|= 3.78e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.73152416e+03 9.75215625e-01 3.23720075e+02 5.90421232e+01
 1.35595955e+01 2.22620751e+01 9.19736350e-01 5.09040572e+00]
E = -127.69152364448246
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1731.52415564        1
[INPUT] 0    0    [1    /1   ]  0.975215625234       1
[INPUT] 0    0    [1    /1   ]  323.720075116        1
[INPUT] 0    0    [1    /1   ]  59.0421231905        1
[INPUT] 0    0    [1    /1   ]  13.5595954999        1
[INPUT] 1    0    [1    /1   ]  22.2620750688        1
[INPUT] 1    0    [1    /1   ]  0.919736349719       1
[INPUT] 1    0    [1    /1   ]  5.0904057154         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1731.5241556369292, 1.0]], [0, [0.9752156252343447, 1.0]], [0, [323.7200751161412, 1.0]], [0, [59.04212319046016, 1.0]], [0, [13.559595499876044, 1.0]], [1, [22.262075068760762, 1.0]], [1, [0.9197363497190709, 1.0]], [1, [5.090405715404977, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1731.52415564]
bas 1, expnt(s) = [0.97521563]
bas 2, expnt(s) = [323.72007512]
bas 3, expnt(s) = [59.04212319]
bas 4, expnt(s) = [13.5595955]
bas 5, expnt(s) = [22.26207507]
bas 6, expnt(s) = [0.91973635]
bas 7, expnt(s) = [5.09040572]
CPU time:       268.61
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.73152416e+03 6.78166668e+02 9.75215625e-01 2.47936526e+00
 3.23720075e+02 1.92815636e+02 5.90421232e+01 5.38129127e+01
 1.35595955e+01 1.78525425e+01 2.22620751e+01 1.41072202e+02
 9.19736350e-01 2.62762619e+00 5.09040572e+00 2.23061639e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.824568801656625
cond(S) = 16.310616378499027
E1 = -182.25873752661815  E_coul = 54.854751762197274
init E= -127.403985764421
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.716068965174884  LUMO = 5.09972926821009
  mo_energy =
[-3.24634853e+01 -1.81020230e+00 -7.16068965e-01 -7.16068965e-01
 -7.16068965e-01  5.09972927e+00  5.09972927e+00  5.09972927e+00
  3.85443027e+01  3.85443027e+01  3.85443027e+01  4.47988952e+01
  4.55545386e+02  3.12902801e+03]
E1 = -183.63734008990835  E_coul = 55.946075910364556
cycle= 1 E= -127.691264179544  delta_E= -0.287  |g|= 0.0846  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0955401
diis-c [-0.00912792  1.        ]
  HOMO = -0.606171425477896  LUMO = 5.22990268699168
  mo_energy =
[-3.23576740e+01 -1.69655791e+00 -6.06171425e-01 -6.06171425e-01
 -6.06171425e-01  5.22990269e+00  5.22990269e+00  5.22990269e+00
  3.86605147e+01  3.86605147e+01  3.86605147e+01  4.49272066e+01
  4.55623578e+02  3.12905829e+03]
E1 = -183.53255607021828  E_coul = 55.84104164491719
cycle= 2 E= -127.691514425301  delta_E= -0.00025  |g|= 0.0132  |ddm|= 0.0162
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0207774
diis-c [-1.83230878e-04  1.42858495e-01  8.57141505e-01]
  HOMO = -0.611918838569813  LUMO = 5.22109027932307
  mo_energy =
[-3.23790363e+01 -1.70294902e+00 -6.11918839e-01 -6.11918839e-01
 -6.11918839e-01  5.22109028e+00  5.22109028e+00  5.22109028e+00
  3.86420386e+01  3.86420386e+01  3.86420386e+01  4.49078302e+01
  4.55600379e+02  3.12903409e+03]
E1 = -183.5508464953666  E_coul = 55.859322860356286
cycle= 3 E= -127.69152363501  delta_E= -9.21e-06  |g|= 0.000499  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000663106
diis-c [-4.41648073e-08 -3.58486971e-03  1.63306354e-02  9.87254234e-01]
  HOMO = -0.611785739407884  LUMO = 5.22131726852885
  mo_energy =
[-3.23782637e+01 -1.70278415e+00 -6.11785739e-01 -6.11785739e-01
 -6.11785739e-01  5.22131727e+00  5.22131727e+00  5.22131727e+00
  3.86426457e+01  3.86426457e+01  3.86426457e+01  4.49085348e+01
  4.55601418e+02  3.12903523e+03]
E1 = -183.550305393832  E_coul = 55.858781749353184
cycle= 4 E= -127.691523644479  delta_E= -9.47e-09  |g|= 1.05e-05  |ddm|= 7.9e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.28648e-05
diis-c [-1.00180386e-11  4.13716951e-05  2.50774274e-04 -1.66304665e-02
  1.01633832e+00]
  HOMO = -0.611781580105193  LUMO = 5.22132325279705
  mo_energy =
[-3.23782519e+01 -1.70277921e+00 -6.11781580e-01 -6.11781580e-01
 -6.11781580e-01  5.22132325e+00  5.22132325e+00  5.22132325e+00
  3.86426566e+01  3.86426566e+01  3.86426566e+01  4.49085468e+01
  4.55601422e+02  3.12903523e+03]
E1 = -183.55029421928143  E_coul = 55.85877057479908
cycle= 5 E= -127.691523644482  delta_E= -3.54e-12  |g|= 1.72e-07  |ddm|= 1.59e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.55029421928143  E_coul = 55.85877057479908
  HOMO = -0.611781666234717  LUMO = 5.22132312031693
  mo_energy =
[-3.23782522e+01 -1.70277930e+00 -6.11781666e-01 -6.11781666e-01
 -6.11781666e-01  5.22132312e+00  5.22132312e+00  5.22132312e+00
  3.86426563e+01  3.86426563e+01  3.86426563e+01  4.49085465e+01
  4.55601421e+02  3.12903523e+03]
E1 = -183.55029449565413  E_coul = 55.85877085117167
Extra cycle  E= -127.691523644482  delta_E= -1.14e-13  |g|= 3.59e-08  |ddm|= 3.78e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.310616378499027
E1 = -183.55029449565413  E_coul = 55.85877085117167
init E= -127.691523644482
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.611781649169821  LUMO = 5.2213231467828
  mo_energy =
[-3.23782522e+01 -1.70277928e+00 -6.11781649e-01 -6.11781649e-01
 -6.11781649e-01  5.22132315e+00  5.22132315e+00  5.22132315e+00
  3.86426563e+01  3.86426563e+01  3.86426563e+01  4.49085466e+01
  4.55601421e+02  3.12903523e+03]
E1 = -183.5502944396413  E_coul = 55.858770795158904
cycle= 1 E= -127.691523644482  delta_E= 5.68e-14  |g|= 7.11e-09  |ddm|= 7.85e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.5502944396413  E_coul = 55.858770795158904
  HOMO = -0.611781652635215  LUMO = 5.22132314139995
  mo_energy =
[-3.23782522e+01 -1.70277929e+00 -6.11781653e-01 -6.11781653e-01
 -6.11781653e-01  5.22132314e+00  5.22132314e+00  5.22132314e+00
  3.86426563e+01  3.86426563e+01  3.86426563e+01  4.49085466e+01
  4.55601421e+02  3.12903523e+03]
E1 = -183.55029445103764  E_coul = 55.858770806555235
Extra cycle  E= -127.691523644482  delta_E=    0  |g|= 1.45e-09  |ddm|= 1.59e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.73152416e+03 9.75215625e-01 3.23720075e+02 5.90421232e+01
 1.35595955e+01 2.22620751e+01 9.19736350e-01 5.09040572e+00]
grad_E = [-8.26076899e-05  1.92722350e-01  1.51492558e-03 -6.83762517e-04
 -1.34303990e-02 -8.66633770e-03 -9.51121717e-04  2.09127307e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.73620464        1
[INPUT] 0    0    [1    /1   ]  0.982051991893       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  18.3426853464        1
[INPUT] 0    0    [1    /1   ]  6.86127233454        1
[INPUT] 1    0    [1    /1   ]  17.6374989364        1
[INPUT] 1    0    [1    /1   ]  0.779965644197       1
[INPUT] 1    0    [1    /1   ]  4.03819295608        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7362046381666, 1.0]], [0, [0.9820519918925843, 1.0]], [0, [1e-09, 1.0]], [0, [18.342685346435168, 1.0]], [0, [6.8612723345386115, 1.0]], [1, [17.637498936441734, 1.0]], [1, [0.7799656441966529, 1.0]], [1, [4.038192956081379, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.73620464]
bas 1, expnt(s) = [0.98205199]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [18.34268535]
bas 4, expnt(s) = [6.86127233]
bas 5, expnt(s) = [17.63749894]
bas 6, expnt(s) = [0.77996564]
bas 7, expnt(s) = [4.03819296]
CPU time:       272.25
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973620e+03 6.56968164e+02 9.82051992e-01 2.49238934e+00
 1.00000000e-09 4.49277867e-07 1.83426853e+01 2.23929965e+01
 6.86127233e+00 1.07107163e+01 1.76374989e+01 1.05446130e+02
 7.79965644e-01 2.13834972e+00 4.03819296e+00 1.67000675e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.771053846715061
cond(S) = 18.791261342986243
E1 = -127.30169814725  E_coul = 52.13040242163579
init E= -75.1712957256142
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.893196937903453  LUMO = -1.155172924531e-05
  mo_energy =
[-2.56896156e+01 -1.47149408e+00 -8.93196938e-01 -8.93196938e-01
 -8.93196938e-01 -1.15517292e-05  3.74867577e+00  3.74867577e+00
  3.74867577e+00  1.40074227e+01  2.85323375e+01  2.85323375e+01
  2.85323375e+01  1.90114723e+03]
E1 = -166.17655981952396  E_coul = 54.27293927574939
cycle= 1 E= -111.903620543775  delta_E= -36.7  |g|=  1.1  |ddm|= 0.701
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.93173
diis-c [-3.73156671  1.        ]
  HOMO = -0.675710145675436  LUMO = 1.50044889989238e-09
  mo_energy =
[-2.55449852e+01 -1.24744472e+00 -6.75710146e-01 -6.75710146e-01
 -6.75710146e-01  1.50044890e-09  3.98784711e+00  3.98784711e+00
  3.98784711e+00  1.43633692e+01  2.88488819e+01  2.88488819e+01
  2.88488819e+01  1.90059576e+03]
E1 = -165.56594456223542  E_coul = 53.655937861864054
cycle= 2 E= -111.910006700371  delta_E= -0.00639  |g|= 0.0846  |ddm|= 0.108
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138275
diis-c [-0.01800405  0.01703912  0.98296088]
  HOMO = -0.715927776309773  LUMO = 1.50043630983901e-09
  mo_energy =
[-2.56846189e+01 -1.28968643e+00 -7.15927776e-01 -7.15927776e-01
 -7.15927776e-01  1.50043631e-09  3.93683641e+00  3.93683641e+00
  3.93683641e+00  1.42764336e+01  2.87311018e+01  2.87311018e+01
  2.87311018e+01  1.90041492e+03]
E1 = -165.74269640849494  E_coul = 53.832248577927444
cycle= 3 E= -111.910447830567  delta_E= -0.000441  |g|= 0.0234  |ddm|= 0.0244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0342849
diis-c [-6.67761970e-06 -1.05679835e-03  1.95986287e-01  8.05070512e-01]
  HOMO = -0.707323750068057  LUMO = 1.50043908677974e-09
  mo_energy =
[-2.56545378e+01 -1.28012950e+00 -7.07323750e-01 -7.07323750e-01
 -7.07323750e-01  1.50043909e-09  3.94766951e+00  3.94766951e+00
  3.94766951e+00  1.42959617e+01  2.87562865e+01  2.87562865e+01
  2.87562865e+01  1.90045022e+03]
E1 = -165.7056079397391  E_coul = 53.79512740843455
cycle= 4 E= -111.910480531305  delta_E= -3.27e-05  |g|= 0.000382  |ddm|= 0.00546
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00064825
diis-c [-7.66794173e-10  6.18558311e-05 -1.71977036e-02 -5.07211966e-02
  1.06785704e+00]
  HOMO = -0.707430700310307  LUMO = 1.50043859512323e-09
  mo_energy =
[-2.56549120e+01 -1.28020121e+00 -7.07430700e-01 -7.07430700e-01
 -7.07430700e-01  1.50043860e-09  3.94753049e+00  3.94753049e+00
  3.94753049e+00  1.42957959e+01  2.87559653e+01  2.87559653e+01
  2.87559653e+01  1.90044952e+03]
E1 = -165.706150851759  E_coul = 53.795670311424615
cycle= 5 E= -111.910480540334  delta_E= -9.03e-09  |g|= 2.64e-06  |ddm|= 8.69e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.93715e-06
diis-c [-2.32109135e-14 -3.38372379e-06  9.72673795e-04  2.83647622e-03
 -6.37109933e-02  1.05990523e+00]
  HOMO = -0.707430554650463  LUMO = 1.50043879663017e-09
  mo_energy =
[-2.56549123e+01 -1.28020080e+00 -7.07430555e-01 -7.07430555e-01
 -7.07430555e-01  1.50043880e-09  3.94753015e+00  3.94753015e+00
  3.94753015e+00  1.42957964e+01  2.87559651e+01  2.87559651e+01
  2.87559651e+01  1.90044952e+03]
E1 = -165.70615148240594  E_coul = 53.79567094207136
cycle= 6 E= -111.910480540335  delta_E= -2.13e-13  |g|= 1.38e-08  |ddm|= 8.21e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -165.70615148240594  E_coul = 53.79567094207136
  HOMO = -0.707430563752303  LUMO = 1.50043871336354e-09
  mo_energy =
[-2.56549123e+01 -1.28020080e+00 -7.07430564e-01 -7.07430564e-01
 -7.07430564e-01  1.50043871e-09  3.94753017e+00  3.94753017e+00
  3.94753017e+00  1.42957964e+01  2.87559651e+01  2.87559651e+01
  2.87559651e+01  1.90044952e+03]
E1 = -165.70615150640924  E_coul = 53.79567096607461
Extra cycle  E= -111.910480540335  delta_E= -4.26e-14  |g|= 3.48e-09  |ddm|= 3.26e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.65973620e+03 9.82051992e-01 1.00000000e-09 1.83426853e+01
 6.86127233e+00 1.76374989e+01 7.79965644e-01 4.03819296e+00]
E = -111.91048054033463
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1724.34536054        1
[INPUT] 0    0    [1    /1   ]  0.9758992619         1
[INPUT] 0    0    [1    /1   ]  291.348067605        1
[INPUT] 0    0    [1    /1   ]  54.9721794061        1
[INPUT] 0    0    [1    /1   ]  12.8897631833        1
[INPUT] 1    0    [1    /1   ]  21.7996174555        1
[INPUT] 1    0    [1    /1   ]  0.905759279167       1
[INPUT] 1    0    [1    /1   ]  4.98518443947        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1724.345360537053, 1.0]], [0, [0.9758992619001686, 1.0]], [0, [291.34806760462703, 1.0]], [0, [54.97217940605766, 1.0]], [0, [12.889763183342302, 1.0]], [1, [21.79961745552886, 1.0]], [1, [0.9057592791668291, 1.0]], [1, [4.985184439472617, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1724.34536054]
bas 1, expnt(s) = [0.97589926]
bas 2, expnt(s) = [291.3480676]
bas 3, expnt(s) = [54.97217941]
bas 4, expnt(s) = [12.88976318]
bas 5, expnt(s) = [21.79961746]
bas 6, expnt(s) = [0.90575928]
bas 7, expnt(s) = [4.98518444]
CPU time:       273.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.72434536e+03 6.76056844e+02 9.75899262e-01 2.48066870e+00
 2.91348068e+02 1.78165713e+02 5.49721794e+01 5.10061144e+01
 1.28897632e+01 1.71869466e+01 2.17996175e+01 1.37418588e+02
 9.05759279e-01 2.57780690e+00 4.98518444e+00 2.17313112e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831366811412064
cond(S) = 16.549480350486945
E1 = -182.33527901363402  E_coul = 54.8634670992099
init E= -127.471811914424
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.718153461451453  LUMO = 4.98050250874674
  mo_energy =
[-3.24816196e+01 -1.80660134e+00 -7.18153461e-01 -7.18153461e-01
 -7.18153461e-01  4.98050251e+00  4.98050251e+00  4.98050251e+00
  3.75917679e+01  3.75917679e+01  3.75917679e+01  4.08826932e+01
  4.09909243e+02  3.00277285e+03]
E1 = -183.57911140939962  E_coul = 55.83661129414221
cycle= 1 E= -127.742500115257  delta_E= -0.271  |g|= 0.0757  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0797744
diis-c [-0.00636396  1.        ]
  HOMO = -0.617149323202177  LUMO = 5.09808129923377
  mo_energy =
[-3.23993819e+01 -1.70222099e+00 -6.17149323e-01 -6.17149323e-01
 -6.17149323e-01  5.09808130e+00  5.09808130e+00  5.09808130e+00
  3.76865036e+01  3.76865036e+01  3.76865036e+01  4.09904641e+01
  4.09956940e+02  3.00276840e+03]
E1 = -183.49378716319237  E_coul = 55.75110975211949
cycle= 2 E= -127.742677411073  delta_E= -0.000177  |g|= 0.0108  |ddm|= 0.0135
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0172851
diis-c [-1.78188212e-04  1.22516230e-01  8.77483770e-01]
  HOMO = -0.621987517071698  LUMO = 5.09079981196516
  mo_energy =
[-3.24170324e+01 -1.70755631e+00 -6.21987517e-01 -6.21987517e-01
 -6.21987517e-01  5.09079981e+00  5.09079981e+00  5.09079981e+00
  3.76712333e+01  3.76712333e+01  3.76712333e+01  4.09747493e+01
  4.09937807e+02  3.00274828e+03]
E1 = -183.50952108280936  E_coul = 55.76683737186611
cycle= 3 E= -127.742683710943  delta_E= -6.3e-06  |g|= 0.000754  |ddm|= 0.00217
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00102542
diis-c [-5.99021499e-08 -4.12759748e-03  4.33564129e-02  9.60771185e-01]
  HOMO = -0.621749384617742  LUMO = 5.09117873901528
  mo_energy =
[-3.24158876e+01 -1.70727235e+00 -6.21749385e-01 -6.21749385e-01
 -6.21749385e-01  5.09117874e+00  5.09117874e+00  5.09117874e+00
  3.76721578e+01  3.76721578e+01  3.76721578e+01  4.09757763e+01
  4.09939196e+02  3.00274977e+03]
E1 = -183.50863017889284  E_coul = 55.76594644373596
cycle= 4 E= -127.742683735157  delta_E= -2.42e-08  |g|= 1.23e-05  |ddm|= 0.000127
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.49296e-05
diis-c [-1.25553352e-11  4.50106193e-05 -1.07700244e-04 -1.84228979e-02
  1.01848559e+00]
  HOMO = -0.621744553418018  LUMO = 5.09118556044703
  mo_energy =
[-3.24158742e+01 -1.70726658e+00 -6.21744553e-01 -6.21744553e-01
 -6.21744553e-01  5.09118556e+00  5.09118556e+00  5.09118556e+00
  3.76721701e+01  3.76721701e+01  3.76721701e+01  4.09757901e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.50861707197473  E_coul = 55.765933336812715
cycle= 5 E= -127.742683735162  delta_E= -5.14e-12  |g|= 1.92e-07  |ddm|= 1.86e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.50861707197473  E_coul = 55.765933336812715
  HOMO = -0.621744648012671  LUMO = 5.09118541660622
  mo_energy =
[-3.24158746e+01 -1.70726668e+00 -6.21744648e-01 -6.21744648e-01
 -6.21744648e-01  5.09118542e+00  5.09118542e+00  5.09118542e+00
  3.76721698e+01  3.76721698e+01  3.76721698e+01  4.09757898e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.5086173862786  E_coul = 55.76593365111644
Extra cycle  E= -127.742683735162  delta_E= -1.28e-13  |g|= 4.13e-08  |ddm|= 4.28e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.72434536e+03 9.75899262e-01 2.91348068e+02 5.49721794e+01
 1.28897632e+01 2.17996175e+01 9.05759279e-01 4.98518444e+00]
E = -127.74268373516215
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1724.34536054        1
[INPUT] 0    0    [1    /1   ]  0.9758992619         1
[INPUT] 0    0    [1    /1   ]  291.348067605        1
[INPUT] 0    0    [1    /1   ]  54.9721794061        1
[INPUT] 0    0    [1    /1   ]  12.8897631833        1
[INPUT] 1    0    [1    /1   ]  21.7996174555        1
[INPUT] 1    0    [1    /1   ]  0.905759279167       1
[INPUT] 1    0    [1    /1   ]  4.98518443947        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1724.345360537053, 1.0]], [0, [0.9758992619001686, 1.0]], [0, [291.34806760462703, 1.0]], [0, [54.97217940605766, 1.0]], [0, [12.889763183342302, 1.0]], [1, [21.79961745552886, 1.0]], [1, [0.9057592791668291, 1.0]], [1, [4.985184439472617, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1724.34536054]
bas 1, expnt(s) = [0.97589926]
bas 2, expnt(s) = [291.3480676]
bas 3, expnt(s) = [54.97217941]
bas 4, expnt(s) = [12.88976318]
bas 5, expnt(s) = [21.79961746]
bas 6, expnt(s) = [0.90575928]
bas 7, expnt(s) = [4.98518444]
CPU time:       274.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.72434536e+03 6.76056844e+02 9.75899262e-01 2.48066870e+00
 2.91348068e+02 1.78165713e+02 5.49721794e+01 5.10061144e+01
 1.28897632e+01 1.71869466e+01 2.17996175e+01 1.37418588e+02
 9.05759279e-01 2.57780690e+00 4.98518444e+00 2.17313112e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831366811412064
cond(S) = 16.549480350486945
E1 = -182.33527901363402  E_coul = 54.8634670992099
init E= -127.471811914424
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.718153461451453  LUMO = 4.98050250874674
  mo_energy =
[-3.24816196e+01 -1.80660134e+00 -7.18153461e-01 -7.18153461e-01
 -7.18153461e-01  4.98050251e+00  4.98050251e+00  4.98050251e+00
  3.75917679e+01  3.75917679e+01  3.75917679e+01  4.08826932e+01
  4.09909243e+02  3.00277285e+03]
E1 = -183.57911140939962  E_coul = 55.83661129414221
cycle= 1 E= -127.742500115257  delta_E= -0.271  |g|= 0.0757  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0797744
diis-c [-0.00636396  1.        ]
  HOMO = -0.617149323202177  LUMO = 5.09808129923377
  mo_energy =
[-3.23993819e+01 -1.70222099e+00 -6.17149323e-01 -6.17149323e-01
 -6.17149323e-01  5.09808130e+00  5.09808130e+00  5.09808130e+00
  3.76865036e+01  3.76865036e+01  3.76865036e+01  4.09904641e+01
  4.09956940e+02  3.00276840e+03]
E1 = -183.49378716319237  E_coul = 55.75110975211949
cycle= 2 E= -127.742677411073  delta_E= -0.000177  |g|= 0.0108  |ddm|= 0.0135
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0172851
diis-c [-1.78188212e-04  1.22516230e-01  8.77483770e-01]
  HOMO = -0.621987517071698  LUMO = 5.09079981196516
  mo_energy =
[-3.24170324e+01 -1.70755631e+00 -6.21987517e-01 -6.21987517e-01
 -6.21987517e-01  5.09079981e+00  5.09079981e+00  5.09079981e+00
  3.76712333e+01  3.76712333e+01  3.76712333e+01  4.09747493e+01
  4.09937807e+02  3.00274828e+03]
E1 = -183.50952108280936  E_coul = 55.76683737186611
cycle= 3 E= -127.742683710943  delta_E= -6.3e-06  |g|= 0.000754  |ddm|= 0.00217
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102542
diis-c [-5.99021499e-08 -4.12759748e-03  4.33564129e-02  9.60771185e-01]
  HOMO = -0.621749384617742  LUMO = 5.09117873901528
  mo_energy =
[-3.24158876e+01 -1.70727235e+00 -6.21749385e-01 -6.21749385e-01
 -6.21749385e-01  5.09117874e+00  5.09117874e+00  5.09117874e+00
  3.76721578e+01  3.76721578e+01  3.76721578e+01  4.09757763e+01
  4.09939196e+02  3.00274977e+03]
E1 = -183.50863017889284  E_coul = 55.76594644373596
cycle= 4 E= -127.742683735157  delta_E= -2.42e-08  |g|= 1.23e-05  |ddm|= 0.000127
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=1.49296e-05
diis-c [-1.25553352e-11  4.50106193e-05 -1.07700244e-04 -1.84228979e-02
  1.01848559e+00]
  HOMO = -0.621744553418018  LUMO = 5.09118556044703
  mo_energy =
[-3.24158742e+01 -1.70726658e+00 -6.21744553e-01 -6.21744553e-01
 -6.21744553e-01  5.09118556e+00  5.09118556e+00  5.09118556e+00
  3.76721701e+01  3.76721701e+01  3.76721701e+01  4.09757901e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.50861707197473  E_coul = 55.765933336812715
cycle= 5 E= -127.742683735162  delta_E= -5.14e-12  |g|= 1.92e-07  |ddm|= 1.86e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.50861707197473  E_coul = 55.765933336812715
  HOMO = -0.621744648012671  LUMO = 5.09118541660622
  mo_energy =
[-3.24158746e+01 -1.70726668e+00 -6.21744648e-01 -6.21744648e-01
 -6.21744648e-01  5.09118542e+00  5.09118542e+00  5.09118542e+00
  3.76721698e+01  3.76721698e+01  3.76721698e+01  4.09757898e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.5086173862786  E_coul = 55.76593365111644
Extra cycle  E= -127.742683735162  delta_E= -1.28e-13  |g|= 4.13e-08  |ddm|= 4.28e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.549480350486945
E1 = -183.5086173862786  E_coul = 55.76593365111644
init E= -127.742683735162
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.621744628535635  LUMO = 5.09118544628914
  mo_energy =
[-3.24158745e+01 -1.70726666e+00 -6.21744629e-01 -6.21744629e-01
 -6.21744629e-01  5.09118545e+00  5.09118545e+00  5.09118545e+00
  3.76721699e+01  3.76721699e+01  3.76721699e+01  4.09757898e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.50861732065806  E_coul = 55.765933585496036
cycle= 1 E= -127.742683735162  delta_E= 1.28e-13  |g|= 8.43e-09  |ddm|= 9.15e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.50861732065806  E_coul = 55.765933585496036
  HOMO = -0.621744632607917  LUMO = 5.09118544007067
  mo_energy =
[-3.24158745e+01 -1.70726667e+00 -6.21744633e-01 -6.21744633e-01
 -6.21744633e-01  5.09118544e+00  5.09118544e+00  5.09118544e+00
  3.76721698e+01  3.76721698e+01  3.76721698e+01  4.09757898e+01
  4.09939200e+02  3.00274976e+03]
E1 = -183.50861733441948  E_coul = 55.76593359925745
Extra cycle  E= -127.742683735162  delta_E= -1.42e-14  |g|= 1.78e-09  |ddm|= 1.91e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.72434536e+03 9.75899262e-01 2.91348068e+02 5.49721794e+01
 1.28897632e+01 2.17996175e+01 9.05759279e-01 4.98518444e+00]
grad_E = [-6.01183472e-05  1.94696178e-01  1.34387488e-03  1.24135571e-03
 -2.70869336e-02 -8.93125110e-03 -3.07711415e-02  2.09788833e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1659.73410249        1
[INPUT] 0    0    [1    /1   ]  0.971143502209       1
[INPUT] 0    0    [1    /1   ]  1.00010311144e-09      1
[INPUT] 0    0    [1    /1   ]  20.8555165176        1
[INPUT] 0    0    [1    /1   ]  8.83765906041        1
[INPUT] 1    0    [1    /1   ]  19.8314046465        1
[INPUT] 1    0    [1    /1   ]  0.870892004231       1
[INPUT] 1    0    [1    /1   ]  4.6073546502         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1659.7341024851385, 1.0]], [0, [0.9711435022090336, 1.0]], [0, [1.0001031114370562e-09, 1.0]], [0, [20.855516517608045, 1.0]], [0, [8.837659060411685, 1.0]], [1, [19.831404646514912, 1.0]], [1, [0.870892004231462, 1.0]], [1, [4.607354650199364, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1659.73410249]
bas 1, expnt(s) = [0.9711435]
bas 2, expnt(s) = [1.00010311e-09]
bas 3, expnt(s) = [20.85551652]
bas 4, expnt(s) = [8.83765906]
bas 5, expnt(s) = [19.83140465]
bas 6, expnt(s) = [0.870892]
bas 7, expnt(s) = [4.60735465]
CPU time:       277.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.65973410e+03 6.56967540e+02 9.71143502e-01 2.47159655e+00
 1.00010311e-09 4.49312611e-07 2.08555165e+01 2.46564607e+01
 8.83765906e+00 1.29499460e+01 1.98314046e+01 1.22088916e+02
 8.70892004e-01 2.45436852e+00 4.60735465e+00 1.96924135e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.762730442003786
cond(S) = 21.497956359444785
E1 = -135.91415919292606  E_coul = 52.741424363324015
init E= -83.172734829602
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.843064278831847  LUMO = -1.19723674244647e-05
  mo_energy =
[-2.63321851e+01 -1.51093405e+00 -8.43064279e-01 -8.43064279e-01
 -8.43064279e-01 -1.19723674e-05  4.45676940e+00  4.45676940e+00
  4.45676940e+00  1.79684859e+01  3.33118906e+01  3.33118906e+01
  3.33118906e+01  1.91084688e+03]
E1 = -168.48433222679037  E_coul = 54.9277297718537
cycle= 1 E= -113.556602454937  delta_E= -30.4  |g|= 1.04  |ddm|= 0.597
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.88332
diis-c [-3.54689367  1.        ]
  HOMO = -0.624048397240266  LUMO = 1.50059727197262e-09
  mo_energy =
[-2.61630638e+01 -1.28227273e+00 -6.24048397e-01 -6.24048397e-01
 -6.24048397e-01  1.50059727e-09  4.71097559e+00  4.71097559e+00
  4.71097559e+00  1.83316738e+01  3.36250714e+01  3.36250714e+01
  3.36250714e+01  1.91031251e+03]
E1 = -167.99954355761568  E_coul = 54.43812586649186
cycle= 2 E= -113.561417691124  delta_E= -0.00482  |g|= 0.0654  |ddm|= 0.0857
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10539
diis-c [-0.01065927  0.01112738  0.98887262]
  HOMO = -0.655351490732867  LUMO = 1.50058765058729e-09
  mo_energy =
[-2.62774331e+01 -1.31559791e+00 -6.55351491e-01 -6.55351491e-01
 -6.55351491e-01  1.50058765e-09  4.66635142e+00  4.66635142e+00
  4.66635142e+00  1.82540789e+01  3.35267078e+01  3.35267078e+01
  3.35267078e+01  1.91016342e+03]
E1 = -168.1195480256806  E_coul = 54.557885894475596
cycle= 3 E= -113.561662131205  delta_E= -0.000244  |g|= 0.0157  |ddm|= 0.017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0227285
diis-c [-3.00670947e-06 -8.93404910e-04  1.74646426e-01  8.26246979e-01]
  HOMO = -0.649377406216531  LUMO = 1.50059049413e-09
  mo_energy =
[-2.62554644e+01 -1.30892635e+00 -6.49377406e-01 -6.49377406e-01
 -6.49377406e-01  1.50059049e-09  4.67481333e+00  4.67481333e+00
  4.67481333e+00  1.82695126e+01  3.35454616e+01  3.35454616e+01
  3.35454616e+01  1.91018933e+03]
E1 = -168.09703680599773  E_coul = 54.53536117065653
cycle= 4 E= -113.561675635341  delta_E= -1.35e-05  |g|= 0.000221  |ddm|= 0.00337
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000376577
diis-c [-1.04845016e-10  4.70274041e-05 -1.31184019e-02 -4.47444123e-02
  1.05781579e+00]
  HOMO = -0.649442654958217  LUMO = 1.50058952000175e-09
  mo_energy =
[-2.62557099e+01 -1.30897594e+00 -6.49442655e-01 -6.49442655e-01
 -6.49442655e-01  1.50058952e-09  4.67471658e+00  4.67471658e+00
  4.67471658e+00  1.82693839e+01  3.35452464e+01  3.35452464e+01
  3.35452464e+01  1.91018887e+03]
E1 = -168.09732539964347  E_coul = 54.53564976158874
cycle= 5 E= -113.561675638055  delta_E= -2.71e-09  |g|= 1.04e-06  |ddm|= 4.41e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.64132e-07
diis-c [-1.13550154e-14 -2.21941168e-06  6.31772314e-04  2.12117417e-03
 -5.31247146e-02  1.05037399e+00]
  HOMO = -0.649442501323798  LUMO = 1.50058917317443e-09
  mo_energy =
[-2.62557098e+01 -1.30897569e+00 -6.49442501e-01 -6.49442501e-01
 -6.49442501e-01  1.50058917e-09  4.67471657e+00  4.67471657e+00
  4.67471657e+00  1.82693843e+01  3.35452465e+01  3.35452465e+01
  3.35452465e+01  1.91018887e+03]
E1 = -168.09732528225757  E_coul = 54.535649644202756
cycle= 6 E= -113.561675638055  delta_E= -9.95e-14  |g|= 1.6e-08  |ddm|= 2.74e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -168.09732528225757  E_coul = 54.535649644202756
  HOMO = -0.649442509609437  LUMO = 1.50058949236254e-09
  mo_energy =
[-2.62557098e+01 -1.30897570e+00 -6.49442510e-01 -6.49442510e-01
 -6.49442510e-01  1.50058949e-09  4.67471657e+00  4.67471657e+00
  4.67471657e+00  1.82693843e+01  3.35452465e+01  3.35452465e+01
  3.35452465e+01  1.91018887e+03]
E1 = -168.09732530780718  E_coul = 54.53564966975238
Extra cycle  E= -113.561675638055  delta_E= 2.84e-14  |g|= 3.48e-09  |ddm|= 3.73e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.65973410e+03 9.71143502e-01 1.00010311e-09 2.08555165e+01
 8.83765906e+00 1.98314046e+01 8.70892004e-01 4.60735465e+00]
E = -113.5616756380548
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1717.88423473        1
[INPUT] 0    0    [1    /1   ]  0.975423685931       1
[INPUT] 0    0    [1    /1   ]  262.213260844        1
[INPUT] 0    0    [1    /1   ]  51.5605131172        1
[INPUT] 0    0    [1    /1   ]  12.484552771         1
[INPUT] 1    0    [1    /1   ]  21.6027961746        1
[INPUT] 1    0    [1    /1   ]  0.902272551673       1
[INPUT] 1    0    [1    /1   ]  4.94740146055        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1717.8842347318616, 1.0]], [0, [0.9754236859310551, 1.0]], [0, [262.21326084426437, 1.0]], [0, [51.5605131172127, 1.0]], [0, [12.48455277104924, 1.0]], [1, [21.602796174627464, 1.0]], [1, [0.9022725516732923, 1.0]], [1, [4.947401460545292, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1717.88423473]
bas 1, expnt(s) = [0.97542369]
bas 2, expnt(s) = [262.21326084]
bas 3, expnt(s) = [51.56051312]
bas 4, expnt(s) = [12.48455277]
bas 5, expnt(s) = [21.60279617]
bas 6, expnt(s) = [0.90227255]
bas 7, expnt(s) = [4.94740146]
CPU time:       278.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71788423e+03 6.74156063e+02 9.75423686e-01 2.47976198e+00
 2.62213261e+02 1.64628876e+02 5.15605131e+01 4.86130587e+01
 1.24845528e+01 1.67801086e+01 2.16027962e+01 1.35869461e+02
 9.02272552e-01 2.56540877e+00 4.94740146e+00 2.15256282e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8333277785858
cond(S) = 17.21996901391974
E1 = -182.38459399259673  E_coul = 54.870821851094085
init E= -127.513772141503
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.718519625091249  LUMO = 4.94418354090181
  mo_energy =
[-3.24948912e+01 -1.80571819e+00 -7.18519625e-01 -7.18519625e-01
 -7.18519625e-01  4.94418354e+00  4.94418354e+00  4.94418354e+00
  3.72169813e+01  3.72169813e+01  3.72169813e+01  3.81187123e+01
  3.70460825e+02  2.88967393e+03]
E1 = -183.59631716849802  E_coul = 55.8192749312865
cycle= 1 E= -127.777042237212  delta_E= -0.263  |g|= 0.0744  |ddm|= 0.188
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0787
diis-c [-0.00619368  1.        ]
  HOMO = -0.619648755439028  LUMO = 5.05888461610994
  mo_energy =
[-3.24166417e+01 -1.70339327e+00 -6.19648755e-01 -6.19648755e-01
 -6.19648755e-01  5.05888462e+00  5.05888462e+00  5.05888462e+00
  3.73077082e+01  3.73077082e+01  3.73077082e+01  3.82234183e+01
  3.70507850e+02  2.88966784e+03]
E1 = -183.5153892203279  E_coul = 55.73818399026174
cycle= 2 E= -127.777205230066  delta_E= -0.000163  |g|= 0.0103  |ddm|= 0.0129
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0165301
diis-c [-1.79416903e-04  1.11035369e-01  8.88964631e-01]
  HOMO = -0.624312474757936  LUMO = 5.05191273853263
  mo_energy =
[-3.24335629e+01 -1.70851282e+00 -6.24312475e-01 -6.24312475e-01
 -6.24312475e-01  5.05191274e+00  5.05191274e+00  5.05191274e+00
  3.72930821e+01  3.72930821e+01  3.72930821e+01  3.82085818e+01
  3.70489611e+02  2.88964858e+03]
E1 = -183.53069068860887  E_coul = 55.753479725724844
cycle= 3 E= -127.777210962884  delta_E= -5.73e-06  |g|= 0.000887  |ddm|= 0.0021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00122864
diis-c [-6.60166819e-08 -4.04854164e-03  5.80747224e-02  9.45973819e-01]
  HOMO = -0.624018682613508  LUMO = 5.05237209237591
  mo_energy =
[-3.24322197e+01 -1.70816716e+00 -6.24018683e-01 -6.24018683e-01
 -6.24018683e-01  5.05237209e+00  5.05237209e+00  5.05237209e+00
  3.72941759e+01  3.72941759e+01  3.72941759e+01  3.82097662e+01
  3.70491202e+02  2.88965029e+03]
E1 = -183.52960994233044  E_coul = 55.75239894456557
cycle= 4 E= -127.777210997765  delta_E= -3.49e-08  |g|= 1.22e-05  |ddm|= 0.000153
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40458e-05
diis-c [-1.33857121e-11  4.95717609e-05 -5.44368983e-04 -1.99996325e-02
  1.02049443e+00]
  HOMO = -0.624014094616539  LUMO = 5.0523784833119
  mo_energy =
[-3.24322074e+01 -1.70816158e+00 -6.24014095e-01 -6.24014095e-01
 -6.24014095e-01  5.05237848e+00  5.05237848e+00  5.05237848e+00
  3.72941872e+01  3.72941872e+01  3.72941872e+01  3.82097792e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.5295977413464  E_coul = 55.75238674357708
cycle= 5 E= -127.777210997769  delta_E= -4.46e-12  |g|= 2.14e-07  |ddm|= 1.76e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.5295977413464  E_coul = 55.75238674357708
  HOMO = -0.624014200122136  LUMO = 5.05237832356044
  mo_energy =
[-3.24322078e+01 -1.70816169e+00 -6.24014200e-01 -6.24014200e-01
 -6.24014200e-01  5.05237832e+00  5.05237832e+00  5.05237832e+00
  3.72941869e+01  3.72941869e+01  3.72941869e+01  3.82097789e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.52959809732283  E_coul = 55.752387099553594
Extra cycle  E= -127.777210997769  delta_E= 9.95e-14  |g|= 4.71e-08  |ddm|= 4.85e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71788423e+03 9.75423686e-01 2.62213261e+02 5.15605131e+01
 1.24845528e+01 2.16027962e+01 9.02272552e-01 4.94740146e+00]
E = -127.77721099776923
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1717.88423473        1
[INPUT] 0    0    [1    /1   ]  0.975423685931       1
[INPUT] 0    0    [1    /1   ]  262.213260844        1
[INPUT] 0    0    [1    /1   ]  51.5605131172        1
[INPUT] 0    0    [1    /1   ]  12.484552771         1
[INPUT] 1    0    [1    /1   ]  21.6027961746        1
[INPUT] 1    0    [1    /1   ]  0.902272551673       1
[INPUT] 1    0    [1    /1   ]  4.94740146055        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1717.8842347318616, 1.0]], [0, [0.9754236859310551, 1.0]], [0, [262.21326084426437, 1.0]], [0, [51.5605131172127, 1.0]], [0, [12.48455277104924, 1.0]], [1, [21.602796174627464, 1.0]], [1, [0.9022725516732923, 1.0]], [1, [4.947401460545292, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1717.88423473]
bas 1, expnt(s) = [0.97542369]
bas 2, expnt(s) = [262.21326084]
bas 3, expnt(s) = [51.56051312]
bas 4, expnt(s) = [12.48455277]
bas 5, expnt(s) = [21.60279617]
bas 6, expnt(s) = [0.90227255]
bas 7, expnt(s) = [4.94740146]
CPU time:       279.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71788423e+03 6.74156063e+02 9.75423686e-01 2.47976198e+00
 2.62213261e+02 1.64628876e+02 5.15605131e+01 4.86130587e+01
 1.24845528e+01 1.67801086e+01 2.16027962e+01 1.35869461e+02
 9.02272552e-01 2.56540877e+00 4.94740146e+00 2.15256282e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8333277785858
cond(S) = 17.21996901391974
E1 = -182.38459399259673  E_coul = 54.870821851094085
init E= -127.513772141503
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.718519625091249  LUMO = 4.94418354090181
  mo_energy =
[-3.24948912e+01 -1.80571819e+00 -7.18519625e-01 -7.18519625e-01
 -7.18519625e-01  4.94418354e+00  4.94418354e+00  4.94418354e+00
  3.72169813e+01  3.72169813e+01  3.72169813e+01  3.81187123e+01
  3.70460825e+02  2.88967393e+03]
E1 = -183.59631716849802  E_coul = 55.8192749312865
cycle= 1 E= -127.777042237212  delta_E= -0.263  |g|= 0.0744  |ddm|= 0.188
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0787
diis-c [-0.00619368  1.        ]
  HOMO = -0.619648755439028  LUMO = 5.05888461610994
  mo_energy =
[-3.24166417e+01 -1.70339327e+00 -6.19648755e-01 -6.19648755e-01
 -6.19648755e-01  5.05888462e+00  5.05888462e+00  5.05888462e+00
  3.73077082e+01  3.73077082e+01  3.73077082e+01  3.82234183e+01
  3.70507850e+02  2.88966784e+03]
E1 = -183.5153892203279  E_coul = 55.73818399026174
cycle= 2 E= -127.777205230066  delta_E= -0.000163  |g|= 0.0103  |ddm|= 0.0129
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0165301
diis-c [-1.79416903e-04  1.11035369e-01  8.88964631e-01]
  HOMO = -0.624312474757936  LUMO = 5.05191273853263
  mo_energy =
[-3.24335629e+01 -1.70851282e+00 -6.24312475e-01 -6.24312475e-01
 -6.24312475e-01  5.05191274e+00  5.05191274e+00  5.05191274e+00
  3.72930821e+01  3.72930821e+01  3.72930821e+01  3.82085818e+01
  3.70489611e+02  2.88964858e+03]
E1 = -183.53069068860887  E_coul = 55.753479725724844
cycle= 3 E= -127.777210962884  delta_E= -5.73e-06  |g|= 0.000887  |ddm|= 0.0021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00122864
diis-c [-6.60166819e-08 -4.04854164e-03  5.80747224e-02  9.45973819e-01]
  HOMO = -0.624018682613508  LUMO = 5.05237209237591
  mo_energy =
[-3.24322197e+01 -1.70816716e+00 -6.24018683e-01 -6.24018683e-01
 -6.24018683e-01  5.05237209e+00  5.05237209e+00  5.05237209e+00
  3.72941759e+01  3.72941759e+01  3.72941759e+01  3.82097662e+01
  3.70491202e+02  2.88965029e+03]
E1 = -183.52960994233044  E_coul = 55.75239894456557
cycle= 4 E= -127.777210997765  delta_E= -3.49e-08  |g|= 1.22e-05  |ddm|= 0.000153
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40458e-05
diis-c [-1.33857121e-11  4.95717609e-05 -5.44368983e-04 -1.99996325e-02
  1.02049443e+00]
  HOMO = -0.624014094616539  LUMO = 5.0523784833119
  mo_energy =
[-3.24322074e+01 -1.70816158e+00 -6.24014095e-01 -6.24014095e-01
 -6.24014095e-01  5.05237848e+00  5.05237848e+00  5.05237848e+00
  3.72941872e+01  3.72941872e+01  3.72941872e+01  3.82097792e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.5295977413464  E_coul = 55.75238674357708
cycle= 5 E= -127.777210997769  delta_E= -4.46e-12  |g|= 2.14e-07  |ddm|= 1.76e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.5295977413464  E_coul = 55.75238674357708
  HOMO = -0.624014200122136  LUMO = 5.05237832356044
  mo_energy =
[-3.24322078e+01 -1.70816169e+00 -6.24014200e-01 -6.24014200e-01
 -6.24014200e-01  5.05237832e+00  5.05237832e+00  5.05237832e+00
  3.72941869e+01  3.72941869e+01  3.72941869e+01  3.82097789e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.52959809732283  E_coul = 55.752387099553594
Extra cycle  E= -127.777210997769  delta_E= 9.95e-14  |g|= 4.71e-08  |ddm|= 4.85e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.21996901391974
E1 = -183.52959809732283  E_coul = 55.752387099553594
init E= -127.777210997769
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.624014178034122  LUMO = 5.05237835700471
  mo_energy =
[-3.24322077e+01 -1.70816167e+00 -6.24014178e-01 -6.24014178e-01
 -6.24014178e-01  5.05237836e+00  5.05237836e+00  5.05237836e+00
  3.72941870e+01  3.72941870e+01  3.72941870e+01  3.82097790e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.52959802222284  E_coul = 55.752387024453554
cycle= 1 E= -127.777210997769  delta_E= -5.68e-14  |g|= 9.72e-09  |ddm|= 1.04e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.52959802222284  E_coul = 55.752387024453554
  HOMO = -0.624014182698767  LUMO = 5.0523783499246
  mo_energy =
[-3.24322078e+01 -1.70816167e+00 -6.24014183e-01 -6.24014183e-01
 -6.24014183e-01  5.05237835e+00  5.05237835e+00  5.05237835e+00
  3.72941870e+01  3.72941870e+01  3.72941870e+01  3.82097790e+01
  3.70491205e+02  2.88965028e+03]
E1 = -183.52959803815833  E_coul = 55.752387040389046
Extra cycle  E= -127.777210997769  delta_E=    0  |g|= 2.07e-09  |ddm|= 2.21e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71788423e+03 9.75423686e-01 2.62213261e+02 5.15605131e+01
 1.24845528e+01 2.16027962e+01 9.02272552e-01 4.94740146e+00]
grad_E = [-2.68877829e-05  1.93659608e-01  9.64267277e-04  1.72134152e-03
 -2.48664041e-02 -9.06573179e-03 -2.57693220e-02  2.08376488e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1687.5271946         1
[INPUT] 0    0    [1    /1   ]  0.981004556537       1
[INPUT] 0    0    [1    /1   ]  125.313734165        1
[INPUT] 0    0    [1    /1   ]  25.3161714196        1
[INPUT] 0    0    [1    /1   ]  7.8984172703         1
[INPUT] 1    0    [1    /1   ]  17.020691909         1
[INPUT] 1    0    [1    /1   ]  0.790274865462       1
[INPUT] 1    0    [1    /1   ]  3.82972083158        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1687.5271946048072, 1.0]], [0, [0.9810045565374951, 1.0]], [0, [125.31373416491604, 1.0]], [0, [25.316171419625476, 1.0]], [0, [7.898417270298851, 1.0]], [1, [17.020691909027338, 1.0]], [1, [0.7902748654620022, 1.0]], [1, [3.8297208315813935, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1687.5271946]
bas 1, expnt(s) = [0.98100456]
bas 2, expnt(s) = [125.31373416]
bas 3, expnt(s) = [25.31617142]
bas 4, expnt(s) = [7.89841727]
bas 5, expnt(s) = [17.02069191]
bas 6, expnt(s) = [0.79027487]
bas 7, expnt(s) = [3.82972083]
CPU time:       283.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.68752719e+03 6.65201331e+02 9.81004557e-01 2.49039533e+00
 1.25313734e+02 9.46267726e+01 2.53161714e+01 2.85143545e+01
 7.89841727e+00 1.19033740e+01 1.70206919e+01 1.00856967e+02
 7.90274865e-01 2.17373753e+00 3.82972083e+00 1.56294354e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.881676971785353
cond(S) = 24.089380846565746
E1 = -182.26179254836742  E_coul = 55.04818999800657
init E= -127.213602550361
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.726578793594512  LUMO = 3.87624150786035
  mo_energy =
[-3.22872765e+01 -1.78037681e+00 -7.26578794e-01 -7.26578794e-01
 -7.26578794e-01  3.87624151e+00  3.87624151e+00  3.87624151e+00
  1.67091936e+01  2.78806162e+01  2.78806162e+01  2.78806162e+01
  1.53386763e+02  2.31278206e+03]
E1 = -183.06513146080337  E_coul = 55.52469122134922
cycle= 1 E= -127.540440239454  delta_E= -0.327  |g|=  0.1  |ddm|= 0.132
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.184585
diis-c [-0.03407171  1.        ]
  HOMO = -0.665317506802908  LUMO = 3.94506781287321
  mo_energy =
[-3.22893159e+01 -1.72263093e+00 -6.65317507e-01 -6.65317507e-01
 -6.65317507e-01  3.94506781e+00  3.94506781e+00  3.94506781e+00
  1.67586644e+01  2.79120024e+01  2.79120024e+01  2.79120024e+01
  1.53364263e+02  2.31258643e+03]
E1 = -183.0300387765697  E_coul = 55.48955397644875
cycle= 2 E= -127.540484800121  delta_E= -4.46e-05  |g|= 0.00489  |ddm|= 0.0065
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00712018
diis-c [-5.01496709e-05 -4.02674977e-03  1.00402675e+00]
  HOMO = -0.667798195258832  LUMO = 3.94215262872861
  mo_energy =
[-3.22967247e+01 -1.72541766e+00 -6.67798195e-01 -6.67798195e-01
 -6.67798195e-01  3.94215263e+00  3.94215263e+00  3.94215263e+00
  1.67529131e+01  2.79056940e+01  2.79056940e+01  2.79056940e+01
  1.53357273e+02  2.31257926e+03]
E1 = -183.03903979204432  E_coul = 55.49855388321974
cycle= 3 E= -127.540485908825  delta_E= -1.11e-06  |g|= 0.00124  |ddm|= 0.00123
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00190937
diis-c [-4.49476967e-08 -1.94979074e-03  2.11815806e-01  7.90133984e-01]
  HOMO = -0.667338912940034  LUMO = 3.94271651200858
  mo_energy =
[-3.22950201e+01 -1.72490790e+00 -6.67338913e-01 -6.67338913e-01
 -6.67338913e-01  3.94271651e+00  3.94271651e+00  3.94271651e+00
  1.67540805e+01  2.79070473e+01  2.79070473e+01  2.79070473e+01
  1.53359058e+02  2.31258129e+03]
E1 = -183.03708933937094  E_coul = 55.49660334014376
cycle= 4 E= -127.540485999227  delta_E= -9.04e-08  |g|= 4.71e-06  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.43519e-06
diis-c [-3.11799487e-12  1.27637435e-05 -2.93096857e-03 -1.24491808e-02
  1.01536739e+00]
  HOMO = -0.66733872628573  LUMO = 3.94271689600652
  mo_energy =
[-3.22950188e+01 -1.72490802e+00 -6.67338726e-01 -6.67338726e-01
 -6.67338726e-01  3.94271690e+00  3.94271690e+00  3.94271690e+00
  1.67540808e+01  2.79070484e+01  2.79070484e+01  2.79070484e+01
  1.53359060e+02  2.31258129e+03]
E1 = -183.03708678269697  E_coul = 55.496600783469425
cycle= 5 E= -127.540485999228  delta_E= -3.69e-13  |g|= 1.46e-07  |ddm|= 5.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.03708678269697  E_coul = 55.496600783469425
  HOMO = -0.667338680583925  LUMO = 3.94271695465564
  mo_energy =
[-3.22950186e+01 -1.72490799e+00 -6.67338681e-01 -6.67338681e-01
 -6.67338681e-01  3.94271695e+00  3.94271695e+00  3.94271695e+00
  1.67540809e+01  2.79070486e+01  2.79070486e+01  2.79070486e+01
  1.53359060e+02  2.31258129e+03]
E1 = -183.03708655360796  E_coul = 55.49660055438048
Extra cycle  E= -127.540485999227  delta_E= 5.68e-14  |g|= 3.39e-08  |ddm|= 3.43e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.68752719e+03 9.81004557e-01 1.25313734e+02 2.53161714e+01
 7.89841727e+00 1.70206919e+01 7.90274865e-01 3.82972083e+00]
E = -127.54048599922749
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.09226966        1
[INPUT] 0    0    [1    /1   ]  0.976856169093       1
[INPUT] 0    0    [1    /1   ]  227.074251054        1
[INPUT] 0    0    [1    /1   ]  44.8241846417        1
[INPUT] 0    0    [1    /1   ]  11.3073955948        1
[INPUT] 1    0    [1    /1   ]  20.4266737251        1
[INPUT] 1    0    [1    /1   ]  0.87352528068        1
[INPUT] 1    0    [1    /1   ]  4.66051814169        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0922696600128, 1.0]], [0, [0.9768561690932437, 1.0]], [0, [227.07425105366684, 1.0]], [0, [44.82418464166348, 1.0]], [0, [11.307395594755034, 1.0]], [1, [20.4266737251497, 1.0]], [1, [0.8735252806800138, 1.0]], [1, [4.660518141686833, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.09226966]
bas 1, expnt(s) = [0.97685617]
bas 2, expnt(s) = [227.07425105]
bas 3, expnt(s) = [44.82418464]
bas 4, expnt(s) = [11.30739559]
bas 5, expnt(s) = [20.42667373]
bas 6, expnt(s) = [0.87352528]
bas 7, expnt(s) = [4.66051814]
CPU time:       284.02
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71009227e+03 6.71861387e+02 9.76856169e-01 2.48249277e+00
 2.27074251e+02 1.47788602e+02 4.48241846e+01 4.37672564e+01
 1.13073956e+01 1.55789063e+01 2.04266737e+01 1.26686827e+02
 8.73525281e-01 2.46364847e+00 4.66051814e+00 1.99768563e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.846841214537825
cond(S) = 17.638229744092857
E1 = -182.49552675753787  E_coul = 54.91100655218199
init E= -127.584520205356
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.722463037663766  LUMO = 4.65914263997345
  mo_energy =
[-3.24949288e+01 -1.79786353e+00 -7.22463038e-01 -7.22463038e-01
 -7.22463038e-01  4.65914264e+00  4.65914264e+00  4.65914264e+00
  3.18997566e+01  3.47775629e+01  3.47775629e+01  3.47775629e+01
  3.12793900e+02  2.74143882e+03]
E1 = -183.53087592817968  E_coul = 55.70440894917641
cycle= 1 E= -127.826466979003  delta_E= -0.242  |g|= 0.0676  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0722581
diis-c [-0.00522123  1.        ]
  HOMO = -0.635961226049137  LUMO = 4.75764216318134
  mo_energy =
[-3.24443568e+01 -1.70885001e+00 -6.35961226e-01 -6.35961226e-01
 -6.35961226e-01  4.75764216e+00  4.75764216e+00  4.75764216e+00
  3.19828622e+01  3.48446563e+01  3.48446563e+01  3.48446563e+01
  3.12808471e+02  2.74138727e+03]
E1 = -183.47022406093643  E_coul = 55.643651726843416
cycle= 2 E= -127.826572334093  delta_E= -0.000105  |g|= 0.00781  |ddm|= 0.0102
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0127819
diis-c [-1.45195438e-04  5.64677846e-02  9.43532215e-01]
  HOMO = -0.639749961868684  LUMO = 4.7522726255131
  mo_energy =
[-3.24575577e+01 -1.71293971e+00 -6.39749962e-01 -6.39749962e-01
 -6.39749962e-01  4.75227263e+00  4.75227263e+00  4.75227263e+00
  3.19717474e+01  3.48332938e+01  3.48332938e+01  3.48332938e+01
  3.12794436e+02  2.74137229e+03]
E1 = -183.48320813511756  E_coul = 55.65663243370252
cycle= 3 E= -127.826575701415  delta_E= -3.37e-06  |g|= 0.0013  |ddm|= 0.00177
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00189107
diis-c [-8.58894150e-08 -4.25760369e-03  1.22565920e-01  8.81691684e-01]
  HOMO = -0.639277760295768  LUMO = 4.75295924618552
  mo_energy =
[-3.24556356e+01 -1.71240003e+00 -6.39277760e-01 -6.39277760e-01
 -6.39277760e-01  4.75295925e+00  4.75295925e+00  4.75295925e+00
  3.19733763e+01  3.48348740e+01  3.48348740e+01  3.48348740e+01
  3.12796594e+02  2.74137459e+03]
E1 = -183.48147013348643  E_coul = 55.654894348223145
cycle= 4 E= -127.826575785263  delta_E= -8.38e-08  |g|= 1.21e-05  |ddm|= 0.000241
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.15464e-05
diis-c [-1.91557225e-11  6.42467067e-05 -2.53828485e-03 -2.22438594e-02
  1.02471790e+00]
  HOMO = -0.639273959975087  LUMO = 4.75296410732154
  mo_energy =
[-3.24556273e+01 -1.71239503e+00 -6.39273960e-01 -6.39273960e-01
 -6.39273960e-01  4.75296411e+00  4.75296411e+00  4.75296411e+00
  3.19733868e+01  3.48348821e+01  3.48348821e+01  3.48348821e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.48146100948503  E_coul = 55.6548852242188
cycle= 5 E= -127.826575785266  delta_E= -2.94e-12  |g|= 2.88e-07  |ddm|= 1.44e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.48146100948503  E_coul = 55.6548852242188
  HOMO = -0.639274101458805  LUMO = 4.75296390260034
  mo_energy =
[-3.24556278e+01 -1.71239517e+00 -6.39274101e-01 -6.39274101e-01
 -6.39274101e-01  4.75296390e+00  4.75296390e+00  4.75296390e+00
  3.19733864e+01  3.48348816e+01  3.48348816e+01  3.48348816e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.48146152009696  E_coul = 55.654885734830806
Extra cycle  E= -127.826575785266  delta_E= 7.11e-14  |g|= 6.87e-08  |ddm|= 6.92e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.71009227e+03 9.76856169e-01 2.27074251e+02 4.48241846e+01
 1.13073956e+01 2.04266737e+01 8.73525281e-01 4.66051814e+00]
E = -127.82657578526616
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.09226966        1
[INPUT] 0    0    [1    /1   ]  0.976856169093       1
[INPUT] 0    0    [1    /1   ]  227.074251054        1
[INPUT] 0    0    [1    /1   ]  44.8241846417        1
[INPUT] 0    0    [1    /1   ]  11.3073955948        1
[INPUT] 1    0    [1    /1   ]  20.4266737251        1
[INPUT] 1    0    [1    /1   ]  0.87352528068        1
[INPUT] 1    0    [1    /1   ]  4.66051814169        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0922696600128, 1.0]], [0, [0.9768561690932437, 1.0]], [0, [227.07425105366684, 1.0]], [0, [44.82418464166348, 1.0]], [0, [11.307395594755034, 1.0]], [1, [20.4266737251497, 1.0]], [1, [0.8735252806800138, 1.0]], [1, [4.660518141686833, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.09226966]
bas 1, expnt(s) = [0.97685617]
bas 2, expnt(s) = [227.07425105]
bas 3, expnt(s) = [44.82418464]
bas 4, expnt(s) = [11.30739559]
bas 5, expnt(s) = [20.42667373]
bas 6, expnt(s) = [0.87352528]
bas 7, expnt(s) = [4.66051814]
CPU time:       284.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71009227e+03 6.71861387e+02 9.76856169e-01 2.48249277e+00
 2.27074251e+02 1.47788602e+02 4.48241846e+01 4.37672564e+01
 1.13073956e+01 1.55789063e+01 2.04266737e+01 1.26686827e+02
 8.73525281e-01 2.46364847e+00 4.66051814e+00 1.99768563e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.846841214537825
cond(S) = 17.638229744092857
E1 = -182.49552675753787  E_coul = 54.91100655218199
init E= -127.584520205356
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.722463037663766  LUMO = 4.65914263997345
  mo_energy =
[-3.24949288e+01 -1.79786353e+00 -7.22463038e-01 -7.22463038e-01
 -7.22463038e-01  4.65914264e+00  4.65914264e+00  4.65914264e+00
  3.18997566e+01  3.47775629e+01  3.47775629e+01  3.47775629e+01
  3.12793900e+02  2.74143882e+03]
E1 = -183.53087592817968  E_coul = 55.70440894917641
cycle= 1 E= -127.826466979003  delta_E= -0.242  |g|= 0.0676  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0722581
diis-c [-0.00522123  1.        ]
  HOMO = -0.635961226049137  LUMO = 4.75764216318134
  mo_energy =
[-3.24443568e+01 -1.70885001e+00 -6.35961226e-01 -6.35961226e-01
 -6.35961226e-01  4.75764216e+00  4.75764216e+00  4.75764216e+00
  3.19828622e+01  3.48446563e+01  3.48446563e+01  3.48446563e+01
  3.12808471e+02  2.74138727e+03]
E1 = -183.47022406093643  E_coul = 55.643651726843416
cycle= 2 E= -127.826572334093  delta_E= -0.000105  |g|= 0.00781  |ddm|= 0.0102
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0127819
diis-c [-1.45195438e-04  5.64677846e-02  9.43532215e-01]
  HOMO = -0.639749961868684  LUMO = 4.7522726255131
  mo_energy =
[-3.24575577e+01 -1.71293971e+00 -6.39749962e-01 -6.39749962e-01
 -6.39749962e-01  4.75227263e+00  4.75227263e+00  4.75227263e+00
  3.19717474e+01  3.48332938e+01  3.48332938e+01  3.48332938e+01
  3.12794436e+02  2.74137229e+03]
E1 = -183.48320813511756  E_coul = 55.65663243370252
cycle= 3 E= -127.826575701415  delta_E= -3.37e-06  |g|= 0.0013  |ddm|= 0.00177
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00189107
diis-c [-8.58894150e-08 -4.25760369e-03  1.22565920e-01  8.81691684e-01]
  HOMO = -0.639277760295768  LUMO = 4.75295924618552
  mo_energy =
[-3.24556356e+01 -1.71240003e+00 -6.39277760e-01 -6.39277760e-01
 -6.39277760e-01  4.75295925e+00  4.75295925e+00  4.75295925e+00
  3.19733763e+01  3.48348740e+01  3.48348740e+01  3.48348740e+01
  3.12796594e+02  2.74137459e+03]
E1 = -183.48147013348643  E_coul = 55.654894348223145
cycle= 4 E= -127.826575785263  delta_E= -8.38e-08  |g|= 1.21e-05  |ddm|= 0.000241
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.15464e-05
diis-c [-1.91557225e-11  6.42467067e-05 -2.53828485e-03 -2.22438594e-02
  1.02471790e+00]
  HOMO = -0.639273959975087  LUMO = 4.75296410732154
  mo_energy =
[-3.24556273e+01 -1.71239503e+00 -6.39273960e-01 -6.39273960e-01
 -6.39273960e-01  4.75296411e+00  4.75296411e+00  4.75296411e+00
  3.19733868e+01  3.48348821e+01  3.48348821e+01  3.48348821e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.48146100948503  E_coul = 55.6548852242188
cycle= 5 E= -127.826575785266  delta_E= -2.94e-12  |g|= 2.88e-07  |ddm|= 1.44e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.48146100948503  E_coul = 55.6548852242188
  HOMO = -0.639274101458805  LUMO = 4.75296390260034
  mo_energy =
[-3.24556278e+01 -1.71239517e+00 -6.39274101e-01 -6.39274101e-01
 -6.39274101e-01  4.75296390e+00  4.75296390e+00  4.75296390e+00
  3.19733864e+01  3.48348816e+01  3.48348816e+01  3.48348816e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.48146152009696  E_coul = 55.654885734830806
Extra cycle  E= -127.826575785266  delta_E= 7.11e-14  |g|= 6.87e-08  |ddm|= 6.92e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.638229744092857
E1 = -183.48146152009696  E_coul = 55.654885734830806
init E= -127.826575785266
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.639274069479796  LUMO = 4.75296394859449
  mo_energy =
[-3.24556277e+01 -1.71239514e+00 -6.39274069e-01 -6.39274069e-01
 -6.39274069e-01  4.75296395e+00  4.75296395e+00  4.75296395e+00
  3.19733865e+01  3.48348817e+01  3.48348817e+01  3.48348817e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.4814614057558  E_coul = 55.65488562048964
cycle= 1 E= -127.826575785266  delta_E=    0  |g|= 1.5e-08  |ddm|= 1.58e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.4814614057558  E_coul = 55.65488562048964
  HOMO = -0.639274076642643  LUMO = 4.75296393825807
  mo_energy =
[-3.24556277e+01 -1.71239515e+00 -6.39274077e-01 -6.39274077e-01
 -6.39274077e-01  4.75296394e+00  4.75296394e+00  4.75296394e+00
  3.19733865e+01  3.48348817e+01  3.48348817e+01  3.48348817e+01
  3.12796592e+02  2.74137458e+03]
E1 = -183.48146143159147  E_coul = 55.654885646325226
Extra cycle  E= -127.826575785266  delta_E= -8.53e-14  |g|= 3.41e-09  |ddm|= 3.55e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71009227e+03 9.76856169e-01 2.27074251e+02 4.48241846e+01
 1.13073956e+01 2.04266737e+01 8.73525281e-01 4.66051814e+00]
grad_E = [ 2.26518681e-05  1.99572699e-01  8.05049437e-04 -7.56433411e-04
 -2.99646690e-02 -9.20108086e-03  1.60964463e-02  1.92817690e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:45:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1702.30405468        1
[INPUT] 0    0    [1    /1   ]  0.978085416248       1
[INPUT] 0    0    [1    /1   ]  191.952268784        1
[INPUT] 0    0    [1    /1   ]  38.3781494448        1
[INPUT] 0    0    [1    /1   ]  9.99013009518        1
[INPUT] 1    0    [1    /1   ]  19.0683141365        1
[INPUT] 1    0    [1    /1   ]  0.846720954143       1
[INPUT] 1    0    [1    /1   ]  4.28741040843        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1702.3040546819493, 1.0]], [0, [0.9780854162477133, 1.0]], [0, [191.9522687843334, 1.0]], [0, [38.378149444813644, 1.0]], [0, [9.990130095176838, 1.0]], [1, [19.06831413649826, 1.0]], [1, [0.8467209541432907, 1.0]], [1, [4.287410408427188, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1702.30405468]
bas 1, expnt(s) = [0.97808542]
bas 2, expnt(s) = [191.95226878]
bas 3, expnt(s) = [38.37814944]
bas 4, expnt(s) = [9.9901301]
bas 5, expnt(s) = [19.06831414]
bas 6, expnt(s) = [0.84672095]
bas 7, expnt(s) = [4.28741041]
CPU time:       288.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70230405e+03 6.69565201e+02 9.78085416e-01 2.48483532e+00
 1.91952269e+02 1.30289663e+02 3.83781494e+01 3.89563309e+01
 9.99013010e+00 1.41968954e+01 1.90683141e+01 1.16245129e+02
 8.46720954e-01 2.36951672e+00 4.28741041e+00 1.79981644e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.85906241841224
cond(S) = 18.30783886145737
E1 = -182.57772252361673  E_coul = 54.970248871581354
init E= -127.607473652035
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.725951654509668  LUMO = 4.33331458384734
  mo_energy =
[-3.24730640e+01 -1.78819863e+00 -7.25951655e-01 -7.25951655e-01
 -7.25951655e-01  4.33331458e+00  4.33331458e+00  4.33331458e+00
  2.59381418e+01  3.18849204e+01  3.18849204e+01  3.18849204e+01
  2.56401675e+02  2.59334260e+03]
E1 = -183.56514291744625  E_coul = 55.721136256205014
cycle= 1 E= -127.844006661241  delta_E= -0.237  |g|= 0.0689  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.081625
diis-c [-0.00666264  1.        ]
  HOMO = -0.643112652069938  LUMO = 4.4271615837287
  mo_energy =
[-3.24289679e+01 -1.70318932e+00 -6.43112652e-01 -6.43112652e-01
 -6.43112652e-01  4.42716158e+00  4.42716158e+00  4.42716158e+00
  2.60208674e+01  3.19494626e+01  3.19494626e+01  3.19494626e+01
  2.56408140e+02  2.59326811e+03]
E1 = -183.50167466789753  E_coul = 55.65756740644798
cycle= 2 E= -127.84410726145  delta_E= -0.000101  |g|= 0.00824  |ddm|= 0.0106
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134295
diis-c [-1.57860008e-04  5.55378679e-02  9.44462132e-01]
  HOMO = -0.647111336428696  LUMO = 4.42187902251339
  mo_energy =
[-3.24427151e+01 -1.70745828e+00 -6.47111336e-01 -6.47111336e-01
 -6.47111336e-01  4.42187902e+00  4.42187902e+00  4.42187902e+00
  2.60098718e+01  3.19378445e+01  3.19378445e+01  3.19378445e+01
  2.56393674e+02  2.59325263e+03]
E1 = -183.51613910007111  E_coul = 55.67202799481986
cycle= 3 E= -127.844111105251  delta_E= -3.84e-06  |g|= 0.0015  |ddm|= 0.00196
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00217922
diis-c [-1.07956109e-07 -3.01528087e-03  1.34453286e-01  8.68561995e-01]
  HOMO = -0.646563906258244  LUMO = 4.4226176145775
  mo_energy =
[-3.24405587e+01 -1.70683746e+00 -6.46563906e-01 -6.46563906e-01
 -6.46563906e-01  4.42261761e+00  4.42261761e+00  4.42261761e+00
  2.60116059e+01  3.19395895e+01  3.19395895e+01  3.19395895e+01
  2.56396064e+02  2.59325523e+03]
E1 = -183.5140366886833  E_coul = 55.66992546861666
cycle= 4 E= -127.844111220067  delta_E= -1.15e-07  |g|= 1.22e-05  |ddm|= 0.000292
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.42981e-05
diis-c [-2.27844130e-11  6.94899311e-05 -5.00200937e-03 -2.80135525e-02
  1.03294607e+00]
  HOMO = -0.646563687423245  LUMO = 4.42261738224887
  mo_energy =
[-3.24405628e+01 -1.70683573e+00 -6.46563687e-01 -6.46563687e-01
 -6.46563687e-01  4.42261738e+00  4.42261738e+00  4.42261738e+00
  2.60116077e+01  3.19395870e+01  3.19395870e+01  3.19395870e+01
  2.56396051e+02  2.59325520e+03]
E1 = -183.51404094747886  E_coul = 55.66992972740903
cycle= 5 E= -127.84411122007  delta_E= -3.21e-12  |g|= 3.08e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.51404094747886  E_coul = 55.66992972740903
  HOMO = -0.646563831206392  LUMO = 4.42261718586706
  mo_energy =
[-3.24405634e+01 -1.70683587e+00 -6.46563831e-01 -6.46563831e-01
 -6.46563831e-01  4.42261719e+00  4.42261719e+00  4.42261719e+00
  2.60116073e+01  3.19395865e+01  3.19395865e+01  3.19395865e+01
  2.56396050e+02  2.59325520e+03]
E1 = -183.51404151842178  E_coul = 55.669930298352
Extra cycle  E= -127.84411122007  delta_E= 5.68e-14  |g|= 7.8e-08  |ddm|= 7.78e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.70230405e+03 9.78085416e-01 1.91952269e+02 3.83781494e+01
 9.99013010e+00 1.90683141e+01 8.46720954e-01 4.28741041e+00]
E = -127.84411122006978
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1702.30405468        1
[INPUT] 0    0    [1    /1   ]  0.978085416248       1
[INPUT] 0    0    [1    /1   ]  191.952268784        1
[INPUT] 0    0    [1    /1   ]  38.3781494448        1
[INPUT] 0    0    [1    /1   ]  9.99013009518        1
[INPUT] 1    0    [1    /1   ]  19.0683141365        1
[INPUT] 1    0    [1    /1   ]  0.846720954143       1
[INPUT] 1    0    [1    /1   ]  4.28741040843        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1702.3040546819493, 1.0]], [0, [0.9780854162477133, 1.0]], [0, [191.9522687843334, 1.0]], [0, [38.378149444813644, 1.0]], [0, [9.990130095176838, 1.0]], [1, [19.06831413649826, 1.0]], [1, [0.8467209541432907, 1.0]], [1, [4.287410408427188, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1702.30405468]
bas 1, expnt(s) = [0.97808542]
bas 2, expnt(s) = [191.95226878]
bas 3, expnt(s) = [38.37814944]
bas 4, expnt(s) = [9.9901301]
bas 5, expnt(s) = [19.06831414]
bas 6, expnt(s) = [0.84672095]
bas 7, expnt(s) = [4.28741041]
CPU time:       289.61
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70230405e+03 6.69565201e+02 9.78085416e-01 2.48483532e+00
 1.91952269e+02 1.30289663e+02 3.83781494e+01 3.89563309e+01
 9.99013010e+00 1.41968954e+01 1.90683141e+01 1.16245129e+02
 8.46720954e-01 2.36951672e+00 4.28741041e+00 1.79981644e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.85906241841224
cond(S) = 18.30783886145737
E1 = -182.57772252361673  E_coul = 54.970248871581354
init E= -127.607473652035
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.725951654509668  LUMO = 4.33331458384734
  mo_energy =
[-3.24730640e+01 -1.78819863e+00 -7.25951655e-01 -7.25951655e-01
 -7.25951655e-01  4.33331458e+00  4.33331458e+00  4.33331458e+00
  2.59381418e+01  3.18849204e+01  3.18849204e+01  3.18849204e+01
  2.56401675e+02  2.59334260e+03]
E1 = -183.56514291744625  E_coul = 55.721136256205014
cycle= 1 E= -127.844006661241  delta_E= -0.237  |g|= 0.0689  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.081625
diis-c [-0.00666264  1.        ]
  HOMO = -0.643112652069938  LUMO = 4.4271615837287
  mo_energy =
[-3.24289679e+01 -1.70318932e+00 -6.43112652e-01 -6.43112652e-01
 -6.43112652e-01  4.42716158e+00  4.42716158e+00  4.42716158e+00
  2.60208674e+01  3.19494626e+01  3.19494626e+01  3.19494626e+01
  2.56408140e+02  2.59326811e+03]
E1 = -183.50167466789753  E_coul = 55.65756740644798
cycle= 2 E= -127.84410726145  delta_E= -0.000101  |g|= 0.00824  |ddm|= 0.0106
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134295
diis-c [-1.57860008e-04  5.55378679e-02  9.44462132e-01]
  HOMO = -0.647111336428696  LUMO = 4.42187902251339
  mo_energy =
[-3.24427151e+01 -1.70745828e+00 -6.47111336e-01 -6.47111336e-01
 -6.47111336e-01  4.42187902e+00  4.42187902e+00  4.42187902e+00
  2.60098718e+01  3.19378445e+01  3.19378445e+01  3.19378445e+01
  2.56393674e+02  2.59325263e+03]
E1 = -183.51613910007111  E_coul = 55.67202799481986
cycle= 3 E= -127.844111105251  delta_E= -3.84e-06  |g|= 0.0015  |ddm|= 0.00196
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00217922
diis-c [-1.07956109e-07 -3.01528087e-03  1.34453286e-01  8.68561995e-01]
  HOMO = -0.646563906258244  LUMO = 4.4226176145775
  mo_energy =
[-3.24405587e+01 -1.70683746e+00 -6.46563906e-01 -6.46563906e-01
 -6.46563906e-01  4.42261761e+00  4.42261761e+00  4.42261761e+00
  2.60116059e+01  3.19395895e+01  3.19395895e+01  3.19395895e+01
  2.56396064e+02  2.59325523e+03]
E1 = -183.5140366886833  E_coul = 55.66992546861666
cycle= 4 E= -127.844111220067  delta_E= -1.15e-07  |g|= 1.22e-05  |ddm|= 0.000292
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=1.42981e-05
diis-c [-2.27844130e-11  6.94899311e-05 -5.00200937e-03 -2.80135525e-02
  1.03294607e+00]
  HOMO = -0.646563687423245  LUMO = 4.42261738224887
  mo_energy =
[-3.24405628e+01 -1.70683573e+00 -6.46563687e-01 -6.46563687e-01
 -6.46563687e-01  4.42261738e+00  4.42261738e+00  4.42261738e+00
  2.60116077e+01  3.19395870e+01  3.19395870e+01  3.19395870e+01
  2.56396051e+02  2.59325520e+03]
E1 = -183.51404094747886  E_coul = 55.66992972740903
cycle= 5 E= -127.84411122007  delta_E= -3.21e-12  |g|= 3.08e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.51404094747886  E_coul = 55.66992972740903
  HOMO = -0.646563831206392  LUMO = 4.42261718586706
  mo_energy =
[-3.24405634e+01 -1.70683587e+00 -6.46563831e-01 -6.46563831e-01
 -6.46563831e-01  4.42261719e+00  4.42261719e+00  4.42261719e+00
  2.60116073e+01  3.19395865e+01  3.19395865e+01  3.19395865e+01
  2.56396050e+02  2.59325520e+03]
E1 = -183.51404151842178  E_coul = 55.669930298352
Extra cycle  E= -127.84411122007  delta_E= 5.68e-14  |g|= 7.8e-08  |ddm|= 7.78e-08
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.30783886145737
E1 = -183.51404151842178  E_coul = 55.669930298352
init E= -127.84411122007
    CPU time for initialize scf      0.07 sec, wall time      0.07 sec
  HOMO = -0.646563794977028  LUMO = 4.42261723424262
  mo_energy =
[-3.24405632e+01 -1.70683583e+00 -6.46563795e-01 -6.46563795e-01
 -6.46563795e-01  4.42261723e+00  4.42261723e+00  4.42261723e+00
  2.60116074e+01  3.19395866e+01  3.19395866e+01  3.19395866e+01
  2.56396050e+02  2.59325520e+03]
E1 = -183.51404138345202  E_coul = 55.6699301633822
cycle= 1 E= -127.84411122007  delta_E= -5.68e-14  |g|= 1.79e-08  |ddm|= 1.87e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.51404138345202  E_coul = 55.6699301633822
  HOMO = -0.646563803530393  LUMO = 4.42261722275881
  mo_energy =
[-3.24405633e+01 -1.70683584e+00 -6.46563804e-01 -6.46563804e-01
 -6.46563804e-01  4.42261722e+00  4.42261722e+00  4.42261722e+00
  2.60116074e+01  3.19395866e+01  3.19395866e+01  3.19395866e+01
  2.56396050e+02  2.59325520e+03]
E1 = -183.51404141590922  E_coul = 55.669930195839505
Extra cycle  E= -127.84411122007  delta_E= 1.14e-13  |g|= 4.32e-09  |ddm|= 4.45e-09
    CPU time for scf_cycle      0.16 sec, wall time      0.16 sec
exp = [1.70230405e+03 9.78085416e-01 1.91952269e+02 3.83781494e+01
 9.99013010e+00 1.90683141e+01 8.46720954e-01 4.28741041e+00]
grad_E = [ 1.11463873e-04  2.12543332e-01 -2.98151014e-04 -5.17450214e-04
 -3.75343463e-02 -7.87040899e-03  2.21072937e-01  1.43476609e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1706.81680543        1
[INPUT] 0    0    [1    /1   ]  0.979423754062       1
[INPUT] 0    0    [1    /1   ]  212.299522178        1
[INPUT] 0    0    [1    /1   ]  38.8484894728        1
[INPUT] 0    0    [1    /1   ]  9.67475949871        1
[INPUT] 1    0    [1    /1   ]  18.36772175          1
[INPUT] 1    0    [1    /1   ]  0.827563287417       1
[INPUT] 1    0    [1    /1   ]  4.07435256443        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1706.81680543149, 1.0]], [0, [0.9794237540624231, 1.0]], [0, [212.29952217762357, 1.0]], [0, [38.8484894728496, 1.0]], [0, [9.674759498711659, 1.0]], [1, [18.36772174997976, 1.0]], [1, [0.8275632874168389, 1.0]], [1, [4.074352564427717, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1706.81680543]
bas 1, expnt(s) = [0.97942375]
bas 2, expnt(s) = [212.29952218]
bas 3, expnt(s) = [38.84848947]
bas 4, expnt(s) = [9.6747595]
bas 5, expnt(s) = [18.36772175]
bas 6, expnt(s) = [0.82756329]
bas 7, expnt(s) = [4.07435256]
CPU time:       293.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70681681e+03 6.70896007e+02 9.79423754e-01 2.48738493e+00
 2.12299522e+02 1.40516326e+02 3.88484895e+01 3.93138546e+01
 9.67475950e+00 1.38594232e+01 1.83677217e+01 1.10931148e+02
 8.27563287e-01 2.30269232e+00 4.07435256e+00 1.68872002e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.866618999799876
cond(S) = 16.523547403561075
E1 = -182.6054912743506  E_coul = 54.98328262237722
init E= -127.622208651973
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.729097839154233  LUMO = 4.13555399035565
  mo_energy =
[-3.24592641e+01 -1.78307088e+00 -7.29097839e-01 -7.29097839e-01
 -7.29097839e-01  4.13555399e+00  4.13555399e+00  4.13555399e+00
  2.52883749e+01  3.03265460e+01  3.03265460e+01  3.03265460e+01
  2.74927404e+02  2.66524922e+03]
E1 = -183.5158008336148  E_coul = 55.67742285317614
cycle= 1 E= -127.838377980439  delta_E= -0.216  |g|= 0.0591  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0583153
diis-c [-0.00340067  1.        ]
  HOMO = -0.649922534004813  LUMO = 4.22446679954849
  mo_energy =
[-3.24282749e+01 -1.70248779e+00 -6.49922534e-01 -6.49922534e-01
 -6.49922534e-01  4.22446680e+00  4.22446680e+00  4.22446680e+00
  2.53640036e+01  3.03836295e+01  3.03836295e+01  3.03836295e+01
  2.74907696e+02  2.66513924e+03]
E1 = -183.45609082593194  E_coul = 55.61762424448237
cycle= 2 E= -127.83846658145  delta_E= -8.86e-05  |g|= 0.00773  |ddm|= 0.0101
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0125979
diis-c [-1.29413193e-04  8.64487721e-02  9.13551228e-01]
  HOMO = -0.653589734740504  LUMO = 4.21983486255146
  mo_energy =
[-3.24406829e+01 -1.70638688e+00 -6.53589735e-01 -6.53589735e-01
 -6.53589735e-01  4.21983486e+00  4.21983486e+00  4.21983486e+00
  2.53541271e+01  3.03732275e+01  3.03732275e+01  3.03732275e+01
  2.74894658e+02  2.66512536e+03]
E1 = -183.46962646161825  E_coul = 55.63115638863846
cycle= 3 E= -127.83847007298  delta_E= -3.49e-06  |g|= 0.00117  |ddm|= 0.00184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00165071
diis-c [-8.44965457e-08 -4.75232428e-03  1.08277403e-01  8.96474921e-01]
  HOMO = -0.653182436536048  LUMO = 4.22036391374926
  mo_energy =
[-3.24390360e+01 -1.70591617e+00 -6.53182437e-01 -6.53182437e-01
 -6.53182437e-01  4.22036391e+00  4.22036391e+00  4.22036391e+00
  2.53554535e+01  3.03745313e+01  3.03745313e+01  3.03745313e+01
  2.74896527e+02  2.66512739e+03]
E1 = -183.4679996092673  E_coul = 55.629529467805796
cycle= 4 E= -127.838470141462  delta_E= -6.85e-08  |g|= 1.4e-05  |ddm|= 0.000227
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=1.22675e-05
diis-c [-3.25423043e-11  8.10468006e-05 -2.74032912e-03 -2.64139927e-02
  1.02907328e+00]
  HOMO = -0.653178351615102  LUMO = 4.22036853480273
  mo_energy =
[-3.24390281e+01 -1.70591040e+00 -6.53178352e-01 -6.53178352e-01
 -6.53178352e-01  4.22036853e+00  4.22036853e+00  4.22036853e+00
  2.53554650e+01  3.03745392e+01  3.03745392e+01  3.03745392e+01
  2.74896526e+02  2.66512737e+03]
E1 = -183.46799036639766  E_coul = 55.62952022493206
cycle= 5 E= -127.838470141466  delta_E= -4.08e-12  |g|= 3.79e-07  |ddm|= 1.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.02 sec
E1 = -183.46799036639766  E_coul = 55.62952022493206
  HOMO = -0.653178533436732  LUMO = 4.2203682990012
  mo_energy =
[-3.24390288e+01 -1.70591058e+00 -6.53178533e-01 -6.53178533e-01
 -6.53178533e-01  4.22036830e+00  4.22036830e+00  4.22036830e+00
  2.53554645e+01  3.03745387e+01  3.03745387e+01  3.03745387e+01
  2.74896525e+02  2.66512737e+03]
E1 = -183.46799109634597  E_coul = 55.62952095488037
Extra cycle  E= -127.838470141466  delta_E=    0  |g|= 9.92e-08  |ddm|= 9.94e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.70681681e+03 9.79423754e-01 2.12299522e+02 3.88484895e+01
 9.67475950e+00 1.83677217e+01 8.27563287e-01 4.07435256e+00]
E = -127.83847014146559
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1704.11563691        1
[INPUT] 0    0    [1    /1   ]  0.978622673707       1
[INPUT] 0    0    [1    /1   ]  200.120396106        1
[INPUT] 0    0    [1    /1   ]  38.5669610332        1
[INPUT] 0    0    [1    /1   ]  9.86352887114        1
[INPUT] 1    0    [1    /1   ]  18.7870708796        1
[INPUT] 1    0    [1    /1   ]  0.839030370162       1
[INPUT] 1    0    [1    /1   ]  4.20188124324        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1704.1156369127739, 1.0]], [0, [0.9786226737074158, 1.0]], [0, [200.12039610603898, 1.0]], [0, [38.56696103324941, 1.0]], [0, [9.863528871136483, 1.0]], [1, [18.787070879578494, 1.0]], [1, [0.839030370162061, 1.0]], [1, [4.201881243235308, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1704.11563691]
bas 1, expnt(s) = [0.97862267]
bas 2, expnt(s) = [200.12039611]
bas 3, expnt(s) = [38.56696103]
bas 4, expnt(s) = [9.86352887]
bas 5, expnt(s) = [18.78707088]
bas 6, expnt(s) = [0.83903037]
bas 7, expnt(s) = [4.20188124]
CPU time:       294.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70411564e+03 6.70099541e+02 9.78622674e-01 2.48585893e+00
 2.00120396e+02 1.34426082e+02 3.85669610e+01 3.90999848e+01
 9.86352887e+00 1.40617465e+01 1.87870709e+01 1.14105935e+02
 8.39030370e-01 2.34264507e+00 4.20188124e+00 1.75504845e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.862165436960737
cond(S) = 17.53201695494555
E1 = -182.600442262204  E_coul = 54.976216323360376
init E= -127.624225938844
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.72722492437119  LUMO = 4.25356213312702
  mo_energy =
[-3.24702891e+01 -1.78628062e+00 -7.27224924e-01 -7.27224924e-01
 -7.27224924e-01  4.25356213e+00  4.25356213e+00  4.25356213e+00
  2.56753942e+01  3.12580748e+01  3.12580748e+01  3.12580748e+01
  2.63812386e+02  2.62223144e+03]
E1 = -183.55282779705905  E_coul = 55.70447575936679
cycle= 1 E= -127.848352037692  delta_E= -0.224  |g|= 0.0639  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0704999
diis-c [-0.00497023  1.        ]
  HOMO = -0.645913252249869  LUMO = 4.34539934629217
  mo_energy =
[-3.24311296e+01 -1.70312605e+00 -6.45913252e-01 -6.45913252e-01
 -6.45913252e-01  4.34539935e+00  4.34539935e+00  4.34539935e+00
  2.57553497e+01  3.13197294e+01  3.13197294e+01  3.13197294e+01
  2.63809212e+02  2.62214418e+03]
E1 = -183.49059717743555  E_coul = 55.64214918817609
cycle= 2 E= -127.848447989259  delta_E= -9.6e-05  |g|= 0.00807  |ddm|= 0.0104
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131455
diis-c [-1.46365827e-04  6.89292595e-02  9.31070741e-01]
  HOMO = -0.649789788720164  LUMO = 4.34036830951086
  mo_energy =
[-3.24443751e+01 -1.70725955e+00 -6.49789789e-01 -6.49789789e-01
 -6.49789789e-01  4.34036831e+00  4.34036831e+00  4.34036831e+00
  2.57447732e+01  3.13085723e+01  3.13085723e+01  3.13085723e+01
  2.63795283e+02  2.62212931e+03]
E1 = -183.50473742622205  E_coul = 55.65628570127754
cycle= 3 E= -127.848451724945  delta_E= -3.74e-06  |g|= 0.00136  |ddm|= 0.00192
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00195427
diis-c [-9.71748488e-08 -3.67053082e-03  1.23325087e-01  8.80345444e-01]
  HOMO = -0.64930186157556  LUMO = 4.34101672480825
  mo_energy =
[-3.24424351e+01 -1.70670258e+00 -6.49301862e-01 -6.49301862e-01
 -6.49301862e-01  4.34101672e+00  4.34101672e+00  4.34101672e+00
  2.57463334e+01  3.13101291e+01  3.13101291e+01  3.13101291e+01
  2.63797453e+02  2.62213167e+03]
E1 = -183.5028341335832  E_coul = 55.65438231488306
cycle= 4 E= -127.8484518187  delta_E= -9.38e-08  |g|= 1.22e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14049e-05
diis-c [-2.63503298e-11  7.59476026e-05 -4.10022958e-03 -2.75818330e-02
  1.03160612e+00]
  HOMO = -0.649300114567334  LUMO = 4.3410184660271
  mo_energy =
[-3.24424344e+01 -1.70669925e+00 -6.49300115e-01 -6.49300115e-01
 -6.49300115e-01  4.34101847e+00  4.34101847e+00  4.34101847e+00
  2.57463391e+01  3.13101308e+01  3.13101308e+01  3.13101308e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.502833095274  E_coul = 55.65438127657143
cycle= 5 E= -127.848451818703  delta_E= -2.44e-12  |g|= 3.43e-07  |ddm|= 1.25e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.502833095274  E_coul = 55.65438127657143
  HOMO = -0.649300277890398  LUMO = 4.34101824786874
  mo_energy =
[-3.24424350e+01 -1.70669941e+00 -6.49300278e-01 -6.49300278e-01
 -6.49300278e-01  4.34101825e+00  4.34101825e+00  4.34101825e+00
  2.57463387e+01  3.13101303e+01  3.13101303e+01  3.13101303e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.50283374383793  E_coul = 55.65438192513553
Extra cycle  E= -127.848451818702  delta_E= 1.99e-13  |g|= 8.84e-08  |ddm|= 8.83e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.70411564e+03 9.78622674e-01 2.00120396e+02 3.85669610e+01
 9.86352887e+00 1.87870709e+01 8.39030370e-01 4.20188124e+00]
E = -127.84845181870239
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1704.11563691        1
[INPUT] 0    0    [1    /1   ]  0.978622673707       1
[INPUT] 0    0    [1    /1   ]  200.120396106        1
[INPUT] 0    0    [1    /1   ]  38.5669610332        1
[INPUT] 0    0    [1    /1   ]  9.86352887114        1
[INPUT] 1    0    [1    /1   ]  18.7870708796        1
[INPUT] 1    0    [1    /1   ]  0.839030370162       1
[INPUT] 1    0    [1    /1   ]  4.20188124324        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1704.1156369127739, 1.0]], [0, [0.9786226737074158, 1.0]], [0, [200.12039610603898, 1.0]], [0, [38.56696103324941, 1.0]], [0, [9.863528871136483, 1.0]], [1, [18.787070879578494, 1.0]], [1, [0.839030370162061, 1.0]], [1, [4.201881243235308, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1704.11563691]
bas 1, expnt(s) = [0.97862267]
bas 2, expnt(s) = [200.12039611]
bas 3, expnt(s) = [38.56696103]
bas 4, expnt(s) = [9.86352887]
bas 5, expnt(s) = [18.78707088]
bas 6, expnt(s) = [0.83903037]
bas 7, expnt(s) = [4.20188124]
CPU time:       295.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70411564e+03 6.70099541e+02 9.78622674e-01 2.48585893e+00
 2.00120396e+02 1.34426082e+02 3.85669610e+01 3.90999848e+01
 9.86352887e+00 1.40617465e+01 1.87870709e+01 1.14105935e+02
 8.39030370e-01 2.34264507e+00 4.20188124e+00 1.75504845e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.862165436960737
cond(S) = 17.53201695494555
E1 = -182.600442262204  E_coul = 54.976216323360376
init E= -127.624225938844
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.72722492437119  LUMO = 4.25356213312702
  mo_energy =
[-3.24702891e+01 -1.78628062e+00 -7.27224924e-01 -7.27224924e-01
 -7.27224924e-01  4.25356213e+00  4.25356213e+00  4.25356213e+00
  2.56753942e+01  3.12580748e+01  3.12580748e+01  3.12580748e+01
  2.63812386e+02  2.62223144e+03]
E1 = -183.55282779705905  E_coul = 55.70447575936679
cycle= 1 E= -127.848352037692  delta_E= -0.224  |g|= 0.0639  |ddm|= 0.181
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0704999
diis-c [-0.00497023  1.        ]
  HOMO = -0.645913252249869  LUMO = 4.34539934629217
  mo_energy =
[-3.24311296e+01 -1.70312605e+00 -6.45913252e-01 -6.45913252e-01
 -6.45913252e-01  4.34539935e+00  4.34539935e+00  4.34539935e+00
  2.57553497e+01  3.13197294e+01  3.13197294e+01  3.13197294e+01
  2.63809212e+02  2.62214418e+03]
E1 = -183.49059717743555  E_coul = 55.64214918817609
cycle= 2 E= -127.848447989259  delta_E= -9.6e-05  |g|= 0.00807  |ddm|= 0.0104
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0131455
diis-c [-1.46365827e-04  6.89292595e-02  9.31070741e-01]
  HOMO = -0.649789788720164  LUMO = 4.34036830951086
  mo_energy =
[-3.24443751e+01 -1.70725955e+00 -6.49789789e-01 -6.49789789e-01
 -6.49789789e-01  4.34036831e+00  4.34036831e+00  4.34036831e+00
  2.57447732e+01  3.13085723e+01  3.13085723e+01  3.13085723e+01
  2.63795283e+02  2.62212931e+03]
E1 = -183.50473742622205  E_coul = 55.65628570127754
cycle= 3 E= -127.848451724945  delta_E= -3.74e-06  |g|= 0.00136  |ddm|= 0.00192
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00195427
diis-c [-9.71748488e-08 -3.67053082e-03  1.23325087e-01  8.80345444e-01]
  HOMO = -0.64930186157556  LUMO = 4.34101672480825
  mo_energy =
[-3.24424351e+01 -1.70670258e+00 -6.49301862e-01 -6.49301862e-01
 -6.49301862e-01  4.34101672e+00  4.34101672e+00  4.34101672e+00
  2.57463334e+01  3.13101291e+01  3.13101291e+01  3.13101291e+01
  2.63797453e+02  2.62213167e+03]
E1 = -183.5028341335832  E_coul = 55.65438231488306
cycle= 4 E= -127.8484518187  delta_E= -9.38e-08  |g|= 1.22e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=1.14049e-05
diis-c [-2.63503298e-11  7.59476026e-05 -4.10022958e-03 -2.75818330e-02
  1.03160612e+00]
  HOMO = -0.649300114567334  LUMO = 4.3410184660271
  mo_energy =
[-3.24424344e+01 -1.70669925e+00 -6.49300115e-01 -6.49300115e-01
 -6.49300115e-01  4.34101847e+00  4.34101847e+00  4.34101847e+00
  2.57463391e+01  3.13101308e+01  3.13101308e+01  3.13101308e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.502833095274  E_coul = 55.65438127657143
cycle= 5 E= -127.848451818703  delta_E= -2.44e-12  |g|= 3.43e-07  |ddm|= 1.25e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.502833095274  E_coul = 55.65438127657143
  HOMO = -0.649300277890398  LUMO = 4.34101824786874
  mo_energy =
[-3.24424350e+01 -1.70669941e+00 -6.49300278e-01 -6.49300278e-01
 -6.49300278e-01  4.34101825e+00  4.34101825e+00  4.34101825e+00
  2.57463387e+01  3.13101303e+01  3.13101303e+01  3.13101303e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.50283374383793  E_coul = 55.65438192513553
Extra cycle  E= -127.848451818702  delta_E= 1.99e-13  |g|= 8.84e-08  |ddm|= 8.83e-08
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.53201695494555
E1 = -183.50283374383793  E_coul = 55.65438192513553
init E= -127.848451818702
    CPU time for initialize scf      0.08 sec, wall time      0.08 sec
  HOMO = -0.649300236632581  LUMO = 4.34101830201397
  mo_energy =
[-3.24424349e+01 -1.70669936e+00 -6.49300237e-01 -6.49300237e-01
 -6.49300237e-01  4.34101830e+00  4.34101830e+00  4.34101830e+00
  2.57463388e+01  3.13101305e+01  3.13101305e+01  3.13101305e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.50283358863754  E_coul = 55.65438176993508
cycle= 1 E= -127.848451818702  delta_E= -8.53e-14  |g|= 2.05e-08  |ddm|= 2.14e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.50283358863754  E_coul = 55.65438176993508
  HOMO = -0.649300246495084  LUMO = 4.34101828900546
  mo_energy =
[-3.24424349e+01 -1.70669937e+00 -6.49300246e-01 -6.49300246e-01
 -6.49300246e-01  4.34101829e+00  4.34101829e+00  4.34101829e+00
  2.57463388e+01  3.13101304e+01  3.13101304e+01  3.13101304e+01
  2.63797444e+02  2.62213164e+03]
E1 = -183.50283362638635  E_coul = 55.65438180768375
Extra cycle  E= -127.848451818703  delta_E= -1.28e-13  |g|= 5.02e-09  |ddm|= 5.17e-09
    CPU time for scf_cycle      0.16 sec, wall time      0.17 sec
exp = [1.70411564e+03 9.78622674e-01 2.00120396e+02 3.85669610e+01
 9.86352887e+00 1.87870709e+01 8.39030370e-01 4.20188124e+00]
grad_E = [ 7.65790730e-05  2.11989831e-01  8.35757938e-04 -4.17258386e-03
 -4.11852530e-02 -7.36569153e-03  2.57657571e-01  1.31487965e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1706.13860523        1
[INPUT] 0    0    [1    /1   ]  0.977595780194       1
[INPUT] 0    0    [1    /1   ]  209.244993169        1
[INPUT] 0    0    [1    /1   ]  41.0865637311        1
[INPUT] 0    0    [1    /1   ]  10.194466283         1
[INPUT] 1    0    [1    /1   ]  19.1407513351        1
[INPUT] 1    0    [1    /1   ]  0.843965151547       1
[INPUT] 1    0    [1    /1   ]  4.24919505504        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1706.1386052304745, 1.0]], [0, [0.9775957801937779, 1.0]], [0, [209.24499316915268, 1.0]], [0, [41.08656373114958, 1.0]], [0, [10.194466282985681, 1.0]], [1, [19.140751335097764, 1.0]], [1, [0.8439651515468716, 1.0]], [1, [4.249195055040452, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1706.13860523]
bas 1, expnt(s) = [0.97759578]
bas 2, expnt(s) = [209.24499317]
bas 3, expnt(s) = [41.08656373]
bas 4, expnt(s) = [10.19446628]
bas 5, expnt(s) = [19.14075134]
bas 6, expnt(s) = [0.84396515]
bas 7, expnt(s) = [4.24919506]
CPU time:       299.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70613861e+03 6.70696063e+02 9.77595780e-01 2.48390232e+00
 2.09244993e+02 1.38997289e+02 4.10865637e+01 4.10005696e+01
 1.01944663e+01 1.44141287e+01 1.91407513e+01 1.16797385e+02
 8.43965152e-01 2.35988063e+00 4.24919506e+00 1.77978576e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.860060560566753
cond(S) = 17.235441820317643
E1 = -182.56936017745545  E_coul = 54.962267896518185
init E= -127.607092280937
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.727848013292662  LUMO = 4.29558247648256
  mo_energy =
[-3.24782336e+01 -1.78628663e+00 -7.27848013e-01 -7.27848013e-01
 -7.27848013e-01  4.29558248e+00  4.29558248e+00  4.29558248e+00
  2.75259122e+01  3.18439773e+01  3.18439773e+01  3.18439773e+01
  2.80949978e+02  2.66341616e+03]
E1 = -183.56413717188397  E_coul = 55.71017512364277
cycle= 1 E= -127.853962048241  delta_E= -0.247  |g|= 0.0692  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709066
diis-c [-0.00502775  1.        ]
  HOMO = -0.644596112321371  LUMO = 4.38936296716391
  mo_energy =
[-3.24376374e+01 -1.70052711e+00 -6.44596112e-01 -6.44596112e-01
 -6.44596112e-01  4.38936297e+00  4.38936297e+00  4.38936297e+00
  2.76071251e+01  3.19063091e+01  3.19063091e+01  3.19063091e+01
  2.80943718e+02  2.66333531e+03]
E1 = -183.50217534870532  E_coul = 55.648112763308546
cycle= 2 E= -127.854062585397  delta_E= -0.000101  |g|= 0.00798  |ddm|= 0.0105
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131915
diis-c [-1.51985414e-04  6.29834076e-02  9.37016592e-01]
  HOMO = -0.648474463502254  LUMO = 4.38427915128731
  mo_energy =
[-3.24509577e+01 -1.70464196e+00 -6.48474464e-01 -6.48474464e-01
 -6.48474464e-01  4.38427915e+00  4.38427915e+00  4.38427915e+00
  2.75963398e+01  3.18950276e+01  3.18950276e+01  3.18950276e+01
  2.80929499e+02  2.66332013e+03]
E1 = -183.5162226710253  E_coul = 55.6621563944126
cycle= 3 E= -127.854066276613  delta_E= -3.69e-06  |g|= 0.0014  |ddm|= 0.00191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00199724
diis-c [-1.25395248e-07 -3.42340982e-03  1.26060790e-01  8.77362620e-01]
  HOMO = -0.647967304829966  LUMO = 4.38495675649838
  mo_energy =
[-3.24489567e+01 -1.70406379e+00 -6.47967305e-01 -6.47967305e-01
 -6.47967305e-01  4.38495676e+00  4.38495676e+00  4.38495676e+00
  2.75979886e+01  3.18966457e+01  3.18966457e+01  3.18966457e+01
  2.80931724e+02  2.66332253e+03]
E1 = -183.5142820445264  E_coul = 55.660215670071324
cycle= 4 E= -127.854066374455  delta_E= -9.78e-08  |g|= 1.24e-05  |ddm|= 0.00027
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.41065e-05
diis-c [-1.72668808e-11  5.42289175e-05 -4.46284427e-03 -2.65994371e-02
  1.03100805e+00]
  HOMO = -0.647966834340196  LUMO = 4.38495682096534
  mo_energy =
[-3.24489605e+01 -1.70406184e+00 -6.47966834e-01 -6.47966834e-01
 -6.47966834e-01  4.38495682e+00  4.38495682e+00  4.38495682e+00
  2.75979907e+01  3.18966436e+01  3.18966436e+01  3.18966436e+01
  2.80931709e+02  2.66332250e+03]
E1 = -183.51428555520755  E_coul = 55.66021918074965
cycle= 5 E= -127.854066374458  delta_E= -2.83e-12  |g|= 2.2e-07  |ddm|= 1.21e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.51428555520755  E_coul = 55.66021918074965
  HOMO = -0.647966936668325  LUMO = 4.38495668193927
  mo_energy =
[-3.24489608e+01 -1.70406195e+00 -6.47966937e-01 -6.47966937e-01
 -6.47966937e-01  4.38495668e+00  4.38495668e+00  4.38495668e+00
  2.75979904e+01  3.18966432e+01  3.18966432e+01  3.18966432e+01
  2.80931708e+02  2.66332249e+03]
E1 = -183.51428596194546  E_coul = 55.660219587487596
Extra cycle  E= -127.854066374458  delta_E= 4.26e-14  |g|= 5.52e-08  |ddm|= 5.54e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.70613861e+03 9.77595780e-01 2.09244993e+02 4.10865637e+01
 1.01944663e+01 1.91407513e+01 8.43965152e-01 4.24919506e+00]
E = -127.85406637445786
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1706.13860523        1
[INPUT] 0    0    [1    /1   ]  0.977595780194       1
[INPUT] 0    0    [1    /1   ]  209.244993169        1
[INPUT] 0    0    [1    /1   ]  41.0865637311        1
[INPUT] 0    0    [1    /1   ]  10.194466283         1
[INPUT] 1    0    [1    /1   ]  19.1407513351        1
[INPUT] 1    0    [1    /1   ]  0.843965151547       1
[INPUT] 1    0    [1    /1   ]  4.24919505504        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1706.1386052304745, 1.0]], [0, [0.9775957801937779, 1.0]], [0, [209.24499316915268, 1.0]], [0, [41.08656373114958, 1.0]], [0, [10.194466282985681, 1.0]], [1, [19.140751335097764, 1.0]], [1, [0.8439651515468716, 1.0]], [1, [4.249195055040452, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1706.13860523]
bas 1, expnt(s) = [0.97759578]
bas 2, expnt(s) = [209.24499317]
bas 3, expnt(s) = [41.08656373]
bas 4, expnt(s) = [10.19446628]
bas 5, expnt(s) = [19.14075134]
bas 6, expnt(s) = [0.84396515]
bas 7, expnt(s) = [4.24919506]
CPU time:       300.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70613861e+03 6.70696063e+02 9.77595780e-01 2.48390232e+00
 2.09244993e+02 1.38997289e+02 4.10865637e+01 4.10005696e+01
 1.01944663e+01 1.44141287e+01 1.91407513e+01 1.16797385e+02
 8.43965152e-01 2.35988063e+00 4.24919506e+00 1.77978576e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.860060560566753
cond(S) = 17.235441820317643
E1 = -182.56936017745545  E_coul = 54.962267896518185
init E= -127.607092280937
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.727848013292662  LUMO = 4.29558247648256
  mo_energy =
[-3.24782336e+01 -1.78628663e+00 -7.27848013e-01 -7.27848013e-01
 -7.27848013e-01  4.29558248e+00  4.29558248e+00  4.29558248e+00
  2.75259122e+01  3.18439773e+01  3.18439773e+01  3.18439773e+01
  2.80949978e+02  2.66341616e+03]
E1 = -183.56413717188397  E_coul = 55.71017512364277
cycle= 1 E= -127.853962048241  delta_E= -0.247  |g|= 0.0692  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709066
diis-c [-0.00502775  1.        ]
  HOMO = -0.644596112321371  LUMO = 4.38936296716391
  mo_energy =
[-3.24376374e+01 -1.70052711e+00 -6.44596112e-01 -6.44596112e-01
 -6.44596112e-01  4.38936297e+00  4.38936297e+00  4.38936297e+00
  2.76071251e+01  3.19063091e+01  3.19063091e+01  3.19063091e+01
  2.80943718e+02  2.66333531e+03]
E1 = -183.50217534870532  E_coul = 55.648112763308546
cycle= 2 E= -127.854062585397  delta_E= -0.000101  |g|= 0.00798  |ddm|= 0.0105
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131915
diis-c [-1.51985414e-04  6.29834076e-02  9.37016592e-01]
  HOMO = -0.648474463502254  LUMO = 4.38427915128731
  mo_energy =
[-3.24509577e+01 -1.70464196e+00 -6.48474464e-01 -6.48474464e-01
 -6.48474464e-01  4.38427915e+00  4.38427915e+00  4.38427915e+00
  2.75963398e+01  3.18950276e+01  3.18950276e+01  3.18950276e+01
  2.80929499e+02  2.66332013e+03]
E1 = -183.5162226710253  E_coul = 55.6621563944126
cycle= 3 E= -127.854066276613  delta_E= -3.69e-06  |g|= 0.0014  |ddm|= 0.00191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00199724
diis-c [-1.25395248e-07 -3.42340982e-03  1.26060790e-01  8.77362620e-01]
  HOMO = -0.647967304829966  LUMO = 4.38495675649838
  mo_energy =
[-3.24489567e+01 -1.70406379e+00 -6.47967305e-01 -6.47967305e-01
 -6.47967305e-01  4.38495676e+00  4.38495676e+00  4.38495676e+00
  2.75979886e+01  3.18966457e+01  3.18966457e+01  3.18966457e+01
  2.80931724e+02  2.66332253e+03]
E1 = -183.5142820445264  E_coul = 55.660215670071324
cycle= 4 E= -127.854066374455  delta_E= -9.78e-08  |g|= 1.24e-05  |ddm|= 0.00027
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.41065e-05
diis-c [-1.72668808e-11  5.42289175e-05 -4.46284427e-03 -2.65994371e-02
  1.03100805e+00]
  HOMO = -0.647966834340196  LUMO = 4.38495682096534
  mo_energy =
[-3.24489605e+01 -1.70406184e+00 -6.47966834e-01 -6.47966834e-01
 -6.47966834e-01  4.38495682e+00  4.38495682e+00  4.38495682e+00
  2.75979907e+01  3.18966436e+01  3.18966436e+01  3.18966436e+01
  2.80931709e+02  2.66332250e+03]
E1 = -183.51428555520755  E_coul = 55.66021918074965
cycle= 5 E= -127.854066374458  delta_E= -2.83e-12  |g|= 2.2e-07  |ddm|= 1.21e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.51428555520755  E_coul = 55.66021918074965
  HOMO = -0.647966936668325  LUMO = 4.38495668193927
  mo_energy =
[-3.24489608e+01 -1.70406195e+00 -6.47966937e-01 -6.47966937e-01
 -6.47966937e-01  4.38495668e+00  4.38495668e+00  4.38495668e+00
  2.75979904e+01  3.18966432e+01  3.18966432e+01  3.18966432e+01
  2.80931708e+02  2.66332249e+03]
E1 = -183.51428596194546  E_coul = 55.660219587487596
Extra cycle  E= -127.854066374458  delta_E= 4.26e-14  |g|= 5.52e-08  |ddm|= 5.54e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.235441820317643
E1 = -183.51428596194546  E_coul = 55.660219587487596
init E= -127.854066374458
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.647966910804632  LUMO = 4.38495671615684
  mo_energy =
[-3.24489607e+01 -1.70406192e+00 -6.47966911e-01 -6.47966911e-01
 -6.47966911e-01  4.38495672e+00  4.38495672e+00  4.38495672e+00
  2.75979905e+01  3.18966433e+01  3.18966433e+01  3.18966433e+01
  2.80931708e+02  2.66332249e+03]
E1 = -183.514285865706  E_coul = 55.66021949124813
cycle= 1 E= -127.854066374458  delta_E= -1.42e-14  |g|= 1.27e-08  |ddm|= 1.33e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.514285865706  E_coul = 55.66021949124813
  HOMO = -0.647966916917654  LUMO = 4.3849567080303
  mo_energy =
[-3.24489608e+01 -1.70406192e+00 -6.47966917e-01 -6.47966917e-01
 -6.47966917e-01  4.38495671e+00  4.38495671e+00  4.38495671e+00
  2.75979905e+01  3.18966433e+01  3.18966433e+01  3.18966433e+01
  2.80931708e+02  2.66332249e+03]
E1 = -183.51428588879614  E_coul = 55.66021951433826
Extra cycle  E= -127.854066374458  delta_E= -1.42e-14  |g|= 3.06e-09  |ddm|= 3.17e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70613861e+03 9.77595780e-01 2.09244993e+02 4.10865637e+01
 1.01944663e+01 1.91407513e+01 8.43965152e-01 4.24919506e+00]
grad_E = [ 6.27163188e-05  2.03594557e-01  2.76244019e-04  5.01536954e-03
 -6.13754437e-02 -6.77718097e-03  2.50679796e-01  1.32527811e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1706.88563551        1
[INPUT] 0    0    [1    /1   ]  0.976068939985       1
[INPUT] 0    0    [1    /1   ]  212.617976852        1
[INPUT] 0    0    [1    /1   ]  41.8777491799        1
[INPUT] 0    0    [1    /1   ]  10.4649503812        1
[INPUT] 1    0    [1    /1   ]  19.401861141         1
[INPUT] 1    0    [1    /1   ]  0.838245358869       1
[INPUT] 1    0    [1    /1   ]  4.25758671794        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1706.8856355110784, 1.0]], [0, [0.976068939985098, 1.0]], [0, [212.61797685228532, 1.0]], [0, [41.87774917991943, 1.0]], [0, [10.46495038115752, 1.0]], [1, [19.401861141024362, 1.0]], [1, [0.8382453588691002, 1.0]], [1, [4.257586717942814, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1706.88563551]
bas 1, expnt(s) = [0.97606894]
bas 2, expnt(s) = [212.61797685]
bas 3, expnt(s) = [41.87774918]
bas 4, expnt(s) = [10.46495038]
bas 5, expnt(s) = [19.40186114]
bas 6, expnt(s) = [0.83824536]
bas 7, expnt(s) = [4.25758672]
CPU time:       304.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70688564e+03 6.70916298e+02 9.76068940e-01 2.48099217e+00
 2.12617977e+02 1.40674380e+02 4.18777492e+01 4.15913027e+01
 1.04649504e+01 1.47000193e+01 1.94018611e+01 1.18792393e+02
 8.38245359e-01 2.33990561e+00 4.25758672e+00 1.78418043e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.86265662916113
cond(S) = 17.390936045373543
E1 = -182.58363418728842  E_coul = 54.95737253302987
init E= -127.626261654259
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.728544610847015  LUMO = 4.27790526998481
  mo_energy =
[-3.24831780e+01 -1.78808016e+00 -7.28544611e-01 -7.28544611e-01
 -7.28544611e-01  4.27790527e+00  4.27790527e+00  4.27790527e+00
  2.85157763e+01  3.21694043e+01  3.21694043e+01  3.21694043e+01
  2.87430462e+02  2.67863110e+03]
E1 = -183.50613855341004  E_coul = 55.63904643038595
cycle= 1 E= -127.867092123024  delta_E= -0.241  |g|= 0.0644  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0676475
diis-c [-0.00457619  1.        ]
  HOMO = -0.650585655459024  LUMO = 4.36532697667494
  mo_energy =
[-3.24540438e+01 -1.70826673e+00 -6.50585655e-01 -6.50585655e-01
 -6.50585655e-01  4.36532698e+00  4.36532698e+00  4.36532698e+00
  2.85852833e+01  3.22207840e+01  3.22207840e+01  3.22207840e+01
  2.87414185e+02  2.67854116e+03]
E1 = -183.45620351253785  E_coul = 55.58903373623635
cycle= 2 E= -127.867169776301  delta_E= -7.77e-05  |g|= 0.00642  |ddm|= 0.00882
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0107252
diis-c [-1.10770109e-04  2.99639753e-02  9.70036025e-01]
  HOMO = -0.653854323733408  LUMO = 4.36104994417018
  mo_energy =
[-3.24650347e+01 -1.71172268e+00 -6.53854324e-01 -6.53854324e-01
 -6.53854324e-01  4.36104994e+00  4.36104994e+00  4.36104994e+00
  2.85763026e+01  3.22113739e+01  3.22113739e+01  3.22113739e+01
  2.87402586e+02  2.67852884e+03]
E1 = -183.4679826257321  E_coul = 55.60081046570906
cycle= 3 E= -127.867172160023  delta_E= -2.38e-06  |g|= 0.00139  |ddm|= 0.0016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00203454
diis-c [-1.12650571e-07 -3.59581279e-03  1.56150277e-01  8.47445536e-01]
  HOMO = -0.653334291272171  LUMO = 4.36174321399479
  mo_energy =
[-3.24630311e+01 -1.71113520e+00 -6.53334291e-01 -6.53334291e-01
 -6.53334291e-01  4.36174321e+00  4.36174321e+00  4.36174321e+00
  2.85779671e+01  3.22130138e+01  3.22130138e+01  3.22130138e+01
  2.87404797e+02  2.67853121e+03]
E1 = -183.46600479090654  E_coul = 55.59883253005688
cycle= 4 E= -127.86717226085  delta_E= -1.01e-07  |g|= 1.13e-05  |ddm|= 0.000273
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.23939e-05
diis-c [-1.75707235e-11  5.82153101e-05 -5.02799071e-03 -2.39956901e-02
  1.02896547e+00]
  HOMO = -0.653333573116661  LUMO = 4.36174363150632
  mo_energy =
[-3.24630339e+01 -1.71113314e+00 -6.53333573e-01 -6.53333573e-01
 -6.53333573e-01  4.36174363e+00  4.36174363e+00  4.36174363e+00
  2.85779695e+01  3.22130124e+01  3.22130124e+01  3.22130124e+01
  2.87404784e+02  2.67853118e+03]
E1 = -183.46600713419852  E_coul = 55.59883487334695
cycle= 5 E= -127.867172260852  delta_E= -1.9e-12  |g|= 2.44e-07  |ddm|= 1.03e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.46600713419852  E_coul = 55.59883487334695
  HOMO = -0.653333690163519  LUMO = 4.36174347352833
  mo_energy =
[-3.24630344e+01 -1.71113326e+00 -6.53333690e-01 -6.53333690e-01
 -6.53333690e-01  4.36174347e+00  4.36174347e+00  4.36174347e+00
  2.85779691e+01  3.22130120e+01  3.22130120e+01  3.22130120e+01
  2.87404783e+02  2.67853118e+03]
E1 = -183.46600759143425  E_coul = 55.59883533058251
Extra cycle  E= -127.867172260852  delta_E= -1.71e-13  |g|= 6.17e-08  |ddm|= 6.21e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.70688564e+03 9.76068940e-01 2.12617977e+02 4.18777492e+01
 1.04649504e+01 1.94018611e+01 8.38245359e-01 4.25758672e+00]
E = -127.86717226085173
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1706.88563551        1
[INPUT] 0    0    [1    /1   ]  0.976068939985       1
[INPUT] 0    0    [1    /1   ]  212.617976852        1
[INPUT] 0    0    [1    /1   ]  41.8777491799        1
[INPUT] 0    0    [1    /1   ]  10.4649503812        1
[INPUT] 1    0    [1    /1   ]  19.401861141         1
[INPUT] 1    0    [1    /1   ]  0.838245358869       1
[INPUT] 1    0    [1    /1   ]  4.25758671794        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1706.8856355110784, 1.0]], [0, [0.976068939985098, 1.0]], [0, [212.61797685228532, 1.0]], [0, [41.87774917991943, 1.0]], [0, [10.46495038115752, 1.0]], [1, [19.401861141024362, 1.0]], [1, [0.8382453588691002, 1.0]], [1, [4.257586717942814, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1706.88563551]
bas 1, expnt(s) = [0.97606894]
bas 2, expnt(s) = [212.61797685]
bas 3, expnt(s) = [41.87774918]
bas 4, expnt(s) = [10.46495038]
bas 5, expnt(s) = [19.40186114]
bas 6, expnt(s) = [0.83824536]
bas 7, expnt(s) = [4.25758672]
CPU time:       305.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70688564e+03 6.70916298e+02 9.76068940e-01 2.48099217e+00
 2.12617977e+02 1.40674380e+02 4.18777492e+01 4.15913027e+01
 1.04649504e+01 1.47000193e+01 1.94018611e+01 1.18792393e+02
 8.38245359e-01 2.33990561e+00 4.25758672e+00 1.78418043e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.86265662916113
cond(S) = 17.390936045373543
E1 = -182.58363418728842  E_coul = 54.95737253302987
init E= -127.626261654259
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.728544610847015  LUMO = 4.27790526998481
  mo_energy =
[-3.24831780e+01 -1.78808016e+00 -7.28544611e-01 -7.28544611e-01
 -7.28544611e-01  4.27790527e+00  4.27790527e+00  4.27790527e+00
  2.85157763e+01  3.21694043e+01  3.21694043e+01  3.21694043e+01
  2.87430462e+02  2.67863110e+03]
E1 = -183.50613855341004  E_coul = 55.63904643038595
cycle= 1 E= -127.867092123024  delta_E= -0.241  |g|= 0.0644  |ddm|= 0.191
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0676475
diis-c [-0.00457619  1.        ]
  HOMO = -0.650585655459024  LUMO = 4.36532697667494
  mo_energy =
[-3.24540438e+01 -1.70826673e+00 -6.50585655e-01 -6.50585655e-01
 -6.50585655e-01  4.36532698e+00  4.36532698e+00  4.36532698e+00
  2.85852833e+01  3.22207840e+01  3.22207840e+01  3.22207840e+01
  2.87414185e+02  2.67854116e+03]
E1 = -183.45620351253785  E_coul = 55.58903373623635
cycle= 2 E= -127.867169776301  delta_E= -7.77e-05  |g|= 0.00642  |ddm|= 0.00882
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0107252
diis-c [-1.10770109e-04  2.99639753e-02  9.70036025e-01]
  HOMO = -0.653854323733408  LUMO = 4.36104994417018
  mo_energy =
[-3.24650347e+01 -1.71172268e+00 -6.53854324e-01 -6.53854324e-01
 -6.53854324e-01  4.36104994e+00  4.36104994e+00  4.36104994e+00
  2.85763026e+01  3.22113739e+01  3.22113739e+01  3.22113739e+01
  2.87402586e+02  2.67852884e+03]
E1 = -183.4679826257321  E_coul = 55.60081046570906
cycle= 3 E= -127.867172160023  delta_E= -2.38e-06  |g|= 0.00139  |ddm|= 0.0016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00203454
diis-c [-1.12650571e-07 -3.59581279e-03  1.56150277e-01  8.47445536e-01]
  HOMO = -0.653334291272171  LUMO = 4.36174321399479
  mo_energy =
[-3.24630311e+01 -1.71113520e+00 -6.53334291e-01 -6.53334291e-01
 -6.53334291e-01  4.36174321e+00  4.36174321e+00  4.36174321e+00
  2.85779671e+01  3.22130138e+01  3.22130138e+01  3.22130138e+01
  2.87404797e+02  2.67853121e+03]
E1 = -183.46600479090654  E_coul = 55.59883253005688
cycle= 4 E= -127.86717226085  delta_E= -1.01e-07  |g|= 1.13e-05  |ddm|= 0.000273
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.23939e-05
diis-c [-1.75707235e-11  5.82153101e-05 -5.02799071e-03 -2.39956901e-02
  1.02896547e+00]
  HOMO = -0.653333573116661  LUMO = 4.36174363150632
  mo_energy =
[-3.24630339e+01 -1.71113314e+00 -6.53333573e-01 -6.53333573e-01
 -6.53333573e-01  4.36174363e+00  4.36174363e+00  4.36174363e+00
  2.85779695e+01  3.22130124e+01  3.22130124e+01  3.22130124e+01
  2.87404784e+02  2.67853118e+03]
E1 = -183.46600713419852  E_coul = 55.59883487334695
cycle= 5 E= -127.867172260852  delta_E= -1.9e-12  |g|= 2.44e-07  |ddm|= 1.03e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.46600713419852  E_coul = 55.59883487334695
  HOMO = -0.653333690163519  LUMO = 4.36174347352833
  mo_energy =
[-3.24630344e+01 -1.71113326e+00 -6.53333690e-01 -6.53333690e-01
 -6.53333690e-01  4.36174347e+00  4.36174347e+00  4.36174347e+00
  2.85779691e+01  3.22130120e+01  3.22130120e+01  3.22130120e+01
  2.87404783e+02  2.67853118e+03]
E1 = -183.46600759143425  E_coul = 55.59883533058251
Extra cycle  E= -127.867172260852  delta_E= -1.71e-13  |g|= 6.17e-08  |ddm|= 6.21e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.390936045373543
E1 = -183.46600759143425  E_coul = 55.59883533058251
init E= -127.867172260852
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.653333661112617  LUMO = 4.36174351203967
  mo_energy =
[-3.24630343e+01 -1.71113323e+00 -6.53333661e-01 -6.53333661e-01
 -6.53333661e-01  4.36174351e+00  4.36174351e+00  4.36174351e+00
  2.85779692e+01  3.22130121e+01  3.22130121e+01  3.22130121e+01
  2.87404784e+02  2.67853118e+03]
E1 = -183.46600748263597  E_coul = 55.59883522178443
cycle= 1 E= -127.867172260852  delta_E= 1.85e-13  |g|= 1.43e-08  |ddm|= 1.5e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.46600748263597  E_coul = 55.59883522178443
  HOMO = -0.653333668021612  LUMO = 4.36174350284403
  mo_energy =
[-3.24630343e+01 -1.71113324e+00 -6.53333668e-01 -6.53333668e-01
 -6.53333668e-01  4.36174350e+00  4.36174350e+00  4.36174350e+00
  2.85779692e+01  3.22130121e+01  3.22130121e+01  3.22130121e+01
  2.87404784e+02  2.67853118e+03]
E1 = -183.46600750882124  E_coul = 55.598835247969525
Extra cycle  E= -127.867172260852  delta_E= -1.56e-13  |g|= 3.46e-09  |ddm|= 3.59e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70688564e+03 9.76068940e-01 2.12617977e+02 4.18777492e+01
 1.04649504e+01 1.94018611e+01 8.38245359e-01 4.25758672e+00]
grad_E = [ 5.45881610e-05  1.95222547e-01  3.86000141e-04  3.36449076e-03
 -5.28999935e-02 -6.16155433e-03  1.90299408e-01  1.37994413e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.22599661        1
[INPUT] 0    0    [1    /1   ]  0.968884878452       1
[INPUT] 0    0    [1    /1   ]  223.198021303        1
[INPUT] 0    0    [1    /1   ]  44.4328839968        1
[INPUT] 0    0    [1    /1   ]  11.2479051505        1
[INPUT] 1    0    [1    /1   ]  19.4500744062        1
[INPUT] 1    0    [1    /1   ]  0.776794020694       1
[INPUT] 1    0    [1    /1   ]  3.90127314012        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.2259966134736, 1.0]], [0, [0.9688848784517947, 1.0]], [0, [223.19802130250034, 1.0]], [0, [44.43288399678058, 1.0]], [0, [11.247905150511901, 1.0]], [1, [19.45007440618444, 1.0]], [1, [0.7767940206938475, 1.0]], [1, [3.9012731401188163, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.22599661]
bas 1, expnt(s) = [0.96888488]
bas 2, expnt(s) = [223.1980213]
bas 3, expnt(s) = [44.432884]
bas 4, expnt(s) = [11.24790515]
bas 5, expnt(s) = [19.45007441]
bas 6, expnt(s) = [0.77679402]
bas 7, expnt(s) = [3.90127314]
CPU time:       309.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70922600e+03 6.71606115e+02 9.68884878e-01 2.46728409e+00
 2.23198021e+02 1.45892437e+02 4.44328840e+01 4.34803870e+01
 1.12479052e+01 1.55173930e+01 1.94500744e+01 1.19161504e+02
 7.76794021e-01 2.12748612e+00 3.90127314e+00 1.59952981e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.887508915364958
cond(S) = 17.767044424911745
E1 = -182.68303350640508  E_coul = 54.965246185113024
init E= -127.717787321292
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.735726483617199  LUMO = 3.83704999742991
  mo_energy =
[-3.24931101e+01 -1.78936754e+00 -7.35726484e-01 -7.35726484e-01
 -7.35726484e-01  3.83705000e+00  3.83705000e+00  3.83705000e+00
  3.09395505e+01  3.09395505e+01  3.09395505e+01  3.15506807e+01
  3.07788662e+02  2.72640788e+03]
E1 = -183.18940760609823  E_coul = 55.247288226915344
cycle= 1 E= -127.942119379183  delta_E= -0.224  |g|= 0.0537  |ddm|= 0.19
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709442
diis-c [-0.00503308  1.        ]
  HOMO = -0.688595574963147  LUMO = 3.88810520620566
  mo_energy =
[-3.25369956e+01 -1.74465021e+00 -6.88595575e-01 -6.88595575e-01
 -6.88595575e-01  3.88810521e+00  3.88810521e+00  3.88810521e+00
  3.09276740e+01  3.09276740e+01  3.09276740e+01  3.15518267e+01
  3.07699859e+02  2.72624757e+03]
E1 = -183.2098600844215  E_coul = 55.267708090133986
cycle= 2 E= -127.942151994288  delta_E= -3.26e-05  |g|= 0.00317  |ddm|= 0.00314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00399762
diis-c [-1.39100540e-05  1.99081207e-02  9.80091879e-01]
  HOMO = -0.687467008475994  LUMO = 3.88954551140605
  mo_energy =
[-3.25317604e+01 -1.74326409e+00 -6.87467008e-01 -6.87467008e-01
 -6.87467008e-01  3.88954551e+00  3.88954551e+00  3.88954551e+00
  3.09317499e+01  3.09317499e+01  3.09317499e+01  3.15563406e+01
  3.07706408e+02  2.72625505e+03]
E1 = -183.2048597231544  E_coul = 55.26270732417619
cycle= 3 E= -127.942152398978  delta_E= -4.05e-07  |g|= 0.000584  |ddm|= 0.000705
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000934769
diis-c [-5.41968055e-08 -3.80960750e-03  1.59355733e-01  8.44453874e-01]
  HOMO = -0.687711513516541  LUMO = 3.88924662963416
  mo_energy =
[-3.25326309e+01 -1.74352933e+00 -6.87711514e-01 -6.87711514e-01
 -6.87711514e-01  3.88924663e+00  3.88924663e+00  3.88924663e+00
  3.09310201e+01  3.09310201e+01  3.09310201e+01  3.15556167e+01
  3.07705453e+02  2.72625401e+03]
E1 = -183.20583307355096  E_coul = 55.26368065298007
cycle= 4 E= -127.942152420571  delta_E= -2.16e-08  |g|= 1.78e-05  |ddm|= 0.000133
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.16564e-05
diis-c [-1.19513193e-11  6.62803341e-05 -5.18383353e-03 -1.26566534e-03
  1.00638322e+00]
  HOMO = -0.687704756434158  LUMO = 3.88925457420173
  mo_energy =
[-3.25326109e+01 -1.74352104e+00 -6.87704756e-01 -6.87704756e-01
 -6.87704756e-01  3.88925457e+00  3.88925457e+00  3.88925457e+00
  3.09310375e+01  3.09310375e+01  3.09310375e+01  3.15556368e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581022289127  E_coul = 55.26365780230753
cycle= 5 E= -127.942152420584  delta_E= -1.28e-11  |g|= 2.72e-07  |ddm|= 3.23e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.20581022289127  E_coul = 55.26365780230753
  HOMO = -0.687704897243098  LUMO = 3.88925440160204
  mo_energy =
[-3.25326114e+01 -1.74352119e+00 -6.87704897e-01 -6.87704897e-01
 -6.87704897e-01  3.88925440e+00  3.88925440e+00  3.88925440e+00
  3.09310371e+01  3.09310371e+01  3.09310371e+01  3.15556364e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581078266977  E_coul = 55.2636583620859
Extra cycle  E= -127.942152420584  delta_E= -1.42e-13  |g|= 7.34e-08  |ddm|= 7.57e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.70922600e+03 9.68884878e-01 2.23198021e+02 4.44328840e+01
 1.12479052e+01 1.94500744e+01 7.76794021e-01 3.90127314e+00]
E = -127.94215242058388
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.22599661        1
[INPUT] 0    0    [1    /1   ]  0.968884878452       1
[INPUT] 0    0    [1    /1   ]  223.198021303        1
[INPUT] 0    0    [1    /1   ]  44.4328839968        1
[INPUT] 0    0    [1    /1   ]  11.2479051505        1
[INPUT] 1    0    [1    /1   ]  19.4500744062        1
[INPUT] 1    0    [1    /1   ]  0.776794020694       1
[INPUT] 1    0    [1    /1   ]  3.90127314012        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.2259966134736, 1.0]], [0, [0.9688848784517947, 1.0]], [0, [223.19802130250034, 1.0]], [0, [44.43288399678058, 1.0]], [0, [11.247905150511901, 1.0]], [1, [19.45007440618444, 1.0]], [1, [0.7767940206938475, 1.0]], [1, [3.9012731401188163, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.22599661]
bas 1, expnt(s) = [0.96888488]
bas 2, expnt(s) = [223.1980213]
bas 3, expnt(s) = [44.432884]
bas 4, expnt(s) = [11.24790515]
bas 5, expnt(s) = [19.45007441]
bas 6, expnt(s) = [0.77679402]
bas 7, expnt(s) = [3.90127314]
CPU time:       310.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70922600e+03 6.71606115e+02 9.68884878e-01 2.46728409e+00
 2.23198021e+02 1.45892437e+02 4.44328840e+01 4.34803870e+01
 1.12479052e+01 1.55173930e+01 1.94500744e+01 1.19161504e+02
 7.76794021e-01 2.12748612e+00 3.90127314e+00 1.59952981e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.887508915364958
cond(S) = 17.767044424911745
E1 = -182.68303350640508  E_coul = 54.965246185113024
init E= -127.717787321292
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.735726483617199  LUMO = 3.83704999742991
  mo_energy =
[-3.24931101e+01 -1.78936754e+00 -7.35726484e-01 -7.35726484e-01
 -7.35726484e-01  3.83705000e+00  3.83705000e+00  3.83705000e+00
  3.09395505e+01  3.09395505e+01  3.09395505e+01  3.15506807e+01
  3.07788662e+02  2.72640788e+03]
E1 = -183.18940760609823  E_coul = 55.247288226915344
cycle= 1 E= -127.942119379183  delta_E= -0.224  |g|= 0.0537  |ddm|= 0.19
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709442
diis-c [-0.00503308  1.        ]
  HOMO = -0.688595574963147  LUMO = 3.88810520620566
  mo_energy =
[-3.25369956e+01 -1.74465021e+00 -6.88595575e-01 -6.88595575e-01
 -6.88595575e-01  3.88810521e+00  3.88810521e+00  3.88810521e+00
  3.09276740e+01  3.09276740e+01  3.09276740e+01  3.15518267e+01
  3.07699859e+02  2.72624757e+03]
E1 = -183.2098600844215  E_coul = 55.267708090133986
cycle= 2 E= -127.942151994288  delta_E= -3.26e-05  |g|= 0.00317  |ddm|= 0.00314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00399762
diis-c [-1.39100540e-05  1.99081207e-02  9.80091879e-01]
  HOMO = -0.687467008475994  LUMO = 3.88954551140605
  mo_energy =
[-3.25317604e+01 -1.74326409e+00 -6.87467008e-01 -6.87467008e-01
 -6.87467008e-01  3.88954551e+00  3.88954551e+00  3.88954551e+00
  3.09317499e+01  3.09317499e+01  3.09317499e+01  3.15563406e+01
  3.07706408e+02  2.72625505e+03]
E1 = -183.2048597231544  E_coul = 55.26270732417619
cycle= 3 E= -127.942152398978  delta_E= -4.05e-07  |g|= 0.000584  |ddm|= 0.000705
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000934769
diis-c [-5.41968055e-08 -3.80960750e-03  1.59355733e-01  8.44453874e-01]
  HOMO = -0.687711513516541  LUMO = 3.88924662963416
  mo_energy =
[-3.25326309e+01 -1.74352933e+00 -6.87711514e-01 -6.87711514e-01
 -6.87711514e-01  3.88924663e+00  3.88924663e+00  3.88924663e+00
  3.09310201e+01  3.09310201e+01  3.09310201e+01  3.15556167e+01
  3.07705453e+02  2.72625401e+03]
E1 = -183.20583307355096  E_coul = 55.26368065298007
cycle= 4 E= -127.942152420571  delta_E= -2.16e-08  |g|= 1.78e-05  |ddm|= 0.000133
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.16564e-05
diis-c [-1.19513193e-11  6.62803341e-05 -5.18383353e-03 -1.26566534e-03
  1.00638322e+00]
  HOMO = -0.687704756434158  LUMO = 3.88925457420173
  mo_energy =
[-3.25326109e+01 -1.74352104e+00 -6.87704756e-01 -6.87704756e-01
 -6.87704756e-01  3.88925457e+00  3.88925457e+00  3.88925457e+00
  3.09310375e+01  3.09310375e+01  3.09310375e+01  3.15556368e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581022289127  E_coul = 55.26365780230753
cycle= 5 E= -127.942152420584  delta_E= -1.28e-11  |g|= 2.72e-07  |ddm|= 3.23e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -183.20581022289127  E_coul = 55.26365780230753
  HOMO = -0.687704897243098  LUMO = 3.88925440160204
  mo_energy =
[-3.25326114e+01 -1.74352119e+00 -6.87704897e-01 -6.87704897e-01
 -6.87704897e-01  3.88925440e+00  3.88925440e+00  3.88925440e+00
  3.09310371e+01  3.09310371e+01  3.09310371e+01  3.15556364e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581078266977  E_coul = 55.2636583620859
Extra cycle  E= -127.942152420584  delta_E= -1.42e-13  |g|= 7.34e-08  |ddm|= 7.57e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.767044424911745
E1 = -183.20581078266977  E_coul = 55.2636583620859
init E= -127.942152420584
    CPU time for initialize scf      0.06 sec, wall time      0.07 sec
  HOMO = -0.68770486129117  LUMO = 3.8892544456226
  mo_energy =
[-3.25326113e+01 -1.74352115e+00 -6.87704861e-01 -6.87704861e-01
 -6.87704861e-01  3.88925445e+00  3.88925445e+00  3.88925445e+00
  3.09310372e+01  3.09310372e+01  3.09310372e+01  3.15556366e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581063961774  E_coul = 55.26365821903388
cycle= 1 E= -127.942152420584  delta_E= 2.84e-14  |g|= 1.85e-08  |ddm|= 1.96e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -183.20581063961774  E_coul = 55.26365821903388
  HOMO = -0.687704870484105  LUMO = 3.88925443434604
  mo_energy =
[-3.25326113e+01 -1.74352116e+00 -6.87704870e-01 -6.87704870e-01
 -6.87704870e-01  3.88925443e+00  3.88925443e+00  3.88925443e+00
  3.09310372e+01  3.09310372e+01  3.09310372e+01  3.15556365e+01
  3.07705468e+02  2.72625401e+03]
E1 = -183.20581067638653  E_coul = 55.26365825580256
Extra cycle  E= -127.942152420584  delta_E= -1.14e-13  |g|= 4.76e-09  |ddm|= 5.02e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70922600e+03 9.68884878e-01 2.23198021e+02 4.44328840e+01
 1.12479052e+01 1.94500744e+01 7.76794021e-01 3.90127314e+00]
grad_E = [ 3.26063426e-05  1.47146356e-01  5.88966554e-04  2.24664593e-04
 -3.15671810e-02  1.00866157e-03  1.13408618e-01  8.78067137e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1711.47921394        1
[INPUT] 0    0    [1    /1   ]  0.954285955399       1
[INPUT] 0    0    [1    /1   ]  233.406959309        1
[INPUT] 0    0    [1    /1   ]  47.7105710393        1
[INPUT] 0    0    [1    /1   ]  12.3294378803        1
[INPUT] 1    0    [1    /1   ]  17.7189238053        1
[INPUT] 1    0    [1    /1   ]  0.646449144826       1
[INPUT] 1    0    [1    /1   ]  3.02489165456        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1711.479213943435, 1.0]], [0, [0.9542859553991578, 1.0]], [0, [233.40695930903274, 1.0]], [0, [47.71057103933996, 1.0]], [0, [12.329437880261473, 1.0]], [1, [17.71892380526383, 1.0]], [1, [0.6464491448263516, 1.0]], [1, [3.0248916545586466, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1711.47921394]
bas 1, expnt(s) = [0.95428596]
bas 2, expnt(s) = [233.40695931]
bas 3, expnt(s) = [47.71057104]
bas 4, expnt(s) = [12.32943788]
bas 5, expnt(s) = [17.71892381]
bas 6, expnt(s) = [0.64644914]
bas 7, expnt(s) = [3.02489165]
CPU time:       314.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71147921e+03 6.72270023e+02 9.54285955e-01 2.43934891e+00
 2.33406959e+02 1.50869126e+02 4.77105710e+01 4.58644284e+01
 1.23294379e+01 1.66235005e+01 1.77189238e+01 1.06054980e+02
 6.46449145e-01 1.69103404e+00 3.02489165e+00 1.16378210e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.927722952078042
cond(S) = 18.553537920661764
E1 = -182.66608603458184  E_coul = 54.92374704122611
init E= -127.742338993356
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.741496665329024  LUMO = 2.90462922069019
  mo_energy =
[-3.25106992e+01 -1.79451832e+00 -7.41496665e-01 -7.41496665e-01
 -7.41496665e-01  2.90462922e+00  2.90462922e+00  2.90462922e+00
  2.57426681e+01  2.57426681e+01  2.57426681e+01  3.57490215e+01
  3.31140593e+02  2.77619553e+03]
E1 = -182.43810185981036  E_coul = 54.45772109884786
cycle= 1 E= -127.980380760963  delta_E= -0.238  |g|= 0.109  |ddm|= 0.196
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.146821
diis-c [-0.02155637  1.        ]
  HOMO = -0.747149015924459  LUMO = 2.90342682676273
  mo_energy =
[-3.27085444e+01 -1.81165773e+00 -7.47149016e-01 -7.47149016e-01
 -7.47149016e-01  2.90342683e+00  2.90342683e+00  2.90342683e+00
  2.56137314e+01  2.56137314e+01  2.56137314e+01  3.56098120e+01
  3.30895735e+02  2.77588103e+03]
E1 = -182.63369485628692  E_coul = 54.65284870205649
cycle= 2 E= -127.98084615423  delta_E= -0.000465  |g|= 0.0237  |ddm|= 0.0272
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.036802
diis-c [-2.47888478e-04  1.85585514e-01  8.14414486e-01]
  HOMO = -0.736695435215714  LUMO = 2.91355683357496
  mo_energy =
[-3.26722586e+01 -1.79979283e+00 -7.36695435e-01 -7.36695435e-01
 -7.36695435e-01  2.91355683e+00  2.91355683e+00  2.91355683e+00
  2.56433950e+01  2.56433950e+01  2.56433950e+01  3.56419125e+01
  3.30936717e+02  2.77592572e+03]
E1 = -182.58858631193627  E_coul = 54.60770153357578
cycle= 3 E= -127.98088477836  delta_E= -3.86e-05  |g|= 0.00117  |ddm|= 0.00624
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168657
diis-c [-4.92962490e-08 -6.64866571e-03  2.00082404e-02  9.86640425e-01]
  HOMO = -0.73716956884022  LUMO = 2.9131102641935
  mo_energy =
[-3.26738110e+01 -1.80032147e+00 -7.37169569e-01 -7.37169569e-01
 -7.37169569e-01  2.91311026e+00  2.91311026e+00  2.91311026e+00
  2.56421202e+01  2.56421202e+01  2.56421202e+01  3.56405621e+01
  3.30935402e+02  2.77592466e+03]
E1 = -182.5906507906476  E_coul = 54.60976592611997
cycle= 4 E= -127.980884864528  delta_E= -8.62e-08  |g|= 1.98e-05  |ddm|= 0.000292
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.14871e-05
diis-c [-1.05279067e-11  8.60799046e-05 -1.24086871e-03 -1.56294789e-02
  1.01678427e+00]
  HOMO = -0.737160219496122  LUMO = 2.91311900398831
  mo_energy =
[-3.26737849e+01 -1.80031101e+00 -7.37160219e-01 -7.37160219e-01
 -7.37160219e-01  2.91311900e+00  2.91311900e+00  2.91311900e+00
  2.56421432e+01  2.56421432e+01  2.56421432e+01  3.56405865e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061544985016  E_coul = 54.6097305852966
cycle= 5 E= -127.980884864554  delta_E= -2.59e-11  |g|= 1.43e-07  |ddm|= 4.82e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.59061544985016  E_coul = 54.6097305852966
  HOMO = -0.73716029344016  LUMO = 2.91311893345825
  mo_energy =
[-3.26737852e+01 -1.80031110e+00 -7.37160293e-01 -7.37160293e-01
 -7.37160293e-01  2.91311893e+00  2.91311893e+00  2.91311893e+00
  2.56421430e+01  2.56421430e+01  2.56421430e+01  3.56405862e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061574116143  E_coul = 54.609730876607884
Extra cycle  E= -127.980884864554  delta_E= 1.42e-14  |g|= 3.51e-08  |ddm|= 4.09e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71147921e+03 9.54285955e-01 2.33406959e+02 4.77105710e+01
 1.23294379e+01 1.77189238e+01 6.46449145e-01 3.02489165e+00]
E = -127.98088486455354
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1711.47921394        1
[INPUT] 0    0    [1    /1   ]  0.954285955399       1
[INPUT] 0    0    [1    /1   ]  233.406959309        1
[INPUT] 0    0    [1    /1   ]  47.7105710393        1
[INPUT] 0    0    [1    /1   ]  12.3294378803        1
[INPUT] 1    0    [1    /1   ]  17.7189238053        1
[INPUT] 1    0    [1    /1   ]  0.646449144826       1
[INPUT] 1    0    [1    /1   ]  3.02489165456        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1711.479213943435, 1.0]], [0, [0.9542859553991578, 1.0]], [0, [233.40695930903274, 1.0]], [0, [47.71057103933996, 1.0]], [0, [12.329437880261473, 1.0]], [1, [17.71892380526383, 1.0]], [1, [0.6464491448263516, 1.0]], [1, [3.0248916545586466, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1711.47921394]
bas 1, expnt(s) = [0.95428596]
bas 2, expnt(s) = [233.40695931]
bas 3, expnt(s) = [47.71057104]
bas 4, expnt(s) = [12.32943788]
bas 5, expnt(s) = [17.71892381]
bas 6, expnt(s) = [0.64644914]
bas 7, expnt(s) = [3.02489165]
CPU time:       315.58
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71147921e+03 6.72270023e+02 9.54285955e-01 2.43934891e+00
 2.33406959e+02 1.50869126e+02 4.77105710e+01 4.58644284e+01
 1.23294379e+01 1.66235005e+01 1.77189238e+01 1.06054980e+02
 6.46449145e-01 1.69103404e+00 3.02489165e+00 1.16378210e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.927722952078042
cond(S) = 18.553537920661764
E1 = -182.66608603458184  E_coul = 54.92374704122611
init E= -127.742338993356
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.741496665329024  LUMO = 2.90462922069019
  mo_energy =
[-3.25106992e+01 -1.79451832e+00 -7.41496665e-01 -7.41496665e-01
 -7.41496665e-01  2.90462922e+00  2.90462922e+00  2.90462922e+00
  2.57426681e+01  2.57426681e+01  2.57426681e+01  3.57490215e+01
  3.31140593e+02  2.77619553e+03]
E1 = -182.43810185981036  E_coul = 54.45772109884786
cycle= 1 E= -127.980380760963  delta_E= -0.238  |g|= 0.109  |ddm|= 0.196
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.146821
diis-c [-0.02155637  1.        ]
  HOMO = -0.747149015924459  LUMO = 2.90342682676273
  mo_energy =
[-3.27085444e+01 -1.81165773e+00 -7.47149016e-01 -7.47149016e-01
 -7.47149016e-01  2.90342683e+00  2.90342683e+00  2.90342683e+00
  2.56137314e+01  2.56137314e+01  2.56137314e+01  3.56098120e+01
  3.30895735e+02  2.77588103e+03]
E1 = -182.63369485628692  E_coul = 54.65284870205649
cycle= 2 E= -127.98084615423  delta_E= -0.000465  |g|= 0.0237  |ddm|= 0.0272
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.036802
diis-c [-2.47888478e-04  1.85585514e-01  8.14414486e-01]
  HOMO = -0.736695435215714  LUMO = 2.91355683357496
  mo_energy =
[-3.26722586e+01 -1.79979283e+00 -7.36695435e-01 -7.36695435e-01
 -7.36695435e-01  2.91355683e+00  2.91355683e+00  2.91355683e+00
  2.56433950e+01  2.56433950e+01  2.56433950e+01  3.56419125e+01
  3.30936717e+02  2.77592572e+03]
E1 = -182.58858631193627  E_coul = 54.60770153357578
cycle= 3 E= -127.98088477836  delta_E= -3.86e-05  |g|= 0.00117  |ddm|= 0.00624
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168657
diis-c [-4.92962490e-08 -6.64866571e-03  2.00082404e-02  9.86640425e-01]
  HOMO = -0.73716956884022  LUMO = 2.9131102641935
  mo_energy =
[-3.26738110e+01 -1.80032147e+00 -7.37169569e-01 -7.37169569e-01
 -7.37169569e-01  2.91311026e+00  2.91311026e+00  2.91311026e+00
  2.56421202e+01  2.56421202e+01  2.56421202e+01  3.56405621e+01
  3.30935402e+02  2.77592466e+03]
E1 = -182.5906507906476  E_coul = 54.60976592611997
cycle= 4 E= -127.980884864528  delta_E= -8.62e-08  |g|= 1.98e-05  |ddm|= 0.000292
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=3.14871e-05
diis-c [-1.05279067e-11  8.60799046e-05 -1.24086871e-03 -1.56294789e-02
  1.01678427e+00]
  HOMO = -0.737160219496122  LUMO = 2.91311900398831
  mo_energy =
[-3.26737849e+01 -1.80031101e+00 -7.37160219e-01 -7.37160219e-01
 -7.37160219e-01  2.91311900e+00  2.91311900e+00  2.91311900e+00
  2.56421432e+01  2.56421432e+01  2.56421432e+01  3.56405865e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061544985016  E_coul = 54.6097305852966
cycle= 5 E= -127.980884864554  delta_E= -2.59e-11  |g|= 1.43e-07  |ddm|= 4.82e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.59061544985016  E_coul = 54.6097305852966
  HOMO = -0.73716029344016  LUMO = 2.91311893345825
  mo_energy =
[-3.26737852e+01 -1.80031110e+00 -7.37160293e-01 -7.37160293e-01
 -7.37160293e-01  2.91311893e+00  2.91311893e+00  2.91311893e+00
  2.56421430e+01  2.56421430e+01  2.56421430e+01  3.56405862e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061574116143  E_coul = 54.609730876607884
Extra cycle  E= -127.980884864554  delta_E= 1.42e-14  |g|= 3.51e-08  |ddm|= 4.09e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.553537920661764
E1 = -182.59061574116143  E_coul = 54.609730876607884
init E= -127.980884864554
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.737160274196802  LUMO = 2.91311895205794
  mo_energy =
[-3.26737851e+01 -1.80031108e+00 -7.37160274e-01 -7.37160274e-01
 -7.37160274e-01  2.91311895e+00  2.91311895e+00  2.91311895e+00
  2.56421430e+01  2.56421430e+01  2.56421430e+01  3.56405863e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061565772183  E_coul = 54.609730793168254
cycle= 1 E= -127.980884864554  delta_E= -2.84e-14  |g|= 1.01e-08  |ddm|= 1.16e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.59061565772183  E_coul = 54.609730793168254
  HOMO = -0.73716027970736  LUMO = 2.91311894673561
  mo_energy =
[-3.26737851e+01 -1.80031109e+00 -7.37160280e-01 -7.37160280e-01
 -7.37160280e-01  2.91311895e+00  2.91311895e+00  2.91311895e+00
  2.56421430e+01  2.56421430e+01  2.56421430e+01  3.56405863e+01
  3.30935428e+02  2.77592468e+03]
E1 = -182.59061568151418  E_coul = 54.609730816960564
Extra cycle  E= -127.980884864554  delta_E= -4.26e-14  |g|= 2.89e-09  |ddm|= 3.3e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.71147921e+03 9.54285955e-01 2.33406959e+02 4.77105710e+01
 1.23294379e+01 1.77189238e+01 6.46449145e-01 3.02489165e+00]
grad_E = [ 1.70217630e-05  3.46716938e-02  6.04405249e-04 -3.22245052e-03
  1.74946501e-03  2.40027730e-02  2.89951775e-01 -1.79939812e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.97290886        1
[INPUT] 0    0    [1    /1   ]  0.948591309175       1
[INPUT] 0    0    [1    /1   ]  231.113482292        1
[INPUT] 0    0    [1    /1   ]  47.9049102474        1
[INPUT] 0    0    [1    /1   ]  12.4740300795        1
[INPUT] 1    0    [1    /1   ]  17.3280724695        1
[INPUT] 1    0    [1    /1   ]  0.678614327218       1
[INPUT] 1    0    [1    /1   ]  3.31185665824        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.9729088558736, 1.0]], [0, [0.9485913091754692, 1.0]], [0, [231.11348229191645, 1.0]], [0, [47.9049102473522, 1.0]], [0, [12.474030079485823, 1.0]], [1, [17.328072469526898, 1.0]], [1, [0.6786143272179783, 1.0]], [1, [3.311856658242564, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.97290886]
bas 1, expnt(s) = [0.94859131]
bas 2, expnt(s) = [231.11348229]
bas 3, expnt(s) = [47.90491025]
bas 4, expnt(s) = [12.47403008]
bas 5, expnt(s) = [17.32807247]
bas 6, expnt(s) = [0.67861433]
bas 7, expnt(s) = [3.31185666]
CPU time:       319.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71097291e+03 6.72120859e+02 9.48591309e-01 2.42842324e+00
 2.31113482e+02 1.49755915e+02 4.79049102e+01 4.60044717e+01
 1.24740301e+01 1.67695000e+01 1.73280725e+01 1.03138833e+02
 6.78614327e-01 1.79685558e+00 3.31185666e+00 1.30338827e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.92075368827279
cond(S) = 18.880668699477496
E1 = -182.70237372287897  E_coul = 54.92911254815176
init E= -127.773261174727
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.745845856224938  LUMO = 3.1678380601887
  mo_energy =
[-3.25056879e+01 -1.79626682e+00 -7.45845856e-01 -7.45845856e-01
 -7.45845856e-01  3.16783806e+00  3.16783806e+00  3.16783806e+00
  2.62769171e+01  2.62769171e+01  2.62769171e+01  3.62032446e+01
  3.30103868e+02  2.76927961e+03]
E1 = -182.60890257677187  E_coul = 54.6029190807026
cycle= 1 E= -128.005983496069  delta_E= -0.233  |g|= 0.0925  |ddm|= 0.202
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133415
diis-c [-0.01779946  1.        ]
  HOMO = -0.745532779812945  LUMO = 3.17060386875029
  mo_energy =
[-3.26606479e+01 -1.80450531e+00 -7.45532780e-01 -7.45532780e-01
 -7.45532780e-01  3.17060387e+00  3.17060387e+00  3.17060387e+00
  2.61761451e+01  2.61761451e+01  2.61761451e+01  3.60980387e+01
  3.29914324e+02  2.76902613e+03]
E1 = -182.7676339181321  E_coul = 54.76132976482791
cycle= 2 E= -128.006304153304  delta_E= -0.000321  |g|= 0.02  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0308537
diis-c [-1.71035147e-04  1.73876134e-01  8.26123866e-01]
  HOMO = -0.737041804549015  LUMO = 3.17960276737298
  mo_energy =
[-3.26302837e+01 -1.79487186e+00 -7.37041805e-01 -7.37041805e-01
 -7.37041805e-01  3.17960277e+00  3.17960277e+00  3.17960277e+00
  2.62005707e+01  2.62005707e+01  2.62005707e+01  3.61249543e+01
  3.29948315e+02  2.76906273e+03]
E1 = -182.73036232645526  E_coul = 54.72403185150194
cycle= 3 E= -128.006330474953  delta_E= -2.63e-05  |g|= 0.00123  |ddm|= 0.00505
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00193948
diis-c [-3.90847060e-08 -4.61945022e-03  4.21421774e-02  9.62477273e-01]
  HOMO = -0.73756022537011  LUMO = 3.1790654385559
  mo_energy =
[-3.26319677e+01 -1.79543528e+00 -7.37560225e-01 -7.37560225e-01
 -7.37560225e-01  3.17906544e+00  3.17906544e+00  3.17906544e+00
  2.61991787e+01  2.61991787e+01  2.61991787e+01  3.61235042e+01
  3.29946683e+02  2.76906112e+03]
E1 = -182.7325846976189  E_coul = 54.726254118645606
cycle= 4 E= -128.006330578973  delta_E= -1.04e-07  |g|= 1.25e-05  |ddm|= 0.000302
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.75848e-05
diis-c [-6.73318387e-12  8.83079028e-05 -1.47474147e-03 -2.01908119e-02
  1.02157725e+00]
  HOMO = -0.737554875675093  LUMO = 3.17907089091089
  mo_energy =
[-3.26319536e+01 -1.79542890e+00 -7.37554876e-01 -7.37554876e-01
 -7.37554876e-01  3.17907089e+00  3.17907089e+00  3.17907089e+00
  2.61991914e+01  2.61991914e+01  2.61991914e+01  3.61235189e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.73256553488523  E_coul = 54.726234955904175
cycle= 5 E= -128.006330578981  delta_E= -7.76e-12  |g|= 1.76e-07  |ddm|= 2.59e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.73256553488523  E_coul = 54.726234955904175
  HOMO = -0.737554973448778  LUMO = 3.17907078849669
  mo_energy =
[-3.26319539e+01 -1.79542901e+00 -7.37554973e-01 -7.37554973e-01
 -7.37554973e-01  3.17907079e+00  3.17907079e+00  3.17907079e+00
  2.61991912e+01  2.61991912e+01  2.61991912e+01  3.61235186e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.7325659450713  E_coul = 54.72623536609014
Extra cycle  E= -128.006330578981  delta_E= -8.53e-14  |g|= 5.16e-08  |ddm|= 5.55e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.71097291e+03 9.48591309e-01 2.31113482e+02 4.79049102e+01
 1.24740301e+01 1.73280725e+01 6.78614327e-01 3.31185666e+00]
E = -128.00633057898114
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.97290886        1
[INPUT] 0    0    [1    /1   ]  0.948591309175       1
[INPUT] 0    0    [1    /1   ]  231.113482292        1
[INPUT] 0    0    [1    /1   ]  47.9049102474        1
[INPUT] 0    0    [1    /1   ]  12.4740300795        1
[INPUT] 1    0    [1    /1   ]  17.3280724695        1
[INPUT] 1    0    [1    /1   ]  0.678614327218       1
[INPUT] 1    0    [1    /1   ]  3.31185665824        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.9729088558736, 1.0]], [0, [0.9485913091754692, 1.0]], [0, [231.11348229191645, 1.0]], [0, [47.9049102473522, 1.0]], [0, [12.474030079485823, 1.0]], [1, [17.328072469526898, 1.0]], [1, [0.6786143272179783, 1.0]], [1, [3.311856658242564, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.97290886]
bas 1, expnt(s) = [0.94859131]
bas 2, expnt(s) = [231.11348229]
bas 3, expnt(s) = [47.90491025]
bas 4, expnt(s) = [12.47403008]
bas 5, expnt(s) = [17.32807247]
bas 6, expnt(s) = [0.67861433]
bas 7, expnt(s) = [3.31185666]
CPU time:       320.48
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71097291e+03 6.72120859e+02 9.48591309e-01 2.42842324e+00
 2.31113482e+02 1.49755915e+02 4.79049102e+01 4.60044717e+01
 1.24740301e+01 1.67695000e+01 1.73280725e+01 1.03138833e+02
 6.78614327e-01 1.79685558e+00 3.31185666e+00 1.30338827e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.92075368827279
cond(S) = 18.880668699477496
E1 = -182.70237372287897  E_coul = 54.92911254815176
init E= -127.773261174727
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.745845856224938  LUMO = 3.1678380601887
  mo_energy =
[-3.25056879e+01 -1.79626682e+00 -7.45845856e-01 -7.45845856e-01
 -7.45845856e-01  3.16783806e+00  3.16783806e+00  3.16783806e+00
  2.62769171e+01  2.62769171e+01  2.62769171e+01  3.62032446e+01
  3.30103868e+02  2.76927961e+03]
E1 = -182.60890257677187  E_coul = 54.6029190807026
cycle= 1 E= -128.005983496069  delta_E= -0.233  |g|= 0.0925  |ddm|= 0.202
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133415
diis-c [-0.01779946  1.        ]
  HOMO = -0.745532779812945  LUMO = 3.17060386875029
  mo_energy =
[-3.26606479e+01 -1.80450531e+00 -7.45532780e-01 -7.45532780e-01
 -7.45532780e-01  3.17060387e+00  3.17060387e+00  3.17060387e+00
  2.61761451e+01  2.61761451e+01  2.61761451e+01  3.60980387e+01
  3.29914324e+02  2.76902613e+03]
E1 = -182.7676339181321  E_coul = 54.76132976482791
cycle= 2 E= -128.006304153304  delta_E= -0.000321  |g|= 0.02  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0308537
diis-c [-1.71035147e-04  1.73876134e-01  8.26123866e-01]
  HOMO = -0.737041804549015  LUMO = 3.17960276737298
  mo_energy =
[-3.26302837e+01 -1.79487186e+00 -7.37041805e-01 -7.37041805e-01
 -7.37041805e-01  3.17960277e+00  3.17960277e+00  3.17960277e+00
  2.62005707e+01  2.62005707e+01  2.62005707e+01  3.61249543e+01
  3.29948315e+02  2.76906273e+03]
E1 = -182.73036232645526  E_coul = 54.72403185150194
cycle= 3 E= -128.006330474953  delta_E= -2.63e-05  |g|= 0.00123  |ddm|= 0.00505
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00193948
diis-c [-3.90847060e-08 -4.61945022e-03  4.21421774e-02  9.62477273e-01]
  HOMO = -0.73756022537011  LUMO = 3.1790654385559
  mo_energy =
[-3.26319677e+01 -1.79543528e+00 -7.37560225e-01 -7.37560225e-01
 -7.37560225e-01  3.17906544e+00  3.17906544e+00  3.17906544e+00
  2.61991787e+01  2.61991787e+01  2.61991787e+01  3.61235042e+01
  3.29946683e+02  2.76906112e+03]
E1 = -182.7325846976189  E_coul = 54.726254118645606
cycle= 4 E= -128.006330578973  delta_E= -1.04e-07  |g|= 1.25e-05  |ddm|= 0.000302
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=1.75848e-05
diis-c [-6.73318387e-12  8.83079028e-05 -1.47474147e-03 -2.01908119e-02
  1.02157725e+00]
  HOMO = -0.737554875675093  LUMO = 3.17907089091089
  mo_energy =
[-3.26319536e+01 -1.79542890e+00 -7.37554876e-01 -7.37554876e-01
 -7.37554876e-01  3.17907089e+00  3.17907089e+00  3.17907089e+00
  2.61991914e+01  2.61991914e+01  2.61991914e+01  3.61235189e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.73256553488523  E_coul = 54.726234955904175
cycle= 5 E= -128.006330578981  delta_E= -7.76e-12  |g|= 1.76e-07  |ddm|= 2.59e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.73256553488523  E_coul = 54.726234955904175
  HOMO = -0.737554973448778  LUMO = 3.17907078849669
  mo_energy =
[-3.26319539e+01 -1.79542901e+00 -7.37554973e-01 -7.37554973e-01
 -7.37554973e-01  3.17907079e+00  3.17907079e+00  3.17907079e+00
  2.61991912e+01  2.61991912e+01  2.61991912e+01  3.61235186e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.7325659450713  E_coul = 54.72623536609014
Extra cycle  E= -128.006330578981  delta_E= -8.53e-14  |g|= 5.16e-08  |ddm|= 5.55e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.880668699477496
E1 = -182.7325659450713  E_coul = 54.72623536609014
init E= -128.006330578981
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.737554946573392  LUMO = 3.17907081686615
  mo_energy =
[-3.26319538e+01 -1.79542898e+00 -7.37554947e-01 -7.37554947e-01
 -7.37554947e-01  3.17907082e+00  3.17907082e+00  3.17907082e+00
  2.61991912e+01  2.61991912e+01  2.61991912e+01  3.61235187e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.73256582796506  E_coul = 54.72623524898397
cycle= 1 E= -128.006330578981  delta_E= 5.68e-14  |g|= 1.47e-08  |ddm|= 1.59e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.73256582796506  E_coul = 54.72623524898397
  HOMO = -0.737554954247765  LUMO = 3.17907080876427
  mo_energy =
[-3.26319538e+01 -1.79542899e+00 -7.37554954e-01 -7.37554954e-01
 -7.37554954e-01  3.17907081e+00  3.17907081e+00  3.17907081e+00
  2.61991912e+01  2.61991912e+01  2.61991912e+01  3.61235187e+01
  3.29946696e+02  2.76906113e+03]
E1 = -182.7325658614735  E_coul = 54.726235282492375
Extra cycle  E= -128.006330578981  delta_E= -2.84e-14  |g|= 4.2e-09  |ddm|= 4.54e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.71097291e+03 9.48591309e-01 2.31113482e+02 4.79049102e+01
 1.24740301e+01 1.73280725e+01 6.78614327e-01 3.31185666e+00]
grad_E = [ 2.38484077e-05  2.57894537e-02  4.25494166e-04 -3.24590282e-03
  7.79901552e-03  8.23384744e-03  2.55062790e-03  1.23648943e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.71942821        1
[INPUT] 0    0    [1    /1   ]  0.948998432416       1
[INPUT] 0    0    [1    /1   ]  225.461216904        1
[INPUT] 0    0    [1    /1   ]  47.074009939         1
[INPUT] 0    0    [1    /1   ]  12.2738170851        1
[INPUT] 1    0    [1    /1   ]  15.5559549738        1
[INPUT] 1    0    [1    /1   ]  0.657859106114       1
[INPUT] 1    0    [1    /1   ]  3.13770061291        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.7194282147552, 1.0]], [0, [0.9489984324163073, 1.0]], [0, [225.46121690379485, 1.0]], [0, [47.07400993895719, 1.0]], [0, [12.273817085054006, 1.0]], [1, [15.555954973771593, 1.0]], [1, [0.6578591061139497, 1.0]], [1, [3.1377006129095943, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.71942821]
bas 1, expnt(s) = [0.94899843]
bas 2, expnt(s) = [225.4612169]
bas 3, expnt(s) = [47.07400994]
bas 4, expnt(s) = [12.27381709]
bas 5, expnt(s) = [15.55595497]
bas 6, expnt(s) = [0.65785911]
bas 7, expnt(s) = [3.13770061]
CPU time:       324.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70971943e+03 6.71751522e+02 9.48998432e-01 2.42920488e+00
 2.25461217e+02 1.47000533e+02 4.70740099e+01 4.54047115e+01
 1.22738171e+01 1.65672246e+01 1.55559550e+01 9.01270673e+01
 6.57859106e-01 1.72842487e+00 3.13770061e+00 1.21828465e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.92661647869489
cond(S) = 18.973764447562775
E1 = -182.73152466841165  E_coul = 54.93859614497937
init E= -127.792928523432
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.746900265733317  LUMO = 3.01639353309346
  mo_energy =
[-3.25074953e+01 -1.79390092e+00 -7.46900266e-01 -7.46900266e-01
 -7.46900266e-01  3.01639353e+00  3.01639353e+00  3.01639353e+00
  2.36470208e+01  2.36470208e+01  2.36470208e+01  3.53038771e+01
  3.21594038e+02  2.74615957e+03]
E1 = -182.53549923050667  E_coul = 54.51508512571026
cycle= 1 E= -128.020414104796  delta_E= -0.227  |g|= 0.0978  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.149595
diis-c [-0.02237859  1.        ]
  HOMO = -0.754405474799057  LUMO = 3.01255004614235
  mo_energy =
[-3.26790316e+01 -1.81071024e+00 -7.54405475e-01 -7.54405475e-01
 -7.54405475e-01  3.01255005e+00  3.01255005e+00  3.01255005e+00
  2.35380234e+01  2.35380234e+01  2.35380234e+01  3.51843395e+01
  3.21386144e+02  2.74588620e+03]
E1 = -182.72357704385854  E_coul = 54.70274126836499
cycle= 2 E= -128.020835775494  delta_E= -0.000422  |g|= 0.0238  |ddm|= 0.0247
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0370209
diis-c [-1.88666282e-04  1.87510656e-01  8.12489344e-01]
  HOMO = -0.744449933086564  LUMO = 3.02264849789235
  mo_energy =
[-3.26439043e+01 -1.79941871e+00 -7.44449933e-01 -7.44449933e-01
 -7.44449933e-01  3.02264850e+00  3.02264850e+00  3.02264850e+00
  2.35653681e+01  2.35653681e+01  2.35653681e+01  3.52153669e+01
  3.21425013e+02  2.74592780e+03]
E1 = -182.67870617740903  E_coul = 54.65783252567114
cycle= 3 E= -128.020873651738  delta_E= -3.79e-05  |g|= 0.00122  |ddm|= 0.00601
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00197761
diis-c [-4.87773726e-08 -4.39118464e-03  3.50191391e-02  9.69372046e-01]
  HOMO = -0.744965499957722  LUMO = 3.02213814632166
  mo_energy =
[-3.26455512e+01 -1.79997308e+00 -7.44965500e-01 -7.44965500e-01
 -7.44965500e-01  3.02213815e+00  3.02213815e+00  3.02213815e+00
  2.35640419e+01  2.35640419e+01  2.35640419e+01  3.52139647e+01
  3.21423397e+02  2.74592618e+03]
E1 = -182.68096983489687  E_coul = 54.660096077368266
cycle= 4 E= -128.020873757529  delta_E= -1.06e-07  |g|= 1.01e-05  |ddm|= 0.000303
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.26454e-05
diis-c [-4.64656475e-12  8.47066393e-05 -1.18463319e-03 -2.24389435e-02
  1.02353887e+00]
  HOMO = -0.744961608429291  LUMO = 3.02214190627707
  mo_energy =
[-3.26455418e+01 -1.79996819e+00 -7.44961608e-01 -7.44961608e-01
 -7.44961608e-01  3.02214191e+00  3.02214191e+00  3.02214191e+00
  2.35640504e+01  2.35640504e+01  2.35640504e+01  3.52139756e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.68095653694752  E_coul = 54.660082779414886
cycle= 5 E= -128.020873757533  delta_E= -4.04e-12  |g|= 1.59e-07  |ddm|= 1.83e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.68095653694752  E_coul = 54.660082779414886
  HOMO = -0.744961697424978  LUMO = 3.02214181655323
  mo_energy =
[-3.26455421e+01 -1.79996829e+00 -7.44961697e-01 -7.44961697e-01
 -7.44961697e-01  3.02214182e+00  3.02214182e+00  3.02214182e+00
  2.35640502e+01  2.35640502e+01  2.35640502e+01  3.52139753e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.68095692470922  E_coul = 54.660083167176644
Extra cycle  E= -128.020873757533  delta_E= 5.68e-14  |g|= 4.91e-08  |ddm|= 5.15e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.70971943e+03 9.48998432e-01 2.25461217e+02 4.70740099e+01
 1.22738171e+01 1.55559550e+01 6.57859106e-01 3.13770061e+00]
E = -128.02087375753257
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.71942821        1
[INPUT] 0    0    [1    /1   ]  0.948998432416       1
[INPUT] 0    0    [1    /1   ]  225.461216904        1
[INPUT] 0    0    [1    /1   ]  47.074009939         1
[INPUT] 0    0    [1    /1   ]  12.2738170851        1
[INPUT] 1    0    [1    /1   ]  15.5559549738        1
[INPUT] 1    0    [1    /1   ]  0.657859106114       1
[INPUT] 1    0    [1    /1   ]  3.13770061291        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.7194282147552, 1.0]], [0, [0.9489984324163073, 1.0]], [0, [225.46121690379485, 1.0]], [0, [47.07400993895719, 1.0]], [0, [12.273817085054006, 1.0]], [1, [15.555954973771593, 1.0]], [1, [0.6578591061139497, 1.0]], [1, [3.1377006129095943, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.71942821]
bas 1, expnt(s) = [0.94899843]
bas 2, expnt(s) = [225.4612169]
bas 3, expnt(s) = [47.07400994]
bas 4, expnt(s) = [12.27381709]
bas 5, expnt(s) = [15.55595497]
bas 6, expnt(s) = [0.65785911]
bas 7, expnt(s) = [3.13770061]
CPU time:       325.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70971943e+03 6.71751522e+02 9.48998432e-01 2.42920488e+00
 2.25461217e+02 1.47000533e+02 4.70740099e+01 4.54047115e+01
 1.22738171e+01 1.65672246e+01 1.55559550e+01 9.01270673e+01
 6.57859106e-01 1.72842487e+00 3.13770061e+00 1.21828465e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.92661647869489
cond(S) = 18.973764447562775
E1 = -182.73152466841165  E_coul = 54.93859614497937
init E= -127.792928523432
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.746900265733317  LUMO = 3.01639353309346
  mo_energy =
[-3.25074953e+01 -1.79390092e+00 -7.46900266e-01 -7.46900266e-01
 -7.46900266e-01  3.01639353e+00  3.01639353e+00  3.01639353e+00
  2.36470208e+01  2.36470208e+01  2.36470208e+01  3.53038771e+01
  3.21594038e+02  2.74615957e+03]
E1 = -182.53549923050667  E_coul = 54.51508512571026
cycle= 1 E= -128.020414104796  delta_E= -0.227  |g|= 0.0978  |ddm|= 0.207
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.149595
diis-c [-0.02237859  1.        ]
  HOMO = -0.754405474799057  LUMO = 3.01255004614235
  mo_energy =
[-3.26790316e+01 -1.81071024e+00 -7.54405475e-01 -7.54405475e-01
 -7.54405475e-01  3.01255005e+00  3.01255005e+00  3.01255005e+00
  2.35380234e+01  2.35380234e+01  2.35380234e+01  3.51843395e+01
  3.21386144e+02  2.74588620e+03]
E1 = -182.72357704385854  E_coul = 54.70274126836499
cycle= 2 E= -128.020835775494  delta_E= -0.000422  |g|= 0.0238  |ddm|= 0.0247
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0370209
diis-c [-1.88666282e-04  1.87510656e-01  8.12489344e-01]
  HOMO = -0.744449933086564  LUMO = 3.02264849789235
  mo_energy =
[-3.26439043e+01 -1.79941871e+00 -7.44449933e-01 -7.44449933e-01
 -7.44449933e-01  3.02264850e+00  3.02264850e+00  3.02264850e+00
  2.35653681e+01  2.35653681e+01  2.35653681e+01  3.52153669e+01
  3.21425013e+02  2.74592780e+03]
E1 = -182.67870617740903  E_coul = 54.65783252567114
cycle= 3 E= -128.020873651738  delta_E= -3.79e-05  |g|= 0.00122  |ddm|= 0.00601
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00197761
diis-c [-4.87773726e-08 -4.39118464e-03  3.50191391e-02  9.69372046e-01]
  HOMO = -0.744965499957722  LUMO = 3.02213814632166
  mo_energy =
[-3.26455512e+01 -1.79997308e+00 -7.44965500e-01 -7.44965500e-01
 -7.44965500e-01  3.02213815e+00  3.02213815e+00  3.02213815e+00
  2.35640419e+01  2.35640419e+01  2.35640419e+01  3.52139647e+01
  3.21423397e+02  2.74592618e+03]
E1 = -182.68096983489687  E_coul = 54.660096077368266
cycle= 4 E= -128.020873757529  delta_E= -1.06e-07  |g|= 1.01e-05  |ddm|= 0.000303
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.26454e-05
diis-c [-4.64656475e-12  8.47066393e-05 -1.18463319e-03 -2.24389435e-02
  1.02353887e+00]
  HOMO = -0.744961608429291  LUMO = 3.02214190627707
  mo_energy =
[-3.26455418e+01 -1.79996819e+00 -7.44961608e-01 -7.44961608e-01
 -7.44961608e-01  3.02214191e+00  3.02214191e+00  3.02214191e+00
  2.35640504e+01  2.35640504e+01  2.35640504e+01  3.52139756e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.68095653694752  E_coul = 54.660082779414886
cycle= 5 E= -128.020873757533  delta_E= -4.04e-12  |g|= 1.59e-07  |ddm|= 1.83e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.68095653694752  E_coul = 54.660082779414886
  HOMO = -0.744961697424978  LUMO = 3.02214181655323
  mo_energy =
[-3.26455421e+01 -1.79996829e+00 -7.44961697e-01 -7.44961697e-01
 -7.44961697e-01  3.02214182e+00  3.02214182e+00  3.02214182e+00
  2.35640502e+01  2.35640502e+01  2.35640502e+01  3.52139753e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.68095692470922  E_coul = 54.660083167176644
Extra cycle  E= -128.020873757533  delta_E= 5.68e-14  |g|= 4.91e-08  |ddm|= 5.15e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.973764447562775
E1 = -182.68095692470922  E_coul = 54.660083167176644
init E= -128.020873757533
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.744961671921598  LUMO = 3.02214184233454
  mo_energy =
[-3.26455420e+01 -1.79996826e+00 -7.44961672e-01 -7.44961672e-01
 -7.44961672e-01  3.02214184e+00  3.02214184e+00  3.02214184e+00
  2.35640503e+01  2.35640503e+01  2.35640503e+01  3.52139754e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.68095681043118  E_coul = 54.66008305289848
cycle= 1 E= -128.020873757533  delta_E= -1.42e-13  |g|= 1.44e-08  |ddm|= 1.53e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.68095681043118  E_coul = 54.66008305289848
  HOMO = -0.744961679446219  LUMO = 3.02214183472558
  mo_energy =
[-3.26455420e+01 -1.79996827e+00 -7.44961679e-01 -7.44961679e-01
 -7.44961679e-01  3.02214183e+00  3.02214183e+00  3.02214183e+00
  2.35640502e+01  2.35640502e+01  2.35640502e+01  3.52139754e+01
  3.21423404e+02  2.74592618e+03]
E1 = -182.6809568441925  E_coul = 54.660083086659775
Extra cycle  E= -128.020873757533  delta_E= -2.84e-14  |g|= 4.24e-09  |ddm|= 4.52e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.70971943e+03 9.48998432e-01 2.25461217e+02 4.70740099e+01
 1.22738171e+01 1.55559550e+01 6.57859106e-01 3.13770061e+00]
grad_E = [ 3.70829881e-05  2.53506483e-02  1.63997839e-04 -1.72063688e-03
  1.25457609e-03  3.53890768e-03  1.23497266e-02  2.33448163e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.46878317        1
[INPUT] 0    0    [1    /1   ]  0.94646994305        1
[INPUT] 0    0    [1    /1   ]  224.343011814        1
[INPUT] 0    0    [1    /1   ]  47.6669773572        1
[INPUT] 0    0    [1    /1   ]  12.4509164615        1
[INPUT] 1    0    [1    /1   ]  12.2071002634        1
[INPUT] 1    0    [1    /1   ]  0.595795592345       1
[INPUT] 1    0    [1    /1   ]  2.70307348783        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.4687831743543, 1.0]], [0, [0.946469943050025, 1.0]], [0, [224.34301181361357, 1.0]], [0, [47.66697735721212, 1.0]], [0, [12.450916461474899, 1.0]], [1, [12.207100263397647, 1.0]], [1, [0.5957955923445708, 1.0]], [1, [2.7030734878305855, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.46878317]
bas 1, expnt(s) = [0.94646994]
bas 2, expnt(s) = [224.34301181]
bas 3, expnt(s) = [47.66697736]
bas 4, expnt(s) = [12.45091646]
bas 5, expnt(s) = [12.20710026]
bas 6, expnt(s) = [0.59579559]
bas 7, expnt(s) = [2.70307349]
CPU time:       329.01
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70946878e+03 6.71677662e+02 9.46469943e-01 2.42434903e+00
 2.24343012e+02 1.46453392e+02 4.76669774e+01 4.58329947e+01
 1.24509165e+01 1.67461900e+01 1.22071003e+01 6.65656278e+01
 5.95795592e-01 1.52705964e+00 2.70307349e+00 1.01112933e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.941216964628492
cond(S) = 19.28029903365592
E1 = -182.7225328578911  E_coul = 54.92419815994765
init E= -127.798334697943
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.746978365791188  LUMO = 2.61294141792688
  mo_energy =
[-3.25174727e+01 -1.79377579e+00 -7.46978366e-01 -7.46978366e-01
 -7.46978366e-01  2.61294142e+00  2.61294142e+00  2.61294142e+00
  1.85388987e+01  1.85388987e+01  1.85388987e+01  3.60387727e+01
  3.22957553e+02  2.74474493e+03]
E1 = -182.17993179686002  E_coul = 54.155365766415414
cycle= 1 E= -128.024566030445  delta_E= -0.226  |g|= 0.127  |ddm|= 0.222
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.203833
diis-c [-0.04154786  1.        ]
  HOMO = -0.781204548913053  LUMO = 2.58868102378445
  mo_energy =
[-3.27505806e+01 -1.84106418e+00 -7.81204549e-01 -7.81204549e-01
 -7.81204549e-01  2.58868102e+00  2.58868102e+00  2.58868102e+00
  1.83959295e+01  1.83959295e+01  1.83959295e+01  3.58604950e+01
  3.22690557e+02  2.74441557e+03]
E1 = -182.4772155886352  E_coul = 54.451744749399914
cycle= 2 E= -128.025470839235  delta_E= -0.000905  |g|= 0.0372  |ddm|= 0.0382
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0595641
diis-c [-2.52545395e-04  2.20265256e-01  7.79734744e-01]
  HOMO = -0.765855950369731  LUMO = 2.6024217242467
  mo_energy =
[-3.26983916e+01 -1.82362998e+00 -7.65855950e-01 -7.65855950e-01
 -7.65855950e-01  2.60242172e+00  2.60242172e+00  2.60242172e+00
  1.84335622e+01  1.84335622e+01  1.84335622e+01  3.59069552e+01
  3.22747306e+02  2.74447560e+03]
E1 = -182.40364258844397  E_coul = 54.378072038981024
cycle= 3 E= -128.025570549463  delta_E= -9.97e-05  |g|= 0.00105  |ddm|= 0.00961
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00174958
diis-c [-6.26242185e-08 -4.31962749e-03  1.44362699e-02  9.89883358e-01]
  HOMO = -0.766299393050075  LUMO = 2.60204326157293
  mo_energy =
[-3.26997411e+01 -1.82409691e+00 -7.66299393e-01 -7.66299393e-01
 -7.66299393e-01  2.60204326e+00  2.60204326e+00  2.60204326e+00
  1.84325471e+01  1.84325471e+01  1.84325471e+01  3.59058228e+01
  3.22746009e+02  2.74447430e+03]
E1 = -182.40569426837368  E_coul = 54.38012363667081
cycle= 4 E= -128.025570631703  delta_E= -8.22e-08  |g|= 6.91e-06  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.39178e-06
diis-c [-1.95347141e-12  8.12551582e-05 -4.93756992e-04 -2.41271498e-02
  1.02453965e+00]
  HOMO = -0.766297687558443  LUMO = 2.60204459102319
  mo_energy =
[-3.26997380e+01 -1.82409445e+00 -7.66297688e-01 -7.66297688e-01
 -7.66297688e-01  2.60204459e+00  2.60204459e+00  2.60204459e+00
  1.84325501e+01  1.84325501e+01  1.84325501e+01  3.59058279e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.4056895342259  E_coul = 54.38011890252209
cycle= 5 E= -128.025570631704  delta_E= -9.38e-13  |g|= 7.77e-08  |ddm|= 7.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4056895342259  E_coul = 54.38011890252209
  HOMO = -0.766297728840891  LUMO = 2.60204455535215
  mo_energy =
[-3.26997382e+01 -1.82409450e+00 -7.66297729e-01 -7.66297729e-01
 -7.66297729e-01  2.60204456e+00  2.60204456e+00  2.60204456e+00
  1.84325500e+01  1.84325500e+01  1.84325500e+01  3.59058278e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.40568973056006  E_coul = 54.38011909885622
Extra cycle  E= -128.025570631704  delta_E= -2.84e-14  |g|= 2.49e-08  |ddm|= 2.51e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.70946878e+03 9.46469943e-01 2.24343012e+02 4.76669774e+01
 1.24509165e+01 1.22071003e+01 5.95795592e-01 2.70307349e+00]
E = -128.02557063170383
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.46878317        1
[INPUT] 0    0    [1    /1   ]  0.94646994305        1
[INPUT] 0    0    [1    /1   ]  224.343011814        1
[INPUT] 0    0    [1    /1   ]  47.6669773572        1
[INPUT] 0    0    [1    /1   ]  12.4509164615        1
[INPUT] 1    0    [1    /1   ]  12.2071002634        1
[INPUT] 1    0    [1    /1   ]  0.595795592345       1
[INPUT] 1    0    [1    /1   ]  2.70307348783        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.4687831743543, 1.0]], [0, [0.946469943050025, 1.0]], [0, [224.34301181361357, 1.0]], [0, [47.66697735721212, 1.0]], [0, [12.450916461474899, 1.0]], [1, [12.207100263397647, 1.0]], [1, [0.5957955923445708, 1.0]], [1, [2.7030734878305855, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.46878317]
bas 1, expnt(s) = [0.94646994]
bas 2, expnt(s) = [224.34301181]
bas 3, expnt(s) = [47.66697736]
bas 4, expnt(s) = [12.45091646]
bas 5, expnt(s) = [12.20710026]
bas 6, expnt(s) = [0.59579559]
bas 7, expnt(s) = [2.70307349]
CPU time:       330.01
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70946878e+03 6.71677662e+02 9.46469943e-01 2.42434903e+00
 2.24343012e+02 1.46453392e+02 4.76669774e+01 4.58329947e+01
 1.24509165e+01 1.67461900e+01 1.22071003e+01 6.65656278e+01
 5.95795592e-01 1.52705964e+00 2.70307349e+00 1.01112933e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.941216964628492
cond(S) = 19.28029903365592
E1 = -182.7225328578911  E_coul = 54.92419815994765
init E= -127.798334697943
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.746978365791188  LUMO = 2.61294141792688
  mo_energy =
[-3.25174727e+01 -1.79377579e+00 -7.46978366e-01 -7.46978366e-01
 -7.46978366e-01  2.61294142e+00  2.61294142e+00  2.61294142e+00
  1.85388987e+01  1.85388987e+01  1.85388987e+01  3.60387727e+01
  3.22957553e+02  2.74474493e+03]
E1 = -182.17993179686002  E_coul = 54.155365766415414
cycle= 1 E= -128.024566030445  delta_E= -0.226  |g|= 0.127  |ddm|= 0.222
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.203833
diis-c [-0.04154786  1.        ]
  HOMO = -0.781204548913053  LUMO = 2.58868102378445
  mo_energy =
[-3.27505806e+01 -1.84106418e+00 -7.81204549e-01 -7.81204549e-01
 -7.81204549e-01  2.58868102e+00  2.58868102e+00  2.58868102e+00
  1.83959295e+01  1.83959295e+01  1.83959295e+01  3.58604950e+01
  3.22690557e+02  2.74441557e+03]
E1 = -182.4772155886352  E_coul = 54.451744749399914
cycle= 2 E= -128.025470839235  delta_E= -0.000905  |g|= 0.0372  |ddm|= 0.0382
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0595641
diis-c [-2.52545395e-04  2.20265256e-01  7.79734744e-01]
  HOMO = -0.765855950369731  LUMO = 2.6024217242467
  mo_energy =
[-3.26983916e+01 -1.82362998e+00 -7.65855950e-01 -7.65855950e-01
 -7.65855950e-01  2.60242172e+00  2.60242172e+00  2.60242172e+00
  1.84335622e+01  1.84335622e+01  1.84335622e+01  3.59069552e+01
  3.22747306e+02  2.74447560e+03]
E1 = -182.40364258844397  E_coul = 54.378072038981024
cycle= 3 E= -128.025570549463  delta_E= -9.97e-05  |g|= 0.00105  |ddm|= 0.00961
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00174958
diis-c [-6.26242185e-08 -4.31962749e-03  1.44362699e-02  9.89883358e-01]
  HOMO = -0.766299393050075  LUMO = 2.60204326157293
  mo_energy =
[-3.26997411e+01 -1.82409691e+00 -7.66299393e-01 -7.66299393e-01
 -7.66299393e-01  2.60204326e+00  2.60204326e+00  2.60204326e+00
  1.84325471e+01  1.84325471e+01  1.84325471e+01  3.59058228e+01
  3.22746009e+02  2.74447430e+03]
E1 = -182.40569426837368  E_coul = 54.38012363667081
cycle= 4 E= -128.025570631703  delta_E= -8.22e-08  |g|= 6.91e-06  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.39178e-06
diis-c [-1.95347141e-12  8.12551582e-05 -4.93756992e-04 -2.41271498e-02
  1.02453965e+00]
  HOMO = -0.766297687558443  LUMO = 2.60204459102319
  mo_energy =
[-3.26997380e+01 -1.82409445e+00 -7.66297688e-01 -7.66297688e-01
 -7.66297688e-01  2.60204459e+00  2.60204459e+00  2.60204459e+00
  1.84325501e+01  1.84325501e+01  1.84325501e+01  3.59058279e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.4056895342259  E_coul = 54.38011890252209
cycle= 5 E= -128.025570631704  delta_E= -9.38e-13  |g|= 7.77e-08  |ddm|= 7.93e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.4056895342259  E_coul = 54.38011890252209
  HOMO = -0.766297728840891  LUMO = 2.60204455535215
  mo_energy =
[-3.26997382e+01 -1.82409450e+00 -7.66297729e-01 -7.66297729e-01
 -7.66297729e-01  2.60204456e+00  2.60204456e+00  2.60204456e+00
  1.84325500e+01  1.84325500e+01  1.84325500e+01  3.59058278e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.40568973056006  E_coul = 54.38011909885622
Extra cycle  E= -128.025570631704  delta_E= -2.84e-14  |g|= 2.49e-08  |ddm|= 2.51e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.28029903365592
E1 = -182.40568973056006  E_coul = 54.38011909885622
init E= -128.025570631704
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.766297715794032  LUMO = 2.60204456700392
  mo_energy =
[-3.26997381e+01 -1.82409448e+00 -7.66297716e-01 -7.66297716e-01
 -7.66297716e-01  2.60204457e+00  2.60204457e+00  2.60204457e+00
  1.84325500e+01  1.84325500e+01  1.84325500e+01  3.59058278e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.40568966799069  E_coul = 54.380119036287034
cycle= 1 E= -128.025570631704  delta_E= 1.71e-13  |g|= 7.79e-09  |ddm|= 8.2e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.40568966799069  E_coul = 54.380119036287034
  HOMO = -0.766297719967271  LUMO = 2.60204456327538
  mo_energy =
[-3.26997382e+01 -1.82409449e+00 -7.66297720e-01 -7.66297720e-01
 -7.66297720e-01  2.60204456e+00  2.60204456e+00  2.60204456e+00
  1.84325500e+01  1.84325500e+01  1.84325500e+01  3.59058278e+01
  3.22746010e+02  2.74447429e+03]
E1 = -182.40568968794705  E_coul = 54.38011905624335
Extra cycle  E= -128.025570631704  delta_E= -2.84e-14  |g|= 2.49e-09  |ddm|= 2.6e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.70946878e+03 9.46469943e-01 2.24343012e+02 4.76669774e+01
 1.24509165e+01 1.22071003e+01 5.95795592e-01 2.70307349e+00]
grad_E = [ 4.39584770e-05 -6.23282805e-03 -1.16857861e-04 -4.57727713e-04
  3.20246698e-03 -1.18401603e-02 -1.84253844e-02  4.48651693e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.00459296        1
[INPUT] 0    0    [1    /1   ]  0.94686919129        1
[INPUT] 0    0    [1    /1   ]  226.758374579        1
[INPUT] 0    0    [1    /1   ]  47.8779307943        1
[INPUT] 0    0    [1    /1   ]  12.4440783364        1
[INPUT] 1    0    [1    /1   ]  13.7276051773        1
[INPUT] 1    0    [1    /1   ]  0.610262439079       1
[INPUT] 1    0    [1    /1   ]  2.82097652625        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0045929578707, 1.0]], [0, [0.9468691912899756, 1.0]], [0, [226.75837457863548, 1.0]], [0, [47.87793079428483, 1.0]], [0, [12.444078336446506, 1.0]], [1, [13.727605177292011, 1.0]], [1, [0.6102624390787348, 1.0]], [1, [2.820976526253748, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.00459296]
bas 1, expnt(s) = [0.94686919]
bas 2, expnt(s) = [226.75837458]
bas 3, expnt(s) = [47.87793079]
bas 4, expnt(s) = [12.44407834]
bas 5, expnt(s) = [13.72760518]
bas 6, expnt(s) = [0.61026244]
bas 7, expnt(s) = [2.82097653]
CPU time:       333.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71000459e+03 6.71835552e+02 9.46869191e-01 2.42511598e+00
 2.26758375e+02 1.47634387e+02 4.78779308e+01 4.59850384e+01
 1.24440783e+01 1.67392917e+01 1.37276052e+01 7.70864183e+01
 6.10262439e-01 1.57354872e+00 2.82097653e+00 1.06655617e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.938096910712215
cond(S) = 19.100922076471324
E1 = -182.732912017125  E_coul = 54.93168316470437
init E= -127.801228852421
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748336486192012  LUMO = 2.70262736358922
  mo_energy =
[-3.25117036e+01 -1.79384419e+00 -7.48336486e-01 -7.48336486e-01
 -7.48336486e-01  2.70262736e+00  2.70262736e+00  2.70262736e+00
  2.05216996e+01  2.05216996e+01  2.05216996e+01  3.61245931e+01
  3.25828968e+02  2.75387808e+03]
E1 = -182.28691149714845  E_coul = 54.25760364718333
cycle= 1 E= -128.029307849965  delta_E= -0.228  |g|= 0.119  |ddm|= 0.215
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.186028
diis-c [-0.03460653  1.        ]
  HOMO = -0.774432978215131  LUMO = 2.68422690871036
  mo_energy =
[-3.27310047e+01 -1.83208521e+00 -7.74432978e-01 -7.74432978e-01
 -7.74432978e-01  2.68422691e+00  2.68422691e+00  2.68422691e+00
  2.03832838e+01  2.03832838e+01  2.03832838e+01  3.59603785e+01
  3.25572806e+02  2.75355832e+03]
E1 = -182.552108444168  E_coul = 54.52205309664239
cycle= 2 E= -128.030055347526  delta_E= -0.000747  |g|= 0.0331  |ddm|= 0.0347
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0524165
diis-c [-2.31437870e-04  2.12935674e-01  7.87064326e-01]
  HOMO = -0.760655347005191  LUMO = 2.69693622983028
  mo_energy =
[-3.26838081e+01 -1.81644851e+00 -7.60655347e-01 -7.60655347e-01
 -7.60655347e-01  2.69693623e+00  2.69693623e+00  2.69693623e+00
  2.04187498e+01  2.04187498e+01  2.04187498e+01  3.60023716e+01
  3.25624506e+02  2.75361329e+03]
E1 = -182.48758576689752  E_coul = 54.457453006551454
cycle= 3 E= -128.030132760346  delta_E= -7.74e-05  |g|= 0.00104  |ddm|= 0.00855
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00170174
diis-c [-5.76425671e-08 -4.61206153e-03  1.59781579e-02  9.88633904e-01]
  HOMO = -0.761092945617359  LUMO = 2.69654872420513
  mo_energy =
[-3.26851704e+01 -1.81691345e+00 -7.61092946e-01 -7.61092946e-01
 -7.61092946e-01  2.69654872e+00  2.69654872e+00  2.69654872e+00
  2.04176919e+01  2.04176919e+01  2.04176919e+01  3.60012229e+01
  3.25623226e+02  2.75361204e+03]
E1 = -182.48959710551318  E_coul = 54.45946426567824
cycle= 4 E= -128.030132839835  delta_E= -7.95e-08  |g|= 9.05e-06  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.18169e-05
diis-c [-2.92143316e-12  8.00999620e-05 -6.46546868e-04 -2.25407693e-02
  1.02310722e+00]
  HOMO = -0.761089475766459  LUMO = 2.69655170823043
  mo_energy =
[-3.26851624e+01 -1.81690914e+00 -7.61089476e-01 -7.61089476e-01
 -7.61089476e-01  2.69655171e+00  2.69655171e+00  2.69655171e+00
  2.04176990e+01  2.04176990e+01  2.04176990e+01  3.60012322e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.489585208638  E_coul = 54.45945236879988
cycle= 5 E= -128.030132839838  delta_E= -3.18e-12  |g|= 7.37e-08  |ddm|= 1.6e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.489585208638  E_coul = 54.45945236879988
  HOMO = -0.76108951647093  LUMO = 2.69655167148758
  mo_energy =
[-3.26851625e+01 -1.81690918e+00 -7.61089516e-01 -7.61089516e-01
 -7.61089516e-01  2.69655167e+00  2.69655167e+00  2.69655167e+00
  2.04176989e+01  2.04176989e+01  2.04176989e+01  3.60012321e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.48958539988533  E_coul = 54.45945256004713
Extra cycle  E= -128.030132839838  delta_E= -5.68e-14  |g|= 2.39e-08  |ddm|= 2.53e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71000459e+03 9.46869191e-01 2.26758375e+02 4.78779308e+01
 1.24440783e+01 1.37276052e+01 6.10262439e-01 2.82097653e+00]
E = -128.0301328398382
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.00459296        1
[INPUT] 0    0    [1    /1   ]  0.94686919129        1
[INPUT] 0    0    [1    /1   ]  226.758374579        1
[INPUT] 0    0    [1    /1   ]  47.8779307943        1
[INPUT] 0    0    [1    /1   ]  12.4440783364        1
[INPUT] 1    0    [1    /1   ]  13.7276051773        1
[INPUT] 1    0    [1    /1   ]  0.610262439079       1
[INPUT] 1    0    [1    /1   ]  2.82097652625        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0045929578707, 1.0]], [0, [0.9468691912899756, 1.0]], [0, [226.75837457863548, 1.0]], [0, [47.87793079428483, 1.0]], [0, [12.444078336446506, 1.0]], [1, [13.727605177292011, 1.0]], [1, [0.6102624390787348, 1.0]], [1, [2.820976526253748, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.00459296]
bas 1, expnt(s) = [0.94686919]
bas 2, expnt(s) = [226.75837458]
bas 3, expnt(s) = [47.87793079]
bas 4, expnt(s) = [12.44407834]
bas 5, expnt(s) = [13.72760518]
bas 6, expnt(s) = [0.61026244]
bas 7, expnt(s) = [2.82097653]
CPU time:       334.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71000459e+03 6.71835552e+02 9.46869191e-01 2.42511598e+00
 2.26758375e+02 1.47634387e+02 4.78779308e+01 4.59850384e+01
 1.24440783e+01 1.67392917e+01 1.37276052e+01 7.70864183e+01
 6.10262439e-01 1.57354872e+00 2.82097653e+00 1.06655617e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.938096910712215
cond(S) = 19.100922076471324
E1 = -182.732912017125  E_coul = 54.93168316470437
init E= -127.801228852421
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748336486192012  LUMO = 2.70262736358922
  mo_energy =
[-3.25117036e+01 -1.79384419e+00 -7.48336486e-01 -7.48336486e-01
 -7.48336486e-01  2.70262736e+00  2.70262736e+00  2.70262736e+00
  2.05216996e+01  2.05216996e+01  2.05216996e+01  3.61245931e+01
  3.25828968e+02  2.75387808e+03]
E1 = -182.28691149714845  E_coul = 54.25760364718333
cycle= 1 E= -128.029307849965  delta_E= -0.228  |g|= 0.119  |ddm|= 0.215
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.186028
diis-c [-0.03460653  1.        ]
  HOMO = -0.774432978215131  LUMO = 2.68422690871036
  mo_energy =
[-3.27310047e+01 -1.83208521e+00 -7.74432978e-01 -7.74432978e-01
 -7.74432978e-01  2.68422691e+00  2.68422691e+00  2.68422691e+00
  2.03832838e+01  2.03832838e+01  2.03832838e+01  3.59603785e+01
  3.25572806e+02  2.75355832e+03]
E1 = -182.552108444168  E_coul = 54.52205309664239
cycle= 2 E= -128.030055347526  delta_E= -0.000747  |g|= 0.0331  |ddm|= 0.0347
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0524165
diis-c [-2.31437870e-04  2.12935674e-01  7.87064326e-01]
  HOMO = -0.760655347005191  LUMO = 2.69693622983028
  mo_energy =
[-3.26838081e+01 -1.81644851e+00 -7.60655347e-01 -7.60655347e-01
 -7.60655347e-01  2.69693623e+00  2.69693623e+00  2.69693623e+00
  2.04187498e+01  2.04187498e+01  2.04187498e+01  3.60023716e+01
  3.25624506e+02  2.75361329e+03]
E1 = -182.48758576689752  E_coul = 54.457453006551454
cycle= 3 E= -128.030132760346  delta_E= -7.74e-05  |g|= 0.00104  |ddm|= 0.00855
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00170174
diis-c [-5.76425671e-08 -4.61206153e-03  1.59781579e-02  9.88633904e-01]
  HOMO = -0.761092945617359  LUMO = 2.69654872420513
  mo_energy =
[-3.26851704e+01 -1.81691345e+00 -7.61092946e-01 -7.61092946e-01
 -7.61092946e-01  2.69654872e+00  2.69654872e+00  2.69654872e+00
  2.04176919e+01  2.04176919e+01  2.04176919e+01  3.60012229e+01
  3.25623226e+02  2.75361204e+03]
E1 = -182.48959710551318  E_coul = 54.45946426567824
cycle= 4 E= -128.030132839835  delta_E= -7.95e-08  |g|= 9.05e-06  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.18169e-05
diis-c [-2.92143316e-12  8.00999620e-05 -6.46546868e-04 -2.25407693e-02
  1.02310722e+00]
  HOMO = -0.761089475766459  LUMO = 2.69655170823043
  mo_energy =
[-3.26851624e+01 -1.81690914e+00 -7.61089476e-01 -7.61089476e-01
 -7.61089476e-01  2.69655171e+00  2.69655171e+00  2.69655171e+00
  2.04176990e+01  2.04176990e+01  2.04176990e+01  3.60012322e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.489585208638  E_coul = 54.45945236879988
cycle= 5 E= -128.030132839838  delta_E= -3.18e-12  |g|= 7.37e-08  |ddm|= 1.6e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.489585208638  E_coul = 54.45945236879988
  HOMO = -0.76108951647093  LUMO = 2.69655167148758
  mo_energy =
[-3.26851625e+01 -1.81690918e+00 -7.61089516e-01 -7.61089516e-01
 -7.61089516e-01  2.69655167e+00  2.69655167e+00  2.69655167e+00
  2.04176989e+01  2.04176989e+01  2.04176989e+01  3.60012321e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.48958539988533  E_coul = 54.45945256004713
Extra cycle  E= -128.030132839838  delta_E= -5.68e-14  |g|= 2.39e-08  |ddm|= 2.53e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.100922076471324
E1 = -182.48958539988533  E_coul = 54.45945256004713
init E= -128.030132839838
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.761089503758793  LUMO = 2.69655168318415
  mo_energy =
[-3.26851625e+01 -1.81690917e+00 -7.61089504e-01 -7.61089504e-01
 -7.61089504e-01  2.69655168e+00  2.69655168e+00  2.69655168e+00
  2.04176989e+01  2.04176989e+01  2.04176989e+01  3.60012322e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.489585340628  E_coul = 54.459452500789894
cycle= 1 E= -128.030132839838  delta_E= 8.53e-14  |g|= 7.36e-09  |ddm|= 7.86e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.489585340628  E_coul = 54.459452500789894
  HOMO = -0.761089507696633  LUMO = 2.69655167955955
  mo_energy =
[-3.26851625e+01 -1.81690917e+00 -7.61089508e-01 -7.61089508e-01
 -7.61089508e-01  2.69655168e+00  2.69655168e+00  2.69655168e+00
  2.04176989e+01  2.04176989e+01  2.04176989e+01  3.60012322e+01
  3.25623233e+02  2.75361205e+03]
E1 = -182.48958535905598  E_coul = 54.4594525192178
Extra cycle  E= -128.030132839838  delta_E= -8.53e-14  |g|= 2.29e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71000459e+03 9.46869191e-01 2.26758375e+02 4.78779308e+01
 1.24440783e+01 1.37276052e+01 6.10262439e-01 2.82097653e+00]
grad_E = [ 3.79380721e-05  1.15151311e-04  3.22330654e-07 -5.04797836e-04
  1.72416759e-03  2.47628676e-03  2.63923103e-02 -1.07244932e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.09249342        1
[INPUT] 0    0    [1    /1   ]  0.947471758924       1
[INPUT] 0    0    [1    /1   ]  227.155458242        1
[INPUT] 0    0    [1    /1   ]  47.98288896          1
[INPUT] 0    0    [1    /1   ]  12.4504529907        1
[INPUT] 1    0    [1    /1   ]  13.4225842183        1
[INPUT] 1    0    [1    /1   ]  0.604775589094       1
[INPUT] 1    0    [1    /1   ]  2.78874356131        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0924934163522, 1.0]], [0, [0.9474717589243391, 1.0]], [0, [227.15545824237563, 1.0]], [0, [47.98288895995283, 1.0]], [0, [12.450452990675503, 1.0]], [1, [13.422584218305323, 1.0]], [1, [0.6047755890940176, 1.0]], [1, [2.78874356131124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.09249342]
bas 1, expnt(s) = [0.94747176]
bas 2, expnt(s) = [227.15545824]
bas 3, expnt(s) = [47.98288896]
bas 4, expnt(s) = [12.45045299]
bas 5, expnt(s) = [13.42258422]
bas 6, expnt(s) = [0.60477559]
bas 7, expnt(s) = [2.78874356]
CPU time:       338.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71009249e+03 6.71861453e+02 9.47471759e-01 2.42627336e+00
 2.27155458e+02 1.47828240e+02 4.79828890e+01 4.60606241e+01
 1.24504530e+01 1.67457225e+01 1.34225842e+01 7.49513681e+01
 6.04775589e-01 1.55588398e+00 2.78874356e+00 1.05134467e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939197232913205
cond(S) = 19.08096050144214
E1 = -182.7346931862698  E_coul = 54.93201812817966
init E= -127.80267505809
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748215694064868  LUMO = 2.67075124535989
  mo_energy =
[-3.25123541e+01 -1.79365146e+00 -7.48215694e-01 -7.48215694e-01
 -7.48215694e-01  2.67075125e+00  2.67075125e+00  2.67075125e+00
  2.00831107e+01  2.00831107e+01  2.00831107e+01  3.61954246e+01
  3.26537205e+02  2.75563330e+03]
E1 = -182.25279645402702  E_coul = 54.22316942939665
cycle= 1 E= -128.02962702463  delta_E= -0.227  |g|= 0.121  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.19194
diis-c [-0.03684113  1.        ]
  HOMO = -0.777063135020185  LUMO = 2.65023615148115
  mo_energy =
[-3.27375465e+01 -1.83507151e+00 -7.77063135e-01 -7.77063135e-01
 -7.77063135e-01  2.65023615e+00  2.65023615e+00  2.65023615e+00
  1.99411713e+01  1.99411713e+01  1.99411713e+01  3.60253454e+01
  3.26275192e+02  2.75530816e+03]
E1 = -182.52945612683837  E_coul = 54.4990268258166
cycle= 2 E= -128.030429301022  delta_E= -0.000802  |g|= 0.0345  |ddm|= 0.0361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0548204
diis-c [-2.32466739e-04  2.15817093e-01  7.84182907e-01]
  HOMO = -0.76272792704968  LUMO = 2.66333601309374
  mo_energy =
[-3.26885664e+01 -1.81879099e+00 -7.62727927e-01 -7.62727927e-01
 -7.62727927e-01  2.66333601e+00  2.66333601e+00  2.66333601e+00
  1.99777104e+01  1.99777104e+01  1.99777104e+01  3.60689546e+01
  3.26328748e+02  2.75536501e+03]
E1 = -182.4618387591418  E_coul = 54.43132465470362
cycle= 3 E= -128.030514104438  delta_E= -8.48e-05  |g|= 0.00102  |ddm|= 0.00894
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168302
diis-c [-5.79620263e-08 -4.54478846e-03  1.46618607e-02  9.89882928e-01]
  HOMO = -0.763159207959118  LUMO = 2.66295889957441
  mo_energy =
[-3.26898996e+01 -1.81924795e+00 -7.63159208e-01 -7.63159208e-01
 -7.63159208e-01  2.66295890e+00  2.66295890e+00  2.66295890e+00
  1.99766803e+01  1.99766803e+01  1.99766803e+01  3.60678322e+01
  3.26327492e+02  2.75536378e+03]
E1 = -182.46382751612063  E_coul = 54.433313334260866
cycle= 4 E= -128.03051418186  delta_E= -7.74e-08  |g|= 8.4e-06  |ddm|= 0.000263
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.05438e-05
diis-c [-2.52888400e-12  7.94873767e-05 -5.82259443e-04 -2.27819653e-02
  1.02328474e+00]
  HOMO = -0.763156152440337  LUMO = 2.66296147390485
  mo_energy =
[-3.26898927e+01 -1.81924408e+00 -7.63156152e-01 -7.63156152e-01
 -7.63156152e-01  2.66296147e+00  2.66296147e+00  2.66296147e+00
  1.99766864e+01  1.99766864e+01  1.99766864e+01  3.60678405e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381727411585  E_coul = 54.43330309225365
cycle= 5 E= -128.030514181862  delta_E= -2.44e-12  |g|= 7.19e-08  |ddm|= 1.39e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46381727411585  E_coul = 54.43330309225365
  HOMO = -0.763156192030809  LUMO = 2.6629614386912
  mo_energy =
[-3.26898928e+01 -1.81924412e+00 -7.63156192e-01 -7.63156192e-01
 -7.63156192e-01  2.66296144e+00  2.66296144e+00  2.66296144e+00
  1.99766863e+01  1.99766863e+01  1.99766863e+01  3.60678404e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381746178903  E_coul = 54.43330327992676
Extra cycle  E= -128.030514181862  delta_E= -5.68e-14  |g|= 2.35e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.71009249e+03 9.47471759e-01 2.27155458e+02 4.79828890e+01
 1.24504530e+01 1.34225842e+01 6.04775589e-01 2.78874356e+00]
E = -128.03051418186226
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.09249342        1
[INPUT] 0    0    [1    /1   ]  0.947471758924       1
[INPUT] 0    0    [1    /1   ]  227.155458242        1
[INPUT] 0    0    [1    /1   ]  47.98288896          1
[INPUT] 0    0    [1    /1   ]  12.4504529907        1
[INPUT] 1    0    [1    /1   ]  13.4225842183        1
[INPUT] 1    0    [1    /1   ]  0.604775589094       1
[INPUT] 1    0    [1    /1   ]  2.78874356131        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.0924934163522, 1.0]], [0, [0.9474717589243391, 1.0]], [0, [227.15545824237563, 1.0]], [0, [47.98288895995283, 1.0]], [0, [12.450452990675503, 1.0]], [1, [13.422584218305323, 1.0]], [1, [0.6047755890940176, 1.0]], [1, [2.78874356131124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.09249342]
bas 1, expnt(s) = [0.94747176]
bas 2, expnt(s) = [227.15545824]
bas 3, expnt(s) = [47.98288896]
bas 4, expnt(s) = [12.45045299]
bas 5, expnt(s) = [13.42258422]
bas 6, expnt(s) = [0.60477559]
bas 7, expnt(s) = [2.78874356]
CPU time:       339.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71009249e+03 6.71861453e+02 9.47471759e-01 2.42627336e+00
 2.27155458e+02 1.47828240e+02 4.79828890e+01 4.60606241e+01
 1.24504530e+01 1.67457225e+01 1.34225842e+01 7.49513681e+01
 6.04775589e-01 1.55588398e+00 2.78874356e+00 1.05134467e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939197232913205
cond(S) = 19.08096050144214
E1 = -182.7346931862698  E_coul = 54.93201812817966
init E= -127.80267505809
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748215694064868  LUMO = 2.67075124535989
  mo_energy =
[-3.25123541e+01 -1.79365146e+00 -7.48215694e-01 -7.48215694e-01
 -7.48215694e-01  2.67075125e+00  2.67075125e+00  2.67075125e+00
  2.00831107e+01  2.00831107e+01  2.00831107e+01  3.61954246e+01
  3.26537205e+02  2.75563330e+03]
E1 = -182.25279645402702  E_coul = 54.22316942939665
cycle= 1 E= -128.02962702463  delta_E= -0.227  |g|= 0.121  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.19194
diis-c [-0.03684113  1.        ]
  HOMO = -0.777063135020185  LUMO = 2.65023615148115
  mo_energy =
[-3.27375465e+01 -1.83507151e+00 -7.77063135e-01 -7.77063135e-01
 -7.77063135e-01  2.65023615e+00  2.65023615e+00  2.65023615e+00
  1.99411713e+01  1.99411713e+01  1.99411713e+01  3.60253454e+01
  3.26275192e+02  2.75530816e+03]
E1 = -182.52945612683837  E_coul = 54.4990268258166
cycle= 2 E= -128.030429301022  delta_E= -0.000802  |g|= 0.0345  |ddm|= 0.0361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0548204
diis-c [-2.32466739e-04  2.15817093e-01  7.84182907e-01]
  HOMO = -0.76272792704968  LUMO = 2.66333601309374
  mo_energy =
[-3.26885664e+01 -1.81879099e+00 -7.62727927e-01 -7.62727927e-01
 -7.62727927e-01  2.66333601e+00  2.66333601e+00  2.66333601e+00
  1.99777104e+01  1.99777104e+01  1.99777104e+01  3.60689546e+01
  3.26328748e+02  2.75536501e+03]
E1 = -182.4618387591418  E_coul = 54.43132465470362
cycle= 3 E= -128.030514104438  delta_E= -8.48e-05  |g|= 0.00102  |ddm|= 0.00894
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168302
diis-c [-5.79620263e-08 -4.54478846e-03  1.46618607e-02  9.89882928e-01]
  HOMO = -0.763159207959118  LUMO = 2.66295889957441
  mo_energy =
[-3.26898996e+01 -1.81924795e+00 -7.63159208e-01 -7.63159208e-01
 -7.63159208e-01  2.66295890e+00  2.66295890e+00  2.66295890e+00
  1.99766803e+01  1.99766803e+01  1.99766803e+01  3.60678322e+01
  3.26327492e+02  2.75536378e+03]
E1 = -182.46382751612063  E_coul = 54.433313334260866
cycle= 4 E= -128.03051418186  delta_E= -7.74e-08  |g|= 8.4e-06  |ddm|= 0.000263
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.05438e-05
diis-c [-2.52888400e-12  7.94873767e-05 -5.82259443e-04 -2.27819653e-02
  1.02328474e+00]
  HOMO = -0.763156152440337  LUMO = 2.66296147390485
  mo_energy =
[-3.26898927e+01 -1.81924408e+00 -7.63156152e-01 -7.63156152e-01
 -7.63156152e-01  2.66296147e+00  2.66296147e+00  2.66296147e+00
  1.99766864e+01  1.99766864e+01  1.99766864e+01  3.60678405e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381727411585  E_coul = 54.43330309225365
cycle= 5 E= -128.030514181862  delta_E= -2.44e-12  |g|= 7.19e-08  |ddm|= 1.39e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46381727411585  E_coul = 54.43330309225365
  HOMO = -0.763156192030809  LUMO = 2.6629614386912
  mo_energy =
[-3.26898928e+01 -1.81924412e+00 -7.63156192e-01 -7.63156192e-01
 -7.63156192e-01  2.66296144e+00  2.66296144e+00  2.66296144e+00
  1.99766863e+01  1.99766863e+01  1.99766863e+01  3.60678404e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381746178903  E_coul = 54.43330327992676
Extra cycle  E= -128.030514181862  delta_E= -5.68e-14  |g|= 2.35e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.08096050144214
E1 = -182.46381746178903  E_coul = 54.43330327992676
init E= -128.030514181862
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.763156179552613  LUMO = 2.66296145006549
  mo_energy =
[-3.26898928e+01 -1.81924411e+00 -7.63156180e-01 -7.63156180e-01
 -7.63156180e-01  2.66296145e+00  2.66296145e+00  2.66296145e+00
  1.99766863e+01  1.99766863e+01  1.99766863e+01  3.60678405e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381740315744  E_coul = 54.43330322129513
cycle= 1 E= -128.030514181862  delta_E= -5.68e-14  |g|= 7.28e-09  |ddm|= 7.75e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46381740315744  E_coul = 54.43330322129513
  HOMO = -0.763156183452856  LUMO = 2.66296144650887
  mo_energy =
[-3.26898928e+01 -1.81924411e+00 -7.63156183e-01 -7.63156183e-01
 -7.63156183e-01  2.66296145e+00  2.66296145e+00  2.66296145e+00
  1.99766863e+01  1.99766863e+01  1.99766863e+01  3.60678404e+01
  3.26327498e+02  2.75536379e+03]
E1 = -182.46381742153642  E_coul = 54.43330323967428
Extra cycle  E= -128.030514181862  delta_E= 1.71e-13  |g|= 2.29e-09  |ddm|= 2.43e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71009249e+03 9.47471759e-01 2.27155458e+02 4.79828890e+01
 1.24504530e+01 1.34225842e+01 6.04775589e-01 2.78874356e+00]
grad_E = [ 3.75151824e-05  5.99678776e-04 -1.25932591e-05 -2.28798922e-04
  8.50928268e-04  5.88437900e-04  9.94441265e-03 -2.84699835e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.20111351        1
[INPUT] 0    0    [1    /1   ]  0.94764474414        1
[INPUT] 0    0    [1    /1   ]  227.645801419        1
[INPUT] 0    0    [1    /1   ]  48.0787109619        1
[INPUT] 0    0    [1    /1   ]  12.4570323618        1
[INPUT] 1    0    [1    /1   ]  13.3106040319        1
[INPUT] 1    0    [1    /1   ]  0.602212931654       1
[INPUT] 1    0    [1    /1   ]  2.77531994826        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.201113511631, 1.0]], [0, [0.9476447441404103, 1.0]], [0, [227.64580141898, 1.0]], [0, [48.07871096194926, 1.0]], [0, [12.457032361789347, 1.0]], [1, [13.310604031910978, 1.0]], [1, [0.6022129316535298, 1.0]], [1, [2.775319948257738, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.20111351]
bas 1, expnt(s) = [0.94764474]
bas 2, expnt(s) = [227.64580142]
bas 3, expnt(s) = [48.07871096]
bas 4, expnt(s) = [12.45703236]
bas 5, expnt(s) = [13.31060403]
bas 6, expnt(s) = [0.60221293]
bas 7, expnt(s) = [2.77531995]
CPU time:       342.98
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71020111e+03 6.71893459e+02 9.47644744e-01 2.42660559e+00
 2.27645801e+02 1.48067505e+02 4.80787110e+01 4.61295944e+01
 1.24570324e+01 1.67523589e+01 1.33106040e+01 7.41705668e+01
 6.02212932e-01 1.54764728e+00 2.77531995e+00 1.04502268e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93969930202673
cond(S) = 19.05495171191325
E1 = -182.73449979178406  E_coul = 54.931554367236465
init E= -127.802945424548
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748207425777979  LUMO = 2.65635231552369
  mo_energy =
[-3.25127149e+01 -1.79360340e+00 -7.48207426e-01 -7.48207426e-01
 -7.48207426e-01  2.65635232e+00  2.65635232e+00  2.65635232e+00
  1.99161812e+01  1.99161812e+01  1.99161812e+01  3.62597984e+01
  3.27305759e+02  2.75768444e+03]
E1 = -182.23520363759732  E_coul = 54.20557244861723
cycle= 1 E= -128.02963118898  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194838
diis-c [-0.03796201  1.        ]
  HOMO = -0.778381838804513  LUMO = 2.63480509498012
  mo_energy =
[-3.27409374e+01 -1.83654648e+00 -7.78381839e-01 -7.78381839e-01
 -7.78381839e-01  2.63480509e+00  2.63480509e+00  2.63480509e+00
  1.97722747e+01  1.97722747e+01  1.97722747e+01  3.60867261e+01
  3.27040573e+02  2.75735637e+03]
E1 = -182.51753958635658  E_coul = 54.48707807222993
cycle= 2 E= -128.030461514127  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559939
diis-c [-2.32080553e-04  2.17156741e-01  7.82843259e-01]
  HOMO = -0.763770468229926  LUMO = 2.64810209383429
  mo_energy =
[-3.26910741e+01 -1.81994752e+00 -7.63770468e-01 -7.63770468e-01
 -7.63770468e-01  2.64810209e+00  2.64810209e+00  2.64810209e+00
  1.98093749e+01  1.98093749e+01  1.98093749e+01  3.61311443e+01
  3.27095056e+02  2.75741416e+03]
E1 = -182.44840253362062  E_coul = 54.4178524512823
cycle= 3 E= -128.030550082338  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167072
diis-c [-5.80527965e-08 -4.52723878e-03  1.39561232e-02  9.90571116e-01]
  HOMO = -0.764198003045135  LUMO = 2.64773045339734
  mo_energy =
[-3.26923911e+01 -1.82039981e+00 -7.64198003e-01 -7.64198003e-01
 -7.64198003e-01  2.64773045e+00  2.64773045e+00  2.64773045e+00
  1.98083589e+01  1.98083589e+01  1.98083589e+01  3.61300362e+01
  3.27093813e+02  2.75741294e+03]
E1 = -182.45037663544207  E_coul = 54.419826476946035
cycle= 4 E= -128.030550158496  delta_E= -7.62e-08  |g|= 8.12e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.00022e-05
diis-c [-2.36328894e-12  7.91026013e-05 -5.50706114e-04 -2.28121012e-02
  1.02328370e+00]
  HOMO = -0.764195126984353  LUMO = 2.64773285028866
  mo_energy =
[-3.26923848e+01 -1.82039614e+00 -7.64195127e-01 -7.64195127e-01
 -7.64195127e-01  2.64773285e+00  2.64773285e+00  2.64773285e+00
  1.98083646e+01  1.98083646e+01  1.98083646e+01  3.61300441e+01
  3.27093819e+02  2.75741295e+03]
E1 = -182.4503671041316  E_coul = 54.41981694563338
cycle= 5 E= -128.030550158498  delta_E= -2.19e-12  |g|= 7.16e-08  |ddm|= 1.31e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.4503671041316  E_coul = 54.41981694563338
  HOMO = -0.764195166338302  LUMO = 2.64773281554029
  mo_energy =
[-3.26923849e+01 -1.82039618e+00 -7.64195166e-01 -7.64195166e-01
 -7.64195166e-01  2.64773282e+00  2.64773282e+00  2.64773282e+00
  1.98083645e+01  1.98083645e+01  1.98083645e+01  3.61300440e+01
  3.27093818e+02  2.75741295e+03]
E1 = -182.45036729112272  E_coul = 54.41981713262445
Extra cycle  E= -128.030550158498  delta_E= -5.68e-14  |g|= 2.34e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71020111e+03 9.47644744e-01 2.27645801e+02 4.80787110e+01
 1.24570324e+01 1.33106040e+01 6.02212932e-01 2.77531995e+00]
E = -128.03055015849827
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.20111351        1
[INPUT] 0    0    [1    /1   ]  0.94764474414        1
[INPUT] 0    0    [1    /1   ]  227.645801419        1
[INPUT] 0    0    [1    /1   ]  48.0787109619        1
[INPUT] 0    0    [1    /1   ]  12.4570323618        1
[INPUT] 1    0    [1    /1   ]  13.3106040319        1
[INPUT] 1    0    [1    /1   ]  0.602212931654       1
[INPUT] 1    0    [1    /1   ]  2.77531994826        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.201113511631, 1.0]], [0, [0.9476447441404103, 1.0]], [0, [227.64580141898, 1.0]], [0, [48.07871096194926, 1.0]], [0, [12.457032361789347, 1.0]], [1, [13.310604031910978, 1.0]], [1, [0.6022129316535298, 1.0]], [1, [2.775319948257738, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.20111351]
bas 1, expnt(s) = [0.94764474]
bas 2, expnt(s) = [227.64580142]
bas 3, expnt(s) = [48.07871096]
bas 4, expnt(s) = [12.45703236]
bas 5, expnt(s) = [13.31060403]
bas 6, expnt(s) = [0.60221293]
bas 7, expnt(s) = [2.77531995]
CPU time:       344.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71020111e+03 6.71893459e+02 9.47644744e-01 2.42660559e+00
 2.27645801e+02 1.48067505e+02 4.80787110e+01 4.61295944e+01
 1.24570324e+01 1.67523589e+01 1.33106040e+01 7.41705668e+01
 6.02212932e-01 1.54764728e+00 2.77531995e+00 1.04502268e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93969930202673
cond(S) = 19.05495171191325
E1 = -182.73449979178406  E_coul = 54.931554367236465
init E= -127.802945424548
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748207425777979  LUMO = 2.65635231552369
  mo_energy =
[-3.25127149e+01 -1.79360340e+00 -7.48207426e-01 -7.48207426e-01
 -7.48207426e-01  2.65635232e+00  2.65635232e+00  2.65635232e+00
  1.99161812e+01  1.99161812e+01  1.99161812e+01  3.62597984e+01
  3.27305759e+02  2.75768444e+03]
E1 = -182.23520363759732  E_coul = 54.20557244861723
cycle= 1 E= -128.02963118898  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194838
diis-c [-0.03796201  1.        ]
  HOMO = -0.778381838804513  LUMO = 2.63480509498012
  mo_energy =
[-3.27409374e+01 -1.83654648e+00 -7.78381839e-01 -7.78381839e-01
 -7.78381839e-01  2.63480509e+00  2.63480509e+00  2.63480509e+00
  1.97722747e+01  1.97722747e+01  1.97722747e+01  3.60867261e+01
  3.27040573e+02  2.75735637e+03]
E1 = -182.51753958635658  E_coul = 54.48707807222993
cycle= 2 E= -128.030461514127  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559939
diis-c [-2.32080553e-04  2.17156741e-01  7.82843259e-01]
  HOMO = -0.763770468229926  LUMO = 2.64810209383429
  mo_energy =
[-3.26910741e+01 -1.81994752e+00 -7.63770468e-01 -7.63770468e-01
 -7.63770468e-01  2.64810209e+00  2.64810209e+00  2.64810209e+00
  1.98093749e+01  1.98093749e+01  1.98093749e+01  3.61311443e+01
  3.27095056e+02  2.75741416e+03]
E1 = -182.44840253362062  E_coul = 54.4178524512823
cycle= 3 E= -128.030550082338  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167072
diis-c [-5.80527965e-08 -4.52723878e-03  1.39561232e-02  9.90571116e-01]
  HOMO = -0.764198003045135  LUMO = 2.64773045339734
  mo_energy =
[-3.26923911e+01 -1.82039981e+00 -7.64198003e-01 -7.64198003e-01
 -7.64198003e-01  2.64773045e+00  2.64773045e+00  2.64773045e+00
  1.98083589e+01  1.98083589e+01  1.98083589e+01  3.61300362e+01
  3.27093813e+02  2.75741294e+03]
E1 = -182.45037663544207  E_coul = 54.419826476946035
cycle= 4 E= -128.030550158496  delta_E= -7.62e-08  |g|= 8.12e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.00022e-05
diis-c [-2.36328894e-12  7.91026013e-05 -5.50706114e-04 -2.28121012e-02
  1.02328370e+00]
  HOMO = -0.764195126984353  LUMO = 2.64773285028866
  mo_energy =
[-3.26923848e+01 -1.82039614e+00 -7.64195127e-01 -7.64195127e-01
 -7.64195127e-01  2.64773285e+00  2.64773285e+00  2.64773285e+00
  1.98083646e+01  1.98083646e+01  1.98083646e+01  3.61300441e+01
  3.27093819e+02  2.75741295e+03]
E1 = -182.4503671041316  E_coul = 54.41981694563338
cycle= 5 E= -128.030550158498  delta_E= -2.19e-12  |g|= 7.16e-08  |ddm|= 1.31e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4503671041316  E_coul = 54.41981694563338
  HOMO = -0.764195166338302  LUMO = 2.64773281554029
  mo_energy =
[-3.26923849e+01 -1.82039618e+00 -7.64195166e-01 -7.64195166e-01
 -7.64195166e-01  2.64773282e+00  2.64773282e+00  2.64773282e+00
  1.98083645e+01  1.98083645e+01  1.98083645e+01  3.61300440e+01
  3.27093818e+02  2.75741295e+03]
E1 = -182.45036729112272  E_coul = 54.41981713262445
Extra cycle  E= -128.030550158498  delta_E= -5.68e-14  |g|= 2.34e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.05495171191325
E1 = -182.45036729112272  E_coul = 54.41981713262445
init E= -128.030550158498
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.76419515390454  LUMO = 2.64773282682754
  mo_energy =
[-3.26923849e+01 -1.82039617e+00 -7.64195154e-01 -7.64195154e-01
 -7.64195154e-01  2.64773283e+00  2.64773283e+00  2.64773283e+00
  1.98083646e+01  1.98083646e+01  1.98083646e+01  3.61300441e+01
  3.27093818e+02  2.75741295e+03]
E1 = -182.4503672324836  E_coul = 54.4198170739853
cycle= 1 E= -128.030550158498  delta_E=    0  |g|= 7.28e-09  |ddm|= 7.75e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4503672324836  E_coul = 54.4198170739853
  HOMO = -0.764195157807157  LUMO = 2.64773282328338
  mo_energy =
[-3.26923849e+01 -1.82039617e+00 -7.64195158e-01 -7.64195158e-01
 -7.64195158e-01  2.64773282e+00  2.64773282e+00  2.64773282e+00
  1.98083645e+01  1.98083645e+01  1.98083645e+01  3.61300441e+01
  3.27093818e+02  2.75741295e+03]
E1 = -182.45036725092984  E_coul = 54.41981709243156
Extra cycle  E= -128.030550158498  delta_E=    0  |g|= 2.29e-09  |ddm|= 2.43e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.71020111e+03 9.47644744e-01 2.27645801e+02 4.80787110e+01
 1.24570324e+01 1.33106040e+01 6.02212932e-01 2.77531995e+00]
grad_E = [ 3.67036204e-05  2.80159394e-04 -1.12187562e-05 -6.06453043e-05
  2.43163845e-04 -7.88406803e-05  1.16345620e-03  2.23759013e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:46:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.23450574        1
[INPUT] 0    0    [1    /1   ]  0.947616857924       1
[INPUT] 0    0    [1    /1   ]  227.796551944        1
[INPUT] 0    0    [1    /1   ]  48.1032530149        1
[INPUT] 0    0    [1    /1   ]  12.4585037711        1
[INPUT] 1    0    [1    /1   ]  13.3188562437        1
[INPUT] 1    0    [1    /1   ]  0.602210157858       1
[INPUT] 1    0    [1    /1   ]  2.77608353364        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2345057382006, 1.0]], [0, [0.9476168579235922, 1.0]], [0, [227.79655194350525, 1.0]], [0, [48.10325301489227, 1.0]], [0, [12.458503771109699, 1.0]], [1, [13.318856243737669, 1.0]], [1, [0.6022101578582859, 1.0]], [1, [2.776083533640397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.23450574]
bas 1, expnt(s) = [0.94761686]
bas 2, expnt(s) = [227.79655194]
bas 3, expnt(s) = [48.10325301]
bas 4, expnt(s) = [12.45850377]
bas 5, expnt(s) = [13.31885624]
bas 6, expnt(s) = [0.60221016]
bas 7, expnt(s) = [2.77608353]
CPU time:       347.59
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71023451e+03 6.71903298e+02 9.47616858e-01 2.42655203e+00
 2.27796552e+02 1.48141038e+02 4.81032530e+01 4.61472536e+01
 1.24585038e+01 1.67538430e+01 1.33188562e+01 7.42280509e+01
 6.02210158e-01 1.54763837e+00 2.77608353e+00 1.04538209e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939697750511915
cond(S) = 19.046203891236832
E1 = -182.73421392175658  E_coul = 54.93135259430457
init E= -127.802861327452
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748232426666627  LUMO = 2.65661693390898
  mo_energy =
[-3.25127347e+01 -1.79361194e+00 -7.48232427e-01 -7.48232427e-01
 -7.48232427e-01  2.65661693e+00  2.65661693e+00  2.65661693e+00
  1.99271589e+01  1.99271589e+01  1.99271589e+01  3.62753547e+01
  3.27525314e+02  2.75829700e+03]
E1 = -182.23446162880634  E_coul = 54.204830004444744
cycle= 1 E= -128.029631624362  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194936
diis-c [-0.03800022  1.        ]
  HOMO = -0.778443939179869  LUMO = 2.635025909249
  mo_energy =
[-3.27410788e+01 -1.83659090e+00 -7.78443939e-01 -7.78443939e-01
 -7.78443939e-01  2.63502591e+00  2.63502591e+00  2.63502591e+00
  1.97831044e+01  1.97831044e+01  1.97831044e+01  3.61021575e+01
  3.27259933e+02  2.75796876e+03]
E1 = -182.51696871517933  E_coul = 54.48650577571026
cycle= 2 E= -128.030462939469  delta_E= -0.000831  |g|= 0.0353  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560254
diis-c [-2.31560669e-04  2.17187813e-01  7.82812187e-01]
  HOMO = -0.76382438343525  LUMO = 2.64833268476663
  mo_energy =
[-3.26911870e+01 -1.81998266e+00 -7.63824383e-01 -7.63824383e-01
 -7.63824383e-01  2.64833268e+00  2.64833268e+00  2.64833268e+00
  1.98202345e+01  1.98202345e+01  1.98202345e+01  3.61466054e+01
  3.27314447e+02  2.75802659e+03]
E1 = -182.44779142908632  E_coul = 54.41723981057043
cycle= 3 E= -128.030551618516  delta_E= -8.87e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166976
diis-c [-5.80003504e-08 -4.52923525e-03  1.39158175e-02  9.90613418e-01]
  HOMO = -0.76425166275315  LUMO = 2.64796122495966
  mo_energy =
[-3.26925030e+01 -1.82043461e+00 -7.64251663e-01 -7.64251663e-01
 -7.64251663e-01  2.64796122e+00  2.64796122e+00  2.64796122e+00
  1.98192190e+01  1.98192190e+01  1.98192190e+01  3.61454982e+01
  3.27313206e+02  2.75802537e+03]
E1 = -182.44976416787125  E_coul = 54.41921247329705
cycle= 4 E= -128.030551694574  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.97011e-06
diis-c [-2.35219344e-12  7.90216497e-05 -5.48677566e-04 -2.27836318e-02
  1.02325329e+00]
  HOMO = -0.764248795052396  LUMO = 2.64796361422856
  mo_energy =
[-3.26924967e+01 -1.82043094e+00 -7.64248795e-01 -7.64248795e-01
 -7.64248795e-01  2.64796361e+00  2.64796361e+00  2.64796361e+00
  1.98192247e+01  1.98192247e+01  1.98192247e+01  3.61455061e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.44975466659912  E_coul = 54.41920297202274
cycle= 5 E= -128.030551694576  delta_E= -2.19e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44975466659912  E_coul = 54.41920297202274
  HOMO = -0.764248834650365  LUMO = 2.64796357925967
  mo_energy =
[-3.26924969e+01 -1.82043099e+00 -7.64248835e-01 -7.64248835e-01
 -7.64248835e-01  2.64796358e+00  2.64796358e+00  2.64796358e+00
  1.98192246e+01  1.98192246e+01  1.98192246e+01  3.61455060e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.44975485461364  E_coul = 54.41920316003726
Extra cycle  E= -128.030551694576  delta_E=    0  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71023451e+03 9.47616858e-01 2.27796552e+02 4.81032530e+01
 1.24585038e+01 1.33188562e+01 6.02210158e-01 2.77608353e+00]
E = -128.0305516945764
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.23450574        1
[INPUT] 0    0    [1    /1   ]  0.947616857924       1
[INPUT] 0    0    [1    /1   ]  227.796551944        1
[INPUT] 0    0    [1    /1   ]  48.1032530149        1
[INPUT] 0    0    [1    /1   ]  12.4585037711        1
[INPUT] 1    0    [1    /1   ]  13.3188562437        1
[INPUT] 1    0    [1    /1   ]  0.602210157858       1
[INPUT] 1    0    [1    /1   ]  2.77608353364        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2345057382006, 1.0]], [0, [0.9476168579235922, 1.0]], [0, [227.79655194350525, 1.0]], [0, [48.10325301489227, 1.0]], [0, [12.458503771109699, 1.0]], [1, [13.318856243737669, 1.0]], [1, [0.6022101578582859, 1.0]], [1, [2.776083533640397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.23450574]
bas 1, expnt(s) = [0.94761686]
bas 2, expnt(s) = [227.79655194]
bas 3, expnt(s) = [48.10325301]
bas 4, expnt(s) = [12.45850377]
bas 5, expnt(s) = [13.31885624]
bas 6, expnt(s) = [0.60221016]
bas 7, expnt(s) = [2.77608353]
CPU time:       348.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71023451e+03 6.71903298e+02 9.47616858e-01 2.42655203e+00
 2.27796552e+02 1.48141038e+02 4.81032530e+01 4.61472536e+01
 1.24585038e+01 1.67538430e+01 1.33188562e+01 7.42280509e+01
 6.02210158e-01 1.54763837e+00 2.77608353e+00 1.04538209e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939697750511915
cond(S) = 19.046203891236832
E1 = -182.73421392175658  E_coul = 54.93135259430457
init E= -127.802861327452
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748232426666627  LUMO = 2.65661693390898
  mo_energy =
[-3.25127347e+01 -1.79361194e+00 -7.48232427e-01 -7.48232427e-01
 -7.48232427e-01  2.65661693e+00  2.65661693e+00  2.65661693e+00
  1.99271589e+01  1.99271589e+01  1.99271589e+01  3.62753547e+01
  3.27525314e+02  2.75829700e+03]
E1 = -182.23446162880634  E_coul = 54.204830004444744
cycle= 1 E= -128.029631624362  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194936
diis-c [-0.03800022  1.        ]
  HOMO = -0.778443939179869  LUMO = 2.635025909249
  mo_energy =
[-3.27410788e+01 -1.83659090e+00 -7.78443939e-01 -7.78443939e-01
 -7.78443939e-01  2.63502591e+00  2.63502591e+00  2.63502591e+00
  1.97831044e+01  1.97831044e+01  1.97831044e+01  3.61021575e+01
  3.27259933e+02  2.75796876e+03]
E1 = -182.51696871517933  E_coul = 54.48650577571026
cycle= 2 E= -128.030462939469  delta_E= -0.000831  |g|= 0.0353  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560254
diis-c [-2.31560669e-04  2.17187813e-01  7.82812187e-01]
  HOMO = -0.76382438343525  LUMO = 2.64833268476663
  mo_energy =
[-3.26911870e+01 -1.81998266e+00 -7.63824383e-01 -7.63824383e-01
 -7.63824383e-01  2.64833268e+00  2.64833268e+00  2.64833268e+00
  1.98202345e+01  1.98202345e+01  1.98202345e+01  3.61466054e+01
  3.27314447e+02  2.75802659e+03]
E1 = -182.44779142908632  E_coul = 54.41723981057043
cycle= 3 E= -128.030551618516  delta_E= -8.87e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166976
diis-c [-5.80003504e-08 -4.52923525e-03  1.39158175e-02  9.90613418e-01]
  HOMO = -0.76425166275315  LUMO = 2.64796122495966
  mo_energy =
[-3.26925030e+01 -1.82043461e+00 -7.64251663e-01 -7.64251663e-01
 -7.64251663e-01  2.64796122e+00  2.64796122e+00  2.64796122e+00
  1.98192190e+01  1.98192190e+01  1.98192190e+01  3.61454982e+01
  3.27313206e+02  2.75802537e+03]
E1 = -182.44976416787125  E_coul = 54.41921247329705
cycle= 4 E= -128.030551694574  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.97011e-06
diis-c [-2.35219344e-12  7.90216497e-05 -5.48677566e-04 -2.27836318e-02
  1.02325329e+00]
  HOMO = -0.764248795052396  LUMO = 2.64796361422856
  mo_energy =
[-3.26924967e+01 -1.82043094e+00 -7.64248795e-01 -7.64248795e-01
 -7.64248795e-01  2.64796361e+00  2.64796361e+00  2.64796361e+00
  1.98192247e+01  1.98192247e+01  1.98192247e+01  3.61455061e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.44975466659912  E_coul = 54.41920297202274
cycle= 5 E= -128.030551694576  delta_E= -2.19e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44975466659912  E_coul = 54.41920297202274
  HOMO = -0.764248834650365  LUMO = 2.64796357925967
  mo_energy =
[-3.26924969e+01 -1.82043099e+00 -7.64248835e-01 -7.64248835e-01
 -7.64248835e-01  2.64796358e+00  2.64796358e+00  2.64796358e+00
  1.98192246e+01  1.98192246e+01  1.98192246e+01  3.61455060e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.44975485461364  E_coul = 54.41920316003726
Extra cycle  E= -128.030551694576  delta_E=    0  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.046203891236832
E1 = -182.44975485461364  E_coul = 54.41920316003726
init E= -128.030551694576
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764248822149179  LUMO = 2.64796359061016
  mo_energy =
[-3.26924968e+01 -1.82043097e+00 -7.64248822e-01 -7.64248822e-01
 -7.64248822e-01  2.64796359e+00  2.64796359e+00  2.64796359e+00
  1.98192246e+01  1.98192246e+01  1.98192246e+01  3.61455061e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.44975479564988  E_coul = 54.419203101073464
cycle= 1 E= -128.030551694576  delta_E= -2.84e-14  |g|= 7.32e-09  |ddm|= 7.79e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44975479564988  E_coul = 54.419203101073464
  HOMO = -0.764248826073414  LUMO = 2.64796358704575
  mo_energy =
[-3.26924968e+01 -1.82043098e+00 -7.64248826e-01 -7.64248826e-01
 -7.64248826e-01  2.64796359e+00  2.64796359e+00  2.64796359e+00
  1.98192246e+01  1.98192246e+01  1.98192246e+01  3.61455060e+01
  3.27313211e+02  2.75802537e+03]
E1 = -182.4497548141984  E_coul = 54.41920311962201
Extra cycle  E= -128.030551694576  delta_E= 2.84e-14  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71023451e+03 9.47616858e-01 2.27796552e+02 4.81032530e+01
 1.24585038e+01 1.33188562e+01 6.02210158e-01 2.77608353e+00]
grad_E = [ 3.64173753e-05  1.25239862e-04 -8.63780964e-06 -2.83367207e-05
  9.94599219e-05 -2.91608354e-05  7.68540262e-05  6.24619779e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25545352        1
[INPUT] 0    0    [1    /1   ]  0.947587037098       1
[INPUT] 0    0    [1    /1   ]  227.891290202        1
[INPUT] 0    0    [1    /1   ]  48.1199216433        1
[INPUT] 0    0    [1    /1   ]  12.4596285395        1
[INPUT] 1    0    [1    /1   ]  13.3234302544        1
[INPUT] 1    0    [1    /1   ]  0.602239992957       1
[INPUT] 1    0    [1    /1   ]  2.77650718964        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2554535201916, 1.0]], [0, [0.9475870370983055, 1.0]], [0, [227.8912902018339, 1.0]], [0, [48.11992164325797, 1.0]], [0, [12.459628539495489, 1.0]], [1, [13.323430254417264, 1.0]], [1, [0.6022399929570402, 1.0]], [1, [2.776507189640278, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25545352]
bas 1, expnt(s) = [0.94758704]
bas 2, expnt(s) = [227.8912902]
bas 3, expnt(s) = [48.11992164]
bas 4, expnt(s) = [12.45962854]
bas 5, expnt(s) = [13.32343025]
bas 6, expnt(s) = [0.60223999]
bas 7, expnt(s) = [2.77650719]
CPU time:       352.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025545e+03 6.71909470e+02 9.47587037e-01 2.42649476e+00
 2.27891290e+02 1.48187244e+02 4.81199216e+01 4.61592462e+01
 1.24596285e+01 1.67549774e+01 1.33234303e+01 7.42599168e+01
 6.02239993e-01 1.54773421e+00 2.77650719e+00 1.04558151e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939692559534741
cond(S) = 19.0409221811023
E1 = -182.73399426298997  E_coul = 54.93121055566797
init E= -127.802783707322
    CPU time for initialize scf      0.03 sec, wall time      0.04 sec
  HOMO = -0.748248142629435  LUMO = 2.65686964799732
  mo_energy =
[-3.25127535e+01 -1.79361732e+00 -7.48248143e-01 -7.48248143e-01
 -7.48248143e-01  2.65686965e+00  2.65686965e+00  2.65686965e+00
  1.99333307e+01  1.99333307e+01  1.99333307e+01  3.62862224e+01
  3.27667722e+02  2.75868665e+03]
E1 = -182.2343347074842  E_coul = 54.20470284442766
cycle= 1 E= -128.029631863057  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194937
diis-c [-0.03800043  1.        ]
  HOMO = -0.778455166362797  LUMO = 2.63527652870089
  mo_energy =
[-3.27411138e+01 -1.83658601e+00 -7.78455166e-01 -7.78455166e-01
 -7.78455166e-01  2.63527653e+00  2.63527653e+00  2.63527653e+00
  1.97892425e+01  1.97892425e+01  1.97892425e+01  3.61130054e+01
  3.27402276e+02  2.75835837e+03]
E1 = -182.5168364163425  E_coul = 54.486373201302904
cycle= 2 E= -128.03046321504  delta_E= -0.000831  |g|= 0.0353  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560221
diis-c [-2.31237920e-04  2.17185295e-01  7.82814705e-01]
  HOMO = -0.763835889977446  LUMO = 2.64858441042018
  mo_energy =
[-3.26912223e+01 -1.81997831e+00 -7.63835890e-01 -7.63835890e-01
 -7.63835890e-01  2.64858441e+00  2.64858441e+00  2.64858441e+00
  1.98263769e+01  1.98263769e+01  1.98263769e+01  3.61574560e+01
  3.27456791e+02  2.75841619e+03]
E1 = -182.44766389477846  E_coul = 54.41711200753497
cycle= 3 E= -128.030551887243  delta_E= -8.87e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166924
diis-c [-5.79812386e-08 -4.53107648e-03  1.39006699e-02  9.90630407e-01]
  HOMO = -0.76426302847275  LUMO = 2.64821303718245
  mo_energy =
[-3.26925379e+01 -1.82043007e+00 -7.64263028e-01 -7.64263028e-01
 -7.64263028e-01  2.64821304e+00  2.64821304e+00  2.64821304e+00
  1.98253616e+01  1.98253616e+01  1.98253616e+01  3.61563492e+01
  3.27455550e+02  2.75841497e+03]
E1 = -182.44963586072967  E_coul = 54.41908389748254
cycle= 4 E= -128.030551963247  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95803e-06
diis-c [-2.34584916e-12  7.89422945e-05 -5.47855854e-04 -2.27597174e-02
  1.02322863e+00]
  HOMO = -0.764260163457926  LUMO = 2.64821542407106
  mo_energy =
[-3.26925316e+01 -1.82042641e+00 -7.64260163e-01 -7.64260163e-01
 -7.64260163e-01  2.64821542e+00  2.64821542e+00  2.64821542e+00
  1.98253673e+01  1.98253673e+01  1.98253673e+01  3.61563571e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.4496263681005  E_coul = 54.419074404851294
cycle= 5 E= -128.030551963249  delta_E= -2.05e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4496263681005  E_coul = 54.419074404851294
  HOMO = -0.764260203141596  LUMO = 2.64821538902134
  mo_energy =
[-3.26925317e+01 -1.82042645e+00 -7.64260203e-01 -7.64260203e-01
 -7.64260203e-01  2.64821539e+00  2.64821539e+00  2.64821539e+00
  1.98253672e+01  1.98253672e+01  1.98253672e+01  3.61563570e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.44962655645767  E_coul = 54.41907459320846
Extra cycle  E= -128.030551963249  delta_E= -2.84e-14  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.71025545e+03 9.47587037e-01 2.27891290e+02 4.81199216e+01
 1.24596285e+01 1.33234303e+01 6.02239993e-01 2.77650719e+00]
E = -128.03055196324922
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25545352        1
[INPUT] 0    0    [1    /1   ]  0.947587037098       1
[INPUT] 0    0    [1    /1   ]  227.891290202        1
[INPUT] 0    0    [1    /1   ]  48.1199216433        1
[INPUT] 0    0    [1    /1   ]  12.4596285395        1
[INPUT] 1    0    [1    /1   ]  13.3234302544        1
[INPUT] 1    0    [1    /1   ]  0.602239992957       1
[INPUT] 1    0    [1    /1   ]  2.77650718964        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2554535201916, 1.0]], [0, [0.9475870370983055, 1.0]], [0, [227.8912902018339, 1.0]], [0, [48.11992164325797, 1.0]], [0, [12.459628539495489, 1.0]], [1, [13.323430254417264, 1.0]], [1, [0.6022399929570402, 1.0]], [1, [2.776507189640278, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25545352]
bas 1, expnt(s) = [0.94758704]
bas 2, expnt(s) = [227.8912902]
bas 3, expnt(s) = [48.11992164]
bas 4, expnt(s) = [12.45962854]
bas 5, expnt(s) = [13.32343025]
bas 6, expnt(s) = [0.60223999]
bas 7, expnt(s) = [2.77650719]
CPU time:       353.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025545e+03 6.71909470e+02 9.47587037e-01 2.42649476e+00
 2.27891290e+02 1.48187244e+02 4.81199216e+01 4.61592462e+01
 1.24596285e+01 1.67549774e+01 1.33234303e+01 7.42599168e+01
 6.02239993e-01 1.54773421e+00 2.77650719e+00 1.04558151e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939692559534741
cond(S) = 19.0409221811023
E1 = -182.73399426298997  E_coul = 54.93121055566797
init E= -127.802783707322
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748248142629435  LUMO = 2.65686964799732
  mo_energy =
[-3.25127535e+01 -1.79361732e+00 -7.48248143e-01 -7.48248143e-01
 -7.48248143e-01  2.65686965e+00  2.65686965e+00  2.65686965e+00
  1.99333307e+01  1.99333307e+01  1.99333307e+01  3.62862224e+01
  3.27667722e+02  2.75868665e+03]
E1 = -182.2343347074842  E_coul = 54.20470284442766
cycle= 1 E= -128.029631863057  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194937
diis-c [-0.03800043  1.        ]
  HOMO = -0.778455166362797  LUMO = 2.63527652870089
  mo_energy =
[-3.27411138e+01 -1.83658601e+00 -7.78455166e-01 -7.78455166e-01
 -7.78455166e-01  2.63527653e+00  2.63527653e+00  2.63527653e+00
  1.97892425e+01  1.97892425e+01  1.97892425e+01  3.61130054e+01
  3.27402276e+02  2.75835837e+03]
E1 = -182.5168364163425  E_coul = 54.486373201302904
cycle= 2 E= -128.03046321504  delta_E= -0.000831  |g|= 0.0353  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560221
diis-c [-2.31237920e-04  2.17185295e-01  7.82814705e-01]
  HOMO = -0.763835889977446  LUMO = 2.64858441042018
  mo_energy =
[-3.26912223e+01 -1.81997831e+00 -7.63835890e-01 -7.63835890e-01
 -7.63835890e-01  2.64858441e+00  2.64858441e+00  2.64858441e+00
  1.98263769e+01  1.98263769e+01  1.98263769e+01  3.61574560e+01
  3.27456791e+02  2.75841619e+03]
E1 = -182.44766389477846  E_coul = 54.41711200753497
cycle= 3 E= -128.030551887243  delta_E= -8.87e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166924
diis-c [-5.79812386e-08 -4.53107648e-03  1.39006699e-02  9.90630407e-01]
  HOMO = -0.76426302847275  LUMO = 2.64821303718245
  mo_energy =
[-3.26925379e+01 -1.82043007e+00 -7.64263028e-01 -7.64263028e-01
 -7.64263028e-01  2.64821304e+00  2.64821304e+00  2.64821304e+00
  1.98253616e+01  1.98253616e+01  1.98253616e+01  3.61563492e+01
  3.27455550e+02  2.75841497e+03]
E1 = -182.44963586072967  E_coul = 54.41908389748254
cycle= 4 E= -128.030551963247  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95803e-06
diis-c [-2.34584916e-12  7.89422945e-05 -5.47855854e-04 -2.27597174e-02
  1.02322863e+00]
  HOMO = -0.764260163457926  LUMO = 2.64821542407106
  mo_energy =
[-3.26925316e+01 -1.82042641e+00 -7.64260163e-01 -7.64260163e-01
 -7.64260163e-01  2.64821542e+00  2.64821542e+00  2.64821542e+00
  1.98253673e+01  1.98253673e+01  1.98253673e+01  3.61563571e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.4496263681005  E_coul = 54.419074404851294
cycle= 5 E= -128.030551963249  delta_E= -2.05e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4496263681005  E_coul = 54.419074404851294
  HOMO = -0.764260203141596  LUMO = 2.64821538902134
  mo_energy =
[-3.26925317e+01 -1.82042645e+00 -7.64260203e-01 -7.64260203e-01
 -7.64260203e-01  2.64821539e+00  2.64821539e+00  2.64821539e+00
  1.98253672e+01  1.98253672e+01  1.98253672e+01  3.61563570e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.44962655645767  E_coul = 54.41907459320846
Extra cycle  E= -128.030551963249  delta_E= -2.84e-14  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.0409221811023
E1 = -182.44962655645767  E_coul = 54.41907459320846
init E= -128.030551963249
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764260190617912  LUMO = 2.64821540039345
  mo_energy =
[-3.26925317e+01 -1.82042644e+00 -7.64260191e-01 -7.64260191e-01
 -7.64260191e-01  2.64821540e+00  2.64821540e+00  2.64821540e+00
  1.98253672e+01  1.98253672e+01  1.98253672e+01  3.61563570e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.44962649738824  E_coul = 54.419074534138964
cycle= 1 E= -128.030551963249  delta_E= -5.68e-14  |g|= 7.34e-09  |ddm|= 7.81e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44962649738824  E_coul = 54.419074534138964
  HOMO = -0.764260194549177  LUMO = 2.64821539682228
  mo_energy =
[-3.26925317e+01 -1.82042644e+00 -7.64260195e-01 -7.64260195e-01
 -7.64260195e-01  2.64821540e+00  2.64821540e+00  2.64821540e+00
  1.98253672e+01  1.98253672e+01  1.98253672e+01  3.61563570e+01
  3.27455555e+02  2.75841497e+03]
E1 = -182.4496265159688  E_coul = 54.419074552719636
Extra cycle  E= -128.030551963249  delta_E= 1.42e-13  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71025545e+03 9.47587037e-01 2.27891290e+02 4.81199216e+01
 1.24596285e+01 1.33234303e+01 6.02239993e-01 2.77650719e+00]
grad_E = [ 3.62463777e-05 -3.84370770e-06 -7.50546810e-06 -4.31283987e-06
  4.26354663e-06  1.52900538e-06 -1.61927698e-04  8.10694466e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25616641        1
[INPUT] 0    0    [1    /1   ]  0.947584412065       1
[INPUT] 0    0    [1    /1   ]  227.894685107        1
[INPUT] 0    0    [1    /1   ]  48.1212850389        1
[INPUT] 0    0    [1    /1   ]  12.4598499528        1
[INPUT] 1    0    [1    /1   ]  13.3235986328        1
[INPUT] 1    0    [1    /1   ]  0.602258685701       1
[INPUT] 1    0    [1    /1   ]  2.77656764083        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2561664080574, 1.0]], [0, [0.9475844120651936, 1.0]], [0, [227.89468510725425, 1.0]], [0, [48.121285038923446, 1.0]], [0, [12.459849952810032, 1.0]], [1, [13.323598632794614, 1.0]], [1, [0.6022586857009978, 1.0]], [1, [2.7765676408290814, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25616641]
bas 1, expnt(s) = [0.94758441]
bas 2, expnt(s) = [227.89468511]
bas 3, expnt(s) = [48.12128504]
bas 4, expnt(s) = [12.45984995]
bas 5, expnt(s) = [13.32359863]
bas 6, expnt(s) = [0.60225869]
bas 7, expnt(s) = [2.77656764]
CPU time:       357.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025617e+03 6.71909680e+02 9.47584412e-01 2.42648972e+00
 2.27894685e+02 1.48188899e+02 4.81212850e+01 4.61602271e+01
 1.24598500e+01 1.67552007e+01 1.33235986e+01 7.42610899e+01
 6.02258686e-01 1.54779426e+00 2.77656764e+00 1.04560997e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93968912167633
cond(S) = 19.04096605600126
E1 = -182.7339815960175  E_coul = 54.93120717698653
init E= -127.802774419031
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748248201606382  LUMO = 2.65696319812195
  mo_energy =
[-3.25127541e+01 -1.79361786e+00 -7.48248202e-01 -7.48248202e-01
 -7.48248202e-01  2.65696320e+00  2.65696320e+00  2.65696320e+00
  1.99337503e+01  1.99337503e+01  1.99337503e+01  3.62874578e+01
  3.27675783e+02  2.75870368e+03]
E1 = -182.23447727446393  E_coul = 54.204845128293165
cycle= 1 E= -128.029632146171  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194913
diis-c [-0.03799093  1.        ]
  HOMO = -0.778444365322931  LUMO = 2.63537903080591
  mo_energy =
[-3.27410871e+01 -1.83657391e+00 -7.78444365e-01 -7.78444365e-01
 -7.78444365e-01  2.63537903e+00  2.63537903e+00  2.63537903e+00
  1.97896838e+01  1.97896838e+01  1.97896838e+01  3.61142647e+01
  3.27410365e+02  2.75837543e+03]
E1 = -182.51693072355982  E_coul = 54.4864674712466
cycle= 2 E= -128.030463252313  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560124
diis-c [-2.31226812e-04  2.17175060e-01  7.82824940e-01]
  HOMO = -0.763827433671769  LUMO = 2.64868507984505
  mo_energy =
[-3.26912033e+01 -1.81996891e+00 -7.63827434e-01 -7.63827434e-01
 -7.63827434e-01  2.64868508e+00  2.64868508e+00  2.64868508e+00
  1.98268125e+01  1.98268125e+01  1.98268125e+01  3.61587088e+01
  3.27464873e+02  2.75843324e+03]
E1 = -182.44777090364417  E_coul = 54.41721901119798
cycle= 3 E= -128.030551892446  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166935
diis-c [-5.79785575e-08 -4.53103668e-03  1.39071494e-02  9.90623887e-01]
  HOMO = -0.76425460264615  LUMO = 2.64831366568436
  mo_energy =
[-3.26925190e+01 -1.82042071e+00 -7.64254603e-01 -7.64254603e-01
 -7.64254603e-01  2.64831367e+00  2.64831367e+00  2.64831367e+00
  1.98257971e+01  1.98257971e+01  1.98257971e+01  3.61576019e+01
  3.27463631e+02  2.75843202e+03]
E1 = -182.44974297996382  E_coul = 54.419191011504225
cycle= 4 E= -128.03055196846  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95907e-06
diis-c [-2.34582521e-12  7.89313993e-05 -5.48038687e-04 -2.27576096e-02
  1.02322672e+00]
  HOMO = -0.764251737259753  LUMO = 2.64831605303067
  mo_energy =
[-3.26925127e+01 -1.82041705e+00 -7.64251737e-01 -7.64251737e-01
 -7.64251737e-01  2.64831605e+00  2.64831605e+00  2.64831605e+00
  1.98258028e+01  1.98258028e+01  1.98258028e+01  3.61576098e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.4497334856354  E_coul = 54.41918151717375
cycle= 5 E= -128.030551968462  delta_E= -2.07e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4497334856354  E_coul = 54.41918151717375
  HOMO = -0.764251776936816  LUMO = 2.64831601798473
  mo_energy =
[-3.26925128e+01 -1.82041710e+00 -7.64251777e-01 -7.64251777e-01
 -7.64251777e-01  2.64831602e+00  2.64831602e+00  2.64831602e+00
  1.98258027e+01  1.98258027e+01  1.98258027e+01  3.61576097e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.44973367395983  E_coul = 54.419181705498055
Extra cycle  E= -128.030551968462  delta_E= -1.14e-13  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71025617e+03 9.47584412e-01 2.27894685e+02 4.81212850e+01
 1.24598500e+01 1.33235986e+01 6.02258686e-01 2.77656764e+00]
E = -128.03055196846177
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25616641        1
[INPUT] 0    0    [1    /1   ]  0.947584412065       1
[INPUT] 0    0    [1    /1   ]  227.894685107        1
[INPUT] 0    0    [1    /1   ]  48.1212850389        1
[INPUT] 0    0    [1    /1   ]  12.4598499528        1
[INPUT] 1    0    [1    /1   ]  13.3235986328        1
[INPUT] 1    0    [1    /1   ]  0.602258685701       1
[INPUT] 1    0    [1    /1   ]  2.77656764083        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2561664080574, 1.0]], [0, [0.9475844120651936, 1.0]], [0, [227.89468510725425, 1.0]], [0, [48.121285038923446, 1.0]], [0, [12.459849952810032, 1.0]], [1, [13.323598632794614, 1.0]], [1, [0.6022586857009978, 1.0]], [1, [2.7765676408290814, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25616641]
bas 1, expnt(s) = [0.94758441]
bas 2, expnt(s) = [227.89468511]
bas 3, expnt(s) = [48.12128504]
bas 4, expnt(s) = [12.45984995]
bas 5, expnt(s) = [13.32359863]
bas 6, expnt(s) = [0.60225869]
bas 7, expnt(s) = [2.77656764]
CPU time:       358.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025617e+03 6.71909680e+02 9.47584412e-01 2.42648972e+00
 2.27894685e+02 1.48188899e+02 4.81212850e+01 4.61602271e+01
 1.24598500e+01 1.67552007e+01 1.33235986e+01 7.42610899e+01
 6.02258686e-01 1.54779426e+00 2.77656764e+00 1.04560997e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93968912167633
cond(S) = 19.04096605600126
E1 = -182.7339815960175  E_coul = 54.93120717698653
init E= -127.802774419031
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748248201606382  LUMO = 2.65696319812195
  mo_energy =
[-3.25127541e+01 -1.79361786e+00 -7.48248202e-01 -7.48248202e-01
 -7.48248202e-01  2.65696320e+00  2.65696320e+00  2.65696320e+00
  1.99337503e+01  1.99337503e+01  1.99337503e+01  3.62874578e+01
  3.27675783e+02  2.75870368e+03]
E1 = -182.23447727446393  E_coul = 54.204845128293165
cycle= 1 E= -128.029632146171  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194913
diis-c [-0.03799093  1.        ]
  HOMO = -0.778444365322931  LUMO = 2.63537903080591
  mo_energy =
[-3.27410871e+01 -1.83657391e+00 -7.78444365e-01 -7.78444365e-01
 -7.78444365e-01  2.63537903e+00  2.63537903e+00  2.63537903e+00
  1.97896838e+01  1.97896838e+01  1.97896838e+01  3.61142647e+01
  3.27410365e+02  2.75837543e+03]
E1 = -182.51693072355982  E_coul = 54.4864674712466
cycle= 2 E= -128.030463252313  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560124
diis-c [-2.31226812e-04  2.17175060e-01  7.82824940e-01]
  HOMO = -0.763827433671769  LUMO = 2.64868507984505
  mo_energy =
[-3.26912033e+01 -1.81996891e+00 -7.63827434e-01 -7.63827434e-01
 -7.63827434e-01  2.64868508e+00  2.64868508e+00  2.64868508e+00
  1.98268125e+01  1.98268125e+01  1.98268125e+01  3.61587088e+01
  3.27464873e+02  2.75843324e+03]
E1 = -182.44777090364417  E_coul = 54.41721901119798
cycle= 3 E= -128.030551892446  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166935
diis-c [-5.79785575e-08 -4.53103668e-03  1.39071494e-02  9.90623887e-01]
  HOMO = -0.76425460264615  LUMO = 2.64831366568436
  mo_energy =
[-3.26925190e+01 -1.82042071e+00 -7.64254603e-01 -7.64254603e-01
 -7.64254603e-01  2.64831367e+00  2.64831367e+00  2.64831367e+00
  1.98257971e+01  1.98257971e+01  1.98257971e+01  3.61576019e+01
  3.27463631e+02  2.75843202e+03]
E1 = -182.44974297996382  E_coul = 54.419191011504225
cycle= 4 E= -128.03055196846  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95907e-06
diis-c [-2.34582521e-12  7.89313993e-05 -5.48038687e-04 -2.27576096e-02
  1.02322672e+00]
  HOMO = -0.764251737259753  LUMO = 2.64831605303067
  mo_energy =
[-3.26925127e+01 -1.82041705e+00 -7.64251737e-01 -7.64251737e-01
 -7.64251737e-01  2.64831605e+00  2.64831605e+00  2.64831605e+00
  1.98258028e+01  1.98258028e+01  1.98258028e+01  3.61576098e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.4497334856354  E_coul = 54.41918151717375
cycle= 5 E= -128.030551968462  delta_E= -2.07e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4497334856354  E_coul = 54.41918151717375
  HOMO = -0.764251776936816  LUMO = 2.64831601798473
  mo_energy =
[-3.26925128e+01 -1.82041710e+00 -7.64251777e-01 -7.64251777e-01
 -7.64251777e-01  2.64831602e+00  2.64831602e+00  2.64831602e+00
  1.98258027e+01  1.98258027e+01  1.98258027e+01  3.61576097e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.44973367395983  E_coul = 54.419181705498055
Extra cycle  E= -128.030551968462  delta_E= -1.14e-13  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.04096605600126
E1 = -182.44973367395983  E_coul = 54.419181705498055
init E= -128.030551968462
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.764251764415335  LUMO = 2.6483160293551
  mo_energy =
[-3.26925128e+01 -1.82041708e+00 -7.64251764e-01 -7.64251764e-01
 -7.64251764e-01  2.64831603e+00  2.64831603e+00  2.64831603e+00
  1.98258028e+01  1.98258028e+01  1.98258028e+01  3.61576097e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.44973361490224  E_coul = 54.41918164644037
cycle= 1 E= -128.030551968462  delta_E= -1.14e-13  |g|= 7.34e-09  |ddm|= 7.8e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44973361490224  E_coul = 54.41918164644037
  HOMO = -0.764251768345798  LUMO = 2.64831602578457
  mo_energy =
[-3.26925128e+01 -1.82041709e+00 -7.64251768e-01 -7.64251768e-01
 -7.64251768e-01  2.64831603e+00  2.64831603e+00  2.64831603e+00
  1.98258028e+01  1.98258028e+01  1.98258028e+01  3.61576097e+01
  3.27463636e+02  2.75843203e+03]
E1 = -182.44973363347862  E_coul = 54.419181665016865
Extra cycle  E= -128.030551968462  delta_E= 1.42e-13  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.71025617e+03 9.47584412e-01 2.27894685e+02 4.81212850e+01
 1.24598500e+01 1.33235986e+01 6.02258686e-01 2.77656764e+00]
grad_E = [ 3.62447318e-05 -8.32099314e-06 -7.70829540e-06 -2.09861413e-06
  2.13401248e-06  6.31863062e-07 -7.29055599e-05  6.19993017e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.2561889         1
[INPUT] 0    0    [1    /1   ]  0.94758418652        1
[INPUT] 0    0    [1    /1   ]  227.895212094        1
[INPUT] 0    0    [1    /1   ]  48.1224481357        1
[INPUT] 0    0    [1    /1   ]  12.4600468611        1
[INPUT] 1    0    [1    /1   ]  13.3236451705        1
[INPUT] 1    0    [1    /1   ]  0.602277178102       1
[INPUT] 1    0    [1    /1   ]  2.7766072733         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2561888999187, 1.0]], [0, [0.9475841865200737, 1.0]], [0, [227.89521209434866, 1.0]], [0, [48.12244813570738, 1.0]], [0, [12.460046861115865, 1.0]], [1, [13.323645170471025, 1.0]], [1, [0.6022771781024874, 1.0]], [1, [2.776607273296963, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.2561889]
bas 1, expnt(s) = [0.94758419]
bas 2, expnt(s) = [227.89521209]
bas 3, expnt(s) = [48.12244814]
bas 4, expnt(s) = [12.46004686]
bas 5, expnt(s) = [13.32364517]
bas 6, expnt(s) = [0.60227718]
bas 7, expnt(s) = [2.77660727]
CPU time:       361.71
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025619e+03 6.71909687e+02 9.47584187e-01 2.42648928e+00
 2.27895212e+02 1.48189156e+02 4.81224481e+01 4.61610638e+01
 1.24600469e+01 1.67553993e+01 1.33236452e+01 7.42614142e+01
 6.02277178e-01 1.54785367e+00 2.77660727e+00 1.04562862e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939685581168987
cond(S) = 19.041171417750686
E1 = -182.73397922602476  E_coul = 54.93121266619889
init E= -127.802766559826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748247398891001  LUMO = 2.65704736837557
  mo_energy =
[-3.25127537e+01 -1.79361761e+00 -7.48247399e-01 -7.48247399e-01
 -7.48247399e-01  2.65704737e+00  2.65704737e+00  2.65704737e+00
  1.99339779e+01  1.99339779e+01  1.99339779e+01  3.62885542e+01
  3.27680484e+02  2.75870990e+03]
E1 = -182.23464326854767  E_coul = 54.2050108105005
cycle= 1 E= -128.029632458047  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194886
diis-c [-0.03798043  1.        ]
  HOMO = -0.778431412818003  LUMO = 2.63547356967912
  mo_energy =
[-3.27410571e+01 -1.83655988e+00 -7.78431413e-01 -7.78431413e-01
 -7.78431413e-01  2.63547357e+00  2.63547357e+00  2.63547357e+00
  1.97899361e+01  1.97899361e+01  1.97899361e+01  3.61153872e+01
  3.27415097e+02  2.75838168e+03]
E1 = -182.517043898179  E_coul = 54.48658060656562
cycle= 2 E= -128.030463291613  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560017
diis-c [-2.31221332e-04  2.17163825e-01  7.82836175e-01]
  HOMO = -0.763817040228731  LUMO = 2.64877751636965
  mo_energy =
[-3.26911817e+01 -1.81995783e+00 -7.63817040e-01 -7.63817040e-01
 -7.63817040e-01  2.64877752e+00  2.64877752e+00  2.64877752e+00
  1.98270585e+01  1.98270585e+01  1.98270585e+01  3.61598240e+01
  3.27469595e+02  2.75843948e+03]
E1 = -182.4478979324761  E_coul = 54.41734603595249
cycle= 3 E= -128.030551896524  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166947
diis-c [-5.79767475e-08 -4.53081530e-03  1.39149774e-02  9.90615838e-01]
  HOMO = -0.764244244695405  LUMO = 2.64840605832508
  mo_energy =
[-3.26924975e+01 -1.82040967e+00 -7.64244245e-01 -7.64244245e-01
 -7.64244245e-01  2.64840606e+00  2.64840606e+00  2.64840606e+00
  1.98260429e+01  1.98260429e+01  1.98260429e+01  3.61587170e+01
  3.27468353e+02  2.75843826e+03]
E1 = -182.4498701438975  E_coul = 54.4193181713493
cycle= 4 E= -128.030551972548  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.96053e-06
diis-c [-2.34584991e-12  7.89151972e-05 -5.48276675e-04 -2.27558518e-02
  1.02322521e+00]
  HOMO = -0.764241378865337  LUMO = 2.64840844620373
  mo_energy =
[-3.26924912e+01 -1.82040601e+00 -7.64241379e-01 -7.64241379e-01
 -7.64241379e-01  2.64840845e+00  2.64840845e+00  2.64840845e+00
  1.98260487e+01  1.98260487e+01  1.98260487e+01  3.61587249e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.4498606476063  E_coul = 54.41930867505594
cycle= 5 E= -128.03055197255  delta_E= -2.16e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4498606476063  E_coul = 54.41930867505594
  HOMO = -0.764241418525757  LUMO = 2.64840841117027
  mo_energy =
[-3.26924913e+01 -1.82040605e+00 -7.64241419e-01 -7.64241419e-01
 -7.64241419e-01  2.64840841e+00  2.64840841e+00  2.64840841e+00
  1.98260486e+01  1.98260486e+01  1.98260486e+01  3.61587248e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.44986083585536  E_coul = 54.41930886330482
Extra cycle  E= -128.030551972551  delta_E= -1.71e-13  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71025619e+03 9.47584187e-01 2.27895212e+02 4.81224481e+01
 1.24600469e+01 1.33236452e+01 6.02277178e-01 2.77660727e+00]
E = -128.03055197255054
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.2561889         1
[INPUT] 0    0    [1    /1   ]  0.94758418652        1
[INPUT] 0    0    [1    /1   ]  227.895212094        1
[INPUT] 0    0    [1    /1   ]  48.1224481357        1
[INPUT] 0    0    [1    /1   ]  12.4600468611        1
[INPUT] 1    0    [1    /1   ]  13.3236451705        1
[INPUT] 1    0    [1    /1   ]  0.602277178102       1
[INPUT] 1    0    [1    /1   ]  2.7766072733         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2561888999187, 1.0]], [0, [0.9475841865200737, 1.0]], [0, [227.89521209434866, 1.0]], [0, [48.12244813570738, 1.0]], [0, [12.460046861115865, 1.0]], [1, [13.323645170471025, 1.0]], [1, [0.6022771781024874, 1.0]], [1, [2.776607273296963, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.2561889]
bas 1, expnt(s) = [0.94758419]
bas 2, expnt(s) = [227.89521209]
bas 3, expnt(s) = [48.12244814]
bas 4, expnt(s) = [12.46004686]
bas 5, expnt(s) = [13.32364517]
bas 6, expnt(s) = [0.60227718]
bas 7, expnt(s) = [2.77660727]
CPU time:       362.82
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025619e+03 6.71909687e+02 9.47584187e-01 2.42648928e+00
 2.27895212e+02 1.48189156e+02 4.81224481e+01 4.61610638e+01
 1.24600469e+01 1.67553993e+01 1.33236452e+01 7.42614142e+01
 6.02277178e-01 1.54785367e+00 2.77660727e+00 1.04562862e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939685581168987
cond(S) = 19.041171417750686
E1 = -182.73397922602476  E_coul = 54.93121266619889
init E= -127.802766559826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748247398891001  LUMO = 2.65704736837557
  mo_energy =
[-3.25127537e+01 -1.79361761e+00 -7.48247399e-01 -7.48247399e-01
 -7.48247399e-01  2.65704737e+00  2.65704737e+00  2.65704737e+00
  1.99339779e+01  1.99339779e+01  1.99339779e+01  3.62885542e+01
  3.27680484e+02  2.75870990e+03]
E1 = -182.23464326854767  E_coul = 54.2050108105005
cycle= 1 E= -128.029632458047  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194886
diis-c [-0.03798043  1.        ]
  HOMO = -0.778431412818003  LUMO = 2.63547356967912
  mo_energy =
[-3.27410571e+01 -1.83655988e+00 -7.78431413e-01 -7.78431413e-01
 -7.78431413e-01  2.63547357e+00  2.63547357e+00  2.63547357e+00
  1.97899361e+01  1.97899361e+01  1.97899361e+01  3.61153872e+01
  3.27415097e+02  2.75838168e+03]
E1 = -182.517043898179  E_coul = 54.48658060656562
cycle= 2 E= -128.030463291613  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0560017
diis-c [-2.31221332e-04  2.17163825e-01  7.82836175e-01]
  HOMO = -0.763817040228731  LUMO = 2.64877751636965
  mo_energy =
[-3.26911817e+01 -1.81995783e+00 -7.63817040e-01 -7.63817040e-01
 -7.63817040e-01  2.64877752e+00  2.64877752e+00  2.64877752e+00
  1.98270585e+01  1.98270585e+01  1.98270585e+01  3.61598240e+01
  3.27469595e+02  2.75843948e+03]
E1 = -182.4478979324761  E_coul = 54.41734603595249
cycle= 3 E= -128.030551896524  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166947
diis-c [-5.79767475e-08 -4.53081530e-03  1.39149774e-02  9.90615838e-01]
  HOMO = -0.764244244695405  LUMO = 2.64840605832508
  mo_energy =
[-3.26924975e+01 -1.82040967e+00 -7.64244245e-01 -7.64244245e-01
 -7.64244245e-01  2.64840606e+00  2.64840606e+00  2.64840606e+00
  1.98260429e+01  1.98260429e+01  1.98260429e+01  3.61587170e+01
  3.27468353e+02  2.75843826e+03]
E1 = -182.4498701438975  E_coul = 54.4193181713493
cycle= 4 E= -128.030551972548  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.96053e-06
diis-c [-2.34584991e-12  7.89151972e-05 -5.48276675e-04 -2.27558518e-02
  1.02322521e+00]
  HOMO = -0.764241378865337  LUMO = 2.64840844620373
  mo_energy =
[-3.26924912e+01 -1.82040601e+00 -7.64241379e-01 -7.64241379e-01
 -7.64241379e-01  2.64840845e+00  2.64840845e+00  2.64840845e+00
  1.98260487e+01  1.98260487e+01  1.98260487e+01  3.61587249e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.4498606476063  E_coul = 54.41930867505594
cycle= 5 E= -128.03055197255  delta_E= -2.16e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4498606476063  E_coul = 54.41930867505594
  HOMO = -0.764241418525757  LUMO = 2.64840841117027
  mo_energy =
[-3.26924913e+01 -1.82040605e+00 -7.64241419e-01 -7.64241419e-01
 -7.64241419e-01  2.64840841e+00  2.64840841e+00  2.64840841e+00
  1.98260486e+01  1.98260486e+01  1.98260486e+01  3.61587248e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.44986083585536  E_coul = 54.41930886330482
Extra cycle  E= -128.030551972551  delta_E= -1.71e-13  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.041171417750686
E1 = -182.44986083585536  E_coul = 54.41930886330482
init E= -128.030551972551
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764241406009285  LUMO = 2.64840842253628
  mo_energy =
[-3.26924913e+01 -1.82040604e+00 -7.64241406e-01 -7.64241406e-01
 -7.64241406e-01  2.64840842e+00  2.64840842e+00  2.64840842e+00
  1.98260486e+01  1.98260486e+01  1.98260486e+01  3.61587248e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.44986077682313  E_coul = 54.419308804272575
cycle= 1 E= -128.030551972551  delta_E=    0  |g|= 7.33e-09  |ddm|= 7.8e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44986077682313  E_coul = 54.419308804272575
  HOMO = -0.764241409938061  LUMO = 2.64840841896722
  mo_energy =
[-3.26924913e+01 -1.82040604e+00 -7.64241410e-01 -7.64241410e-01
 -7.64241410e-01  2.64840842e+00  2.64840842e+00  2.64840842e+00
  1.98260486e+01  1.98260486e+01  1.98260486e+01  3.61587248e+01
  3.27468358e+02  2.75843827e+03]
E1 = -182.44986079539106  E_coul = 54.41930882284051
Extra cycle  E= -128.030551972551  delta_E=    0  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71025619e+03 9.47584187e-01 2.27895212e+02 4.81224481e+01
 1.24600469e+01 1.33236452e+01 6.02277178e-01 2.77660727e+00]
grad_E = [ 3.62508855e-05 -2.24897145e-06 -8.10003423e-06  9.29839324e-07
 -1.28560608e-06 -2.01632274e-07  5.38318280e-05 -5.05576870e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25596424        1
[INPUT] 0    0    [1    /1   ]  0.947584779169       1
[INPUT] 0    0    [1    /1   ]  227.894672737        1
[INPUT] 0    0    [1    /1   ]  48.1228977863        1
[INPUT] 0    0    [1    /1   ]  12.4601342795        1
[INPUT] 1    0    [1    /1   ]  13.3236694727        1
[INPUT] 1    0    [1    /1   ]  0.60228321994        1
[INPUT] 1    0    [1    /1   ]  2.77662354026        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.255964241234, 1.0]], [0, [0.9475847791691658, 1.0]], [0, [227.89467273744592, 1.0]], [0, [48.12289778626495, 1.0]], [0, [12.46013427953682, 1.0]], [1, [13.323669472734887, 1.0]], [1, [0.6022832199399268, 1.0]], [1, [2.776623540263144, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25596424]
bas 1, expnt(s) = [0.94758478]
bas 2, expnt(s) = [227.89467274]
bas 3, expnt(s) = [48.12289779]
bas 4, expnt(s) = [12.46013428]
bas 5, expnt(s) = [13.32366947]
bas 6, expnt(s) = [0.60228322]
bas 7, expnt(s) = [2.77662354]
CPU time:       366.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025596e+03 6.71909621e+02 9.47584779e-01 2.42649042e+00
 2.27894673e+02 1.48188893e+02 4.81228978e+01 4.61613873e+01
 1.24601343e+01 1.67554874e+01 1.33236695e+01 7.42615835e+01
 6.02283220e-01 1.54787308e+00 2.77662354e+00 1.04563628e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93968433433718
cond(S) = 19.041317372314484
E1 = -182.73398003331496  E_coul = 54.93121619584113
init E= -127.802763837474
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748246997588596  LUMO = 2.65707661510151
  mo_energy =
[-3.25127531e+01 -1.79361752e+00 -7.48246998e-01 -7.48246998e-01
 -7.48246998e-01  2.65707662e+00  2.65707662e+00  2.65707662e+00
  1.99340725e+01  1.99340725e+01  1.99340725e+01  3.62890137e+01
  3.27681651e+02  2.75870966e+03]
E1 = -182.234697574048  E_coul = 54.205065014431426
cycle= 1 E= -128.029632559617  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194877
diis-c [-0.03797718  1.        ]
  HOMO = -0.778427221187436  LUMO = 2.63550600954237
  mo_energy =
[-3.27410468e+01 -1.83655557e+00 -7.78427221e-01 -7.78427221e-01
 -7.78427221e-01  2.63550601e+00  2.63550601e+00  2.63550601e+00
  1.97900384e+01  1.97900384e+01  1.97900384e+01  3.61158548e+01
  3.27416274e+02  2.75838145e+03]
E1 = -182.5170813038087  E_coul = 54.486617998154344
cycle= 2 E= -128.030463305654  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559983
diis-c [-2.31222320e-04  2.17159947e-01  7.82840053e-01]
  HOMO = -0.763813665061724  LUMO = 2.64880930213982
  mo_energy =
[-3.26911741e+01 -1.81995446e+00 -7.63813665e-01 -7.63813665e-01
 -7.63813665e-01  2.64880930e+00  2.64880930e+00  2.64880930e+00
  1.98271588e+01  1.98271588e+01  1.98271588e+01  3.61602893e+01
  3.27470770e+02  2.75843925e+03]
E1 = -182.4479397244967  E_coul = 54.4173878251535
cycle= 3 E= -128.030551899343  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166954
diis-c [-5.79758580e-08 -4.53063071e-03  1.39182665e-02  9.90612364e-01]
  HOMO = -0.764240887448597  LUMO = 2.64843782362904
  mo_energy =
[-3.26924900e+01 -1.82040632e+00 -7.64240887e-01 -7.64240887e-01
 -7.64240887e-01  2.64843782e+00  2.64843782e+00  2.64843782e+00
  1.98261432e+01  1.98261432e+01  1.98261432e+01  3.61591822e+01
  3.27469528e+02  2.75843803e+03]
E1 = -182.44991200773788  E_coul = 54.419360032363876
cycle= 4 E= -128.030551975374  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.9607e-06
diis-c [-2.34580556e-12  7.89081151e-05 -5.48367680e-04 -2.27554831e-02
  1.02322494e+00]
  HOMO = -0.764238021591738  LUMO = 2.64844021158732
  mo_energy =
[-3.26924837e+01 -1.82040266e+00 -7.64238022e-01 -7.64238022e-01
 -7.64238022e-01  2.64844021e+00  2.64844021e+00  2.64844021e+00
  1.98261489e+01  1.98261489e+01  1.98261489e+01  3.61591901e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.44990251125813  E_coul = 54.419350535882224
cycle= 5 E= -128.030551975376  delta_E= -1.9e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44990251125813  E_coul = 54.419350535882224
  HOMO = -0.764238061246353  LUMO = 2.64844017655811
  mo_energy =
[-3.26924838e+01 -1.82040271e+00 -7.64238061e-01 -7.64238061e-01
 -7.64238061e-01  2.64844018e+00  2.64844018e+00  2.64844018e+00
  1.98261488e+01  1.98261488e+01  1.98261488e+01  3.61591900e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.449902699481  E_coul = 54.41935072410508
Extra cycle  E= -128.030551975376  delta_E=    0  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.71025596e+03 9.47584779e-01 2.27894673e+02 4.81228978e+01
 1.24601343e+01 1.33236695e+01 6.02283220e-01 2.77662354e+00]
E = -128.03055197537591
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25596424        1
[INPUT] 0    0    [1    /1   ]  0.947584779169       1
[INPUT] 0    0    [1    /1   ]  227.894672737        1
[INPUT] 0    0    [1    /1   ]  48.1228977863        1
[INPUT] 0    0    [1    /1   ]  12.4601342795        1
[INPUT] 1    0    [1    /1   ]  13.3236694727        1
[INPUT] 1    0    [1    /1   ]  0.60228321994        1
[INPUT] 1    0    [1    /1   ]  2.77662354026        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.255964241234, 1.0]], [0, [0.9475847791691658, 1.0]], [0, [227.89467273744592, 1.0]], [0, [48.12289778626495, 1.0]], [0, [12.46013427953682, 1.0]], [1, [13.323669472734887, 1.0]], [1, [0.6022832199399268, 1.0]], [1, [2.776623540263144, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25596424]
bas 1, expnt(s) = [0.94758478]
bas 2, expnt(s) = [227.89467274]
bas 3, expnt(s) = [48.12289779]
bas 4, expnt(s) = [12.46013428]
bas 5, expnt(s) = [13.32366947]
bas 6, expnt(s) = [0.60228322]
bas 7, expnt(s) = [2.77662354]
CPU time:       367.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025596e+03 6.71909621e+02 9.47584779e-01 2.42649042e+00
 2.27894673e+02 1.48188893e+02 4.81228978e+01 4.61613873e+01
 1.24601343e+01 1.67554874e+01 1.33236695e+01 7.42615835e+01
 6.02283220e-01 1.54787308e+00 2.77662354e+00 1.04563628e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93968433433718
cond(S) = 19.041317372314484
E1 = -182.73398003331496  E_coul = 54.93121619584113
init E= -127.802763837474
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748246997588596  LUMO = 2.65707661510151
  mo_energy =
[-3.25127531e+01 -1.79361752e+00 -7.48246998e-01 -7.48246998e-01
 -7.48246998e-01  2.65707662e+00  2.65707662e+00  2.65707662e+00
  1.99340725e+01  1.99340725e+01  1.99340725e+01  3.62890137e+01
  3.27681651e+02  2.75870966e+03]
E1 = -182.234697574048  E_coul = 54.205065014431426
cycle= 1 E= -128.029632559617  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194877
diis-c [-0.03797718  1.        ]
  HOMO = -0.778427221187436  LUMO = 2.63550600954237
  mo_energy =
[-3.27410468e+01 -1.83655557e+00 -7.78427221e-01 -7.78427221e-01
 -7.78427221e-01  2.63550601e+00  2.63550601e+00  2.63550601e+00
  1.97900384e+01  1.97900384e+01  1.97900384e+01  3.61158548e+01
  3.27416274e+02  2.75838145e+03]
E1 = -182.5170813038087  E_coul = 54.486617998154344
cycle= 2 E= -128.030463305654  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559983
diis-c [-2.31222320e-04  2.17159947e-01  7.82840053e-01]
  HOMO = -0.763813665061724  LUMO = 2.64880930213982
  mo_energy =
[-3.26911741e+01 -1.81995446e+00 -7.63813665e-01 -7.63813665e-01
 -7.63813665e-01  2.64880930e+00  2.64880930e+00  2.64880930e+00
  1.98271588e+01  1.98271588e+01  1.98271588e+01  3.61602893e+01
  3.27470770e+02  2.75843925e+03]
E1 = -182.4479397244967  E_coul = 54.4173878251535
cycle= 3 E= -128.030551899343  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166954
diis-c [-5.79758580e-08 -4.53063071e-03  1.39182665e-02  9.90612364e-01]
  HOMO = -0.764240887448597  LUMO = 2.64843782362904
  mo_energy =
[-3.26924900e+01 -1.82040632e+00 -7.64240887e-01 -7.64240887e-01
 -7.64240887e-01  2.64843782e+00  2.64843782e+00  2.64843782e+00
  1.98261432e+01  1.98261432e+01  1.98261432e+01  3.61591822e+01
  3.27469528e+02  2.75843803e+03]
E1 = -182.44991200773788  E_coul = 54.419360032363876
cycle= 4 E= -128.030551975374  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.9607e-06
diis-c [-2.34580556e-12  7.89081151e-05 -5.48367680e-04 -2.27554831e-02
  1.02322494e+00]
  HOMO = -0.764238021591738  LUMO = 2.64844021158732
  mo_energy =
[-3.26924837e+01 -1.82040266e+00 -7.64238022e-01 -7.64238022e-01
 -7.64238022e-01  2.64844021e+00  2.64844021e+00  2.64844021e+00
  1.98261489e+01  1.98261489e+01  1.98261489e+01  3.61591901e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.44990251125813  E_coul = 54.419350535882224
cycle= 5 E= -128.030551975376  delta_E= -1.9e-12  |g|= 7.21e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44990251125813  E_coul = 54.419350535882224
  HOMO = -0.764238061246353  LUMO = 2.64844017655811
  mo_energy =
[-3.26924838e+01 -1.82040271e+00 -7.64238061e-01 -7.64238061e-01
 -7.64238061e-01  2.64844018e+00  2.64844018e+00  2.64844018e+00
  1.98261488e+01  1.98261488e+01  1.98261488e+01  3.61591900e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.449902699481  E_coul = 54.41935072410508
Extra cycle  E= -128.030551975376  delta_E=    0  |g|= 2.36e-08  |ddm|= 2.47e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.041317372314484
E1 = -182.449902699481  E_coul = 54.41935072410508
init E= -128.030551975376
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.76423804873162  LUMO = 2.64844018792262
  mo_energy =
[-3.26924838e+01 -1.82040269e+00 -7.64238049e-01 -7.64238049e-01
 -7.64238049e-01  2.64844019e+00  2.64844019e+00  2.64844019e+00
  1.98261489e+01  1.98261489e+01  1.98261489e+01  3.61591900e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.44990264045728  E_coul = 54.419350665081396
cycle= 1 E= -128.030551975376  delta_E= 2.84e-14  |g|= 7.33e-09  |ddm|= 7.8e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44990264045728  E_coul = 54.419350665081396
  HOMO = -0.764238052659809  LUMO = 2.64844018435406
  mo_energy =
[-3.26924838e+01 -1.82040270e+00 -7.64238053e-01 -7.64238053e-01
 -7.64238053e-01  2.64844018e+00  2.64844018e+00  2.64844018e+00
  1.98261489e+01  1.98261489e+01  1.98261489e+01  3.61591900e+01
  3.27469533e+02  2.75843804e+03]
E1 = -182.44990265902257  E_coul = 54.41935068364659
Extra cycle  E= -128.030551975376  delta_E= -8.53e-14  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71025596e+03 9.47584779e-01 2.27894673e+02 4.81228978e+01
 1.24601343e+01 1.33236695e+01 6.02283220e-01 2.77662354e+00]
grad_E = [ 3.62555059e-05  2.12084256e-06 -8.31183284e-06  2.31845180e-06
 -2.46917462e-06 -6.31563017e-07  8.83773526e-05 -6.31273780e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25478879        1
[INPUT] 0    0    [1    /1   ]  0.94758730487        1
[INPUT] 0    0    [1    /1   ]  227.891917037        1
[INPUT] 0    0    [1    /1   ]  48.1241106963        1
[INPUT] 0    0    [1    /1   ]  12.4603691423        1
[INPUT] 1    0    [1    /1   ]  13.3237400809        1
[INPUT] 1    0    [1    /1   ]  0.602297802575       1
[INPUT] 1    0    [1    /1   ]  2.7766638803         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2547887906694, 1.0]], [0, [0.9475873048703748, 1.0]], [0, [227.8919170367505, 1.0]], [0, [48.12411069630357, 1.0]], [0, [12.460369142346382, 1.0]], [1, [13.323740080936961, 1.0]], [1, [0.6022978025745516, 1.0]], [1, [2.776663880297118, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25478879]
bas 1, expnt(s) = [0.9475873]
bas 2, expnt(s) = [227.89191704]
bas 3, expnt(s) = [48.1241107]
bas 4, expnt(s) = [12.46036914]
bas 5, expnt(s) = [13.32374008]
bas 6, expnt(s) = [0.6022978]
bas 7, expnt(s) = [2.77666388]
CPU time:       371.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025479e+03 6.71909274e+02 9.47587305e-01 2.42649527e+00
 2.27891917e+02 1.48187549e+02 4.81241107e+01 4.61622599e+01
 1.24603691e+01 1.67557243e+01 1.33237401e+01 7.42620754e+01
 6.02297803e-01 1.54791993e+00 2.77666388e+00 1.04565527e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939681198571876
cond(S) = 19.041795232489523
E1 = -182.73398410789153  E_coul = 54.93122772714471
init E= -127.802756380747
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74824578789437  LUMO = 2.65714781089564
  mo_energy =
[-3.25127511e+01 -1.79361710e+00 -7.48245788e-01 -7.48245788e-01
 -7.48245788e-01  2.65714781e+00  2.65714781e+00  2.65714781e+00
  1.99343171e+01  1.99343171e+01  1.99343171e+01  3.62902622e+01
  3.27683584e+02  2.75870413e+03]
E1 = -182.23483177214845  E_coul = 54.205198960248154
cycle= 1 E= -128.0296328119  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194858
diis-c [-0.03796948  1.        ]
  HOMO = -0.778416831318042  LUMO = 2.63558492316549
  mo_energy =
[-3.27410215e+01 -1.83654508e+00 -7.78416831e-01 -7.78416831e-01
 -7.78416831e-01  2.63558492e+00  2.63558492e+00  2.63558492e+00
  1.97903016e+01  1.97903016e+01  1.97903016e+01  3.61171224e+01
  3.27418233e+02  2.75837595e+03]
E1 = -182.5171746220065  E_coul = 54.486711276383964
cycle= 2 E= -128.030463345623  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.05599
diis-c [-2.31228619e-04  2.17150013e-01  7.82849987e-01]
  HOMO = -0.763805241849877  LUMO = 2.64888664562882
  mo_energy =
[-3.26911552e+01 -1.81994619e+00 -7.63805242e-01 -7.63805242e-01
 -7.63805242e-01  2.64888665e+00  2.64888665e+00  2.64888665e+00
  1.98274172e+01  1.98274172e+01  1.98274172e+01  3.61615515e+01
  3.27472722e+02  2.75843375e+03]
E1 = -182.4480436035747  E_coul = 54.41749169141477
cycle= 3 E= -128.03055191216  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166973
diis-c [-5.79742632e-08 -4.52997646e-03  1.39275775e-02  9.90602399e-01]
  HOMO = -0.764232517991326  LUMO = 2.64851510795709
  mo_energy =
[-3.26924713e+01 -1.82039813e+00 -7.64232518e-01 -7.64232518e-01
 -7.64232518e-01  2.64851511e+00  2.64851511e+00  2.64851511e+00
  1.98264015e+01  1.98264015e+01  1.98264015e+01  3.61604442e+01
  3.27471480e+02  2.75843253e+03]
E1 = -182.45001610709699  E_coul = 54.41946411888865
cycle= 4 E= -128.030551988208  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.96062e-06
diis-c [-2.34555052e-12  7.88854300e-05 -5.48615437e-04 -2.27547800e-02
  1.02322451e+00]
  HOMO = -0.764229652274991  LUMO = 2.64851749594219
  mo_energy =
[-3.26924650e+01 -1.82039447e+00 -7.64229652e-01 -7.64229652e-01
 -7.64229652e-01  2.64851750e+00  2.64851750e+00  2.64851750e+00
  1.98264072e+01  1.98264072e+01  1.98264072e+01  3.61604521e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.45000661096734  E_coul = 54.41945462275691
cycle= 5 E= -128.03055198821  delta_E= -2.07e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45000661096734  E_coul = 54.41945462275691
  HOMO = -0.764229691912618  LUMO = 2.64851746092541
  mo_energy =
[-3.26924651e+01 -1.82039451e+00 -7.64229692e-01 -7.64229692e-01
 -7.64229692e-01  2.64851746e+00  2.64851746e+00  2.64851746e+00
  1.98264071e+01  1.98264071e+01  1.98264071e+01  3.61604520e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.4500067991147  E_coul = 54.419454810904426
Extra cycle  E= -128.03055198821  delta_E= 1.42e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.71025479e+03 9.47587305e-01 2.27891917e+02 4.81241107e+01
 1.24603691e+01 1.33237401e+01 6.02297803e-01 2.77666388e+00]
E = -128.03055198821028
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25478879        1
[INPUT] 0    0    [1    /1   ]  0.94758730487        1
[INPUT] 0    0    [1    /1   ]  227.891917037        1
[INPUT] 0    0    [1    /1   ]  48.1241106963        1
[INPUT] 0    0    [1    /1   ]  12.4603691423        1
[INPUT] 1    0    [1    /1   ]  13.3237400809        1
[INPUT] 1    0    [1    /1   ]  0.602297802575       1
[INPUT] 1    0    [1    /1   ]  2.7766638803         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2547887906694, 1.0]], [0, [0.9475873048703748, 1.0]], [0, [227.8919170367505, 1.0]], [0, [48.12411069630357, 1.0]], [0, [12.460369142346382, 1.0]], [1, [13.323740080936961, 1.0]], [1, [0.6022978025745516, 1.0]], [1, [2.776663880297118, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25478879]
bas 1, expnt(s) = [0.9475873]
bas 2, expnt(s) = [227.89191704]
bas 3, expnt(s) = [48.1241107]
bas 4, expnt(s) = [12.46036914]
bas 5, expnt(s) = [13.32374008]
bas 6, expnt(s) = [0.6022978]
bas 7, expnt(s) = [2.77666388]
CPU time:       372.18
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025479e+03 6.71909274e+02 9.47587305e-01 2.42649527e+00
 2.27891917e+02 1.48187549e+02 4.81241107e+01 4.61622599e+01
 1.24603691e+01 1.67557243e+01 1.33237401e+01 7.42620754e+01
 6.02297803e-01 1.54791993e+00 2.77666388e+00 1.04565527e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939681198571876
cond(S) = 19.041795232489523
E1 = -182.73398410789153  E_coul = 54.93122772714471
init E= -127.802756380747
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74824578789437  LUMO = 2.65714781089564
  mo_energy =
[-3.25127511e+01 -1.79361710e+00 -7.48245788e-01 -7.48245788e-01
 -7.48245788e-01  2.65714781e+00  2.65714781e+00  2.65714781e+00
  1.99343171e+01  1.99343171e+01  1.99343171e+01  3.62902622e+01
  3.27683584e+02  2.75870413e+03]
E1 = -182.23483177214845  E_coul = 54.205198960248154
cycle= 1 E= -128.0296328119  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194858
diis-c [-0.03796948  1.        ]
  HOMO = -0.778416831318042  LUMO = 2.63558492316549
  mo_energy =
[-3.27410215e+01 -1.83654508e+00 -7.78416831e-01 -7.78416831e-01
 -7.78416831e-01  2.63558492e+00  2.63558492e+00  2.63558492e+00
  1.97903016e+01  1.97903016e+01  1.97903016e+01  3.61171224e+01
  3.27418233e+02  2.75837595e+03]
E1 = -182.5171746220065  E_coul = 54.486711276383964
cycle= 2 E= -128.030463345623  delta_E= -0.000831  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.05599
diis-c [-2.31228619e-04  2.17150013e-01  7.82849987e-01]
  HOMO = -0.763805241849877  LUMO = 2.64888664562882
  mo_energy =
[-3.26911552e+01 -1.81994619e+00 -7.63805242e-01 -7.63805242e-01
 -7.63805242e-01  2.64888665e+00  2.64888665e+00  2.64888665e+00
  1.98274172e+01  1.98274172e+01  1.98274172e+01  3.61615515e+01
  3.27472722e+02  2.75843375e+03]
E1 = -182.4480436035747  E_coul = 54.41749169141477
cycle= 3 E= -128.03055191216  delta_E= -8.86e-05  |g|= 0.00101  |ddm|= 0.00913
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166973
diis-c [-5.79742632e-08 -4.52997646e-03  1.39275775e-02  9.90602399e-01]
  HOMO = -0.764232517991326  LUMO = 2.64851510795709
  mo_energy =
[-3.26924713e+01 -1.82039813e+00 -7.64232518e-01 -7.64232518e-01
 -7.64232518e-01  2.64851511e+00  2.64851511e+00  2.64851511e+00
  1.98264015e+01  1.98264015e+01  1.98264015e+01  3.61604442e+01
  3.27471480e+02  2.75843253e+03]
E1 = -182.45001610709699  E_coul = 54.41946411888865
cycle= 4 E= -128.030551988208  delta_E= -7.6e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.96062e-06
diis-c [-2.34555052e-12  7.88854300e-05 -5.48615437e-04 -2.27547800e-02
  1.02322451e+00]
  HOMO = -0.764229652274991  LUMO = 2.64851749594219
  mo_energy =
[-3.26924650e+01 -1.82039447e+00 -7.64229652e-01 -7.64229652e-01
 -7.64229652e-01  2.64851750e+00  2.64851750e+00  2.64851750e+00
  1.98264072e+01  1.98264072e+01  1.98264072e+01  3.61604521e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.45000661096734  E_coul = 54.41945462275691
cycle= 5 E= -128.03055198821  delta_E= -2.07e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45000661096734  E_coul = 54.41945462275691
  HOMO = -0.764229691912618  LUMO = 2.64851746092541
  mo_energy =
[-3.26924651e+01 -1.82039451e+00 -7.64229692e-01 -7.64229692e-01
 -7.64229692e-01  2.64851746e+00  2.64851746e+00  2.64851746e+00
  1.98264071e+01  1.98264071e+01  1.98264071e+01  3.61604520e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.4500067991147  E_coul = 54.419454810904426
Extra cycle  E= -128.03055198821  delta_E= 1.42e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.041795232489523
E1 = -182.4500067991147  E_coul = 54.419454810904426
init E= -128.03055198821
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764229679402902  LUMO = 2.64851747228556
  mo_energy =
[-3.26924651e+01 -1.82039449e+00 -7.64229679e-01 -7.64229679e-01
 -7.64229679e-01  2.64851747e+00  2.64851747e+00  2.64851747e+00
  1.98264071e+01  1.98264071e+01  1.98264071e+01  3.61604520e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.45000674011612  E_coul = 54.41945475190567
cycle= 1 E= -128.03055198821  delta_E= -1.71e-13  |g|= 7.33e-09  |ddm|= 7.8e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45000674011612  E_coul = 54.41945475190567
  HOMO = -0.764229683329427  LUMO = 2.64851746871846
  mo_energy =
[-3.26924651e+01 -1.82039450e+00 -7.64229683e-01 -7.64229683e-01
 -7.64229683e-01  2.64851747e+00  2.64851747e+00  2.64851747e+00
  1.98264071e+01  1.98264071e+01  1.98264071e+01  3.61604520e+01
  3.27471485e+02  2.75843253e+03]
E1 = -182.45000675867325  E_coul = 54.41945477046269
Extra cycle  E= -128.030551988211  delta_E= -1.14e-13  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71025479e+03 9.47587305e-01 2.27891917e+02 4.81241107e+01
 1.24603691e+01 1.33237401e+01 6.02297803e-01 2.77666388e+00]
grad_E = [ 3.62721398e-05  1.69272628e-05 -9.00741405e-06  6.77479285e-06
 -6.94767318e-06 -1.59431459e-06  1.70905695e-04 -9.36727929e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25255981        1
[INPUT] 0    0    [1    /1   ]  0.947590753299       1
[INPUT] 0    0    [1    /1   ]  227.887597733        1
[INPUT] 0    0    [1    /1   ]  48.1255428344        1
[INPUT] 0    0    [1    /1   ]  12.4606513307        1
[INPUT] 1    0    [1    /1   ]  13.3238351024        1
[INPUT] 1    0    [1    /1   ]  0.602313332937       1
[INPUT] 1    0    [1    /1   ]  2.77671056251        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2525598087952, 1.0]], [0, [0.9475907532994966, 1.0]], [0, [227.88759773255427, 1.0]], [0, [48.125542834401294, 1.0]], [0, [12.460651330657594, 1.0]], [1, [13.323835102417952, 1.0]], [1, [0.6023133329373928, 1.0]], [1, [2.77671056250812, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25255981]
bas 1, expnt(s) = [0.94759075]
bas 2, expnt(s) = [227.88759773]
bas 3, expnt(s) = [48.12554283]
bas 4, expnt(s) = [12.46065133]
bas 5, expnt(s) = [13.3238351]
bas 6, expnt(s) = [0.60231333]
bas 7, expnt(s) = [2.77671056]
CPU time:       375.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025256e+03 6.71908617e+02 9.47590753e-01 2.42650190e+00
 2.27887598e+02 1.48185443e+02 4.81255428e+01 4.61632902e+01
 1.24606513e+01 1.67560089e+01 1.33238351e+01 7.42627374e+01
 6.02313333e-01 1.54796982e+00 2.77671056e+00 1.04567725e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939677753281494
cond(S) = 19.042437475174875
E1 = -182.73398915638222  E_coul = 54.93124188821617
init E= -127.802747268166
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748244361260786  LUMO = 2.65722545047766
  mo_energy =
[-3.25127486e+01 -1.79361659e+00 -7.48244361e-01 -7.48244361e-01
 -7.48244361e-01  2.65722545e+00  2.65722545e+00  2.65722545e+00
  1.99346103e+01  1.99346103e+01  1.99346103e+01  3.62917564e+01
  3.27684890e+02  2.75869315e+03]
E1 = -182.2349745979044  E_coul = 54.205341507690825
cycle= 1 E= -128.029633090214  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194837
diis-c [-0.03796161  1.        ]
  HOMO = -0.778405804646671  LUMO = 2.63567057587376
  mo_energy =
[-3.27409942e+01 -1.83653413e+00 -7.78405805e-01 -7.78405805e-01
 -7.78405805e-01  2.63567058e+00  2.63567058e+00  2.63567058e+00
  1.97906141e+01  1.97906141e+01  1.97906141e+01  3.61186364e+01
  3.27419567e+02  2.75836501e+03]
E1 = -182.51727445594196  E_coul = 54.486811055551414
cycle= 2 E= -128.030463400391  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559813
diis-c [-2.31239972e-04  2.17138936e-01  7.82861064e-01]
  HOMO = -0.763796274817173  LUMO = 2.6489706731151
  mo_energy =
[-3.26911346e+01 -1.81993757e+00 -7.63796275e-01 -7.63796275e-01
 -7.63796275e-01  2.64897067e+00  2.64897067e+00  2.64897067e+00
  1.98277246e+01  1.98277246e+01  1.98277246e+01  3.61630598e+01
  3.27474048e+02  2.75842280e+03]
E1 = -182.44815448332145  E_coul = 54.41760254492224
cycle= 3 E= -128.030551938399  delta_E= -8.85e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166998
diis-c [-5.79731003e-08 -4.52907835e-03  1.39388442e-02  9.90590234e-01]
  HOMO = -0.764223619607118  LUMO = 2.64859906163777
  mo_energy =
[-3.26924509e+01 -1.82038959e+00 -7.64223620e-01 -7.64223620e-01
 -7.64223620e-01  2.64859906e+00  2.64859906e+00  2.64859906e+00
  1.98267087e+01  1.98267087e+01  1.98267087e+01  3.61619523e+01
  3.27472806e+02  2.75842158e+03]
E1 = -182.4501272725112  E_coul = 54.41957525804068
cycle= 4 E= -128.030552014471  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95996e-06
diis-c [-2.34512947e-12  7.88564437e-05 -5.48904019e-04 -2.27542508e-02
  1.02322430e+00]
  HOMO = -0.76422075426555  LUMO = 2.64860144946847
  mo_energy =
[-3.26924446e+01 -1.82038593e+00 -7.64220754e-01 -7.64220754e-01
 -7.64220754e-01  2.64860145e+00  2.64860145e+00  2.64860145e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619602e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.45011777763617  E_coul = 54.419565763163334
cycle= 5 E= -128.030552014473  delta_E= -2.33e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45011777763617  E_coul = 54.419565763163334
  HOMO = -0.764220793883351  LUMO = 2.64860141446612
  mo_energy =
[-3.26924448e+01 -1.82038597e+00 -7.64220794e-01 -7.64220794e-01
 -7.64220794e-01  2.64860141e+00  2.64860141e+00  2.64860141e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619600e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.45011796569634  E_coul = 54.41956595122366
Extra cycle  E= -128.030552014473  delta_E= 1.71e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71025256e+03 9.47590753e-01 2.27887598e+02 4.81255428e+01
 1.24606513e+01 1.33238351e+01 6.02313333e-01 2.77671056e+00]
E = -128.03055201447268
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.25255981        1
[INPUT] 0    0    [1    /1   ]  0.947590753299       1
[INPUT] 0    0    [1    /1   ]  227.887597733        1
[INPUT] 0    0    [1    /1   ]  48.1255428344        1
[INPUT] 0    0    [1    /1   ]  12.4606513307        1
[INPUT] 1    0    [1    /1   ]  13.3238351024        1
[INPUT] 1    0    [1    /1   ]  0.602313332937       1
[INPUT] 1    0    [1    /1   ]  2.77671056251        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2525598087952, 1.0]], [0, [0.9475907532994966, 1.0]], [0, [227.88759773255427, 1.0]], [0, [48.125542834401294, 1.0]], [0, [12.460651330657594, 1.0]], [1, [13.323835102417952, 1.0]], [1, [0.6023133329373928, 1.0]], [1, [2.77671056250812, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.25255981]
bas 1, expnt(s) = [0.94759075]
bas 2, expnt(s) = [227.88759773]
bas 3, expnt(s) = [48.12554283]
bas 4, expnt(s) = [12.46065133]
bas 5, expnt(s) = [13.3238351]
bas 6, expnt(s) = [0.60231333]
bas 7, expnt(s) = [2.77671056]
CPU time:       376.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71025256e+03 6.71908617e+02 9.47590753e-01 2.42650190e+00
 2.27887598e+02 1.48185443e+02 4.81255428e+01 4.61632902e+01
 1.24606513e+01 1.67560089e+01 1.33238351e+01 7.42627374e+01
 6.02313333e-01 1.54796982e+00 2.77671056e+00 1.04567725e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939677753281494
cond(S) = 19.042437475174875
E1 = -182.73398915638222  E_coul = 54.93124188821617
init E= -127.802747268166
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748244361260786  LUMO = 2.65722545047766
  mo_energy =
[-3.25127486e+01 -1.79361659e+00 -7.48244361e-01 -7.48244361e-01
 -7.48244361e-01  2.65722545e+00  2.65722545e+00  2.65722545e+00
  1.99346103e+01  1.99346103e+01  1.99346103e+01  3.62917564e+01
  3.27684890e+02  2.75869315e+03]
E1 = -182.2349745979044  E_coul = 54.205341507690825
cycle= 1 E= -128.029633090214  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194837
diis-c [-0.03796161  1.        ]
  HOMO = -0.778405804646671  LUMO = 2.63567057587376
  mo_energy =
[-3.27409942e+01 -1.83653413e+00 -7.78405805e-01 -7.78405805e-01
 -7.78405805e-01  2.63567058e+00  2.63567058e+00  2.63567058e+00
  1.97906141e+01  1.97906141e+01  1.97906141e+01  3.61186364e+01
  3.27419567e+02  2.75836501e+03]
E1 = -182.51727445594196  E_coul = 54.486811055551414
cycle= 2 E= -128.030463400391  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559813
diis-c [-2.31239972e-04  2.17138936e-01  7.82861064e-01]
  HOMO = -0.763796274817173  LUMO = 2.6489706731151
  mo_energy =
[-3.26911346e+01 -1.81993757e+00 -7.63796275e-01 -7.63796275e-01
 -7.63796275e-01  2.64897067e+00  2.64897067e+00  2.64897067e+00
  1.98277246e+01  1.98277246e+01  1.98277246e+01  3.61630598e+01
  3.27474048e+02  2.75842280e+03]
E1 = -182.44815448332145  E_coul = 54.41760254492224
cycle= 3 E= -128.030551938399  delta_E= -8.85e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00166998
diis-c [-5.79731003e-08 -4.52907835e-03  1.39388442e-02  9.90590234e-01]
  HOMO = -0.764223619607118  LUMO = 2.64859906163777
  mo_energy =
[-3.26924509e+01 -1.82038959e+00 -7.64223620e-01 -7.64223620e-01
 -7.64223620e-01  2.64859906e+00  2.64859906e+00  2.64859906e+00
  1.98267087e+01  1.98267087e+01  1.98267087e+01  3.61619523e+01
  3.27472806e+02  2.75842158e+03]
E1 = -182.4501272725112  E_coul = 54.41957525804068
cycle= 4 E= -128.030552014471  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95996e-06
diis-c [-2.34512947e-12  7.88564437e-05 -5.48904019e-04 -2.27542508e-02
  1.02322430e+00]
  HOMO = -0.76422075426555  LUMO = 2.64860144946847
  mo_energy =
[-3.26924446e+01 -1.82038593e+00 -7.64220754e-01 -7.64220754e-01
 -7.64220754e-01  2.64860145e+00  2.64860145e+00  2.64860145e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619602e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.45011777763617  E_coul = 54.419565763163334
cycle= 5 E= -128.030552014473  delta_E= -2.33e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45011777763617  E_coul = 54.419565763163334
  HOMO = -0.764220793883351  LUMO = 2.64860141446612
  mo_energy =
[-3.26924448e+01 -1.82038597e+00 -7.64220794e-01 -7.64220794e-01
 -7.64220794e-01  2.64860141e+00  2.64860141e+00  2.64860141e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619600e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.45011796569634  E_coul = 54.41956595122366
Extra cycle  E= -128.030552014473  delta_E= 1.71e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.042437475174875
E1 = -182.45011796569634  E_coul = 54.41956595122366
init E= -128.030552014473
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764220781379446  LUMO = 2.64860142582119
  mo_energy =
[-3.26924447e+01 -1.82038596e+00 -7.64220781e-01 -7.64220781e-01
 -7.64220781e-01  2.64860143e+00  2.64860143e+00  2.64860143e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619601e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.4501179067262  E_coul = 54.419565892253495
cycle= 1 E= -128.030552014473  delta_E= -2.84e-14  |g|= 7.32e-09  |ddm|= 7.79e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4501179067262  E_coul = 54.419565892253495
  HOMO = -0.764220785304061  LUMO = 2.64860142225576
  mo_energy =
[-3.26924447e+01 -1.82038596e+00 -7.64220785e-01 -7.64220785e-01
 -7.64220785e-01  2.64860142e+00  2.64860142e+00  2.64860142e+00
  1.98267144e+01  1.98267144e+01  1.98267144e+01  3.61619601e+01
  3.27472811e+02  2.75842158e+03]
E1 = -182.4501179252738  E_coul = 54.41956591080103
Extra cycle  E= -128.030552014473  delta_E= -5.68e-14  |g|= 2.31e-09  |ddm|= 2.45e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71025256e+03 9.47590753e-01 2.27887598e+02 4.81255428e+01
 1.24606513e+01 1.33238351e+01 6.02313333e-01 2.77671056e+00]
grad_E = [ 3.62950391e-05  3.54382739e-05 -9.92398663e-06  1.25242708e-05
 -1.28627625e-05 -2.66152083e-06  2.52079561e-04 -1.07377924e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.24689484        1
[INPUT] 0    0    [1    /1   ]  0.947596992889       1
[INPUT] 0    0    [1    /1   ]  227.879080251        1
[INPUT] 0    0    [1    /1   ]  48.1279375791        1
[INPUT] 0    0    [1    /1   ]  12.4611257469        1
[INPUT] 1    0    [1    /1   ]  13.3240047162        1
[INPUT] 1    0    [1    /1   ]  0.60233769356        1
[INPUT] 1    0    [1    /1   ]  2.77678706109        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2468948358103, 1.0]], [0, [0.9475969928889799, 1.0]], [0, [227.87908025095084, 1.0]], [0, [48.12793757910983, 1.0]], [0, [12.461125746865612, 1.0]], [1, [13.324004716170482, 1.0]], [1, [0.6023376935596185, 1.0]], [1, [2.7767870610936347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.24689484]
bas 1, expnt(s) = [0.94759699]
bas 2, expnt(s) = [227.87908025]
bas 3, expnt(s) = [48.12793758]
bas 4, expnt(s) = [12.46112575]
bas 5, expnt(s) = [13.32400472]
bas 6, expnt(s) = [0.60233769]
bas 7, expnt(s) = [2.77678706]
CPU time:       380.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71024689e+03 6.71906948e+02 9.47596993e-01 2.42651388e+00
 2.27879080e+02 1.48181289e+02 4.81279376e+01 4.61650131e+01
 1.24611257e+01 1.67564874e+01 1.33240047e+01 7.42639192e+01
 6.02337694e-01 1.54804808e+00 2.77678706e+00 1.04571326e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939672237583729
cond(S) = 19.043603480430097
E1 = -182.73399772746123  E_coul = 54.93126621032737
init E= -127.802731517134
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748241967976506  LUMO = 2.6573488185792
  mo_energy =
[-3.25127441e+01 -1.79361571e+00 -7.48241968e-01 -7.48241968e-01
 -7.48241968e-01  2.65734882e+00  2.65734882e+00  2.65734882e+00
  1.99351023e+01  1.99351023e+01  1.99351023e+01  3.62942702e+01
  3.27685875e+02  2.75866825e+03]
E1 = -182.23519902293705  E_coul = 54.20556546609809
cycle= 1 E= -128.029633556839  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194807
diis-c [-0.03794962  1.        ]
  HOMO = -0.778388493808538  LUMO = 2.63580634072263
  mo_energy =
[-3.27409512e+01 -1.83651710e+00 -7.78388494e-01 -7.78388494e-01
 -7.78388494e-01  2.63580634e+00  2.63580634e+00  2.63580634e+00
  1.97911358e+01  1.97911358e+01  1.97911358e+01  3.61211806e+01
  3.27420596e+02  2.75834017e+03]
E1 = -182.51743196980962  E_coul = 54.48696845097827
cycle= 2 E= -128.030463518831  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559678
diis-c [-2.31263022e-04  2.17120948e-01  7.82879052e-01]
  HOMO = -0.763782158568951  LUMO = 2.64910393463783
  mo_energy =
[-3.26911019e+01 -1.81992414e+00 -7.63782159e-01 -7.63782159e-01
 -7.63782159e-01  2.64910393e+00  2.64910393e+00  2.64910393e+00
  1.98282386e+01  1.98282386e+01  1.98282386e+01  3.61655952e+01
  3.27475066e+02  2.75839794e+03]
E1 = -182.44832912364953  E_coul = 54.41777711119306
cycle= 3 E= -128.030552012456  delta_E= -8.85e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167042
diis-c [-5.79721743e-08 -4.52743634e-03  1.39580936e-02  9.90569343e-01]
  HOMO = -0.764209624140208  LUMO = 2.64873219507397
  mo_energy =
[-3.26924187e+01 -1.82037630e+00 -7.64209624e-01 -7.64209624e-01
 -7.64209624e-01  2.64873220e+00  2.64873220e+00  2.64873220e+00
  1.98272224e+01  1.98272224e+01  1.98272224e+01  3.61644873e+01
  3.27473823e+02  2.75839673e+03]
E1 = -182.45030241992987  E_coul = 54.41975033136157
cycle= 4 E= -128.030552088568  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95828e-06
diis-c [-2.34430554e-12  7.88052001e-05 -5.49386462e-04 -2.27536812e-02
  1.02322426e+00]
  HOMO = -0.764206759646248  LUMO = 2.64873458245073
  mo_energy =
[-3.26924124e+01 -1.82037265e+00 -7.64206760e-01 -7.64206760e-01
 -7.64206760e-01  2.64873458e+00  2.64873458e+00  2.64873458e+00
  1.98272281e+01  1.98272281e+01  1.98272281e+01  3.61644952e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.4502929280463  E_coul = 54.41974083947586
cycle= 5 E= -128.03055208857  delta_E= -2.16e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4502929280463  E_coul = 54.41974083947586
  HOMO = -0.764206799230711  LUMO = 2.64873454747255
  mo_energy =
[-3.26924125e+01 -1.82037269e+00 -7.64206799e-01 -7.64206799e-01
 -7.64206799e-01  2.64873455e+00  2.64873455e+00  2.64873455e+00
  1.98272280e+01  1.98272280e+01  1.98272280e+01  3.61644951e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.4502931159607  E_coul = 54.41974102739014
Extra cycle  E= -128.030552088571  delta_E= -1.14e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.71024689e+03 9.47596993e-01 2.27879080e+02 4.81279376e+01
 1.24611257e+01 1.33240047e+01 6.02337694e-01 2.77678706e+00]
E = -128.03055208857057
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.24689484        1
[INPUT] 0    0    [1    /1   ]  0.947596992889       1
[INPUT] 0    0    [1    /1   ]  227.879080251        1
[INPUT] 0    0    [1    /1   ]  48.1279375791        1
[INPUT] 0    0    [1    /1   ]  12.4611257469        1
[INPUT] 1    0    [1    /1   ]  13.3240047162        1
[INPUT] 1    0    [1    /1   ]  0.60233769356        1
[INPUT] 1    0    [1    /1   ]  2.77678706109        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2468948358103, 1.0]], [0, [0.9475969928889799, 1.0]], [0, [227.87908025095084, 1.0]], [0, [48.12793757910983, 1.0]], [0, [12.461125746865612, 1.0]], [1, [13.324004716170482, 1.0]], [1, [0.6023376935596185, 1.0]], [1, [2.7767870610936347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.24689484]
bas 1, expnt(s) = [0.94759699]
bas 2, expnt(s) = [227.87908025]
bas 3, expnt(s) = [48.12793758]
bas 4, expnt(s) = [12.46112575]
bas 5, expnt(s) = [13.32400472]
bas 6, expnt(s) = [0.60233769]
bas 7, expnt(s) = [2.77678706]
CPU time:       381.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71024689e+03 6.71906948e+02 9.47596993e-01 2.42651388e+00
 2.27879080e+02 1.48181289e+02 4.81279376e+01 4.61650131e+01
 1.24611257e+01 1.67564874e+01 1.33240047e+01 7.42639192e+01
 6.02337694e-01 1.54804808e+00 2.77678706e+00 1.04571326e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939672237583729
cond(S) = 19.043603480430097
E1 = -182.73399772746123  E_coul = 54.93126621032737
init E= -127.802731517134
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748241967976506  LUMO = 2.6573488185792
  mo_energy =
[-3.25127441e+01 -1.79361571e+00 -7.48241968e-01 -7.48241968e-01
 -7.48241968e-01  2.65734882e+00  2.65734882e+00  2.65734882e+00
  1.99351023e+01  1.99351023e+01  1.99351023e+01  3.62942702e+01
  3.27685875e+02  2.75866825e+03]
E1 = -182.23519902293705  E_coul = 54.20556546609809
cycle= 1 E= -128.029633556839  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194807
diis-c [-0.03794962  1.        ]
  HOMO = -0.778388493808538  LUMO = 2.63580634072263
  mo_energy =
[-3.27409512e+01 -1.83651710e+00 -7.78388494e-01 -7.78388494e-01
 -7.78388494e-01  2.63580634e+00  2.63580634e+00  2.63580634e+00
  1.97911358e+01  1.97911358e+01  1.97911358e+01  3.61211806e+01
  3.27420596e+02  2.75834017e+03]
E1 = -182.51743196980962  E_coul = 54.48696845097827
cycle= 2 E= -128.030463518831  delta_E= -0.00083  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559678
diis-c [-2.31263022e-04  2.17120948e-01  7.82879052e-01]
  HOMO = -0.763782158568951  LUMO = 2.64910393463783
  mo_energy =
[-3.26911019e+01 -1.81992414e+00 -7.63782159e-01 -7.63782159e-01
 -7.63782159e-01  2.64910393e+00  2.64910393e+00  2.64910393e+00
  1.98282386e+01  1.98282386e+01  1.98282386e+01  3.61655952e+01
  3.27475066e+02  2.75839794e+03]
E1 = -182.44832912364953  E_coul = 54.41777711119306
cycle= 3 E= -128.030552012456  delta_E= -8.85e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167042
diis-c [-5.79721743e-08 -4.52743634e-03  1.39580936e-02  9.90569343e-01]
  HOMO = -0.764209624140208  LUMO = 2.64873219507397
  mo_energy =
[-3.26924187e+01 -1.82037630e+00 -7.64209624e-01 -7.64209624e-01
 -7.64209624e-01  2.64873220e+00  2.64873220e+00  2.64873220e+00
  1.98272224e+01  1.98272224e+01  1.98272224e+01  3.61644873e+01
  3.27473823e+02  2.75839673e+03]
E1 = -182.45030241992987  E_coul = 54.41975033136157
cycle= 4 E= -128.030552088568  delta_E= -7.61e-08  |g|= 8.1e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95828e-06
diis-c [-2.34430554e-12  7.88052001e-05 -5.49386462e-04 -2.27536812e-02
  1.02322426e+00]
  HOMO = -0.764206759646248  LUMO = 2.64873458245073
  mo_energy =
[-3.26924124e+01 -1.82037265e+00 -7.64206760e-01 -7.64206760e-01
 -7.64206760e-01  2.64873458e+00  2.64873458e+00  2.64873458e+00
  1.98272281e+01  1.98272281e+01  1.98272281e+01  3.61644952e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.4502929280463  E_coul = 54.41974083947586
cycle= 5 E= -128.03055208857  delta_E= -2.16e-12  |g|= 7.2e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4502929280463  E_coul = 54.41974083947586
  HOMO = -0.764206799230711  LUMO = 2.64873454747255
  mo_energy =
[-3.26924125e+01 -1.82037269e+00 -7.64206799e-01 -7.64206799e-01
 -7.64206799e-01  2.64873455e+00  2.64873455e+00  2.64873455e+00
  1.98272280e+01  1.98272280e+01  1.98272280e+01  3.61644951e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.4502931159607  E_coul = 54.41974102739014
Extra cycle  E= -128.030552088571  delta_E= -1.14e-13  |g|= 2.36e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.043603480430097
E1 = -182.4502931159607  E_coul = 54.41974102739014
init E= -128.030552088571
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764206786736557  LUMO = 2.6487345588191
  mo_energy =
[-3.26924125e+01 -1.82037267e+00 -7.64206787e-01 -7.64206787e-01
 -7.64206787e-01  2.64873456e+00  2.64873456e+00  2.64873456e+00
  1.98272280e+01  1.98272280e+01  1.98272280e+01  3.61644951e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.45029305703846  E_coul = 54.41974096846793
cycle= 1 E= -128.030552088571  delta_E= 2.84e-14  |g|= 7.32e-09  |ddm|= 7.79e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45029305703846  E_coul = 54.41974096846793
  HOMO = -0.764206790657959  LUMO = 2.64873455525649
  mo_energy =
[-3.26924125e+01 -1.82037268e+00 -7.64206791e-01 -7.64206791e-01
 -7.64206791e-01  2.64873456e+00  2.64873456e+00  2.64873456e+00
  1.98272280e+01  1.98272280e+01  1.98272280e+01  3.61644951e+01
  3.27473828e+02  2.75839673e+03]
E1 = -182.45029307557013  E_coul = 54.41974098699973
Extra cycle  E= -128.03055208857  delta_E= 1.42e-13  |g|= 2.3e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71024689e+03 9.47596993e-01 2.27879080e+02 4.81279376e+01
 1.24611257e+01 1.33240047e+01 6.02337694e-01 2.77678706e+00]
grad_E = [ 3.63371427e-05  6.75576393e-05 -1.15724396e-05  2.27745533e-05
 -2.37483451e-05 -4.32846903e-06  3.73893468e-04 -1.15074122e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.23391194        1
[INPUT] 0    0    [1    /1   ]  0.947606768241       1
[INPUT] 0    0    [1    /1   ]  227.864835176        1
[INPUT] 0    0    [1    /1   ]  48.131537876         1
[INPUT] 0    0    [1    /1   ]  12.4618439178        1
[INPUT] 1    0    [1    /1   ]  13.3242723942        1
[INPUT] 1    0    [1    /1   ]  0.602372920936       1
[INPUT] 1    0    [1    /1   ]  2.77690154662        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2339119435994, 1.0]], [0, [0.9476067682405954, 1.0]], [0, [227.8648351759069, 1.0]], [0, [48.13153787600272, 1.0]], [0, [12.461843917801371, 1.0]], [1, [13.324272394150148, 1.0]], [1, [0.6023729209362294, 1.0]], [1, [2.7769015466164295, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.23391194]
bas 1, expnt(s) = [0.94760677]
bas 2, expnt(s) = [227.86483518]
bas 3, expnt(s) = [48.13153788]
bas 4, expnt(s) = [12.46184392]
bas 5, expnt(s) = [13.32427239]
bas 6, expnt(s) = [0.60237292]
bas 7, expnt(s) = [2.77690155]
CPU time:       385.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71023391e+03 6.71903123e+02 9.47606768e-01 2.42653265e+00
 2.27864835e+02 1.48174341e+02 4.81315379e+01 4.61676031e+01
 1.24618439e+01 1.67572116e+01 1.33242724e+01 7.42657841e+01
 6.02372921e-01 1.54816125e+00 2.77690155e+00 1.04576715e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939664155088996
cond(S) = 19.045468675840795
E1 = -182.73401051589525  E_coul = 54.931303269181214
init E= -127.802707246714
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74823837243427  LUMO = 2.65752907364256
  mo_energy =
[-3.25127372e+01 -1.79361435e+00 -7.48238372e-01 -7.48238372e-01
 -7.48238372e-01  2.65752907e+00  2.65752907e+00  2.65752907e+00
  1.99358496e+01  1.99358496e+01  1.99358496e+01  3.62980707e+01
  3.27686029e+02  2.75862072e+03]
E1 = -182.23552323000698  E_coul = 54.20588892273502
cycle= 1 E= -128.029634307272  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194763
diis-c [-0.03793268  1.        ]
  HOMO = -0.778363518820379  LUMO = 2.63600429702975
  mo_energy =
[-3.27408888e+01 -1.83649269e+00 -7.78363519e-01 -7.78363519e-01
 -7.78363519e-01  2.63600430e+00  2.63600430e+00  2.63600430e+00
  1.97919254e+01  1.97919254e+01  1.97919254e+01  3.61250242e+01
  3.27420814e+02  2.75829271e+03]
E1 = -182.51766013248127  E_coul = 54.48719636313378
cycle= 2 E= -128.030463769347  delta_E= -0.000829  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559483
diis-c [-2.31301770e-04  2.17094333e-01  7.82905667e-01]
  HOMO = -0.763761757725069  LUMO = 2.64929832751544
  mo_energy =
[-3.26910544e+01 -1.81990488e+00 -7.63761758e-01 -7.63761758e-01
 -7.63761758e-01  2.64929833e+00  2.64929833e+00  2.64929833e+00
  1.98290172e+01  1.98290172e+01  1.98290172e+01  3.61694264e+01
  3.27475268e+02  2.75835047e+03]
E1 = -182.448581800256  E_coul = 54.418029600956416
cycle= 3 E= -128.0305521993  delta_E= -8.84e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167111
diis-c [-5.79717857e-08 -4.52482936e-03  1.39875169e-02  9.90537312e-01]
  HOMO = -0.764189411393909  LUMO = 2.64892639005255
  mo_energy =
[-3.26923718e+01 -1.82035727e+00 -7.64189411e-01 -7.64189411e-01
 -7.64189411e-01  2.64892639e+00  2.64892639e+00  2.64892639e+00
  1.98280005e+01  1.98280005e+01  1.98280005e+01  3.61683179e+01
  3.27474024e+02  2.75834925e+03]
E1 = -182.45055589042562  E_coul = 54.420003614950865
cycle= 4 E= -128.030552275475  delta_E= -7.62e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95516e-06
diis-c [-2.34294318e-12  7.87253164e-05 -5.50113095e-04 -2.27531029e-02
  1.02322449e+00]
  HOMO = -0.764186548392728  LUMO = 2.64892877655439
  mo_energy =
[-3.26923655e+01 -1.82035361e+00 -7.64186548e-01 -7.64186548e-01
 -7.64186548e-01  2.64892878e+00  2.64892878e+00  2.64892878e+00
  1.98280062e+01  1.98280062e+01  1.98280062e+01  3.61683258e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.45054640392306  E_coul = 54.4199941284461
cycle= 5 E= -128.030552275477  delta_E= -2.22e-12  |g|= 7.19e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.45054640392306  E_coul = 54.4199941284461
  HOMO = -0.764186587927017  LUMO = 2.64892874161252
  mo_energy =
[-3.26923657e+01 -1.82035365e+00 -7.64186588e-01 -7.64186588e-01
 -7.64186588e-01  2.64892874e+00  2.64892874e+00  2.64892874e+00
  1.98280061e+01  1.98280061e+01  1.98280061e+01  3.61683257e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.4505465916182  E_coul = 54.41999431614129
Extra cycle  E= -128.030552275477  delta_E= 5.68e-14  |g|= 2.35e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71023391e+03 9.47606768e-01 2.27864835e+02 4.81315379e+01
 1.24618439e+01 1.33242724e+01 6.02372921e-01 2.77690155e+00]
E = -128.0305522754769
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.23391194        1
[INPUT] 0    0    [1    /1   ]  0.947606768241       1
[INPUT] 0    0    [1    /1   ]  227.864835176        1
[INPUT] 0    0    [1    /1   ]  48.131537876         1
[INPUT] 0    0    [1    /1   ]  12.4618439178        1
[INPUT] 1    0    [1    /1   ]  13.3242723942        1
[INPUT] 1    0    [1    /1   ]  0.602372920936       1
[INPUT] 1    0    [1    /1   ]  2.77690154662        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.2339119435994, 1.0]], [0, [0.9476067682405954, 1.0]], [0, [227.8648351759069, 1.0]], [0, [48.13153787600272, 1.0]], [0, [12.461843917801371, 1.0]], [1, [13.324272394150148, 1.0]], [1, [0.6023729209362294, 1.0]], [1, [2.7769015466164295, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.23391194]
bas 1, expnt(s) = [0.94760677]
bas 2, expnt(s) = [227.86483518]
bas 3, expnt(s) = [48.13153788]
bas 4, expnt(s) = [12.46184392]
bas 5, expnt(s) = [13.32427239]
bas 6, expnt(s) = [0.60237292]
bas 7, expnt(s) = [2.77690155]
CPU time:       386.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71023391e+03 6.71903123e+02 9.47606768e-01 2.42653265e+00
 2.27864835e+02 1.48174341e+02 4.81315379e+01 4.61676031e+01
 1.24618439e+01 1.67572116e+01 1.33242724e+01 7.42657841e+01
 6.02372921e-01 1.54816125e+00 2.77690155e+00 1.04576715e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939664155088996
cond(S) = 19.045468675840795
E1 = -182.73401051589525  E_coul = 54.931303269181214
init E= -127.802707246714
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74823837243427  LUMO = 2.65752907364256
  mo_energy =
[-3.25127372e+01 -1.79361435e+00 -7.48238372e-01 -7.48238372e-01
 -7.48238372e-01  2.65752907e+00  2.65752907e+00  2.65752907e+00
  1.99358496e+01  1.99358496e+01  1.99358496e+01  3.62980707e+01
  3.27686029e+02  2.75862072e+03]
E1 = -182.23552323000698  E_coul = 54.20588892273502
cycle= 1 E= -128.029634307272  delta_E= -0.227  |g|= 0.123  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194763
diis-c [-0.03793268  1.        ]
  HOMO = -0.778363518820379  LUMO = 2.63600429702975
  mo_energy =
[-3.27408888e+01 -1.83649269e+00 -7.78363519e-01 -7.78363519e-01
 -7.78363519e-01  2.63600430e+00  2.63600430e+00  2.63600430e+00
  1.97919254e+01  1.97919254e+01  1.97919254e+01  3.61250242e+01
  3.27420814e+02  2.75829271e+03]
E1 = -182.51766013248127  E_coul = 54.48719636313378
cycle= 2 E= -128.030463769347  delta_E= -0.000829  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559483
diis-c [-2.31301770e-04  2.17094333e-01  7.82905667e-01]
  HOMO = -0.763761757725069  LUMO = 2.64929832751544
  mo_energy =
[-3.26910544e+01 -1.81990488e+00 -7.63761758e-01 -7.63761758e-01
 -7.63761758e-01  2.64929833e+00  2.64929833e+00  2.64929833e+00
  1.98290172e+01  1.98290172e+01  1.98290172e+01  3.61694264e+01
  3.27475268e+02  2.75835047e+03]
E1 = -182.448581800256  E_coul = 54.418029600956416
cycle= 3 E= -128.0305521993  delta_E= -8.84e-05  |g|= 0.00101  |ddm|= 0.00912
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167111
diis-c [-5.79717857e-08 -4.52482936e-03  1.39875169e-02  9.90537312e-01]
  HOMO = -0.764189411393909  LUMO = 2.64892639005255
  mo_energy =
[-3.26923718e+01 -1.82035727e+00 -7.64189411e-01 -7.64189411e-01
 -7.64189411e-01  2.64892639e+00  2.64892639e+00  2.64892639e+00
  1.98280005e+01  1.98280005e+01  1.98280005e+01  3.61683179e+01
  3.27474024e+02  2.75834925e+03]
E1 = -182.45055589042562  E_coul = 54.420003614950865
cycle= 4 E= -128.030552275475  delta_E= -7.62e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.95516e-06
diis-c [-2.34294318e-12  7.87253164e-05 -5.50113095e-04 -2.27531029e-02
  1.02322449e+00]
  HOMO = -0.764186548392728  LUMO = 2.64892877655439
  mo_energy =
[-3.26923655e+01 -1.82035361e+00 -7.64186548e-01 -7.64186548e-01
 -7.64186548e-01  2.64892878e+00  2.64892878e+00  2.64892878e+00
  1.98280062e+01  1.98280062e+01  1.98280062e+01  3.61683258e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.45054640392306  E_coul = 54.4199941284461
cycle= 5 E= -128.030552275477  delta_E= -2.22e-12  |g|= 7.19e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45054640392306  E_coul = 54.4199941284461
  HOMO = -0.764186587927017  LUMO = 2.64892874161252
  mo_energy =
[-3.26923657e+01 -1.82035365e+00 -7.64186588e-01 -7.64186588e-01
 -7.64186588e-01  2.64892874e+00  2.64892874e+00  2.64892874e+00
  1.98280061e+01  1.98280061e+01  1.98280061e+01  3.61683257e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.4505465916182  E_coul = 54.41999431614129
Extra cycle  E= -128.030552275477  delta_E= 5.68e-14  |g|= 2.35e-08  |ddm|= 2.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.045468675840795
E1 = -182.4505465916182  E_coul = 54.41999431614129
init E= -128.030552275477
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.764186575447458  LUMO = 2.64892875294629
  mo_energy =
[-3.26923656e+01 -1.82035364e+00 -7.64186575e-01 -7.64186575e-01
 -7.64186575e-01  2.64892875e+00  2.64892875e+00  2.64892875e+00
  1.98280062e+01  1.98280062e+01  1.98280062e+01  3.61683257e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.45054653276753  E_coul = 54.419994257290526
cycle= 1 E= -128.030552275477  delta_E= -1.14e-13  |g|= 7.31e-09  |ddm|= 7.78e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45054653276753  E_coul = 54.419994257290526
  HOMO = -0.764186579364093  LUMO = 2.64892874938786
  mo_energy =
[-3.26923656e+01 -1.82035364e+00 -7.64186579e-01 -7.64186579e-01
 -7.64186579e-01  2.64892875e+00  2.64892875e+00  2.64892875e+00
  1.98280062e+01  1.98280062e+01  1.98280062e+01  3.61683257e+01
  3.27474029e+02  2.75834925e+03]
E1 = -182.45054655127603  E_coul = 54.419994275799006
Extra cycle  E= -128.030552275477  delta_E=    0  |g|= 2.3e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.71023391e+03 9.47606768e-01 2.27864835e+02 4.81315379e+01
 1.24618439e+01 1.33242724e+01 6.02372921e-01 2.77690155e+00]
grad_E = [ 3.64041630e-05  1.16762349e-04 -1.41698043e-05  3.88338302e-05
 -4.10274028e-05 -6.75649873e-06  5.43229844e-04 -1.08250496e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.2019435         1
[INPUT] 0    0    [1    /1   ]  0.947622784878       1
[INPUT] 0    0    [1    /1   ]  227.840151796        1
[INPUT] 0    0    [1    /1   ]  48.1372615393        1
[INPUT] 0    0    [1    /1   ]  12.4629931463        1
[INPUT] 1    0    [1    /1   ]  13.3247133055        1
[INPUT] 1    0    [1    /1   ]  0.602428023659       1
[INPUT] 1    0    [1    /1   ]  2.77708434011        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.201943499692, 1.0]], [0, [0.9476227848775601, 1.0]], [0, [227.8401517962483, 1.0]], [0, [48.13726153931488, 1.0]], [0, [12.462993146292066, 1.0]], [1, [13.32471330551589, 1.0]], [1, [0.6024280236590587, 1.0]], [1, [2.777084340113842, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.2019435]
bas 1, expnt(s) = [0.94762278]
bas 2, expnt(s) = [227.8401518]
bas 3, expnt(s) = [48.13726154]
bas 4, expnt(s) = [12.46299315]
bas 5, expnt(s) = [13.32471331]
bas 6, expnt(s) = [0.60242802]
bas 7, expnt(s) = [2.77708434]
CPU time:       390.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71020194e+03 6.71893703e+02 9.47622785e-01 2.42656341e+00
 2.27840152e+02 1.48162303e+02 4.81372615e+01 4.61717207e+01
 1.24629931e+01 1.67583706e+01 1.33247133e+01 7.42688560e+01
 6.02428024e-01 1.54833828e+00 2.77708434e+00 1.04585320e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939651410733386
cond(S) = 19.04860837217443
E1 = -182.73403110488158  E_coul = 54.93136315946995
init E= -127.802667945412
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748232611530252  LUMO = 2.65781281118978
  mo_energy =
[-3.25127261e+01 -1.79361215e+00 -7.48232612e-01 -7.48232612e-01
 -7.48232612e-01  2.65781281e+00  2.65781281e+00  2.65781281e+00
  1.99370537e+01  1.99370537e+01  1.99370537e+01  3.63041425e+01
  3.27684398e+02  2.75852468e+03]
E1 = -182.23603003302202  E_coul = 54.206394354507125
cycle= 1 E= -128.029635678515  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194696
diis-c [-0.03790661  1.        ]
  HOMO = -0.778324514951028  LUMO = 2.63631549365077
  mo_energy =
[-3.27407912e+01 -1.83645470e+00 -7.78324515e-01 -7.78324515e-01
 -7.78324515e-01  2.63631549e+00  2.63631549e+00  2.63631549e+00
  1.97931952e+01  1.97931952e+01  1.97931952e+01  3.61311628e+01
  3.27419282e+02  2.75819680e+03]
E1 = -182.51801753378336  E_coul = 54.48755317078607
cycle= 2 E= -128.030464362997  delta_E= -0.000829  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559181
diis-c [-2.31367499e-04  2.17052108e-01  7.82947892e-01]
  HOMO = -0.76372985763809  LUMO = 2.64960401073493
  mo_energy =
[-3.26909798e+01 -1.81987488e+00 -7.63729858e-01 -7.63729858e-01
 -7.63729858e-01  2.64960401e+00  2.64960401e+00  2.64960401e+00
  1.98302699e+01  1.98302699e+01  1.98302699e+01  3.61755456e+01
  3.27473711e+02  2.75825453e+03]
E1 = -182.4489772643558  E_coul = 54.41842457039023
cycle= 3 E= -128.030552693966  delta_E= -8.83e-05  |g|= 0.00101  |ddm|= 0.00911
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167223
diis-c [-5.79722344e-08 -4.52052619e-03  1.40350998e-02  9.90485426e-01]
  HOMO = -0.764157818737585  LUMO = 2.64923175126222
  mo_energy =
[-3.26922983e+01 -1.82032764e+00 -7.64157819e-01 -7.64157819e-01
 -7.64157819e-01  2.64923175e+00  2.64923175e+00  2.64923175e+00
  1.98292524e+01  1.98292524e+01  1.98292524e+01  3.61744361e+01
  3.27472466e+02  2.75825331e+03]
E1 = -182.450952656018  E_coul = 54.420399885773506
cycle= 4 E= -128.030552770244  delta_E= -7.63e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.94963e-06
diis-c [-2.34061854e-12  7.85947094e-05 -5.51278403e-04 -2.27524556e-02
  1.02322514e+00]
  HOMO = -0.764154958336474  LUMO = 2.64923413617741
  mo_energy =
[-3.26922920e+01 -1.82032399e+00 -7.64154958e-01 -7.64154958e-01
 -7.64154958e-01  2.64923414e+00  2.64923414e+00  2.64923414e+00
  1.98292580e+01  1.98292580e+01  1.98292580e+01  3.61744440e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.4509431789851  E_coul = 54.42039040873847
cycle= 5 E= -128.030552770247  delta_E= -2.16e-12  |g|= 7.17e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4509431789851  E_coul = 54.42039040873847
  HOMO = -0.76415499779042  LUMO = 2.64923410129353
  mo_energy =
[-3.26922922e+01 -1.82032403e+00 -7.64154998e-01 -7.64154998e-01
 -7.64154998e-01  2.64923410e+00  2.64923410e+00  2.64923410e+00
  1.98292579e+01  1.98292579e+01  1.98292579e+01  3.61744438e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.45094336633002  E_coul = 54.420390596083294
Extra cycle  E= -128.030552770247  delta_E= -1.14e-13  |g|= 2.35e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.71020194e+03 9.47622785e-01 2.27840152e+02 4.81372615e+01
 1.24629931e+01 1.33247133e+01 6.02428024e-01 2.77708434e+00]
E = -128.03055277024674
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.2019435         1
[INPUT] 0    0    [1    /1   ]  0.947622784878       1
[INPUT] 0    0    [1    /1   ]  227.840151796        1
[INPUT] 0    0    [1    /1   ]  48.1372615393        1
[INPUT] 0    0    [1    /1   ]  12.4629931463        1
[INPUT] 1    0    [1    /1   ]  13.3247133055        1
[INPUT] 1    0    [1    /1   ]  0.602428023659       1
[INPUT] 1    0    [1    /1   ]  2.77708434011        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.201943499692, 1.0]], [0, [0.9476227848775601, 1.0]], [0, [227.8401517962483, 1.0]], [0, [48.13726153931488, 1.0]], [0, [12.462993146292066, 1.0]], [1, [13.32471330551589, 1.0]], [1, [0.6024280236590587, 1.0]], [1, [2.777084340113842, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.2019435]
bas 1, expnt(s) = [0.94762278]
bas 2, expnt(s) = [227.8401518]
bas 3, expnt(s) = [48.13726154]
bas 4, expnt(s) = [12.46299315]
bas 5, expnt(s) = [13.32471331]
bas 6, expnt(s) = [0.60242802]
bas 7, expnt(s) = [2.77708434]
CPU time:       391.47
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71020194e+03 6.71893703e+02 9.47622785e-01 2.42656341e+00
 2.27840152e+02 1.48162303e+02 4.81372615e+01 4.61717207e+01
 1.24629931e+01 1.67583706e+01 1.33247133e+01 7.42688560e+01
 6.02428024e-01 1.54833828e+00 2.77708434e+00 1.04585320e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939651410733386
cond(S) = 19.04860837217443
E1 = -182.73403110488158  E_coul = 54.93136315946995
init E= -127.802667945412
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748232611530252  LUMO = 2.65781281118978
  mo_energy =
[-3.25127261e+01 -1.79361215e+00 -7.48232612e-01 -7.48232612e-01
 -7.48232612e-01  2.65781281e+00  2.65781281e+00  2.65781281e+00
  1.99370537e+01  1.99370537e+01  1.99370537e+01  3.63041425e+01
  3.27684398e+02  2.75852468e+03]
E1 = -182.23603003302202  E_coul = 54.206394354507125
cycle= 1 E= -128.029635678515  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194696
diis-c [-0.03790661  1.        ]
  HOMO = -0.778324514951028  LUMO = 2.63631549365077
  mo_energy =
[-3.27407912e+01 -1.83645470e+00 -7.78324515e-01 -7.78324515e-01
 -7.78324515e-01  2.63631549e+00  2.63631549e+00  2.63631549e+00
  1.97931952e+01  1.97931952e+01  1.97931952e+01  3.61311628e+01
  3.27419282e+02  2.75819680e+03]
E1 = -182.51801753378336  E_coul = 54.48755317078607
cycle= 2 E= -128.030464362997  delta_E= -0.000829  |g|= 0.0352  |ddm|= 0.0368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0559181
diis-c [-2.31367499e-04  2.17052108e-01  7.82947892e-01]
  HOMO = -0.76372985763809  LUMO = 2.64960401073493
  mo_energy =
[-3.26909798e+01 -1.81987488e+00 -7.63729858e-01 -7.63729858e-01
 -7.63729858e-01  2.64960401e+00  2.64960401e+00  2.64960401e+00
  1.98302699e+01  1.98302699e+01  1.98302699e+01  3.61755456e+01
  3.27473711e+02  2.75825453e+03]
E1 = -182.4489772643558  E_coul = 54.41842457039023
cycle= 3 E= -128.030552693966  delta_E= -8.83e-05  |g|= 0.00101  |ddm|= 0.00911
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167223
diis-c [-5.79722344e-08 -4.52052619e-03  1.40350998e-02  9.90485426e-01]
  HOMO = -0.764157818737585  LUMO = 2.64923175126222
  mo_energy =
[-3.26922983e+01 -1.82032764e+00 -7.64157819e-01 -7.64157819e-01
 -7.64157819e-01  2.64923175e+00  2.64923175e+00  2.64923175e+00
  1.98292524e+01  1.98292524e+01  1.98292524e+01  3.61744361e+01
  3.27472466e+02  2.75825331e+03]
E1 = -182.450952656018  E_coul = 54.420399885773506
cycle= 4 E= -128.030552770244  delta_E= -7.63e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.94963e-06
diis-c [-2.34061854e-12  7.85947094e-05 -5.51278403e-04 -2.27524556e-02
  1.02322514e+00]
  HOMO = -0.764154958336474  LUMO = 2.64923413617741
  mo_energy =
[-3.26922920e+01 -1.82032399e+00 -7.64154958e-01 -7.64154958e-01
 -7.64154958e-01  2.64923414e+00  2.64923414e+00  2.64923414e+00
  1.98292580e+01  1.98292580e+01  1.98292580e+01  3.61744440e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.4509431789851  E_coul = 54.42039040873847
cycle= 5 E= -128.030552770247  delta_E= -2.16e-12  |g|= 7.17e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4509431789851  E_coul = 54.42039040873847
  HOMO = -0.76415499779042  LUMO = 2.64923410129353
  mo_energy =
[-3.26922922e+01 -1.82032403e+00 -7.64154998e-01 -7.64154998e-01
 -7.64154998e-01  2.64923410e+00  2.64923410e+00  2.64923410e+00
  1.98292579e+01  1.98292579e+01  1.98292579e+01  3.61744438e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.45094336633002  E_coul = 54.420390596083294
Extra cycle  E= -128.030552770247  delta_E= -1.14e-13  |g|= 2.35e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.04860837217443
E1 = -182.45094336633002  E_coul = 54.420390596083294
init E= -128.030552770247
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764154985334236  LUMO = 2.64923411260687
  mo_energy =
[-3.26922921e+01 -1.82032401e+00 -7.64154985e-01 -7.64154985e-01
 -7.64154985e-01  2.64923411e+00  2.64923411e+00  2.64923411e+00
  1.98292580e+01  1.98292580e+01  1.98292580e+01  3.61744439e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.4509433075935  E_coul = 54.420390537346854
cycle= 1 E= -128.030552770247  delta_E= 1.14e-13  |g|= 7.3e-09  |ddm|= 7.76e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4509433075935  E_coul = 54.420390537346854
  HOMO = -0.764154989243233  LUMO = 2.64923410905511
  mo_energy =
[-3.26922921e+01 -1.82032402e+00 -7.64154989e-01 -7.64154989e-01
 -7.64154989e-01  2.64923411e+00  2.64923411e+00  2.64923411e+00
  1.98292580e+01  1.98292580e+01  1.98292580e+01  3.61744439e+01
  3.27472471e+02  2.75825332e+03]
E1 = -182.4509433260645  E_coul = 54.420390555817946
Extra cycle  E= -128.030552770247  delta_E= 5.68e-14  |g|= 2.3e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.71020194e+03 9.47622785e-01 2.27840152e+02 4.81372615e+01
 1.24629931e+01 1.33247133e+01 6.02428024e-01 2.77708434e+00]
grad_E = [ 3.65149100e-05  1.96465907e-04 -1.84501941e-05  6.52193494e-05
 -6.96698003e-05 -1.05611643e-05  8.01610426e-04 -8.09272463e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.12283614        1
[INPUT] 0    0    [1    /1   ]  0.947648478941       1
[INPUT] 0    0    [1    /1   ]  227.798075249        1
[INPUT] 0    0    [1    /1   ]  48.1461891555        1
[INPUT] 0    0    [1    /1   ]  12.4648018813        1
[INPUT] 1    0    [1    /1   ]  13.3254250178        1
[INPUT] 1    0    [1    /1   ]  0.602514232679       1
[INPUT] 1    0    [1    /1   ]  2.77737405853        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.1228361353762, 1.0]], [0, [0.9476484789414156, 1.0]], [0, [227.7980752492969, 1.0]], [0, [48.14618915554446, 1.0]], [0, [12.464801881341023, 1.0]], [1, [13.325425017775908, 1.0]], [1, [0.6025142326792554, 1.0]], [1, [2.7773740585284097, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.12283614]
bas 1, expnt(s) = [0.94764848]
bas 2, expnt(s) = [227.79807525]
bas 3, expnt(s) = [48.14618916]
bas 4, expnt(s) = [12.46480188]
bas 5, expnt(s) = [13.32542502]
bas 6, expnt(s) = [0.60251423]
bas 7, expnt(s) = [2.77737406]
CPU time:       395.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71012284e+03 6.71870394e+02 9.47648479e-01 2.42661276e+00
 2.27798075e+02 1.48141781e+02 4.81461892e+01 4.61781428e+01
 1.24648019e+01 1.67601947e+01 1.33254250e+01 7.42738147e+01
 6.02514233e-01 1.54861525e+00 2.77737406e+00 1.04598959e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939631382738526
cond(S) = 19.05384461709299
E1 = -182.73406447459178  E_coul = 54.93145879159663
init E= -127.802605682995
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748223462583348  LUMO = 2.65825852201604
  mo_energy =
[-3.25127086e+01 -1.79360860e+00 -7.48223463e-01 -7.48223463e-01
 -7.48223463e-01  2.65825852e+00  2.65825852e+00  2.65825852e+00
  1.99389726e+01  1.99389726e+01  1.99389726e+01  3.63136704e+01
  3.27678568e+02  2.75832745e+03]
E1 = -182.2368223283317  E_coul = 54.20718399796479
cycle= 1 E= -128.029638330367  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194593
diis-c [-0.03786634  1.        ]
  HOMO = -0.778263600529707  LUMO = 2.636803897414
  mo_energy =
[-3.27406387e+01 -1.83639549e+00 -7.78263601e-01 -7.78263601e-01
 -7.78263601e-01  2.63680390e+00  2.63680390e+00  2.63680390e+00
  1.97952159e+01  1.97952159e+01  1.97952159e+01  3.61407944e+01
  3.27413607e+02  2.75799978e+03]
E1 = -182.51857725154318  E_coul = 54.48811144667144
cycle= 2 E= -128.030465804872  delta_E= -0.000827  |g|= 0.0352  |ddm|= 0.0367
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.055871
diis-c [-2.31474422e-04  2.16985540e-01  7.83014460e-01]
  HOMO = -0.763679991287992  LUMO = 2.65008386151416
  mo_energy =
[-3.26908632e+01 -1.81982808e+00 -7.63679991e-01 -7.63679991e-01
 -7.63679991e-01  2.65008386e+00  2.65008386e+00  2.65008386e+00
  1.98322640e+01  1.98322640e+01  1.98322640e+01  3.61851473e+01
  3.27467998e+02  2.75805747e+03]
E1 = -182.44959616586226  E_coul = 54.419042183974504
cycle= 3 E= -128.030553981888  delta_E= -8.82e-05  |g|= 0.00102  |ddm|= 0.00911
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167404
diis-c [-5.79740527e-08 -4.51360172e-03  1.41109228e-02  9.90402679e-01]
  HOMO = -0.764108445205451  LUMO = 2.6497110870373
  mo_energy =
[-3.26921834e+01 -1.82028143e+00 -7.64108445e-01 -7.64108445e-01
 -7.64108445e-01  2.64971109e+00  2.64971109e+00  2.64971109e+00
  1.98312452e+01  1.98312452e+01  1.98312452e+01  3.61840361e+01
  3.27466751e+02  2.75805625e+03]
E1 = -182.45157364739924  E_coul = 54.42101958906574
cycle= 4 E= -128.030554058334  delta_E= -7.64e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.94035e-06
diis-c [-2.33681656e-12  7.83861899e-05 -5.53126721e-04 -2.27517785e-02
  1.02322652e+00]
  HOMO = -0.764105589115742  LUMO = 2.64971346926653
  mo_energy =
[-3.26921771e+01 -1.82027778e+00 -7.64105589e-01 -7.64105589e-01
 -7.64105589e-01  2.64971347e+00  2.64971347e+00  2.64971347e+00
  1.98312509e+01  1.98312509e+01  1.98312509e+01  3.61840439e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156418616142  E_coul = 54.42101012782581
cycle= 5 E= -128.030554058336  delta_E= -2.1e-12  |g|= 7.16e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45156418616142  E_coul = 54.42101012782581
  HOMO = -0.764105628443595  LUMO = 2.64971343447344
  mo_energy =
[-3.26921773e+01 -1.82027782e+00 -7.64105628e-01 -7.64105628e-01
 -7.64105628e-01  2.64971343e+00  2.64971343e+00  2.64971343e+00
  1.98312508e+01  1.98312508e+01  1.98312508e+01  3.61840438e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156437295714  E_coul = 54.42101031462144
Extra cycle  E= -128.030554058336  delta_E= -8.53e-14  |g|= 2.34e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.71012284e+03 9.47648479e-01 2.27798075e+02 4.81461892e+01
 1.24648019e+01 1.33254250e+01 6.02514233e-01 2.77737406e+00]
E = -128.0305540583357
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1710.12283614        1
[INPUT] 0    0    [1    /1   ]  0.947648478941       1
[INPUT] 0    0    [1    /1   ]  227.798075249        1
[INPUT] 0    0    [1    /1   ]  48.1461891555        1
[INPUT] 0    0    [1    /1   ]  12.4648018813        1
[INPUT] 1    0    [1    /1   ]  13.3254250178        1
[INPUT] 1    0    [1    /1   ]  0.602514232679       1
[INPUT] 1    0    [1    /1   ]  2.77737405853        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1710.1228361353762, 1.0]], [0, [0.9476484789414156, 1.0]], [0, [227.7980752492969, 1.0]], [0, [48.14618915554446, 1.0]], [0, [12.464801881341023, 1.0]], [1, [13.325425017775908, 1.0]], [1, [0.6025142326792554, 1.0]], [1, [2.7773740585284097, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1710.12283614]
bas 1, expnt(s) = [0.94764848]
bas 2, expnt(s) = [227.79807525]
bas 3, expnt(s) = [48.14618916]
bas 4, expnt(s) = [12.46480188]
bas 5, expnt(s) = [13.32542502]
bas 6, expnt(s) = [0.60251423]
bas 7, expnt(s) = [2.77737406]
CPU time:       396.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.71012284e+03 6.71870394e+02 9.47648479e-01 2.42661276e+00
 2.27798075e+02 1.48141781e+02 4.81461892e+01 4.61781428e+01
 1.24648019e+01 1.67601947e+01 1.33254250e+01 7.42738147e+01
 6.02514233e-01 1.54861525e+00 2.77737406e+00 1.04598959e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939631382738526
cond(S) = 19.05384461709299
E1 = -182.73406447459178  E_coul = 54.93145879159663
init E= -127.802605682995
    CPU time for initialize scf      0.03 sec, wall time      0.09 sec
  HOMO = -0.748223462583348  LUMO = 2.65825852201604
  mo_energy =
[-3.25127086e+01 -1.79360860e+00 -7.48223463e-01 -7.48223463e-01
 -7.48223463e-01  2.65825852e+00  2.65825852e+00  2.65825852e+00
  1.99389726e+01  1.99389726e+01  1.99389726e+01  3.63136704e+01
  3.27678568e+02  2.75832745e+03]
E1 = -182.2368223283317  E_coul = 54.20718399796479
cycle= 1 E= -128.029638330367  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.02 sec, wall time      0.04 sec
diis-norm(errvec)=0.194593
diis-c [-0.03786634  1.        ]
  HOMO = -0.778263600529707  LUMO = 2.636803897414
  mo_energy =
[-3.27406387e+01 -1.83639549e+00 -7.78263601e-01 -7.78263601e-01
 -7.78263601e-01  2.63680390e+00  2.63680390e+00  2.63680390e+00
  1.97952159e+01  1.97952159e+01  1.97952159e+01  3.61407944e+01
  3.27413607e+02  2.75799978e+03]
E1 = -182.51857725154318  E_coul = 54.48811144667144
cycle= 2 E= -128.030465804872  delta_E= -0.000827  |g|= 0.0352  |ddm|= 0.0367
    CPU time for cycle= 2      0.02 sec, wall time      0.04 sec
diis-norm(errvec)=0.055871
diis-c [-2.31474422e-04  2.16985540e-01  7.83014460e-01]
  HOMO = -0.763679991287992  LUMO = 2.65008386151416
  mo_energy =
[-3.26908632e+01 -1.81982808e+00 -7.63679991e-01 -7.63679991e-01
 -7.63679991e-01  2.65008386e+00  2.65008386e+00  2.65008386e+00
  1.98322640e+01  1.98322640e+01  1.98322640e+01  3.61851473e+01
  3.27467998e+02  2.75805747e+03]
E1 = -182.44959616586226  E_coul = 54.419042183974504
cycle= 3 E= -128.030553981888  delta_E= -8.82e-05  |g|= 0.00102  |ddm|= 0.00911
    CPU time for cycle= 3      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=0.00167404
diis-c [-5.79740527e-08 -4.51360172e-03  1.41109228e-02  9.90402679e-01]
  HOMO = -0.764108445205451  LUMO = 2.6497110870373
  mo_energy =
[-3.26921834e+01 -1.82028143e+00 -7.64108445e-01 -7.64108445e-01
 -7.64108445e-01  2.64971109e+00  2.64971109e+00  2.64971109e+00
  1.98312452e+01  1.98312452e+01  1.98312452e+01  3.61840361e+01
  3.27466751e+02  2.75805625e+03]
E1 = -182.45157364739924  E_coul = 54.42101958906574
cycle= 4 E= -128.030554058334  delta_E= -7.64e-08  |g|= 8.09e-06  |ddm|= 0.000261
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=9.94035e-06
diis-c [-2.33681656e-12  7.83861899e-05 -5.53126721e-04 -2.27517785e-02
  1.02322652e+00]
  HOMO = -0.764105589115742  LUMO = 2.64971346926653
  mo_energy =
[-3.26921771e+01 -1.82027778e+00 -7.64105589e-01 -7.64105589e-01
 -7.64105589e-01  2.64971347e+00  2.64971347e+00  2.64971347e+00
  1.98312509e+01  1.98312509e+01  1.98312509e+01  3.61840439e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156418616142  E_coul = 54.42101012782581
cycle= 5 E= -128.030554058336  delta_E= -2.1e-12  |g|= 7.16e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45156418616142  E_coul = 54.42101012782581
  HOMO = -0.764105628443595  LUMO = 2.64971343447344
  mo_energy =
[-3.26921773e+01 -1.82027782e+00 -7.64105628e-01 -7.64105628e-01
 -7.64105628e-01  2.64971343e+00  2.64971343e+00  2.64971343e+00
  1.98312508e+01  1.98312508e+01  1.98312508e+01  3.61840438e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156437295714  E_coul = 54.42101031462144
Extra cycle  E= -128.030554058336  delta_E= -8.53e-14  |g|= 2.34e-08  |ddm|= 2.45e-08
    CPU time for scf_cycle      0.14 sec, wall time      0.24 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.05384461709299
E1 = -182.45156437295714  E_coul = 54.42101031462144
init E= -128.030554058336
    CPU time for initialize scf      0.07 sec, wall time      0.07 sec
  HOMO = -0.764105616024049  LUMO = 2.64971344575475
  mo_energy =
[-3.26921772e+01 -1.82027781e+00 -7.64105616e-01 -7.64105616e-01
 -7.64105616e-01  2.64971345e+00  2.64971345e+00  2.64971345e+00
  1.98312508e+01  1.98312508e+01  1.98312508e+01  3.61840439e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156431439975  E_coul = 54.421010256064015
cycle= 1 E= -128.030554058336  delta_E= -2.84e-14  |g|= 7.27e-09  |ddm|= 7.74e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45156431439975  E_coul = 54.421010256064015
  HOMO = -0.76410561992108  LUMO = 2.64971344221347
  mo_energy =
[-3.26921772e+01 -1.82027781e+00 -7.64105620e-01 -7.64105620e-01
 -7.64105620e-01  2.64971344e+00  2.64971344e+00  2.64971344e+00
  1.98312508e+01  1.98312508e+01  1.98312508e+01  3.61840438e+01
  3.27466756e+02  2.75805625e+03]
E1 = -182.45156433281213  E_coul = 54.421010274476586
Extra cycle  E= -128.030554058336  delta_E= 1.71e-13  |g|= 2.29e-09  |ddm|= 2.43e-09
    CPU time for scf_cycle      0.14 sec, wall time      0.14 sec
exp = [1.71012284e+03 9.47648479e-01 2.27798075e+02 4.81461892e+01
 1.24648019e+01 1.33254250e+01 6.02514233e-01 2.77737406e+00]
grad_E = [ 3.66930164e-05  3.23718993e-04 -2.53580229e-05  1.07725759e-04
 -1.16031168e-04 -1.65244472e-05  1.19920981e-03 -2.11438986e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.92237257        1
[INPUT] 0    0    [1    /1   ]  0.947689890976       1
[INPUT] 0    0    [1    /1   ]  227.72477973         1
[INPUT] 0    0    [1    /1   ]  48.160078984         1
[INPUT] 0    0    [1    /1   ]  12.4676549335        1
[INPUT] 1    0    [1    /1   ]  13.3265797787        1
[INPUT] 1    0    [1    /1   ]  0.602651579971       1
[INPUT] 1    0    [1    /1   ]  2.77783920813        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.9223725687464, 1.0]], [0, [0.9476898909761208, 1.0]], [0, [227.72477972984677, 1.0]], [0, [48.16007898401813, 1.0]], [0, [12.467654933506688, 1.0]], [1, [13.326579778677342, 1.0]], [1, [0.6026515799710285, 1.0]], [1, [2.7778392081284, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.92237257]
bas 1, expnt(s) = [0.94768989]
bas 2, expnt(s) = [227.72477973]
bas 3, expnt(s) = [48.16007898]
bas 4, expnt(s) = [12.46765493]
bas 5, expnt(s) = [13.32657978]
bas 6, expnt(s) = [0.60265158]
bas 7, expnt(s) = [2.77783921]
CPU time:       401.12
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70992237e+03 6.71811324e+02 9.47689891e-01 2.42669229e+00
 2.27724780e+02 1.48106030e+02 4.81600790e+01 4.61881340e+01
 1.24676549e+01 1.67630718e+01 1.33265798e+01 7.42818604e+01
 6.02651580e-01 1.54905653e+00 2.77783921e+00 1.04620857e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939599410717868
cond(S) = 19.062780053120093
E1 = -182.73412051670948  E_coul = 54.931613332684826
init E= -127.802507184025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748208733962492  LUMO = 2.65897037160246
  mo_energy =
[-3.25126808e+01 -1.79360279e+00 -7.48208734e-01 -7.48208734e-01
 -7.48208734e-01  2.65897037e+00  2.65897037e+00  2.65897037e+00
  1.99420631e+01  1.99420631e+01  1.99420631e+01  3.63286247e+01
  3.27662310e+02  2.75790035e+03]
E1 = -182.2380836873466  E_coul = 54.20843982166566
cycle= 1 E= -128.029643865681  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.19443
diis-c [-0.03780288  1.        ]
  HOMO = -0.778166738353154  LUMO = 2.63758342040514
  mo_energy =
[-3.27403968e+01 -1.83630136e+00 -7.78166738e-01 -7.78166738e-01
 -7.78166738e-01  2.63758342e+00  2.63758342e+00  2.63758342e+00
  1.97984677e+01  1.97984677e+01  1.97984677e+01  3.61559135e+01
  3.27397598e+02  2.75757300e+03]
E1 = -182.51947003440648  E_coul = 54.48900061004869
cycle= 2 E= -128.030469424358  delta_E= -0.000826  |g|= 0.0351  |ddm|= 0.0367
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0557965
diis-c [-2.31646203e-04  2.16879178e-01  7.83120822e-01]
  HOMO = -0.763600629283759  LUMO = 2.65084985936688
  mo_energy =
[-3.26906781e+01 -1.81975361e+00 -7.63600629e-01 -7.63600629e-01
 -7.63600629e-01  2.65084986e+00  2.65084986e+00  2.65084986e+00
  1.98354738e+01  1.98354738e+01  1.98354738e+01  3.62002189e+01
  3.27451927e+02  2.75763063e+03]
E1 = -182.45058267142562  E_coul = 54.42002531369785
cycle= 3 E= -128.030557357728  delta_E= -8.79e-05  |g|= 0.00102  |ddm|= 0.00909
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00167695
diis-c [-5.79782398e-08 -4.50245603e-03  1.42326780e-02  9.90269778e-01]
  HOMO = -0.764029876851339  LUMO = 2.65047625621561
  mo_energy =
[-3.26920010e+01 -1.82020791e+00 -7.64029877e-01 -7.64029877e-01
 -7.64029877e-01  2.65047626e+00  2.65047626e+00  2.65047626e+00
  1.98344529e+01  1.98344529e+01  1.98344529e+01  3.61991050e+01
  3.27450677e+02  2.75762941e+03]
E1 = -182.45256352150983  E_coul = 54.4220060870671
cycle= 4 E= -128.030557434443  delta_E= -7.67e-08  |g|= 8.08e-06  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.92507e-06
diis-c [-2.33057412e-12  7.80524015e-05 -5.56088213e-04 -2.27511208e-02
  1.02322916e+00]
  HOMO = -0.76402702782462  LUMO = 2.65047863399472
  mo_energy =
[-3.26919948e+01 -1.82020426e+00 -7.64027028e-01 -7.64027028e-01
 -7.64027028e-01  2.65047863e+00  2.65047863e+00  2.65047863e+00
  1.98344586e+01  1.98344586e+01  1.98344586e+01  3.61991129e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255408625184  E_coul = 54.42199665180704
cycle= 5 E= -128.030557434445  delta_E= -2.07e-12  |g|= 7.12e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45255408625184  E_coul = 54.42199665180704
  HOMO = -0.764027066953625  LUMO = 2.65047859934435
  mo_energy =
[-3.26919949e+01 -1.82020431e+00 -7.64027067e-01 -7.64027067e-01
 -7.64027067e-01  2.65047860e+00  2.65047860e+00  2.65047860e+00
  1.98344585e+01  1.98344585e+01  1.98344585e+01  3.61991128e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255427218163  E_coul = 54.42199683773681
Extra cycle  E= -128.030557434445  delta_E=    0  |g|= 2.33e-08  |ddm|= 2.44e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.70992237e+03 9.47689891e-01 2.27724780e+02 4.81600790e+01
 1.24676549e+01 1.33265798e+01 6.02651580e-01 2.77783921e+00]
E = -128.0305574344448
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.92237257        1
[INPUT] 0    0    [1    /1   ]  0.947689890976       1
[INPUT] 0    0    [1    /1   ]  227.72477973         1
[INPUT] 0    0    [1    /1   ]  48.160078984         1
[INPUT] 0    0    [1    /1   ]  12.4676549335        1
[INPUT] 1    0    [1    /1   ]  13.3265797787        1
[INPUT] 1    0    [1    /1   ]  0.602651579971       1
[INPUT] 1    0    [1    /1   ]  2.77783920813        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.9223725687464, 1.0]], [0, [0.9476898909761208, 1.0]], [0, [227.72477972984677, 1.0]], [0, [48.16007898401813, 1.0]], [0, [12.467654933506688, 1.0]], [1, [13.326579778677342, 1.0]], [1, [0.6026515799710285, 1.0]], [1, [2.7778392081284, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.92237257]
bas 1, expnt(s) = [0.94768989]
bas 2, expnt(s) = [227.72477973]
bas 3, expnt(s) = [48.16007898]
bas 4, expnt(s) = [12.46765493]
bas 5, expnt(s) = [13.32657978]
bas 6, expnt(s) = [0.60265158]
bas 7, expnt(s) = [2.77783921]
CPU time:       402.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70992237e+03 6.71811324e+02 9.47689891e-01 2.42669229e+00
 2.27724780e+02 1.48106030e+02 4.81600790e+01 4.61881340e+01
 1.24676549e+01 1.67630718e+01 1.33265798e+01 7.42818604e+01
 6.02651580e-01 1.54905653e+00 2.77783921e+00 1.04620857e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939599410717868
cond(S) = 19.062780053120093
E1 = -182.73412051670948  E_coul = 54.931613332684826
init E= -127.802507184025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748208733962492  LUMO = 2.65897037160246
  mo_energy =
[-3.25126808e+01 -1.79360279e+00 -7.48208734e-01 -7.48208734e-01
 -7.48208734e-01  2.65897037e+00  2.65897037e+00  2.65897037e+00
  1.99420631e+01  1.99420631e+01  1.99420631e+01  3.63286247e+01
  3.27662310e+02  2.75790035e+03]
E1 = -182.2380836873466  E_coul = 54.20843982166566
cycle= 1 E= -128.029643865681  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.19443
diis-c [-0.03780288  1.        ]
  HOMO = -0.778166738353154  LUMO = 2.63758342040514
  mo_energy =
[-3.27403968e+01 -1.83630136e+00 -7.78166738e-01 -7.78166738e-01
 -7.78166738e-01  2.63758342e+00  2.63758342e+00  2.63758342e+00
  1.97984677e+01  1.97984677e+01  1.97984677e+01  3.61559135e+01
  3.27397598e+02  2.75757300e+03]
E1 = -182.51947003440648  E_coul = 54.48900061004869
cycle= 2 E= -128.030469424358  delta_E= -0.000826  |g|= 0.0351  |ddm|= 0.0367
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0557965
diis-c [-2.31646203e-04  2.16879178e-01  7.83120822e-01]
  HOMO = -0.763600629283759  LUMO = 2.65084985936688
  mo_energy =
[-3.26906781e+01 -1.81975361e+00 -7.63600629e-01 -7.63600629e-01
 -7.63600629e-01  2.65084986e+00  2.65084986e+00  2.65084986e+00
  1.98354738e+01  1.98354738e+01  1.98354738e+01  3.62002189e+01
  3.27451927e+02  2.75763063e+03]
E1 = -182.45058267142562  E_coul = 54.42002531369785
cycle= 3 E= -128.030557357728  delta_E= -8.79e-05  |g|= 0.00102  |ddm|= 0.00909
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00167695
diis-c [-5.79782398e-08 -4.50245603e-03  1.42326780e-02  9.90269778e-01]
  HOMO = -0.764029876851339  LUMO = 2.65047625621561
  mo_energy =
[-3.26920010e+01 -1.82020791e+00 -7.64029877e-01 -7.64029877e-01
 -7.64029877e-01  2.65047626e+00  2.65047626e+00  2.65047626e+00
  1.98344529e+01  1.98344529e+01  1.98344529e+01  3.61991050e+01
  3.27450677e+02  2.75762941e+03]
E1 = -182.45256352150983  E_coul = 54.4220060870671
cycle= 4 E= -128.030557434443  delta_E= -7.67e-08  |g|= 8.08e-06  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.92507e-06
diis-c [-2.33057412e-12  7.80524015e-05 -5.56088213e-04 -2.27511208e-02
  1.02322916e+00]
  HOMO = -0.76402702782462  LUMO = 2.65047863399472
  mo_energy =
[-3.26919948e+01 -1.82020426e+00 -7.64027028e-01 -7.64027028e-01
 -7.64027028e-01  2.65047863e+00  2.65047863e+00  2.65047863e+00
  1.98344586e+01  1.98344586e+01  1.98344586e+01  3.61991129e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255408625184  E_coul = 54.42199665180704
cycle= 5 E= -128.030557434445  delta_E= -2.07e-12  |g|= 7.12e-08  |ddm|= 1.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45255408625184  E_coul = 54.42199665180704
  HOMO = -0.764027066953625  LUMO = 2.65047859934435
  mo_energy =
[-3.26919949e+01 -1.82020431e+00 -7.64027067e-01 -7.64027067e-01
 -7.64027067e-01  2.65047860e+00  2.65047860e+00  2.65047860e+00
  1.98344585e+01  1.98344585e+01  1.98344585e+01  3.61991128e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255427218163  E_coul = 54.42199683773681
Extra cycle  E= -128.030557434445  delta_E=    0  |g|= 2.33e-08  |ddm|= 2.44e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.062780053120093
E1 = -182.45255427218163  E_coul = 54.42199683773681
init E= -128.030557434445
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.764027054591856  LUMO = 2.65047861057517
  mo_energy =
[-3.26919948e+01 -1.82020429e+00 -7.64027055e-01 -7.64027055e-01
 -7.64027055e-01  2.65047861e+00  2.65047861e+00  2.65047861e+00
  1.98344585e+01  1.98344585e+01  1.98344585e+01  3.61991128e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255421390655  E_coul = 54.42199677946166
cycle= 1 E= -128.030557434445  delta_E= -8.53e-14  |g|= 7.24e-09  |ddm|= 7.7e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45255421390655  E_coul = 54.42199677946166
  HOMO = -0.764027058470034  LUMO = 2.65047860705038
  mo_energy =
[-3.26919949e+01 -1.82020430e+00 -7.64027058e-01 -7.64027058e-01
 -7.64027058e-01  2.65047861e+00  2.65047861e+00  2.65047861e+00
  1.98344585e+01  1.98344585e+01  1.98344585e+01  3.61991128e+01
  3.27450682e+02  2.75762941e+03]
E1 = -182.45255423222665  E_coul = 54.421996797781915
Extra cycle  E= -128.030557434445  delta_E= 1.42e-13  |g|= 2.28e-09  |ddm|= 2.42e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70992237e+03 9.47689891e-01 2.27724780e+02 4.81600790e+01
 1.24676549e+01 1.33265798e+01 6.02651580e-01 2.77783921e+00]
grad_E = [ 3.69790541e-05  5.28853851e-04 -3.65650142e-05  1.76618822e-04
 -1.91389083e-04 -2.60313363e-05  1.82618627e-03  9.02253343e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.40976985        1
[INPUT] 0    0    [1    /1   ]  0.947756192601       1
[INPUT] 0    0    [1    /1   ]  227.594048437        1
[INPUT] 0    0    [1    /1   ]  48.1811636549        1
[INPUT] 0    0    [1    /1   ]  12.4720873234        1
[INPUT] 1    0    [1    /1   ]  13.328445124         1
[INPUT] 1    0    [1    /1   ]  0.602871111734       1
[INPUT] 1    0    [1    /1   ]  2.77858615809        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.4097698526652, 1.0]], [0, [0.9477561926013917, 1.0]], [0, [227.5940484370997, 1.0]], [0, [48.181163654881686, 1.0]], [0, [12.472087323435128, 1.0]], [1, [13.328445124026716, 1.0]], [1, [0.6028711117336149, 1.0]], [1, [2.7785861580908935, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.40976985]
bas 1, expnt(s) = [0.94775619]
bas 2, expnt(s) = [227.59404844]
bas 3, expnt(s) = [48.18116365]
bas 4, expnt(s) = [12.47208732]
bas 5, expnt(s) = [13.32844512]
bas 6, expnt(s) = [0.60287111]
bas 7, expnt(s) = [2.77858616]
CPU time:       406.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70940977e+03 6.71660271e+02 9.47756193e-01 2.42681962e+00
 2.27594048e+02 1.48042258e+02 4.81811637e+01 4.62032992e+01
 1.24720873e+01 1.67675412e+01 1.33284451e+01 7.42948573e+01
 6.02871112e-01 1.54976192e+00 2.77858616e+00 1.04656023e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939548303697485
cond(S) = 19.078363755449786
E1 = -182.73421749182907  E_coul = 54.931863265106806
init E= -127.802354226722
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748184989511101  LUMO = 2.66010993853021
  mo_energy =
[-3.25126377e+01 -1.79359321e+00 -7.48184990e-01 -7.48184990e-01
 -7.48184990e-01  2.66010994e+00  2.66010994e+00  2.66010994e+00
  1.99470352e+01  1.99470352e+01  1.99470352e+01  3.63516570e+01
  3.27619781e+02  2.75693350e+03]
E1 = -182.24009801445334  E_coul = 54.21044190453903
cycle= 1 E= -128.029656109914  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194172
diis-c [-0.03770262  1.        ]
  HOMO = -0.778012314893363  LUMO = 2.63883059104095
  mo_energy =
[-3.27400132e+01 -1.83615113e+00 -7.78012315e-01 -7.78012315e-01
 -7.78012315e-01  2.63883059e+00  2.63883059e+00  2.63883059e+00
  1.98036958e+01  1.98036958e+01  1.98036958e+01  3.61792090e+01
  3.27355465e+02  2.75660667e+03]
E1 = -182.52089931561372  E_coul = 54.49042068343242
cycle= 2 E= -128.030478632181  delta_E= -0.000823  |g|= 0.035  |ddm|= 0.0366
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0556782
diis-c [-2.31915535e-04  2.16709376e-01  7.83290624e-01]
  HOMO = -0.763473981735981  LUMO = 2.65207559058267
  mo_energy =
[-3.26903844e+01 -1.81963456e+00 -7.63473982e-01 -7.63473982e-01
 -7.63473982e-01  2.65207559e+00  2.65207559e+00  2.65207559e+00
  1.98406353e+01  1.98406353e+01  1.98406353e+01  3.62234387e+01
  3.27409695e+02  2.75666420e+03]
E1 = -182.45216065202266  E_coul = 54.42159447239901
cycle= 3 E= -128.030566179624  delta_E= -8.75e-05  |g|= 0.00102  |ddm|= 0.00908
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168162
diis-c [-5.79866528e-08 -4.48471897e-03  1.44272025e-02  9.90057516e-01]
  HOMO = -0.76390449819473  LUMO = 2.65170066211773
  mo_energy =
[-3.26917117e+01 -1.82009039e+00 -7.63904498e-01 -7.63904498e-01
 -7.63904498e-01  2.65170066e+00  2.65170066e+00  2.65170066e+00
  1.98396110e+01  1.98396110e+01  1.98396110e+01  3.62223206e+01
  3.27408441e+02  2.75666297e+03]
E1 = -182.4541468894035  E_coul = 54.42358063263331
cycle= 4 E= -128.03056625677  delta_E= -7.71e-08  |g|= 8.07e-06  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.90043e-06
diis-c [-2.32045799e-12  7.75244152e-05 -5.60818581e-04 -2.27508222e-02
  1.02323412e+00]
  HOMO = -0.763901660536125  LUMO = 2.65170303268749
  mo_energy =
[-3.26917055e+01 -1.82008675e+00 -7.63901661e-01 -7.63901661e-01
 -7.63901661e-01  2.65170303e+00  2.65170303e+00  2.65170303e+00
  1.98396167e+01  1.98396167e+01  1.98396167e+01  3.62223285e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413749610913  E_coul = 54.42357123933674
cycle= 5 E= -128.030566256772  delta_E= -2.19e-12  |g|= 7.08e-08  |ddm|= 1.29e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.45413749610913  E_coul = 54.42357123933674
  HOMO = -0.763901699356389  LUMO = 2.65170299825771
  mo_energy =
[-3.26917056e+01 -1.82008679e+00 -7.63901699e-01 -7.63901699e-01
 -7.63901699e-01  2.65170300e+00  2.65170300e+00  2.65170300e+00
  1.98396166e+01  1.98396166e+01  1.98396166e+01  3.62223284e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413768069474  E_coul = 54.4235714239225
Extra cycle  E= -128.030566256772  delta_E= 1.42e-13  |g|= 2.31e-08  |ddm|= 2.42e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.70940977e+03 9.47756193e-01 2.27594048e+02 4.81811637e+01
 1.24720873e+01 1.33284451e+01 6.02871112e-01 2.77858616e+00]
E = -128.03056625677223
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:47:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1709.40976985        1
[INPUT] 0    0    [1    /1   ]  0.947756192601       1
[INPUT] 0    0    [1    /1   ]  227.594048437        1
[INPUT] 0    0    [1    /1   ]  48.1811636549        1
[INPUT] 0    0    [1    /1   ]  12.4720873234        1
[INPUT] 1    0    [1    /1   ]  13.328445124         1
[INPUT] 1    0    [1    /1   ]  0.602871111734       1
[INPUT] 1    0    [1    /1   ]  2.77858615809        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1709.4097698526652, 1.0]], [0, [0.9477561926013917, 1.0]], [0, [227.5940484370997, 1.0]], [0, [48.181163654881686, 1.0]], [0, [12.472087323435128, 1.0]], [1, [13.328445124026716, 1.0]], [1, [0.6028711117336149, 1.0]], [1, [2.7785861580908935, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1709.40976985]
bas 1, expnt(s) = [0.94775619]
bas 2, expnt(s) = [227.59404844]
bas 3, expnt(s) = [48.18116365]
bas 4, expnt(s) = [12.47208732]
bas 5, expnt(s) = [13.32844512]
bas 6, expnt(s) = [0.60287111]
bas 7, expnt(s) = [2.77858616]
CPU time:       407.71
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70940977e+03 6.71660271e+02 9.47756193e-01 2.42681962e+00
 2.27594048e+02 1.48042258e+02 4.81811637e+01 4.62032992e+01
 1.24720873e+01 1.67675412e+01 1.33284451e+01 7.42948573e+01
 6.02871112e-01 1.54976192e+00 2.77858616e+00 1.04656023e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939548303697485
cond(S) = 19.078363755449786
E1 = -182.73421749182907  E_coul = 54.931863265106806
init E= -127.802354226722
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748184989511101  LUMO = 2.66010993853021
  mo_energy =
[-3.25126377e+01 -1.79359321e+00 -7.48184990e-01 -7.48184990e-01
 -7.48184990e-01  2.66010994e+00  2.66010994e+00  2.66010994e+00
  1.99470352e+01  1.99470352e+01  1.99470352e+01  3.63516570e+01
  3.27619781e+02  2.75693350e+03]
E1 = -182.24009801445334  E_coul = 54.21044190453903
cycle= 1 E= -128.029656109914  delta_E= -0.227  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.194172
diis-c [-0.03770262  1.        ]
  HOMO = -0.778012314893363  LUMO = 2.63883059104095
  mo_energy =
[-3.27400132e+01 -1.83615113e+00 -7.78012315e-01 -7.78012315e-01
 -7.78012315e-01  2.63883059e+00  2.63883059e+00  2.63883059e+00
  1.98036958e+01  1.98036958e+01  1.98036958e+01  3.61792090e+01
  3.27355465e+02  2.75660667e+03]
E1 = -182.52089931561372  E_coul = 54.49042068343242
cycle= 2 E= -128.030478632181  delta_E= -0.000823  |g|= 0.035  |ddm|= 0.0366
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0556782
diis-c [-2.31915535e-04  2.16709376e-01  7.83290624e-01]
  HOMO = -0.763473981735981  LUMO = 2.65207559058267
  mo_energy =
[-3.26903844e+01 -1.81963456e+00 -7.63473982e-01 -7.63473982e-01
 -7.63473982e-01  2.65207559e+00  2.65207559e+00  2.65207559e+00
  1.98406353e+01  1.98406353e+01  1.98406353e+01  3.62234387e+01
  3.27409695e+02  2.75666420e+03]
E1 = -182.45216065202266  E_coul = 54.42159447239901
cycle= 3 E= -128.030566179624  delta_E= -8.75e-05  |g|= 0.00102  |ddm|= 0.00908
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00168162
diis-c [-5.79866528e-08 -4.48471897e-03  1.44272025e-02  9.90057516e-01]
  HOMO = -0.76390449819473  LUMO = 2.65170066211773
  mo_energy =
[-3.26917117e+01 -1.82009039e+00 -7.63904498e-01 -7.63904498e-01
 -7.63904498e-01  2.65170066e+00  2.65170066e+00  2.65170066e+00
  1.98396110e+01  1.98396110e+01  1.98396110e+01  3.62223206e+01
  3.27408441e+02  2.75666297e+03]
E1 = -182.4541468894035  E_coul = 54.42358063263331
cycle= 4 E= -128.03056625677  delta_E= -7.71e-08  |g|= 8.07e-06  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.90043e-06
diis-c [-2.32045799e-12  7.75244152e-05 -5.60818581e-04 -2.27508222e-02
  1.02323412e+00]
  HOMO = -0.763901660536125  LUMO = 2.65170303268749
  mo_energy =
[-3.26917055e+01 -1.82008675e+00 -7.63901661e-01 -7.63901661e-01
 -7.63901661e-01  2.65170303e+00  2.65170303e+00  2.65170303e+00
  1.98396167e+01  1.98396167e+01  1.98396167e+01  3.62223285e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413749610913  E_coul = 54.42357123933674
cycle= 5 E= -128.030566256772  delta_E= -2.19e-12  |g|= 7.08e-08  |ddm|= 1.29e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.45413749610913  E_coul = 54.42357123933674
  HOMO = -0.763901699356389  LUMO = 2.65170299825771
  mo_energy =
[-3.26917056e+01 -1.82008679e+00 -7.63901699e-01 -7.63901699e-01
 -7.63901699e-01  2.65170300e+00  2.65170300e+00  2.65170300e+00
  1.98396166e+01  1.98396166e+01  1.98396166e+01  3.62223284e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413768069474  E_coul = 54.4235714239225
Extra cycle  E= -128.030566256772  delta_E= 1.42e-13  |g|= 2.31e-08  |ddm|= 2.42e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.078363755449786
E1 = -182.45413768069474  E_coul = 54.4235714239225
init E= -128.030566256772
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.763901687084324  LUMO = 2.6517030094102
  mo_energy =
[-3.26917056e+01 -1.82008678e+00 -7.63901687e-01 -7.63901687e-01
 -7.63901687e-01  2.65170301e+00  2.65170301e+00  2.65170301e+00
  1.98396166e+01  1.98396166e+01  1.98396166e+01  3.62223284e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413762285781  E_coul = 54.42357136608557
cycle= 1 E= -128.030566256772  delta_E= -2.84e-14  |g|= 7.18e-09  |ddm|= 7.65e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45413762285781  E_coul = 54.42357136608557
  HOMO = -0.763901690933215  LUMO = 2.65170300591102
  mo_energy =
[-3.26917056e+01 -1.82008678e+00 -7.63901691e-01 -7.63901691e-01
 -7.63901691e-01  2.65170301e+00  2.65170301e+00  2.65170301e+00
  1.98396166e+01  1.98396166e+01  1.98396166e+01  3.62223284e+01
  3.27408446e+02  2.75666297e+03]
E1 = -182.45413764103503  E_coul = 54.423571384262615
Extra cycle  E= -128.030566256772  delta_E= -1.71e-13  |g|= 2.26e-09  |ddm|= 2.4e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70940977e+03 9.47756193e-01 2.27594048e+02 4.81811637e+01
 1.24720873e+01 1.33284451e+01 6.02871112e-01 2.77858616e+00]
grad_E = [ 3.74322315e-05  8.58872246e-04 -5.46652005e-05  2.87825623e-04
 -3.13242996e-04 -4.12286009e-05  2.82167765e-03  2.83825298e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1708.08854736        1
[INPUT] 0    0    [1    /1   ]  0.94786171061        1
[INPUT] 0    0    [1    /1   ]  227.35176945         1
[INPUT] 0    0    [1    /1   ]  48.2118315976        1
[INPUT] 0    0    [1    /1   ]  12.4788109908        1
[INPUT] 1    0    [1    /1   ]  13.3314534255        1
[INPUT] 1    0    [1    /1   ]  0.603223049596       1
[INPUT] 1    0    [1    /1   ]  2.7797870459         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1708.0885473633045, 1.0]], [0, [0.9478617106104378, 1.0]], [0, [227.35176945020535, 1.0]], [0, [48.211831597580236, 1.0]], [0, [12.47881099081329, 1.0]], [1, [13.33145342554279, 1.0]], [1, [0.6032230495956368, 1.0]], [1, [2.779787045895663, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1708.08854736]
bas 1, expnt(s) = [0.94786171]
bas 2, expnt(s) = [227.35176945]
bas 3, expnt(s) = [48.2118316]
bas 4, expnt(s) = [12.47881099]
bas 5, expnt(s) = [13.33145343]
bas 6, expnt(s) = [0.60322305]
bas 7, expnt(s) = [2.77978705]
CPU time:       411.90
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70808855e+03 6.71270883e+02 9.47861711e-01 2.42702226e+00
 2.27351769e+02 1.47924046e+02 4.82118316e+01 4.62253542e+01
 1.24788110e+01 1.67743202e+01 1.33314534e+01 7.43158188e+01
 6.03223050e-01 1.55089288e+00 2.77978705e+00 1.04712566e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93946651543186
cond(S) = 19.106518982470444
E1 = -182.73439227104134  E_coul = 54.93226890285068
init E= -127.802123368191
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.748146581576319  LUMO = 2.66193874164821
  mo_energy =
[-3.25125723e+01 -1.79357718e+00 -7.48146582e-01 -7.48146582e-01
 -7.48146582e-01  2.66193874e+00  2.66193874e+00  2.66193874e+00
  1.99550373e+01  1.99550373e+01  1.99550373e+01  3.63860514e+01
  3.27510145e+02  2.75465245e+03]
E1 = -182.24332323198905  E_coul = 54.21363865845986
cycle= 1 E= -128.029684573529  delta_E= -0.228  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.193764
diis-c [-0.03754434  1.        ]
  HOMO = -0.777765700457111  LUMO = 2.64083075319871
  mo_energy =
[-3.27394058e+01 -1.83591053e+00 -7.77765700e-01 -7.77765700e-01
 -7.77765700e-01  2.64083075e+00  2.64083075e+00  2.64083075e+00
  1.98121046e+01  1.98121046e+01  1.98121046e+01  3.62140255e+01
  3.27246463e+02  2.75432646e+03]
E1 = -182.52319620505725  E_coul = 54.49269391528346
cycle= 2 E= -128.030502289774  delta_E= -0.000818  |g|= 0.0349  |ddm|= 0.0365
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0554908
diis-c [-2.32324758e-04  2.16438701e-01  7.83561299e-01]
  HOMO = -0.763271453765859  LUMO = 2.65404176457218
  mo_energy =
[-3.26899199e+01 -1.81944349e+00 -7.63271454e-01 -7.63271454e-01
 -7.63271454e-01  2.65404176e+00  2.65404176e+00  2.65404176e+00
  1.98489385e+01  1.98489385e+01  1.98489385e+01  3.62581347e+01
  3.27300538e+02  2.75438383e+03]
E1 = -182.45469342699576  E_coul = 54.42410420011656
cycle= 3 E= -128.030589226879  delta_E= -8.69e-05  |g|= 0.00102  |ddm|= 0.00905
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00168905
diis-c [-5.80029833e-08 -4.45684178e-03  1.47363071e-02  9.89720535e-01]
  HOMO = -0.763703983810042  LUMO = 2.6536647296577
  mo_energy =
[-3.26912542e+01 -1.81990172e+00 -7.63703984e-01 -7.63703984e-01
 -7.63703984e-01  2.65366473e+00  2.65366473e+00  2.65366473e+00
  1.98479089e+01  1.98479089e+01  1.98479089e+01  3.62570100e+01
  3.27299276e+02  2.75438259e+03]
E1 = -182.45668821171412  E_coul = 54.42609890700047
cycle= 4 E= -128.030589304714  delta_E= -7.78e-08  |g|= 8.05e-06  |ddm|= 0.000264
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=9.86138e-06
diis-c [-2.30407563e-12  7.67011740e-05 -5.68348124e-04 -2.27519459e-02
  1.02324359e+00]
  HOMO = -0.763701164177004  LUMO = 2.65366708875042
  mo_energy =
[-3.26912480e+01 -1.81989810e+00 -7.63701164e-01 -7.63701164e-01
 -7.63701164e-01  2.65366709e+00  2.65366709e+00  2.65366709e+00
  1.98479145e+01  1.98479145e+01  1.98479145e+01  3.62570178e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.45667888523585  E_coul = 54.42608958051994
cycle= 5 E= -128.030589304716  delta_E= -2.25e-12  |g|= 7e-08  |ddm|= 1.28e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.45667888523585  E_coul = 54.42608958051994
  HOMO = -0.763701202529045  LUMO = 2.65366705465242
  mo_energy =
[-3.26912481e+01 -1.81989814e+00 -7.63701203e-01 -7.63701203e-01
 -7.63701203e-01  2.65366705e+00  2.65366705e+00  2.65366705e+00
  1.98479144e+01  1.98479144e+01  1.98479144e+01  3.62570177e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.456679067783  E_coul = 54.426089763067075
Extra cycle  E= -128.030589304716  delta_E= -2.84e-14  |g|= 2.29e-08  |ddm|= 2.39e-08
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.70808855e+03 9.47861711e-01 2.27351769e+02 4.82118316e+01
 1.24788110e+01 1.33314534e+01 6.03223050e-01 2.77978705e+00]
E = -128.03058930471593
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1708.08854736        1
[INPUT] 0    0    [1    /1   ]  0.94786171061        1
[INPUT] 0    0    [1    /1   ]  227.35176945         1
[INPUT] 0    0    [1    /1   ]  48.2118315976        1
[INPUT] 0    0    [1    /1   ]  12.4788109908        1
[INPUT] 1    0    [1    /1   ]  13.3314534255        1
[INPUT] 1    0    [1    /1   ]  0.603223049596       1
[INPUT] 1    0    [1    /1   ]  2.7797870459         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1708.0885473633045, 1.0]], [0, [0.9478617106104378, 1.0]], [0, [227.35176945020535, 1.0]], [0, [48.211831597580236, 1.0]], [0, [12.47881099081329, 1.0]], [1, [13.33145342554279, 1.0]], [1, [0.6032230495956368, 1.0]], [1, [2.779787045895663, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1708.08854736]
bas 1, expnt(s) = [0.94786171]
bas 2, expnt(s) = [227.35176945]
bas 3, expnt(s) = [48.2118316]
bas 4, expnt(s) = [12.47881099]
bas 5, expnt(s) = [13.33145343]
bas 6, expnt(s) = [0.60322305]
bas 7, expnt(s) = [2.77978705]
CPU time:       413.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70808855e+03 6.71270883e+02 9.47861711e-01 2.42702226e+00
 2.27351769e+02 1.47924046e+02 4.82118316e+01 4.62253542e+01
 1.24788110e+01 1.67743202e+01 1.33314534e+01 7.43158188e+01
 6.03223050e-01 1.55089288e+00 2.77978705e+00 1.04712566e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.93946651543186
cond(S) = 19.106518982470444
E1 = -182.73439227104134  E_coul = 54.93226890285068
init E= -127.802123368191
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748146581576319  LUMO = 2.66193874164821
  mo_energy =
[-3.25125723e+01 -1.79357718e+00 -7.48146582e-01 -7.48146582e-01
 -7.48146582e-01  2.66193874e+00  2.66193874e+00  2.66193874e+00
  1.99550373e+01  1.99550373e+01  1.99550373e+01  3.63860514e+01
  3.27510145e+02  2.75465245e+03]
E1 = -182.24332323198905  E_coul = 54.21363865845986
cycle= 1 E= -128.029684573529  delta_E= -0.228  |g|= 0.122  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193764
diis-c [-0.03754434  1.        ]
  HOMO = -0.777765700457111  LUMO = 2.64083075319871
  mo_energy =
[-3.27394058e+01 -1.83591053e+00 -7.77765700e-01 -7.77765700e-01
 -7.77765700e-01  2.64083075e+00  2.64083075e+00  2.64083075e+00
  1.98121046e+01  1.98121046e+01  1.98121046e+01  3.62140255e+01
  3.27246463e+02  2.75432646e+03]
E1 = -182.52319620505725  E_coul = 54.49269391528346
cycle= 2 E= -128.030502289774  delta_E= -0.000818  |g|= 0.0349  |ddm|= 0.0365
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0554908
diis-c [-2.32324758e-04  2.16438701e-01  7.83561299e-01]
  HOMO = -0.763271453765859  LUMO = 2.65404176457218
  mo_energy =
[-3.26899199e+01 -1.81944349e+00 -7.63271454e-01 -7.63271454e-01
 -7.63271454e-01  2.65404176e+00  2.65404176e+00  2.65404176e+00
  1.98489385e+01  1.98489385e+01  1.98489385e+01  3.62581347e+01
  3.27300538e+02  2.75438383e+03]
E1 = -182.45469342699576  E_coul = 54.42410420011656
cycle= 3 E= -128.030589226879  delta_E= -8.69e-05  |g|= 0.00102  |ddm|= 0.00905
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00168905
diis-c [-5.80029833e-08 -4.45684178e-03  1.47363071e-02  9.89720535e-01]
  HOMO = -0.763703983810042  LUMO = 2.6536647296577
  mo_energy =
[-3.26912542e+01 -1.81990172e+00 -7.63703984e-01 -7.63703984e-01
 -7.63703984e-01  2.65366473e+00  2.65366473e+00  2.65366473e+00
  1.98479089e+01  1.98479089e+01  1.98479089e+01  3.62570100e+01
  3.27299276e+02  2.75438259e+03]
E1 = -182.45668821171412  E_coul = 54.42609890700047
cycle= 4 E= -128.030589304714  delta_E= -7.78e-08  |g|= 8.05e-06  |ddm|= 0.000264
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=9.86138e-06
diis-c [-2.30407563e-12  7.67011740e-05 -5.68348124e-04 -2.27519459e-02
  1.02324359e+00]
  HOMO = -0.763701164177004  LUMO = 2.65366708875042
  mo_energy =
[-3.26912480e+01 -1.81989810e+00 -7.63701164e-01 -7.63701164e-01
 -7.63701164e-01  2.65366709e+00  2.65366709e+00  2.65366709e+00
  1.98479145e+01  1.98479145e+01  1.98479145e+01  3.62570178e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.45667888523585  E_coul = 54.42608958051994
cycle= 5 E= -128.030589304716  delta_E= -2.25e-12  |g|= 7e-08  |ddm|= 1.28e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -182.45667888523585  E_coul = 54.42608958051994
  HOMO = -0.763701202529045  LUMO = 2.65366705465242
  mo_energy =
[-3.26912481e+01 -1.81989814e+00 -7.63701203e-01 -7.63701203e-01
 -7.63701203e-01  2.65366705e+00  2.65366705e+00  2.65366705e+00
  1.98479144e+01  1.98479144e+01  1.98479144e+01  3.62570177e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.456679067783  E_coul = 54.426089763067075
Extra cycle  E= -128.030589304716  delta_E= -2.84e-14  |g|= 2.29e-08  |ddm|= 2.39e-08
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.106518982470444
E1 = -182.456679067783  E_coul = 54.426089763067075
init E= -128.030589304716
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.763701190393089  LUMO = 2.65366706568625
  mo_energy =
[-3.26912481e+01 -1.81989813e+00 -7.63701190e-01 -7.63701190e-01
 -7.63701190e-01  2.65366707e+00  2.65366707e+00  2.65366707e+00
  1.98479144e+01  1.98479144e+01  1.98479144e+01  3.62570177e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.45667901061137  E_coul = 54.42608970589558
cycle= 1 E= -128.030589304716  delta_E= 1.42e-13  |g|= 7.1e-09  |ddm|= 7.56e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45667901061137  E_coul = 54.42608970589558
  HOMO = -0.763701194197517  LUMO = 2.65366706222587
  mo_energy =
[-3.26912481e+01 -1.81989813e+00 -7.63701194e-01 -7.63701194e-01
 -7.63701194e-01  2.65366706e+00  2.65366706e+00  2.65366706e+00
  1.98479144e+01  1.98479144e+01  1.98479144e+01  3.62570177e+01
  3.27299281e+02  2.75438259e+03]
E1 = -182.45667902857056  E_coul = 54.426089723854766
Extra cycle  E= -128.030589304716  delta_E=    0  |g|= 2.23e-09  |ddm|= 2.37e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70808855e+03 9.47861711e-01 2.27351769e+02 4.82118316e+01
 1.24788110e+01 1.33314534e+01 6.03223050e-01 2.77978705e+00]
grad_E = [ 3.81390095e-05  1.38964428e-03 -8.38525122e-05  4.67095871e-04
 -5.09925441e-04 -6.55799961e-05  4.41010224e-03  6.09288172e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1704.67544585        1
[INPUT] 0    0    [1    /1   ]  0.948027376586       1
[INPUT] 0    0    [1    /1   ]  226.882159543        1
[INPUT] 0    0    [1    /1   ]  48.2525129873        1
[INPUT] 0    0    [1    /1   ]  12.4885237201        1
[INPUT] 1    0    [1    /1   ]  13.336277429         1
[INPUT] 1    0    [1    /1   ]  0.603785544784       1
[INPUT] 1    0    [1    /1   ]  2.78171016514        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1704.6754458479513, 1.0]], [0, [0.9480273765859821, 1.0]], [0, [226.88215954283302, 1.0]], [0, [48.25251298725131, 1.0]], [0, [12.488523720104606, 1.0]], [1, [13.336277428964632, 1.0]], [1, [0.6037855447842269, 1.0]], [1, [2.7817101651424867, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1704.67544585]
bas 1, expnt(s) = [0.94802738]
bas 2, expnt(s) = [226.88215954]
bas 3, expnt(s) = [48.25251299]
bas 4, expnt(s) = [12.48852372]
bas 5, expnt(s) = [13.33627743]
bas 6, expnt(s) = [0.60378554]
bas 7, expnt(s) = [2.78171017]
CPU time:       417.25
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70467545e+03 6.70264632e+02 9.48027377e-01 2.42734040e+00
 2.26882160e+02 1.47694827e+02 4.82525130e+01 4.62546050e+01
 1.24885237e+01 1.67841113e+01 1.33362774e+01 7.43494344e+01
 6.03785545e-01 1.55270082e+00 2.78171017e+00 1.04803127e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939336311890576
cond(S) = 19.159647535775477
E1 = -182.73472241453234  E_coul = 54.93292749342582
init E= -127.801794921107
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748084490099642  LUMO = 2.66486422293375
  mo_energy =
[-3.25124782e+01 -1.79354985e+00 -7.48084490e-01 -7.48084490e-01
 -7.48084490e-01  2.66486422e+00  2.66486422e+00  2.66486422e+00
  1.99678592e+01  1.99678592e+01  1.99678592e+01  3.64342178e+01
  3.27228926e+02  2.74911063e+03]
E1 = -182.2484681314666  E_coul = 54.21871506944359
cycle= 1 E= -128.029753062023  delta_E= -0.228  |g|= 0.121  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193124
diis-c [-0.03729701  1.        ]
  HOMO = -0.777373927199772  LUMO = 2.64402743639505
  mo_energy =
[-3.27384558e+01 -1.83552632e+00 -7.77373927e-01 -7.77373927e-01
 -7.77373927e-01  2.64402744e+00  2.64402744e+00  2.64402744e+00
  1.98255681e+01  1.98255681e+01  1.98255681e+01  3.62628687e+01
  3.26966253e+02  2.74878598e+03]
E1 = -182.52688123070246  E_coul = 54.4963179797419
cycle= 2 E= -128.030563250961  delta_E= -0.00081  |g|= 0.0347  |ddm|= 0.0363
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0551966
diis-c [-2.32910030e-04  2.16011321e-01  7.83988679e-01]
  HOMO = -0.762949064441468  LUMO = 2.65718503642944
  mo_energy =
[-3.26891944e+01 -1.81913726e+00 -7.62949064e-01 -7.62949064e-01
 -7.62949064e-01  2.65718504e+00  2.65718504e+00  2.65718504e+00
  1.98622358e+01  1.98622358e+01  1.98622358e+01  3.63067867e+01
  3.27020082e+02  2.74884309e+03]
E1 = -182.4587493682951  E_coul = 54.42810013498561
cycle= 3 E= -128.030649233309  delta_E= -8.6e-05  |g|= 0.00103  |ddm|= 0.009
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00170069
diis-c [-5.80346032e-08 -4.41407222e-03  1.52204704e-02  9.89193602e-01]
  HOMO = -0.763384735374298  LUMO = 2.65680470451823
  mo_energy =
[-3.26905396e+01 -1.81959924e+00 -7.63384735e-01 -7.63384735e-01
 -7.63384735e-01  2.65680470e+00  2.65680470e+00  2.65680470e+00
  1.98611978e+01  1.98611978e+01  1.98611978e+01  3.63056516e+01
  3.27018808e+02  2.74884184e+03]
E1 = -182.46075747398731  E_coul = 54.43010816176291
cycle= 4 E= -128.030649312224  delta_E= -7.89e-08  |g|= 8.02e-06  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.80104e-06
diis-c [-2.27776659e-12  7.54532188e-05 -5.80194276e-04 -2.27575314e-02
  1.02326227e+00]
  HOMO = -0.763381943656369  LUMO = 2.65680704578965
  mo_energy =
[-3.26905334e+01 -1.81959566e+00 -7.63381944e-01 -7.63381944e-01
 -7.63381944e-01  2.65680705e+00  2.65680705e+00  2.65680705e+00
  1.98612034e+01  1.98612034e+01  1.98612034e+01  3.63056593e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.4607482516147  E_coul = 54.4300989393882
cycle= 5 E= -128.030649312227  delta_E= -2.1e-12  |g|= 6.9e-08  |ddm|= 1.27e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4607482516147  E_coul = 54.4300989393882
  HOMO = -0.763381981331977  LUMO = 2.65680701216343
  mo_energy =
[-3.26905335e+01 -1.81959570e+00 -7.63381981e-01 -7.63381981e-01
 -7.63381981e-01  2.65680701e+00  2.65680701e+00  2.65680701e+00
  1.98612033e+01  1.98612033e+01  1.98612033e+01  3.63056592e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.4607484312138  E_coul = 54.430099118987364
Extra cycle  E= -128.030649312226  delta_E= 5.68e-14  |g|= 2.25e-08  |ddm|= 2.35e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.70467545e+03 9.48027377e-01 2.26882160e+02 4.82525130e+01
 1.24885237e+01 1.33362774e+01 6.03785545e-01 2.78171017e+00]
E = -128.03064931222644
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1704.67544585        1
[INPUT] 0    0    [1    /1   ]  0.948027376586       1
[INPUT] 0    0    [1    /1   ]  226.882159543        1
[INPUT] 0    0    [1    /1   ]  48.2525129873        1
[INPUT] 0    0    [1    /1   ]  12.4885237201        1
[INPUT] 1    0    [1    /1   ]  13.336277429         1
[INPUT] 1    0    [1    /1   ]  0.603785544784       1
[INPUT] 1    0    [1    /1   ]  2.78171016514        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1704.6754458479513, 1.0]], [0, [0.9480273765859821, 1.0]], [0, [226.88215954283302, 1.0]], [0, [48.25251298725131, 1.0]], [0, [12.488523720104606, 1.0]], [1, [13.336277428964632, 1.0]], [1, [0.6037855447842269, 1.0]], [1, [2.7817101651424867, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1704.67544585]
bas 1, expnt(s) = [0.94802738]
bas 2, expnt(s) = [226.88215954]
bas 3, expnt(s) = [48.25251299]
bas 4, expnt(s) = [12.48852372]
bas 5, expnt(s) = [13.33627743]
bas 6, expnt(s) = [0.60378554]
bas 7, expnt(s) = [2.78171017]
CPU time:       418.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.70467545e+03 6.70264632e+02 9.48027377e-01 2.42734040e+00
 2.26882160e+02 1.47694827e+02 4.82525130e+01 4.62546050e+01
 1.24885237e+01 1.67841113e+01 1.33362774e+01 7.43494344e+01
 6.03785545e-01 1.55270082e+00 2.78171017e+00 1.04803127e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939336311890576
cond(S) = 19.159647535775477
E1 = -182.73472241453234  E_coul = 54.93292749342582
init E= -127.801794921107
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.748084490099642  LUMO = 2.66486422293375
  mo_energy =
[-3.25124782e+01 -1.79354985e+00 -7.48084490e-01 -7.48084490e-01
 -7.48084490e-01  2.66486422e+00  2.66486422e+00  2.66486422e+00
  1.99678592e+01  1.99678592e+01  1.99678592e+01  3.64342178e+01
  3.27228926e+02  2.74911063e+03]
E1 = -182.2484681314666  E_coul = 54.21871506944359
cycle= 1 E= -128.029753062023  delta_E= -0.228  |g|= 0.121  |ddm|= 0.217
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.193124
diis-c [-0.03729701  1.        ]
  HOMO = -0.777373927199772  LUMO = 2.64402743639505
  mo_energy =
[-3.27384558e+01 -1.83552632e+00 -7.77373927e-01 -7.77373927e-01
 -7.77373927e-01  2.64402744e+00  2.64402744e+00  2.64402744e+00
  1.98255681e+01  1.98255681e+01  1.98255681e+01  3.62628687e+01
  3.26966253e+02  2.74878598e+03]
E1 = -182.52688123070246  E_coul = 54.4963179797419
cycle= 2 E= -128.030563250961  delta_E= -0.00081  |g|= 0.0347  |ddm|= 0.0363
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0551966
diis-c [-2.32910030e-04  2.16011321e-01  7.83988679e-01]
  HOMO = -0.762949064441468  LUMO = 2.65718503642944
  mo_energy =
[-3.26891944e+01 -1.81913726e+00 -7.62949064e-01 -7.62949064e-01
 -7.62949064e-01  2.65718504e+00  2.65718504e+00  2.65718504e+00
  1.98622358e+01  1.98622358e+01  1.98622358e+01  3.63067867e+01
  3.27020082e+02  2.74884309e+03]
E1 = -182.4587493682951  E_coul = 54.42810013498561
cycle= 3 E= -128.030649233309  delta_E= -8.6e-05  |g|= 0.00103  |ddm|= 0.009
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00170069
diis-c [-5.80346032e-08 -4.41407222e-03  1.52204704e-02  9.89193602e-01]
  HOMO = -0.763384735374298  LUMO = 2.65680470451823
  mo_energy =
[-3.26905396e+01 -1.81959924e+00 -7.63384735e-01 -7.63384735e-01
 -7.63384735e-01  2.65680470e+00  2.65680470e+00  2.65680470e+00
  1.98611978e+01  1.98611978e+01  1.98611978e+01  3.63056516e+01
  3.27018808e+02  2.74884184e+03]
E1 = -182.46075747398731  E_coul = 54.43010816176291
cycle= 4 E= -128.030649312224  delta_E= -7.89e-08  |g|= 8.02e-06  |ddm|= 0.000265
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=9.80104e-06
diis-c [-2.27776659e-12  7.54532188e-05 -5.80194276e-04 -2.27575314e-02
  1.02326227e+00]
  HOMO = -0.763381943656369  LUMO = 2.65680704578965
  mo_energy =
[-3.26905334e+01 -1.81959566e+00 -7.63381944e-01 -7.63381944e-01
 -7.63381944e-01  2.65680705e+00  2.65680705e+00  2.65680705e+00
  1.98612034e+01  1.98612034e+01  1.98612034e+01  3.63056593e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.4607482516147  E_coul = 54.4300989393882
cycle= 5 E= -128.030649312227  delta_E= -2.1e-12  |g|= 6.9e-08  |ddm|= 1.27e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4607482516147  E_coul = 54.4300989393882
  HOMO = -0.763381981331977  LUMO = 2.65680701216343
  mo_energy =
[-3.26905335e+01 -1.81959570e+00 -7.63381981e-01 -7.63381981e-01
 -7.63381981e-01  2.65680701e+00  2.65680701e+00  2.65680701e+00
  1.98612033e+01  1.98612033e+01  1.98612033e+01  3.63056592e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.4607484312138  E_coul = 54.430099118987364
Extra cycle  E= -128.030649312226  delta_E= 5.68e-14  |g|= 2.25e-08  |ddm|= 2.35e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.159647535775477
E1 = -182.4607484312138  E_coul = 54.430099118987364
init E= -128.030649312226
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.763381969392957  LUMO = 2.65680702302611
  mo_energy =
[-3.26905335e+01 -1.81959568e+00 -7.63381969e-01 -7.63381969e-01
 -7.63381969e-01  2.65680702e+00  2.65680702e+00  2.65680702e+00
  1.98612034e+01  1.98612034e+01  1.98612034e+01  3.63056593e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.46074837500663  E_coul = 54.43009906278016
cycle= 1 E= -128.030649312226  delta_E= -2.84e-14  |g|= 6.98e-09  |ddm|= 7.43e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46074837500663  E_coul = 54.43009906278016
  HOMO = -0.763381973132925  LUMO = 2.65680701962185
  mo_energy =
[-3.26905335e+01 -1.81959569e+00 -7.63381973e-01 -7.63381973e-01
 -7.63381973e-01  2.65680702e+00  2.65680702e+00  2.65680702e+00
  1.98612033e+01  1.98612033e+01  1.98612033e+01  3.63056592e+01
  3.27018812e+02  2.74884184e+03]
E1 = -182.46074839264958  E_coul = 54.430099080423105
Extra cycle  E= -128.030649312226  delta_E=    0  |g|= 2.19e-09  |ddm|= 2.33e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.70467545e+03 9.48027377e-01 2.26882160e+02 4.82525130e+01
 1.24885237e+01 1.33362774e+01 6.03785545e-01 2.78171017e+00]
grad_E = [ 3.92090628e-05  2.23879032e-03 -1.30660776e-04  7.54537307e-04
 -8.25709384e-04 -1.04458366e-04  6.93843591e-03  1.14546578e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1695.88408528        1
[INPUT] 0    0    [1    /1   ]  0.948280750148       1
[INPUT] 0    0    [1    /1   ]  225.928651618        1
[INPUT] 0    0    [1    /1   ]  48.2950971035        1
[INPUT] 0    0    [1    /1   ]  12.5011789633        1
[INPUT] 1    0    [1    /1   ]  13.3439197597        1
[INPUT] 1    0    [1    /1   ]  0.604674973614       1
[INPUT] 1    0    [1    /1   ]  2.78475633725        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1695.8840852771534, 1.0]], [0, [0.9482807501475775, 1.0]], [0, [225.9286516181116, 1.0]], [0, [48.29509710345495, 1.0]], [0, [12.501178963341076, 1.0]], [1, [13.343919759740869, 1.0]], [1, [0.6046749736144231, 1.0]], [1, [2.7847563372517268, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1695.88408528]
bas 1, expnt(s) = [0.94828075]
bas 2, expnt(s) = [225.92865162]
bas 3, expnt(s) = [48.2950971]
bas 4, expnt(s) = [12.50117896]
bas 5, expnt(s) = [13.34391976]
bas 6, expnt(s) = [0.60467497]
bas 7, expnt(s) = [2.78475634]
CPU time:       422.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.69588409e+03 6.67670438e+02 9.48280750e-01 2.42782693e+00
 2.25928652e+02 1.47229049e+02 4.82950971e+01 4.62852173e+01
 1.25011790e+01 1.67968658e+01 1.33439198e+01 7.44026955e+01
 6.04674974e-01 1.55556042e+00 2.78475634e+00 1.04946605e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939131929192287
cond(S) = 19.265062242946716
E1 = -182.73537968583565  E_coul = 54.93399256431292
init E= -127.801387121523
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.747984693099067  LUMO = 2.66949443816674
  mo_energy =
[-3.25123575e+01 -1.79350229e+00 -7.47984693e-01 -7.47984693e-01
 -7.47984693e-01  2.66949444e+00  2.66949444e+00  2.66949444e+00
  1.99881750e+01  1.99881750e+01  1.99881750e+01  3.64925443e+01
  3.26511635e+02  2.73541757e+03]
E1 = -182.25657767718937  E_coul = 54.226656544174894
cycle= 1 E= -128.029921133014  delta_E= -0.229  |g|= 0.121  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.192145
diis-c [-0.03691956  1.        ]
  HOMO = -0.776760615242333  LUMO = 2.64907975468572
  mo_energy =
[-3.27370073e+01 -1.83491936e+00 -7.76760615e-01 -7.76760615e-01
 -7.76760615e-01  2.64907975e+00  2.64907975e+00  2.64907975e+00
  1.98468767e+01  1.98468767e+01  1.98468767e+01  3.63222708e+01
  3.26250548e+02  2.73509503e+03]
E1 = -182.53274309978423  E_coul = 54.502023291962786
cycle= 2 E= -128.030719807821  delta_E= -0.000799  |g|= 0.0345  |ddm|= 0.036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0547453
diis-c [-2.33638318e-04  2.15351690e-01  7.84648310e-01]
  HOMO = -0.762442756590868  LUMO = 2.66215517529485
  mo_energy =
[-3.26880919e+01 -1.81865071e+00 -7.62442757e-01 -7.62442757e-01
 -7.62442757e-01  2.66215518e+00  2.66215518e+00  2.66215518e+00
  1.98832885e+01  1.98832885e+01  1.98832885e+01  3.63658902e+01
  3.26303996e+02  2.73515175e+03]
E1 = -182.4651824906472  E_coul = 54.434378158357575
cycle= 3 E= -128.03080433229  delta_E= -8.45e-05  |g|= 0.00104  |ddm|= 0.00892
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00171834
diis-c [-5.80957988e-08 -4.35143047e-03  1.59559621e-02  9.88395468e-01]
  HOMO = -0.762883153232844  LUMO = 2.66176984850479
  mo_energy =
[-3.26894535e+01 -1.81911831e+00 -7.62883153e-01 -7.62883153e-01
 -7.62883153e-01  2.66176985e+00  2.66176985e+00  2.66176985e+00
  1.98822380e+01  1.98822380e+01  1.98822380e+01  3.63647395e+01
  3.26302702e+02  2.73515048e+03]
E1 = -182.4672105944498  E_coul = 54.43640618160303
cycle= 4 E= -128.030804412847  delta_E= -8.06e-08  |g|= 7.99e-06  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.71186e-06
diis-c [-2.23599755e-12  7.36596918e-05 -5.98362180e-04 -2.27755707e-02
  1.02330027e+00]
  HOMO = -0.762880402958511  LUMO = 2.66177216327926
  mo_energy =
[-3.26894474e+01 -1.81911476e+00 -7.62880403e-01 -7.62880403e-01
 -7.62880403e-01  2.66177216e+00  2.66177216e+00  2.66177216e+00
  1.98822435e+01  1.98822435e+01  1.98822435e+01  3.63647472e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.46720152821308  E_coul = 54.43639711536425
cycle= 5 E= -128.030804412849  delta_E= -2.07e-12  |g|= 6.77e-08  |ddm|= 1.25e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46720152821308  E_coul = 54.43639711536425
  HOMO = -0.76288043975084  LUMO = 2.66177213024694
  mo_energy =
[-3.26894475e+01 -1.81911480e+00 -7.62880440e-01 -7.62880440e-01
 -7.62880440e-01  2.66177213e+00  2.66177213e+00  2.66177213e+00
  1.98822434e+01  1.98822434e+01  1.98822434e+01  3.63647471e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.46720170395267  E_coul = 54.43639729110384
Extra cycle  E= -128.030804412849  delta_E=    0  |g|= 2.2e-08  |ddm|= 2.3e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.69588409e+03 9.48280750e-01 2.25928652e+02 4.82950971e+01
 1.25011790e+01 1.33439198e+01 6.04674974e-01 2.78475634e+00]
E = -128.03080441284882
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1695.88408528        1
[INPUT] 0    0    [1    /1   ]  0.948280750148       1
[INPUT] 0    0    [1    /1   ]  225.928651618        1
[INPUT] 0    0    [1    /1   ]  48.2950971035        1
[INPUT] 0    0    [1    /1   ]  12.5011789633        1
[INPUT] 1    0    [1    /1   ]  13.3439197597        1
[INPUT] 1    0    [1    /1   ]  0.604674973614       1
[INPUT] 1    0    [1    /1   ]  2.78475633725        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1695.8840852771534, 1.0]], [0, [0.9482807501475775, 1.0]], [0, [225.9286516181116, 1.0]], [0, [48.29509710345495, 1.0]], [0, [12.501178963341076, 1.0]], [1, [13.343919759740869, 1.0]], [1, [0.6046749736144231, 1.0]], [1, [2.7847563372517268, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1695.88408528]
bas 1, expnt(s) = [0.94828075]
bas 2, expnt(s) = [225.92865162]
bas 3, expnt(s) = [48.2950971]
bas 4, expnt(s) = [12.50117896]
bas 5, expnt(s) = [13.34391976]
bas 6, expnt(s) = [0.60467497]
bas 7, expnt(s) = [2.78475634]
CPU time:       423.64
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.69588409e+03 6.67670438e+02 9.48280750e-01 2.42782693e+00
 2.25928652e+02 1.47229049e+02 4.82950971e+01 4.62852173e+01
 1.25011790e+01 1.67968658e+01 1.33439198e+01 7.44026955e+01
 6.04674974e-01 1.55556042e+00 2.78475634e+00 1.04946605e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.939131929192287
cond(S) = 19.265062242946716
E1 = -182.73537968583565  E_coul = 54.93399256431292
init E= -127.801387121523
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.747984693099067  LUMO = 2.66949443816674
  mo_energy =
[-3.25123575e+01 -1.79350229e+00 -7.47984693e-01 -7.47984693e-01
 -7.47984693e-01  2.66949444e+00  2.66949444e+00  2.66949444e+00
  1.99881750e+01  1.99881750e+01  1.99881750e+01  3.64925443e+01
  3.26511635e+02  2.73541757e+03]
E1 = -182.25657767718937  E_coul = 54.226656544174894
cycle= 1 E= -128.029921133014  delta_E= -0.229  |g|= 0.121  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.192145
diis-c [-0.03691956  1.        ]
  HOMO = -0.776760615242333  LUMO = 2.64907975468572
  mo_energy =
[-3.27370073e+01 -1.83491936e+00 -7.76760615e-01 -7.76760615e-01
 -7.76760615e-01  2.64907975e+00  2.64907975e+00  2.64907975e+00
  1.98468767e+01  1.98468767e+01  1.98468767e+01  3.63222708e+01
  3.26250548e+02  2.73509503e+03]
E1 = -182.53274309978423  E_coul = 54.502023291962786
cycle= 2 E= -128.030719807821  delta_E= -0.000799  |g|= 0.0345  |ddm|= 0.036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0547453
diis-c [-2.33638318e-04  2.15351690e-01  7.84648310e-01]
  HOMO = -0.762442756590868  LUMO = 2.66215517529485
  mo_energy =
[-3.26880919e+01 -1.81865071e+00 -7.62442757e-01 -7.62442757e-01
 -7.62442757e-01  2.66215518e+00  2.66215518e+00  2.66215518e+00
  1.98832885e+01  1.98832885e+01  1.98832885e+01  3.63658902e+01
  3.26303996e+02  2.73515175e+03]
E1 = -182.4651824906472  E_coul = 54.434378158357575
cycle= 3 E= -128.03080433229  delta_E= -8.45e-05  |g|= 0.00104  |ddm|= 0.00892
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00171834
diis-c [-5.80957988e-08 -4.35143047e-03  1.59559621e-02  9.88395468e-01]
  HOMO = -0.762883153232844  LUMO = 2.66176984850479
  mo_energy =
[-3.26894535e+01 -1.81911831e+00 -7.62883153e-01 -7.62883153e-01
 -7.62883153e-01  2.66176985e+00  2.66176985e+00  2.66176985e+00
  1.98822380e+01  1.98822380e+01  1.98822380e+01  3.63647395e+01
  3.26302702e+02  2.73515048e+03]
E1 = -182.4672105944498  E_coul = 54.43640618160303
cycle= 4 E= -128.030804412847  delta_E= -8.06e-08  |g|= 7.99e-06  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.71186e-06
diis-c [-2.23599755e-12  7.36596918e-05 -5.98362180e-04 -2.27755707e-02
  1.02330027e+00]
  HOMO = -0.762880402958511  LUMO = 2.66177216327926
  mo_energy =
[-3.26894474e+01 -1.81911476e+00 -7.62880403e-01 -7.62880403e-01
 -7.62880403e-01  2.66177216e+00  2.66177216e+00  2.66177216e+00
  1.98822435e+01  1.98822435e+01  1.98822435e+01  3.63647472e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.46720152821308  E_coul = 54.43639711536425
cycle= 5 E= -128.030804412849  delta_E= -2.07e-12  |g|= 6.77e-08  |ddm|= 1.25e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46720152821308  E_coul = 54.43639711536425
  HOMO = -0.76288043975084  LUMO = 2.66177213024694
  mo_energy =
[-3.26894475e+01 -1.81911480e+00 -7.62880440e-01 -7.62880440e-01
 -7.62880440e-01  2.66177213e+00  2.66177213e+00  2.66177213e+00
  1.98822434e+01  1.98822434e+01  1.98822434e+01  3.63647471e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.46720170395267  E_coul = 54.43639729110384
Extra cycle  E= -128.030804412849  delta_E=    0  |g|= 2.2e-08  |ddm|= 2.3e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.265062242946716
E1 = -182.46720170395267  E_coul = 54.43639729110384
init E= -128.030804412849
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.762880428070067  LUMO = 2.66177214088692
  mo_energy =
[-3.26894475e+01 -1.81911479e+00 -7.62880428e-01 -7.62880428e-01
 -7.62880428e-01  2.66177214e+00  2.66177214e+00  2.66177214e+00
  1.98822434e+01  1.98822434e+01  1.98822434e+01  3.63647471e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.46720164901498  E_coul = 54.43639723616623
cycle= 1 E= -128.030804412849  delta_E= 8.53e-14  |g|= 6.82e-09  |ddm|= 7.27e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46720164901498  E_coul = 54.43639723616623
  HOMO = -0.762880431725086  LUMO = 2.66177213755607
  mo_energy =
[-3.26894475e+01 -1.81911479e+00 -7.62880432e-01 -7.62880432e-01
 -7.62880432e-01  2.66177214e+00  2.66177214e+00  2.66177214e+00
  1.98822434e+01  1.98822434e+01  1.98822434e+01  3.63647471e+01
  3.26302707e+02  2.73515048e+03]
E1 = -182.4672016662389  E_coul = 54.43639725339021
Extra cycle  E= -128.030804412849  delta_E= 5.68e-14  |g|= 2.14e-09  |ddm|= 2.27e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.69588409e+03 9.48280750e-01 2.25928652e+02 4.82950971e+01
 1.25011790e+01 1.33439198e+01 6.04674974e-01 2.78475634e+00]
grad_E = [ 4.07376146e-05  3.58028200e-03 -2.04861142e-04  1.21017597e-03
 -1.32738837e-03 -1.65824633e-04  1.09170811e-02  2.01509713e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1673.55701682        1
[INPUT] 0    0    [1    /1   ]  0.948646564928       1
[INPUT] 0    0    [1    /1   ]  223.923598193        1
[INPUT] 0    0    [1    /1   ]  48.304060077         1
[INPUT] 0    0    [1    /1   ]  12.5136070374        1
[INPUT] 1    0    [1    /1   ]  13.3556623506        1
[INPUT] 1    0    [1    /1   ]  0.606039459243       1
[INPUT] 1    0    [1    /1   ]  2.7894398256         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1673.5570168193697, 1.0]], [0, [0.9486465649284502, 1.0]], [0, [223.9235981927943, 1.0]], [0, [48.30406007699994, 1.0]], [0, [12.513607037362258, 1.0]], [1, [13.355662350639761, 1.0]], [1, [0.6060394592428839, 1.0]], [1, [2.7894398256039574, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1673.55701682]
bas 1, expnt(s) = [0.94864656]
bas 2, expnt(s) = [223.92359819]
bas 3, expnt(s) = [48.30406008]
bas 4, expnt(s) = [12.51360704]
bas 5, expnt(s) = [13.35566235]
bas 6, expnt(s) = [0.60603946]
bas 7, expnt(s) = [2.78943983]
CPU time:       427.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.67355702e+03 6.61066895e+02 9.48646565e-01 2.42852933e+00
 2.23923598e+02 1.46247996e+02 4.83040601e+01 4.62916596e+01
 1.25136070e+01 1.68093883e+01 1.33556624e+01 7.44845471e+01
 6.06039459e-01 1.55994943e+00 2.78943983e+00 1.05167279e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.938822582216755
cond(S) = 19.484590835888255
E1 = -182.7367568789366  E_coul = 54.935684085577655
init E= -127.801072793359
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.747827718623977  LUMO = 2.67660711915738
  mo_energy =
[-3.25122457e+01 -1.79341789e+00 -7.47827719e-01 -7.47827719e-01
 -7.47827719e-01  2.67660712e+00  2.67660712e+00  2.67660712e+00
  2.00194176e+01  2.00194176e+01  2.00194176e+01  3.65356512e+01
  3.24710030e+02  2.70161217e+03]
E1 = -182.26894951746272  E_coul = 54.23861621785138
cycle= 1 E= -128.030333299611  delta_E= -0.229  |g|= 0.119  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.190716
diis-c [-0.03637266  1.        ]
  HOMO = -0.775835901037108  LUMO = 2.65682244704373
  mo_energy =
[-3.27349252e+01 -1.83398932e+00 -7.75835901e-01 -7.75835901e-01
 -7.75835901e-01  2.65682245e+00  2.65682245e+00  2.65682245e+00
  1.98795870e+01  1.98795870e+01  1.98795870e+01  3.63670420e+01
  3.24451347e+02  2.70129287e+03]
E1 = -182.5418220558317  E_coul = 54.510706775434116
cycle= 2 E= -128.031115280398  delta_E= -0.000782  |g|= 0.034  |ddm|= 0.0356
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0540882
diis-c [-2.34179224e-04  2.14391303e-01  7.85608697e-01]
  HOMO = -0.761675392102045  LUMO = 2.66977755197711
  mo_energy =
[-3.26865174e+01 -1.81789808e+00 -7.61675392e-01 -7.61675392e-01
 -7.61675392e-01  2.66977755e+00  2.66977755e+00  2.66977755e+00
  1.99156233e+01  1.99156233e+01  1.99156233e+01  3.64102126e+01
  3.24504228e+02  2.70134901e+03]
E1 = -182.47509974275147  E_coul = 54.44390204691346
cycle= 3 E= -128.031197695838  delta_E= -8.24e-05  |g|= 0.00106  |ddm|= 0.00882
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00174294
diis-c [-5.82096672e-08 -4.26892680e-03  1.69920154e-02  9.87276911e-01]
  HOMO = -0.76212228727168  LUMO = 2.66938524856206
  mo_energy =
[-3.26879017e+01 -1.81837335e+00 -7.62122287e-01 -7.62122287e-01
 -7.62122287e-01  2.66938525e+00  2.66938525e+00  2.66938525e+00
  1.99145554e+01  1.99145554e+01  1.99145554e+01  3.64090406e+01
  3.24502908e+02  2.70134772e+03]
E1 = -182.4771551818306  E_coul = 54.445957403146174
cycle= 4 E= -128.031197778684  delta_E= -8.28e-08  |g|= 7.94e-06  |ddm|= 0.000272
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.59241e-06
diis-c [-2.17234288e-12  7.13660757e-05 -6.24520344e-04 -2.28247681e-02
  1.02337792e+00]
  HOMO = -0.762119592883915  LUMO = 2.66938752772509
  mo_energy =
[-3.26878957e+01 -1.81836985e+00 -7.62119593e-01 -7.62119593e-01
 -7.62119593e-01  2.66938753e+00  2.66938753e+00  2.66938753e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090482e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.4771463301918  E_coul = 54.445948551505374
cycle= 5 E= -128.031197778686  delta_E= -1.99e-12  |g|= 6.65e-08  |ddm|= 1.23e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4771463301918  E_coul = 54.445948551505374
  HOMO = -0.762119628797672  LUMO = 2.66938749521178
  mo_energy =
[-3.26878958e+01 -1.81836989e+00 -7.62119629e-01 -7.62119629e-01
 -7.62119629e-01  2.66938750e+00  2.66938750e+00  2.66938750e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090481e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.47714650205435  E_coul = 54.44594872336817
Extra cycle  E= -128.031197778686  delta_E= 2.27e-13  |g|= 2.16e-08  |ddm|= 2.25e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.67355702e+03 9.48646565e-01 2.23923598e+02 4.83040601e+01
 1.25136070e+01 1.33556624e+01 6.06039459e-01 2.78943983e+00]
E = -128.0311977786862
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1673.55701682        1
[INPUT] 0    0    [1    /1   ]  0.948646564928       1
[INPUT] 0    0    [1    /1   ]  223.923598193        1
[INPUT] 0    0    [1    /1   ]  48.304060077         1
[INPUT] 0    0    [1    /1   ]  12.5136070374        1
[INPUT] 1    0    [1    /1   ]  13.3556623506        1
[INPUT] 1    0    [1    /1   ]  0.606039459243       1
[INPUT] 1    0    [1    /1   ]  2.7894398256         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1673.5570168193697, 1.0]], [0, [0.9486465649284502, 1.0]], [0, [223.9235981927943, 1.0]], [0, [48.30406007699994, 1.0]], [0, [12.513607037362258, 1.0]], [1, [13.355662350639761, 1.0]], [1, [0.6060394592428839, 1.0]], [1, [2.7894398256039574, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1673.55701682]
bas 1, expnt(s) = [0.94864656]
bas 2, expnt(s) = [223.92359819]
bas 3, expnt(s) = [48.30406008]
bas 4, expnt(s) = [12.51360704]
bas 5, expnt(s) = [13.35566235]
bas 6, expnt(s) = [0.60603946]
bas 7, expnt(s) = [2.78943983]
CPU time:       428.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.67355702e+03 6.61066895e+02 9.48646565e-01 2.42852933e+00
 2.23923598e+02 1.46247996e+02 4.83040601e+01 4.62916596e+01
 1.25136070e+01 1.68093883e+01 1.33556624e+01 7.44845471e+01
 6.06039459e-01 1.55994943e+00 2.78943983e+00 1.05167279e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.938822582216755
cond(S) = 19.484590835888255
E1 = -182.7367568789366  E_coul = 54.935684085577655
init E= -127.801072793359
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.747827718623977  LUMO = 2.67660711915738
  mo_energy =
[-3.25122457e+01 -1.79341789e+00 -7.47827719e-01 -7.47827719e-01
 -7.47827719e-01  2.67660712e+00  2.67660712e+00  2.67660712e+00
  2.00194176e+01  2.00194176e+01  2.00194176e+01  3.65356512e+01
  3.24710030e+02  2.70161217e+03]
E1 = -182.26894951746272  E_coul = 54.23861621785138
cycle= 1 E= -128.030333299611  delta_E= -0.229  |g|= 0.119  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.190716
diis-c [-0.03637266  1.        ]
  HOMO = -0.775835901037108  LUMO = 2.65682244704373
  mo_energy =
[-3.27349252e+01 -1.83398932e+00 -7.75835901e-01 -7.75835901e-01
 -7.75835901e-01  2.65682245e+00  2.65682245e+00  2.65682245e+00
  1.98795870e+01  1.98795870e+01  1.98795870e+01  3.63670420e+01
  3.24451347e+02  2.70129287e+03]
E1 = -182.5418220558317  E_coul = 54.510706775434116
cycle= 2 E= -128.031115280398  delta_E= -0.000782  |g|= 0.034  |ddm|= 0.0356
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0540882
diis-c [-2.34179224e-04  2.14391303e-01  7.85608697e-01]
  HOMO = -0.761675392102045  LUMO = 2.66977755197711
  mo_energy =
[-3.26865174e+01 -1.81789808e+00 -7.61675392e-01 -7.61675392e-01
 -7.61675392e-01  2.66977755e+00  2.66977755e+00  2.66977755e+00
  1.99156233e+01  1.99156233e+01  1.99156233e+01  3.64102126e+01
  3.24504228e+02  2.70134901e+03]
E1 = -182.47509974275147  E_coul = 54.44390204691346
cycle= 3 E= -128.031197695838  delta_E= -8.24e-05  |g|= 0.00106  |ddm|= 0.00882
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00174294
diis-c [-5.82096672e-08 -4.26892680e-03  1.69920154e-02  9.87276911e-01]
  HOMO = -0.76212228727168  LUMO = 2.66938524856206
  mo_energy =
[-3.26879017e+01 -1.81837335e+00 -7.62122287e-01 -7.62122287e-01
 -7.62122287e-01  2.66938525e+00  2.66938525e+00  2.66938525e+00
  1.99145554e+01  1.99145554e+01  1.99145554e+01  3.64090406e+01
  3.24502908e+02  2.70134772e+03]
E1 = -182.4771551818306  E_coul = 54.445957403146174
cycle= 4 E= -128.031197778684  delta_E= -8.28e-08  |g|= 7.94e-06  |ddm|= 0.000272
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.59241e-06
diis-c [-2.17234288e-12  7.13660757e-05 -6.24520344e-04 -2.28247681e-02
  1.02337792e+00]
  HOMO = -0.762119592883915  LUMO = 2.66938752772509
  mo_energy =
[-3.26878957e+01 -1.81836985e+00 -7.62119593e-01 -7.62119593e-01
 -7.62119593e-01  2.66938753e+00  2.66938753e+00  2.66938753e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090482e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.4771463301918  E_coul = 54.445948551505374
cycle= 5 E= -128.031197778686  delta_E= -1.99e-12  |g|= 6.65e-08  |ddm|= 1.23e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4771463301918  E_coul = 54.445948551505374
  HOMO = -0.762119628797672  LUMO = 2.66938749521178
  mo_energy =
[-3.26878958e+01 -1.81836989e+00 -7.62119629e-01 -7.62119629e-01
 -7.62119629e-01  2.66938750e+00  2.66938750e+00  2.66938750e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090481e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.47714650205435  E_coul = 54.44594872336817
Extra cycle  E= -128.031197778686  delta_E= 2.27e-13  |g|= 2.16e-08  |ddm|= 2.25e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.484590835888255
E1 = -182.47714650205435  E_coul = 54.44594872336817
init E= -128.031197778686
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.76211961737752  LUMO = 2.6693875056328
  mo_energy =
[-3.26878958e+01 -1.81836988e+00 -7.62119617e-01 -7.62119617e-01
 -7.62119617e-01  2.66938751e+00  2.66938751e+00  2.66938751e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090482e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.47714644841594  E_coul = 54.44594866972975
cycle= 1 E= -128.031197778686  delta_E=    0  |g|= 6.66e-09  |ddm|= 7.1e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.47714644841594  E_coul = 54.44594866972975
  HOMO = -0.762119620945413  LUMO = 2.66938750237548
  mo_energy =
[-3.26878958e+01 -1.81836988e+00 -7.62119621e-01 -7.62119621e-01
 -7.62119621e-01  2.66938750e+00  2.66938750e+00  2.66938750e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090481e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.4771464652033  E_coul = 54.445948686517106
Extra cycle  E= -128.031197778686  delta_E=    0  |g|= 2.09e-09  |ddm|= 2.22e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
exp = [1.67355702e+03 9.48646565e-01 2.23923598e+02 4.83040601e+01
 1.25136070e+01 1.33556624e+01 6.06039459e-01 2.78943983e+00]
grad_E = [ 4.26260270e-05  5.63231930e-03 -3.18941909e-04  1.91171094e-03
 -2.10316698e-03 -2.59724745e-04  1.69771906e-02  3.39248805e-04]
 message: Iteration limit reached
 success: False
  status: 9
     fun: -128.0311977786862
       x: [ 1.674e+03  9.486e-01  2.239e+02  4.830e+01  1.251e+01
            1.336e+01  6.060e-01  2.789e+00]
     nit: 100
     jac: [ 4.263e-05  5.632e-03 -3.189e-04  1.912e-03 -2.103e-03
           -2.597e-04  1.698e-02  3.392e-04]
    nfev: 123
    njev: 100
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="Nelder-Mead",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:48:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1673.55701682        1
[INPUT] 0    0    [1    /1   ]  0.948646564928       1
[INPUT] 0    0    [1    /1   ]  223.923598193        1
[INPUT] 0    0    [1    /1   ]  48.304060077         1
[INPUT] 0    0    [1    /1   ]  12.5136070374        1
[INPUT] 1    0    [1    /1   ]  13.3556623506        1
[INPUT] 1    0    [1    /1   ]  0.606039459243       1
[INPUT] 1    0    [1    /1   ]  2.7894398256         1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 14
number of NR cGTOs = 14
basis = {'Ne': [[0, [1673.5570168193697, 1.0]], [0, [0.9486465649284502, 1.0]], [0, [223.9235981927943, 1.0]], [0, [48.30406007699994, 1.0]], [0, [12.513607037362258, 1.0]], [1, [13.355662350639761, 1.0]], [1, [0.6060394592428839, 1.0]], [1, [2.7894398256039574, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1673.55701682]
bas 1, expnt(s) = [0.94864656]
bas 2, expnt(s) = [223.92359819]
bas 3, expnt(s) = [48.30406008]
bas 4, expnt(s) = [12.51360704]
bas 5, expnt(s) = [13.35566235]
bas 6, expnt(s) = [0.60603946]
bas 7, expnt(s) = [2.78943983]
CPU time:       432.57
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.67355702e+03 6.61066895e+02 9.48646565e-01 2.42852933e+00
 2.23923598e+02 1.46247996e+02 4.83040601e+01 4.62916596e+01
 1.25136070e+01 1.68093883e+01 1.33556624e+01 7.44845471e+01
 6.06039459e-01 1.55994943e+00 2.78943983e+00 1.05167279e+01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.938822582216755
cond(S) = 19.484590835888255
E1 = -182.7367568789366  E_coul = 54.935684085577655
init E= -127.801072793359
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.747827718623977  LUMO = 2.67660711915738
  mo_energy =
[-3.25122457e+01 -1.79341789e+00 -7.47827719e-01 -7.47827719e-01
 -7.47827719e-01  2.67660712e+00  2.67660712e+00  2.67660712e+00
  2.00194176e+01  2.00194176e+01  2.00194176e+01  3.65356512e+01
  3.24710030e+02  2.70161217e+03]
E1 = -182.26894951746272  E_coul = 54.23861621785138
cycle= 1 E= -128.030333299611  delta_E= -0.229  |g|= 0.119  |ddm|= 0.216
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.190716
diis-c [-0.03637266  1.        ]
  HOMO = -0.775835901037108  LUMO = 2.65682244704373
  mo_energy =
[-3.27349252e+01 -1.83398932e+00 -7.75835901e-01 -7.75835901e-01
 -7.75835901e-01  2.65682245e+00  2.65682245e+00  2.65682245e+00
  1.98795870e+01  1.98795870e+01  1.98795870e+01  3.63670420e+01
  3.24451347e+02  2.70129287e+03]
E1 = -182.5418220558317  E_coul = 54.510706775434116
cycle= 2 E= -128.031115280398  delta_E= -0.000782  |g|= 0.034  |ddm|= 0.0356
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0540882
diis-c [-2.34179224e-04  2.14391303e-01  7.85608697e-01]
  HOMO = -0.761675392102045  LUMO = 2.66977755197711
  mo_energy =
[-3.26865174e+01 -1.81789808e+00 -7.61675392e-01 -7.61675392e-01
 -7.61675392e-01  2.66977755e+00  2.66977755e+00  2.66977755e+00
  1.99156233e+01  1.99156233e+01  1.99156233e+01  3.64102126e+01
  3.24504228e+02  2.70134901e+03]
E1 = -182.47509974275147  E_coul = 54.44390204691346
cycle= 3 E= -128.031197695838  delta_E= -8.24e-05  |g|= 0.00106  |ddm|= 0.00882
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00174294
diis-c [-5.82096672e-08 -4.26892680e-03  1.69920154e-02  9.87276911e-01]
  HOMO = -0.76212228727168  LUMO = 2.66938524856206
  mo_energy =
[-3.26879017e+01 -1.81837335e+00 -7.62122287e-01 -7.62122287e-01
 -7.62122287e-01  2.66938525e+00  2.66938525e+00  2.66938525e+00
  1.99145554e+01  1.99145554e+01  1.99145554e+01  3.64090406e+01
  3.24502908e+02  2.70134772e+03]
E1 = -182.4771551818306  E_coul = 54.445957403146174
cycle= 4 E= -128.031197778684  delta_E= -8.28e-08  |g|= 7.94e-06  |ddm|= 0.000272
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.59241e-06
diis-c [-2.17234288e-12  7.13660757e-05 -6.24520344e-04 -2.28247681e-02
  1.02337792e+00]
  HOMO = -0.762119592883915  LUMO = 2.66938752772509
  mo_energy =
[-3.26878957e+01 -1.81836985e+00 -7.62119593e-01 -7.62119593e-01
 -7.62119593e-01  2.66938753e+00  2.66938753e+00  2.66938753e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090482e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.4771463301918  E_coul = 54.445948551505374
cycle= 5 E= -128.031197778686  delta_E= -1.99e-12  |g|= 6.65e-08  |ddm|= 1.23e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4771463301918  E_coul = 54.445948551505374
  HOMO = -0.762119628797672  LUMO = 2.66938749521178
  mo_energy =
[-3.26878958e+01 -1.81836989e+00 -7.62119629e-01 -7.62119629e-01
 -7.62119629e-01  2.66938750e+00  2.66938750e+00  2.66938750e+00
  1.99145607e+01  1.99145607e+01  1.99145607e+01  3.64090481e+01
  3.24502913e+02  2.70134772e+03]
E1 = -182.47714650205435  E_coul = 54.44594872336817
Extra cycle  E= -128.031197778686  delta_E= 2.27e-13  |g|= 2.16e-08  |ddm|= 2.25e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.67355702e+03 9.48646565e-01 2.23923598e+02 4.83040601e+01
 1.25136070e+01 1.33556624e+01 6.06039459e-01 2.78943983e+00]
E = -128.0311977786862
E = -128.0311977786862
exp = [1.6735570168193697e+03,9.4864656492845023e-01,2.2392359819279429e+02,4.8304060076999939e+01,1.2513607037362258e+01,1.3355662350639761e+01,6.0603945924288394e-01,2.7894398256039574e+00]
